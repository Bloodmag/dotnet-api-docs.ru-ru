<Type Name="EntityKey" FullName="System.Data.EntityKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c17f140591c8e7fe5c3bb9bbc36a32840866460b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36746164" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityKey : IEquatable&lt;System.Data.EntityKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityKey extends System.Object implements class System.IEquatable`1&lt;class System.Data.EntityKey&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityKey&#xA;Implements IEquatable(Of EntityKey)" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityKey sealed : IEquatable&lt;System::Data::EntityKey ^&gt;" />
  <TypeSignature Language="F#" Value="type EntityKey = class&#xA;    interface IEquatable&lt;EntityKey&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Data.EntityKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ConcatKeyValue()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="165a7-101">Provides a durable reference to an object that is an instance of an entity type.</span>
      <span class="sxs-lookup">
        <span data-stu-id="165a7-101">Provides a durable reference to an object that is an instance of an entity type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-102">Объекты <xref:System.Data.EntityKey> неизменяемые, то есть после создания их нельзя изменить.</span><span class="sxs-lookup"><span data-stu-id="165a7-102">The <xref:System.Data.EntityKey> objects are immutable; that is, after they are constructed they cannot be modified.</span></span>  
  
 <span data-ttu-id="165a7-103">Дополнительные сведения см. в разделе [работа с ключами сущностей](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span><span class="sxs-lookup"><span data-stu-id="165a7-103">For more information, see [Working with Entity Keys](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="165a7-104">Эти примеры основаны на [модели AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="165a7-104">These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="165a7-105">В примере показано создание и использование <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="165a7-105">The examples show you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_trygetobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_trygetobjectbykey)]  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="165a7-106">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-106">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="165a7-107">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-107">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of KeyValuePair(Of String, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ entityKeyValues);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, entityKeyValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName">
          <span data-ttu-id="165a7-108">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-108">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          </span>
        </param>
        <param name="entityKeyValues">
          <span data-ttu-id="165a7-109">A generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-109">A generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span>
          </span>
          <span data-ttu-id="165a7-110">Each key/value pair has a property name as the key and the value of that property as the value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-110">Each key/value pair has a property name as the key and the value of that property as the value.</span>
          </span>
          <span data-ttu-id="165a7-111">There should be one pair for each property that is part of the <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-111">There should be one pair for each property that is part of the <see cref="T:System.Data.EntityKey" />.</span>
          </span>
          <span data-ttu-id="165a7-112">The order of the key/value pairs is not important, but each key property should be included.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-112">The order of the key/value pairs is not important, but each key property should be included.</span>
          </span>
          <span data-ttu-id="165a7-113">The property names are simple names that are not qualified with an entity type name or the schema name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-113">The property names are simple names that are not qualified with an entity type name or the schema name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-114">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and a generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-114">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and a generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="165a7-115">Этот пример основан на [модели AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="165a7-115">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="165a7-116">В примере показано создание и использование <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="165a7-116">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.EntityKeyMember&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of EntityKeyMember))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Data::EntityKeyMember ^&gt; ^ entityKeyValues);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * seq&lt;System.Data.EntityKeyMember&gt; -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, entityKeyValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName">
          <span data-ttu-id="165a7-117">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-117">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          </span>
        </param>
        <param name="entityKeyValues">
          <span data-ttu-id="165a7-118">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects with which to initialize the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-118">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects with which to initialize the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-119">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-119">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, string keyName, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, string keyName, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, keyName As String, keyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::String ^ keyName, System::Object ^ keyValue);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * string * obj -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, keyName, keyValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName">
          <span data-ttu-id="165a7-120">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-120">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span>
          </span>
        </param>
        <param name="keyName">
          <span data-ttu-id="165a7-121">A <see cref="T:System.String" /> that is the name of the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-121">A <see cref="T:System.String" /> that is the name of the key.</span>
          </span>
        </param>
        <param name="keyValue">
          <span data-ttu-id="165a7-122">An <see cref="T:System.Object" /> that is the key value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-122">An <see cref="T:System.Object" /> that is the key value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-123">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and specific entity key pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-123">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and specific entity key pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="165a7-124">Этот пример основан на [модели AdventureWorks Sales](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="165a7-124">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="165a7-125">В примере показано создание и использование <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="165a7-125">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainerName">
      <MemberSignature Language="C#" Value="public string EntityContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityContainerName : string with get, set" Usage="System.Data.EntityKey.EntityContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165a7-126">Gets or sets the name of the entity container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-126">Gets or sets the name of the entity container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165a7-127">Значение <see cref="T:System.String" />, представляющее имя контейнера сущностей, содержащего сущность, которой принадлежит ключ <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-127">A <see cref="T:System.String" /> value that is the name of the entity container for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityKeyValues">
      <MemberSignature Language="C#" Value="public System.Data.EntityKeyMember[] EntityKeyValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.EntityKeyMember[] EntityKeyValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityKeyValues" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityKeyValues As EntityKeyMember()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ EntityKeyValues { cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ get(); void set(cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityKeyValues : System.Data.EntityKeyMember[] with get, set" Usage="System.Data.EntityKey.EntityKeyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.EntityKeyMember[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165a7-128">Gets or sets the key values associated with this <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-128">Gets or sets the key values associated with this <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165a7-129">Коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> значений ключей для этого объекта <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-129">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of key values for this <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-130">Класс <xref:System.Data.EntityKey> содержит копию значений, составляющих логический ключ, заданный для этого типа сущностей.</span><span class="sxs-lookup"><span data-stu-id="165a7-130">The <xref:System.Data.EntityKey> class contains a copy of the values that make up the logical key that is specified for this type of entity.</span></span>  
  
 <span data-ttu-id="165a7-131">Каждый элемент коллекции <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> содержит имя свойства и значение в паре <xref:System.Collections.Generic.KeyValuePair%602>, где ключ является именем свойства, а значение — фактическим значением свойства в объекте.</span><span class="sxs-lookup"><span data-stu-id="165a7-131">The members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> each have a property name and a value in a <xref:System.Collections.Generic.KeyValuePair%602>, where the key is the property name and the value is the actual value of that property on the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityNotValidKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey EntityNotValidKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey EntityNotValidKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.EntityNotValidKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EntityNotValidKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ EntityNotValidKey;" />
      <MemberSignature Language="F#" Value=" staticval mutable EntityNotValidKey : System.Data.EntityKey" Usage="System.Data.EntityKey.EntityNotValidKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165a7-132">A simple <see cref="T:System.Data.EntityKey" /> identifying an entity that resulted from a failed [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-132">A simple <see cref="T:System.Data.EntityKey" /> identifying an entity that resulted from a failed [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-133">Недопустимая сущность может появиться в нескольких случаях.</span><span class="sxs-lookup"><span data-stu-id="165a7-133">There are various ways to get an invalid entity.</span></span> <span data-ttu-id="165a7-134">Наиболее распространенный случай — когда [!INCLUDE[esql](~/includes/esql-md.md)] запросе используется [ОБРАБАТЫВАТЬ](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) оператор для интерпретации экземпляра полиморфного типа как конкретного типа и этот экземпляр не соответствует.</span><span class="sxs-lookup"><span data-stu-id="165a7-134">The most common scenario is when an [!INCLUDE[esql](~/includes/esql-md.md)] query uses the [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match.</span></span> <span data-ttu-id="165a7-135">([ОБРАБАТЫВАТЬ](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) похож на C# `as` оператор).</span><span class="sxs-lookup"><span data-stu-id="165a7-135">([TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) is similar to the C# `as` operator).</span></span> <span data-ttu-id="165a7-136">В этом случае запрос возвращает недопустимую сущность, а ключу результирующей сущности задается значение <xref:System.Data.EntityKey.EntityNotValidKey>.</span><span class="sxs-lookup"><span data-stu-id="165a7-136">In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to <xref:System.Data.EntityKey.EntityNotValidKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntitySetName : string with get, set" Usage="System.Data.EntityKey.EntitySetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165a7-137">Gets or sets the name of the entity set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-137">Gets or sets the name of the entity set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165a7-138">Значение <see cref="T:System.String" />, представляющее имя набора сущностей, содержащего сущность, которой принадлежит ключ <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-138">A <see cref="T:System.String" /> value that is the name of the entity set for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="165a7-139">Returns a value that indicates whether this instance is equal to a specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-139">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Data.EntityKey other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Data.EntityKey other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Data::EntityKey ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Data.EntityKey -&gt; bool" Usage="entityKey.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="165a7-140">An <see cref="T:System.Data.EntityKey" /> object to compare with this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-140">An <see cref="T:System.Data.EntityKey" /> object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-141">Returns a value that indicates whether this instance is equal to a specified <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-141">Returns a value that indicates whether this instance is equal to a specified <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165a7-142">
            <see langword="true" /> if this instance and <paramref name="other" /> have equal values; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-142">
              <see langword="true" /> if this instance and <paramref name="other" /> have equal values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-143">Семантика сравнения для временных ключей отличается от семантики для постоянных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-143">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="165a7-144">Для временных ключей используется ссылочное равенство.</span><span class="sxs-lookup"><span data-stu-id="165a7-144">Temporary keys use reference equality.</span></span> <span data-ttu-id="165a7-145">Это значит, что две ссылки, указывающие на один и тот же временный экземпляр <xref:System.Data.EntityKey>, равны, но сами экземпляры <xref:System.Data.EntityKey> не равны.</span><span class="sxs-lookup"><span data-stu-id="165a7-145">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="165a7-146">Для постоянных ключей равенство определяется на основании значений свойств ключа и набора <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="165a7-146">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="165a7-147">Это значит, что два отдельных экземпляра <xref:System.Data.EntityKey> будут равны, если совпадают их наборы сущностей и равны значения их ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-147">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="165a7-148">Кроме того, для временных ключей не существуют наборы <xref:System.Data.Metadata.Edm.EntitySet> и значения ключа, но они есть у постоянных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-148">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="entityKey.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="165a7-149">An <see cref="T:System.Object" /> to compare with this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-149">An <see cref="T:System.Object" /> to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-150">Returns a value that indicates whether this instance is equal to a specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-150">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165a7-151">
            <see langword="true" /> if this instance and <paramref name="obj" /> have equal values; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-151">
              <see langword="true" /> if this instance and <paramref name="obj" /> have equal values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-152">Семантика сравнения для временных ключей отличается от семантики для постоянных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-152">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="165a7-153">Для временных ключей используется ссылочное равенство.</span><span class="sxs-lookup"><span data-stu-id="165a7-153">Temporary keys use reference equality.</span></span> <span data-ttu-id="165a7-154">Это значит, что две ссылки, указывающие на один и тот же временный экземпляр <xref:System.Data.EntityKey>, равны, но сами экземпляры <xref:System.Data.EntityKey> не равны.</span><span class="sxs-lookup"><span data-stu-id="165a7-154">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="165a7-155">Для постоянных ключей равенство определяется на основании значений свойств ключа и набора <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="165a7-155">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="165a7-156">Это значит, что два отдельных экземпляра <xref:System.Data.EntityKey> будут равны, если совпадают их наборы сущностей <xref:System.Data.Metadata.Edm.EntitySet> и равны значения их ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-156">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their <xref:System.Data.Metadata.Edm.EntitySet> objects are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="165a7-157">Кроме того, для временных ключей не существуют наборы <xref:System.Data.Metadata.Edm.EntitySet> и значения ключа, но они есть у постоянных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-157">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitySet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet GetEntitySet (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntitySet GetEntitySet(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntitySet ^ GetEntitySet(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="member this.GetEntitySet : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Metadata.Edm.EntitySet" Usage="entityKey.GetEntitySet metadataWorkspace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace">
          <span data-ttu-id="165a7-158">The metadata workspace that contains the entity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-158">The metadata workspace that contains the entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-159">Gets the entity set for this entity key from the given metadata workspace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-159">Gets the entity set for this entity key from the given metadata workspace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165a7-160">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> for the entity key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-160">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> for the entity key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-161">Доступ к набору сущностей выполняется на основе имени контейнера сущностей и имени набора сущностей ключа.</span><span class="sxs-lookup"><span data-stu-id="165a7-161">The entity set is accessed based on the entity container name and entity set name of the key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="165a7-162">The entity set could not be located in the specified metadata workspace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-162">The entity set could not be located in the specified metadata workspace.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="entityKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="165a7-163">Serves as a hash function for the current <see cref="T:System.Data.EntityKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-163">Serves as a hash function for the current <see cref="T:System.Data.EntityKey" /> object.</span>
          </span>
          <span data-ttu-id="165a7-164">
            <see cref="M:System.Data.EntityKey.GetHashCode" /> is suitable for hashing algorithms and data structures such as a hash table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-164">
              <see cref="M:System.Data.EntityKey.GetHashCode" /> is suitable for hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165a7-165">A hash code for the current <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-165">A hash code for the current <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTemporary : bool" Usage="System.Data.EntityKey.IsTemporary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165a7-166">Gets a value that indicates whether the <see cref="T:System.Data.EntityKey" /> is temporary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-166">Gets a value that indicates whether the <see cref="T:System.Data.EntityKey" /> is temporary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="165a7-167">
            <see langword="true" /> Если <see cref="T:System.Data.EntityKey" /> временные; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-167">
              <see langword="true" /> if the <see cref="T:System.Data.EntityKey" /> is temporary; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-168">При создании новой сущности платформа [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] определяет временный ключ и присваивает свойству <xref:System.Data.EntityKey.IsTemporary%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="165a7-168">When a new entity is created, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] defines temporary key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `true`.</span></span> <span data-ttu-id="165a7-169">При вызове <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> метода [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] назначает постоянного ключа и устанавливает <xref:System.Data.EntityKey.IsTemporary%2A> свойства `false`.</span><span class="sxs-lookup"><span data-stu-id="165a7-169">When you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] assigns a permanent key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="165a7-170">Временные ключи создаются автоматически платформой, пользователь не может создать их напрямую.</span><span class="sxs-lookup"><span data-stu-id="165a7-170">Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.</span></span>  
  
 <span data-ttu-id="165a7-171">Семантика сравнения для временных ключей отличается от семантики для постоянных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-171">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="165a7-172">Для временных ключей используется ссылочное равенство.</span><span class="sxs-lookup"><span data-stu-id="165a7-172">Temporary keys use reference equality.</span></span> <span data-ttu-id="165a7-173">Это значит, что две ссылки, указывающие на один и тот же временный экземпляр <xref:System.Data.EntityKey>, равны, но сами экземпляры <xref:System.Data.EntityKey> не равны.</span><span class="sxs-lookup"><span data-stu-id="165a7-173">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="165a7-174">Для постоянных ключей равенство определяется на основании значений свойств ключа и набора <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="165a7-174">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="165a7-175">Это значит, что два отдельных экземпляра <xref:System.Data.EntityKey> будут равны, если совпадают их наборы сущностей и равны значения их ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-175">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="165a7-176">Кроме того, для временных ключей не существуют наборы <xref:System.Data.Metadata.Edm.EntitySet> и значения ключа, но они есть у постоянных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-176">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="165a7-177">Если метод <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> вызывается для сущности <xref:System.Data.Objects.ObjectStateEntry> и сущность переходит из состояния <xref:System.Data.EntityState.Added> в состояние <xref:System.Data.EntityState.Unchanged>, платформа [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] автоматически вычисляет для нее новый постоянный ключ и синхронизирует ссылки на все временные ключи.</span><span class="sxs-lookup"><span data-stu-id="165a7-177">When the <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> method is called on an entity's <xref:System.Data.Objects.ObjectStateEntry> and the entity transitions from the <xref:System.Data.EntityState.Added> state to <xref:System.Data.EntityState.Unchanged> state, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] automatically computes a new permanent key for the entity and synchronizes all temporary key references.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEntitySetKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey NoEntitySetKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey NoEntitySetKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.NoEntitySetKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoEntitySetKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ NoEntitySetKey;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoEntitySetKey : System.Data.EntityKey" Usage="System.Data.EntityKey.NoEntitySetKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="165a7-178">A singleton <see cref="T:System.Data.EntityKey" /> by which a read-only entity is identified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-178">A singleton <see cref="T:System.Data.EntityKey" /> by which a read-only entity is identified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-179">Сущность, доступная только для чтения, определяющая любую допустимую сущность, не связанную с текущим набором сущностей.</span><span class="sxs-lookup"><span data-stu-id="165a7-179">A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set.</span></span> <span data-ttu-id="165a7-180">Она может быть результатом запроса [!INCLUDE[esql](~/includes/esql-md.md)], создающего и возвращающего экземпляр сущности, заданный в тексте запроса (в отличие от сущности, полученной из таблицы базы данных).</span><span class="sxs-lookup"><span data-stu-id="165a7-180">This can occur as part of the result of an [!INCLUDE[esql](~/includes/esql-md.md)] query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table).</span></span> <span data-ttu-id="165a7-181">Сущность, не имеющая набора сущностей, не может сохраняться в базе данных, пока она не будет связана с набором сущностей.</span><span class="sxs-lookup"><span data-stu-id="165a7-181">An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set.</span></span> <span data-ttu-id="165a7-182">Поэтому при материализации такой вид сущности будет рассматриваться, как будто задан параметр слияния <xref:System.Data.Objects.MergeOption.NoTracking>, независимо от того, был ли задан этот параметр на самом деле.</span><span class="sxs-lookup"><span data-stu-id="165a7-182">Therefore, the object materializer will treat this kind of entity as if the <xref:System.Data.Objects.MergeOption.NoTracking> merge option was specified, regardless of the actual merge option that was specified.</span></span> <span data-ttu-id="165a7-183">Будет создан объект сущности, но его идентификатор не будет разрешен, а сам объект в процессе материализации не будет добавлен к диспетчеру состояний.</span><span class="sxs-lookup"><span data-stu-id="165a7-183">An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityKey.OnDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="165a7-184">Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-184">Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-185">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-185">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-186">Метод <xref:System.Data.EntityKey.OnDeserialized%2A> используется службами объектов при десериализации объекта <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="165a7-186"><xref:System.Data.EntityKey.OnDeserialized%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="165a7-187">Дополнительные сведения см. в разделе [сериализация объектов](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="165a7-187">For more information, see [Serializing Objects](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializing">
      <MemberSignature Language="C#" Value="public void OnDeserializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityKey.OnDeserializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserializing</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="165a7-188">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-188">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-189">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-189">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-190">Метод <xref:System.Data.EntityKey.OnDeserializing%2A> используется службами объектов при десериализации объекта <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="165a7-190"><xref:System.Data.EntityKey.OnDeserializing%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="165a7-191">Дополнительные сведения см. в разделе [сериализация объектов](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="165a7-191">For more information, see [Serializing Objects](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Data.EntityKey * System.Data.EntityKey -&gt; bool" Usage="key1 = key2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1">
          <span data-ttu-id="165a7-192">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-192">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <param name="key2">
          <span data-ttu-id="165a7-193">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-193">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-194">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-194">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165a7-195">
            <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are equal; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-195">
              <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-196">Семантика сравнения для временных ключей отличается от семантики для постоянных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-196">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="165a7-197">Для временных ключей используется ссылочное равенство.</span><span class="sxs-lookup"><span data-stu-id="165a7-197">Temporary keys use reference equality.</span></span> <span data-ttu-id="165a7-198">Это значит, что две ссылки, указывающие на один и тот же временный экземпляр <xref:System.Data.EntityKey>, равны, но сами экземпляры <xref:System.Data.EntityKey> не равны.</span><span class="sxs-lookup"><span data-stu-id="165a7-198">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="165a7-199">Для постоянных ключей равенство определяется на основании значений свойств ключа и набора <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="165a7-199">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="165a7-200">Это значит, что два отдельных экземпляра <xref:System.Data.EntityKey> будут равны, если совпадают их наборы сущностей и равны значения их ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-200">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="165a7-201">Кроме того, для временных ключей не существуют наборы <xref:System.Data.Metadata.Edm.EntitySet> и значения ключа, но они есть у постоянных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-201">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="165a7-202">Эквивалентный метод для этого оператора является <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType> </format> </remarks> </Docs> 
     </Member> 
     <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /> <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" /> <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" /> <MemberType> Метод</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo> <ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue> <Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters> <Docs> <param name="key1">A <see cref="T:System.Data.EntityKey" /> для сравнения.</param></span><span class="sxs-lookup"><span data-stu-id="165a7-202">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType></format> </remarks> </Docs>
    </Member>
    <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /> <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" /> <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" /> <MemberType>Method</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo> <ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue> <Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters> <Docs> <param name="key1">A <see cref="T:System.Data.EntityKey" /> to compare.</param></span></span>
        <span data-ttu-id="165a7-203"><param name="key2">Объект <see cref="T:System.Data.EntityKey" /> для сравнения.</param></span><span class="sxs-lookup"><span data-stu-id="165a7-203"><param name="key2">A <see cref="T:System.Data.EntityKey" /> to compare.</param></span></span>
        <span data-ttu-id="165a7-204"><summary>Сравнивает два <see cref="T:System.Data.EntityKey" /> объектов.</summary></span><span class="sxs-lookup"><span data-stu-id="165a7-204"><summary>Compares two <see cref="T:System.Data.EntityKey" /> objects.</summary></span></span>
        <span data-ttu-id="165a7-205"><returns> <see langword="true" /> Если <paramref name="key1" /> и <paramref name="key2" /> значения не равны; в противном случае — <see langword="false" />.</returns></span><span class="sxs-lookup"><span data-stu-id="165a7-205"><returns> <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</returns></span></span>
        <span data-ttu-id="165a7-206"><remarks> <format type="text/markdown">&LT;! [CDATA [</span><span class="sxs-lookup"><span data-stu-id="165a7-206"><remarks> <format type="text/markdown"><![CDATA[</span></span>  
  
## Remarks  
 <span data-ttu-id="165a7-207">Семантика сравнения для временных ключей отличается от семантики для постоянных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-207">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="165a7-208">Для временных ключей используется ссылочное равенство.</span><span class="sxs-lookup"><span data-stu-id="165a7-208">Temporary keys use reference equality.</span></span> <span data-ttu-id="165a7-209">Это значит, что две ссылки, указывающие на один и тот же временный экземпляр <xref:System.Data.EntityKey>, равны, но сами экземпляры <xref:System.Data.EntityKey> не равны.</span><span class="sxs-lookup"><span data-stu-id="165a7-209">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="165a7-210">Для постоянных ключей равенство определяется на основании значений свойств ключа и набора <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="165a7-210">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="165a7-211">Это значит, что два отдельных экземпляра <xref:System.Data.EntityKey> будут равны, если совпадают их наборы сущностей и равны значения их ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-211">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="165a7-212">Кроме того, у временных ключей отсутствуют наборы <xref:System.Data.Metadata.Edm.EntitySet> и значения ключа, но они есть у обычных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-212">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>  
  
 <span data-ttu-id="165a7-213">Эквивалентный метод для этого оператора является <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="165a7-213">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Data.EntityKey * System.Data.EntityKey -&gt; bool" Usage="System.Data.EntityKey.op_Inequality (key1, key2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1">
          <span data-ttu-id="165a7-214">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-214">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <param name="key2">
          <span data-ttu-id="165a7-215">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-215">A <see cref="T:System.Data.EntityKey" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="165a7-216">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-216">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="165a7-217">
            <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="165a7-217">
              <see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="165a7-218">Семантика сравнения для временных ключей отличается от семантики для постоянных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-218">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="165a7-219">Для временных ключей используется ссылочное равенство.</span><span class="sxs-lookup"><span data-stu-id="165a7-219">Temporary keys use reference equality.</span></span> <span data-ttu-id="165a7-220">Это значит, что две ссылки, указывающие на один и тот же временный экземпляр <xref:System.Data.EntityKey>, равны, но сами экземпляры <xref:System.Data.EntityKey> не равны.</span><span class="sxs-lookup"><span data-stu-id="165a7-220">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="165a7-221">Для постоянных ключей равенство определяется на основании значений свойств ключа и набора <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="165a7-221">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="165a7-222">Это значит, что два отдельных экземпляра <xref:System.Data.EntityKey> будут равны, если совпадают их наборы сущностей и равны значения их ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-222">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="165a7-223">Кроме того, у временных ключей отсутствуют наборы <xref:System.Data.Metadata.Edm.EntitySet> и значения ключа, но они есть у обычных ключей.</span><span class="sxs-lookup"><span data-stu-id="165a7-223">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>