<Type Name="IDataAdapter" FullName="System.Data.IDataAdapter">
  <TypeSignature Language="C#" Value="public interface IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f3b5a-101">Позволяет объекту реализовать DataAdapter и представляет набор методов и соответствующие свойства, связанные с операциями, для заполнения и обновления объекта <see cref="T:System.Data.DataSet" /> и обновления источника данных.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-101">Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a <see cref="T:System.Data.DataSet" /> and update a data source.</span></span>  
  
 <span data-ttu-id="f3b5a-102">Экземпляры <see cref="T:System.Data.IDbDataAdapter" /> — для источников данных, которые являются или напоминают реляционные базы данных с текстуальными командами (например, Transact-SQL), а экземпляры <see cref="T:System.Data.IDataAdapter" /> могут использовать любой тип источника данных.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-102"><see cref="T:System.Data.IDbDataAdapter" /> instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while <see cref="T:System.Data.IDataAdapter" /> instances could can use any type of data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3b5a-103"><xref:System.Data.IDataAdapter> Интерфейс позволяет наследующему классу реализовать класс DataAdapter, который представляет собой мост между источником данных и <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-103">The <xref:System.Data.IDataAdapter> interface allows an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f3b5a-104">Дополнительные сведения о классах DataAdapter см. в разделе [заполнение DataSet из объекта DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span><span class="sxs-lookup"><span data-stu-id="f3b5a-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span>  
  
 <span data-ttu-id="f3b5a-105">Приложение не создает экземпляр <xref:System.Data.IDataAdapter> интерфейса напрямую, но реализует экземпляр класса, который наследует <xref:System.Data.IDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-105">An application does not create an instance of the <xref:System.Data.IDataAdapter> interface directly, but implements an instance of a class that inherits <xref:System.Data.IDataAdapter>.</span></span>  
  
 <span data-ttu-id="f3b5a-106">Классы, наследующие <xref:System.Data.IDataAdapter> должны реализовывать наследуемые члены и они обычно определяются дополнительные члены для добавления функций конкретного поставщика.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-106">Classes that inherit <xref:System.Data.IDataAdapter> must implement the inherited members, and they typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="f3b5a-107">Например <xref:System.Data.IDataAdapter> интерфейс определяет <xref:System.Data.IDataAdapter.Fill%2A> метода, принимающего <xref:System.Data.DataSet> как параметр.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-107">For example, the <xref:System.Data.IDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataSet> as a parameter.</span></span> <span data-ttu-id="f3b5a-108">В свою очередь <xref:System.Data.OleDb.OleDbDataAdapter> класс наследует <xref:System.Data.Common.DbDataAdapter.Fill%2A> метод и также определяет две дополнительные перегрузки <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> метод, использующий объект ADO Recordset в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3b5a-109">В следующем примере используется производными классами <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, и <xref:System.Data.SqlClient.SqlConnection>, для выбора записей из базы данных.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-109">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, and <xref:System.Data.SqlClient.SqlConnection>, to select records from a database.</span></span> <span data-ttu-id="f3b5a-110">Заполненный <xref:System.Data.DataSet> затем возвращается.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-110">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="f3b5a-111">Чтобы сделать это, методу передается инициализированный <xref:System.Data.DataSet>, строку соединения и строку запроса, являющаяся инструкцией Transact-SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-111">To do this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="f3b5a-112">Для обеспечения согласованности между поставщиками данных .NET Framework, наследующий классу имя в форме <paramref name="Prv" /> DataAdapter где <paramref name="Prv" /> имеет стандартный префикс, назначаемый всем классам в пространстве имен поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-112">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="f3b5a-113">Например <paramref name="Sql" /> префикс для <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> класса в <see langword="System.Data.SqlClient" /> пространства имен.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-113">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
 <span data-ttu-id="f3b5a-114">При наследовании от <see cref="T:System.Data.IDataAdapter" /> интерфейс, должны реализовывать следующие конструкторы:</span><span class="sxs-lookup"><span data-stu-id="f3b5a-114">When you inherit from the <see cref="T:System.Data.IDataAdapter" /> interface, you should implement the following constructors:</span></span>  
  
 <span data-ttu-id="f3b5a-115"><list type="table"><listheader><term> Элемент</span><span class="sxs-lookup"><span data-stu-id="f3b5a-115"><list type="table"><listheader><term> Item</span></span>  
  
 <span data-ttu-id="f3b5a-116"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="f3b5a-116"></term><description> Description</span></span>  
  
 <span data-ttu-id="f3b5a-117"></description></listheader><item><term> PrvDataAdapter()</span><span class="sxs-lookup"><span data-stu-id="f3b5a-117"></description></listheader><item><term> PrvDataAdapter()</span></span>  
  
 <span data-ttu-id="f3b5a-118"></term><description> Инициализирует новый экземпляр класса PrvDataAdapter.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-118"></term><description> Initializes a new instance of the PrvDataAdapter class.</span></span>  
  
 <span data-ttu-id="f3b5a-119"></description></item><item><term> PrvDataAdapter (PrvCommand selectCommand)</span><span class="sxs-lookup"><span data-stu-id="f3b5a-119"></description></item><item><term> PrvDataAdapter(PrvCommand selectCommand)</span></span>  
  
 <span data-ttu-id="f3b5a-120"></term><description> Инициализирует новый экземпляр класса PrvDataAdapter с помощью указанной инструкции SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-120"></term><description> Initializes a new instance of the PrvDataAdapter class by using the specified SQL SELECT statement.</span></span>  
  
 <span data-ttu-id="f3b5a-121"></description></item><item><term> PrvDataAdapter (selectCommandText строка, строка selectConnectionString)</span><span class="sxs-lookup"><span data-stu-id="f3b5a-121"></description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString)</span></span>  
  
 <span data-ttu-id="f3b5a-122"></term><description> Инициализирует новый экземпляр класса PrvDataAdapter с помощью инструкции SQL SELECT и строку соединения.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-122"></term><description> Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a connection string.</span></span>  
  
 <span data-ttu-id="f3b5a-123"></description></item><item><term> PrvDataAdapter (строка selectCommandText, selectConnection PrvConnection при получении)</span><span class="sxs-lookup"><span data-stu-id="f3b5a-123"></description></item><item><term> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</span></span>  
  
 <span data-ttu-id="f3b5a-124"></term><description> Инициализирует новый экземпляр класса PrvDataAdapter с помощью инструкции SQL SELECT и PrvConnection при получении объекта.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-124"></term><description> Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a PrvConnection object.</span></span>  
  
 </description></item></list></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f3b5a-125">Объект <see cref="T:System.Data.DataSet" /> для заполнения записями и, если необходимо, — схемой.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-125">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="f3b5a-126">Добавляет или обновляет строки в объект <see cref="T:System.Data.DataSet" /> для получения соответствия со строками в источнике данных, используя имя объекта <see cref="T:System.Data.DataSet" /> и создает объект <see cref="T:System.Data.DataTable" /> с именем "Table".</span><span class="sxs-lookup"><span data-stu-id="f3b5a-126">Adds or updates rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates a <see cref="T:System.Data.DataTable" /> named "Table".</span></span></summary>
        <returns><span data-ttu-id="f3b5a-127">Количество строк, успешно добавленных или обновленных в объекте <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-127">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f3b5a-128">Не включает строки, на которые воздействуют операторы, не возвращающие строк.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-128">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3b5a-129"><xref:System.Data.IDataAdapter.Fill%2A> Извлекает строки из источника данных, с помощью инструкции SELECT, указанной и связанной <xref:System.Data.IDbDataAdapter.SelectCommand%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-129"><xref:System.Data.IDataAdapter.Fill%2A> retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="f3b5a-130">Объект подключения, связанный с инструкцией SELECT должен быть допустимым, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-130">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f3b5a-131">Если подключение было закрыто до <xref:System.Data.IDataAdapter.Fill%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-131">If the connection is closed before <xref:System.Data.IDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f3b5a-132">Если подключение является открытым до <xref:System.Data.IDataAdapter.Fill%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-132">If the connection is open before <xref:System.Data.IDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f3b5a-133"><xref:System.Data.IDataAdapter.Fill%2A> Операция затем добавляет строки в целевой <xref:System.Data.DataTable> объекты в <xref:System.Data.DataSet>, создавая <xref:System.Data.DataTable> объекты, если они еще не существуют.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-133">The <xref:System.Data.IDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="f3b5a-134">При создании <xref:System.Data.DataTable> объектов, <xref:System.Data.IDataAdapter.Fill%2A> операции обычно создает только метаданные имени столбца.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-134">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.IDataAdapter.Fill%2A> operation usually creates only column name metadata.</span></span> <span data-ttu-id="f3b5a-135">Однако если <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> свойству `AddWithKey`, также создаются соответствующие первичные ключи и ограничения.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-135">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="f3b5a-136">Если `SelectCommand` возвращает результаты OUTER JOIN, то `DataAdapter` не задает значение <xref:System.Data.DataTable.PrimaryKey%2A> для результирующего объекта <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-136">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f3b5a-137">Необходимо явно определить первичный ключ, чтобы обеспечить правильное обнаружение повторяющихся строк.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-137">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f3b5a-138">Дополнительные сведения см. в разделе [Определение первичных ключей](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="f3b5a-138">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="f3b5a-139">Если <xref:System.Data.IDataAdapter> встречает идентичные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя «имя_столбца1», «columnname2», «имя_столбца3» и т. д.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-139">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="f3b5a-140">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-140">If the incoming data contains unnamed columns, they are put in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f3b5a-141">При добавлении нескольких результирующих наборов <xref:System.Data.DataSet>, каждый результирующий набор будет помещен в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-141">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is put in a separate table.</span></span> <span data-ttu-id="f3b5a-142">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д).</span><span class="sxs-lookup"><span data-stu-id="f3b5a-142">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f3b5a-143">Приложения следует проявлять осторожность при использовании имена столбцов и таблиц, чтобы избежать возникновения конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-143">Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</span></span>  
  
 <span data-ttu-id="f3b5a-144">Если инструкция SELECT, которая используется для заполнения <xref:System.Data.DataSet> возвращает несколько результатов, например пакетный оператор SQL, если один из результатов содержит ошибку, все последующие результаты, пропущен и не добавляются в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-144">When the SELECT statement that is used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, if one of the results contains an error, all successive results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="f3b5a-145">Можно использовать <xref:System.Data.IDataAdapter.Fill%2A> метода несколько раз на том же <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-145">You can use the <xref:System.Data.IDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f3b5a-146">Если первичный ключ существует, входящие строки объединяются с соответствующими строками, которые уже существуют.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-146">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="f3b5a-147">Если первичный ключ отсутствует, входящие строки добавляются в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-147">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3b5a-148">При обработке пакетных инструкций SQL, возвращающих несколько результатов, реализация <xref:System.Data.IDataAdapter.Fill%2A> и <xref:System.Data.IDataAdapter.FillSchema%2A> для данных .NET Framework поставщик возвращает сведения схемы только для первого результата.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-148">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.IDataAdapter.Fill%2A> and <xref:System.Data.IDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f3b5a-149">Объект <see cref="T:System.Data.DataSet" />, который необходимо заполнить сведениями схемы из источника данных.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-149">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f3b5a-150">Одно из значений перечисления <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-150">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="f3b5a-151">Добавляет объект <see cref="T:System.Data.DataTable" /> с именем "Таблица" к указанному объекту <see cref="T:System.Data.DataSet" /> и настраивает схему в соответствии с источником данных, основанном на указанном значении типа <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-151">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="f3b5a-152">Массив объектов <see cref="T:System.Data.DataTable" />, который содержит сведения схемы, возвращенные из источника данных.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-152">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3b5a-153"><xref:System.Data.IDataAdapter.FillSchema%2A> Метод извлекает схему из источника данных с помощью <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-153">The <xref:System.Data.IDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="f3b5a-154">Объект подключения, связанный с <xref:System.Data.IDbDataAdapter.SelectCommand%2A> должны быть допустимыми, но он не должен быть открыт.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-154">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f3b5a-155">Если подключение было закрыто до <xref:System.Data.IDataAdapter.FillSchema%2A> является именем, он открывается для получения данных, затем закрывается.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-155">If the connection is closed before <xref:System.Data.IDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f3b5a-156">Если подключение является открытым до <xref:System.Data.IDataAdapter.FillSchema%2A> является именем, он остается открытым.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-156">If the connection is open before <xref:System.Data.IDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f3b5a-157">Объект <xref:System.Data.IDataAdapter.FillSchema%2A> операция добавляет <xref:System.Data.DataTable> в место назначения <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-157">A <xref:System.Data.IDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f3b5a-158">Затем он добавляет столбцы для <xref:System.Data.DataColumnCollection> из <xref:System.Data.DataTable> и настраивает следующие <xref:System.Data.DataColumn> свойства, если они существуют в источнике данных:</span><span class="sxs-lookup"><span data-stu-id="f3b5a-158">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable> and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f3b5a-159"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-159"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f3b5a-160">Необходимо задать <xref:System.Data.DataColumn.AutoIncrementStep%2A> и <xref:System.Data.DataColumn.AutoIncrementSeed%2A> отдельно.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-160">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f3b5a-161"><xref:System.Data.IDataAdapter.FillSchema%2A> Кроме того, настраивает <xref:System.Data.DataTable.PrimaryKey%2A> и <xref:System.Data.DataTable.Constraints%2A> свойства согласно следующим правилам:</span><span class="sxs-lookup"><span data-stu-id="f3b5a-161"><xref:System.Data.IDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f3b5a-162">Если один или несколько столбцов первичных ключей возвращаются <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, они используются в качестве первичного ключа для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-162">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="f3b5a-163">Если столбцы первичных ключей не возвращаются, но уникальные столбцы, уникальные столбцы используются как первичный ключ, если все они не поддерживают значение NULL.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-163">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if all the unique columns are non-nullable.</span></span> <span data-ttu-id="f3b5a-164">Все столбцы, допускающие значение NULL, <xref:System.Data.UniqueConstraint> добавляется <xref:System.Data.ConstraintCollection>, но <xref:System.Data.DataTable.PrimaryKey%2A> свойство не задано.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-164">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="f3b5a-165">Если возвращаются и столбцы первичных ключей и уникальные столбцы, столбцы первичного ключа используются в качестве первичного ключа для <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-165">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f3b5a-166">Обратите внимание, что первичные ключи и уникальные ограничения добавляются <xref:System.Data.ConstraintCollection> в соответствии с приведенными выше правилами, а ограничения других типов не добавляются.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-166">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the previous rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="f3b5a-167">Если или добавьте уникальный кластеризованный индекс определен в столбец или столбцы в таблице SQL Server и ограничение первичного ключа определен на отдельный набор столбцов, то будут возвращены имена столбцов в кластеризованном индексе.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-167">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f3b5a-168">Чтобы вернуть имя или имена столбцов первичного ключа, используйте указание запроса с инструкцией SELECT, указывающее имя индекса первичного ключа.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-168">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f3b5a-169">Дополнительные сведения о том, как задать указания запросов см. в разделе [указание запроса (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="f3b5a-169">For more information about how to specify query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f3b5a-170">Если <xref:System.Data.IDataAdapter> встречает идентичные столбцы при заполнении <xref:System.Data.DataTable>, он создает имена для последующих столбцов, используя «имя_столбца1», «columnname2», «имя_столбца3» и т. д.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-170">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="f3b5a-171">Если входные данные содержат безымянные столбцы, они помещаются в <xref:System.Data.DataSet> согласно шаблону «Column1», «Column2» и т. д.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-171">If the incoming data contains unnamed columns, they are put in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f3b5a-172">При добавлении нескольких результирующих наборов <xref:System.Data.DataSet>, каждый результирующий набор будет помещен в отдельную таблицу.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-172">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is put in a separate table.</span></span> <span data-ttu-id="f3b5a-173">Дополнительные результирующие наборы присваиваются имена с добавлением целых чисел к заданному имени таблицы (например, «Table», «Table1», «Таблица2» и т. д).</span><span class="sxs-lookup"><span data-stu-id="f3b5a-173">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f3b5a-174">Приложения следует проявлять осторожность при использовании имена столбцов и таблиц, чтобы избежать возникновения конфликтов шаблонов именования.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-174">Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</span></span>  
  
 <span data-ttu-id="f3b5a-175"><xref:System.Data.IDataAdapter.FillSchema%2A> не возвращает строк.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-175"><xref:System.Data.IDataAdapter.FillSchema%2A> returns no rows.</span></span> <span data-ttu-id="f3b5a-176">Используйте <xref:System.Data.IDataAdapter.Fill%2A> метод для добавления строк к <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-176">Use the <xref:System.Data.IDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3b5a-177">Получает параметры, заданные пользователем при выполнении оператора SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-177">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="f3b5a-178">Массив объектов <see cref="T:System.Data.IDataParameter" /> содержит параметры, заданные пользователем.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-178">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetParameters(String connectiongString) {  
           using (SqlConnection conn = new SqlConnection(connectiongString)) {  
              String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course] where [Year]=@Year and [Credits]>=@Credits";   
              SqlParameter year = new SqlParameter("@Year", 2012);   
              SqlParameter credits = new SqlParameter("@Credits", SqlDbType.Int, 4, "Credits");   
              credits.Value = 4; SqlCommand command = new SqlCommand(queryString, conn);   
              command.Parameters.Add(year);   
              command.Parameters.Add(credits);   
              IDbDataAdapter mySchool = new SqlDataAdapter(command);   
              IDataParameter[] parameters = mySchool.GetFillParameters();  
              Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "ParameterName", "SourceColumn", "Direction", "DbType", "Value");   
              foreach (IDataParameter parameter in parameters) {   
                 Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", parameter.ParameterName, parameter.SourceColumn, parameter.Direction, parameter.DbType, parameter.Value);   
              }  
           }  
        }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingMappingAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingMappingAction MissingMappingAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingMappingAction MissingMappingAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.MissingMappingAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingMappingAction As MissingMappingAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingMappingAction MissingMappingAction { System::Data::MissingMappingAction get(); void set(System::Data::MissingMappingAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.MissingMappingAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3b5a-179">Указывает, будут ли несопоставленные столбцы-источники или таблицы-источники передаваться со своими исходными именами, чтобы пройти через фильтр или вызвать ошибку.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-179">Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.</span></span></summary>
        <value><span data-ttu-id="f3b5a-180">Одно из значений перечисления <see cref="T:System.Data.MissingMappingAction" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-180">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</span></span> <span data-ttu-id="f3b5a-181">Значение по умолчанию: <see langword="Passthrough" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-181">The default is <see langword="Passthrough" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3b5a-182"><xref:System.Data.IDataAdapter.TableMappings%2A> Свойство предоставляет главное сопоставление между возвращаемыми записями и <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-182">The <xref:System.Data.IDataAdapter.TableMappings%2A> property provides the master mapping between the returned records and the <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3b5a-183">Заданное значение не является одним из значений <see cref="T:System.Data.MissingMappingAction" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-183">The value set is not one of the <see cref="T:System.Data.MissingMappingAction" /> values.</span></span></exception>
        <altmember cref="P:System.Data.IDataAdapter.MissingSchemaAction" />
      </Docs>
    </Member>
    <Member MemberName="MissingSchemaAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingSchemaAction MissingSchemaAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.MissingSchemaAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingSchemaAction As MissingSchemaAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingSchemaAction MissingSchemaAction { System::Data::MissingSchemaAction get(); void set(System::Data::MissingSchemaAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.MissingSchemaAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3b5a-184">Указывает или задает значение, определяющее, будут ли отсутствующие исходные таблицы, столбцы и их отношения добавляться в схему набора данных, игнорироваться или вызывать ошибку.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-184">Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.</span></span></summary>
        <value><span data-ttu-id="f3b5a-185">Одно из значений перечисления <see cref="T:System.Data.MissingSchemaAction" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-185">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span> <span data-ttu-id="f3b5a-186">Значение по умолчанию: <see langword="Add" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-186">The default is <see langword="Add" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f3b5a-187">Заданное значение не является одним из значений <see cref="T:System.Data.MissingSchemaAction" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-187">The value set is not one of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span></exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      </Docs>
    </Member>
    <Member MemberName="TableMappings">
      <MemberSignature Language="C#" Value="public System.Data.ITableMappingCollection TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ITableMappingCollection TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.TableMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableMappings As ITableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ITableMappingCollection ^ TableMappings { System::Data::ITableMappingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3b5a-188">Указывает, как исходная таблица сопоставлена с таблицей набора данных.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-188">Indicates how a source table is mapped to a dataset table.</span></span></summary>
        <value><span data-ttu-id="f3b5a-189">Коллекция, обеспечивающая основное сопоставление между возвращенными записями и объектом <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-189">A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f3b5a-190">Значение по умолчанию — пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-190">The default value is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3b5a-191"><xref:System.Data.IDataAdapter> Использует только сопоставления для исходной таблицы с именем «Table».</span><span class="sxs-lookup"><span data-stu-id="f3b5a-191">The <xref:System.Data.IDataAdapter> uses only the mappings for the source table named "Table".</span></span> <span data-ttu-id="f3b5a-192">SELECT, инструкции INSERT, DELETE и UPDATE, возврат данных должны использовать согласованные имена столбцов.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-192">All SELECT, INSERT, DELETE, and UPDATE statements returning data must do so using consistent column naming.</span></span> <span data-ttu-id="f3b5a-193">Имена столбцов, возвращаемых записей должны быть уникальными, в противном случае столбцы с дублирующимися именами перезаписи предыдущих данных.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-193">The column names returned in the records must be unique, otherwise columns with duplicate names overwrite previous data.</span></span> <span data-ttu-id="f3b5a-194">На <xref:System.Data.IDataAdapter.Update%2A>только выверять изменения для таблицы, сопоставленный в исходной таблице с именем «Table».</span><span class="sxs-lookup"><span data-stu-id="f3b5a-194">On <xref:System.Data.IDataAdapter.Update%2A>, only the table mapped to the source table named "Table" will have its changes reconciled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f3b5a-195">Объект <see cref="T:System.Data.DataSet" />, использованный для обновления источника данных.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-195">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="f3b5a-196">Вызывает соответствующие операторы INSERT, UPDATE или DELETE для каждой вставленной, обновленной или удаленной строки в указанном объекте <see cref="T:System.Data.DataSet" /> из объекта <see cref="T:System.Data.DataTable" /> с именем "Table".</span><span class="sxs-lookup"><span data-stu-id="f3b5a-196">Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table".</span></span></summary>
        <returns><span data-ttu-id="f3b5a-197">Количество строк, успешно обновленных из объекта <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-197">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3b5a-198">Если приложение вызывает <xref:System.Data.IDataAdapter.Update%2A> метода <xref:System.Data.IDataAdapter> проверяет <xref:System.Data.DataRow.RowState%2A> свойство и выполняет необходимые инструкции INSERT, UPDATE или DELETE итеративно для каждой строки, основываясь на порядке индексов, настроенном в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-198">When an application calls the <xref:System.Data.IDataAdapter.Update%2A> method, the <xref:System.Data.IDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f3b5a-199">Например <xref:System.Data.IDataAdapter.Update%2A> может выполнить инструкцию DELETE, за которым следует оператор INSERT, а затем еще одну инструкцию DELETE, из-за порядок строк в <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-199">For example, <xref:System.Data.IDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, because of the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f3b5a-200">Имейте в виду, что эти инструкции выполняются не как пакетный процесс. Каждая строка обновляется отдельно.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-200">Be aware that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f3b5a-201">Приложение может вызвать <xref:System.Data.DataSet.GetChanges%2A> метод, если необходимо управлять последовательностью типов инструкций (например, INSERT до инструкций Update).</span><span class="sxs-lookup"><span data-stu-id="f3b5a-201">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method if you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="f3b5a-202">Дополнительные сведения см. в разделе [обновление источников данных с помощью DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="f3b5a-202">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f3b5a-203">Если инструкции INSERT, UPDATE или DELETE не были указаны, <xref:System.Data.Common.DataAdapter.Update%2A> метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-203">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f3b5a-204">Однако можно создать <xref:System.Data.SqlClient.SqlCommandBuilder> или <xref:System.Data.OleDb.OleDbCommandBuilder> для автоматического создания инструкций SQL для отдельных обновлений, если задать `SelectCommand` свойства поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-204">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f3b5a-205">Затем CommandBuilder создаются любые дополнительные инструкции SQL, которые не заданы.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-205">Then, any additional SQL statements that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="f3b5a-206">Эта логика создания требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-206">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f3b5a-207">Дополнительные сведения см. [создание команд с помощью построителей команд](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="f3b5a-207">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f3b5a-208"><xref:System.Data.Common.DataAdapter.Update%2A> Метод извлекает строки из таблицы, приведенной в первом сопоставлении перед выполнением обновления.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-208">The <xref:System.Data.Common.DataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f3b5a-209"><xref:System.Data.Common.DataAdapter.Update%2A> Затем обновляет строку, используя значение <xref:System.Data.IDbCommand.UpdatedRowSource%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-209">The <xref:System.Data.Common.DataAdapter.Update%2A> then updates the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f3b5a-210">Все возвращенные дополнительные строки игнорируются.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-210">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f3b5a-211">После загрузки данных обратно в <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> события, позволяя пользователю проверить согласованную <xref:System.Data.DataSet> строк и любые выходные параметры, возвращенные командой.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-211">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f3b5a-212">После успешного обновления строки принимаются изменения этой строки.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-212">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f3b5a-213">При использовании <xref:System.Data.IDataAdapter.Update%2A>, порядок выполнения является следующим образом:</span><span class="sxs-lookup"><span data-stu-id="f3b5a-213">When using <xref:System.Data.IDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f3b5a-214">Значения в <xref:System.Data.DataRow> перемещаются в значения параметров.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-214">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f3b5a-215">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-215">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f3b5a-216">Выполняется команда.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-216">The command executes.</span></span>  
  
4.  <span data-ttu-id="f3b5a-217">Если команда имеет значение `FirstReturnedRecord`, первый возвращенный результат помещается в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-217">If the command is set to `FirstReturnedRecord`, then the first returned result is put in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f3b5a-218">Если имеются выходные параметры, они помещаются в <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-218">If there are output parameters, they are put in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f3b5a-219">Возникает событие <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-219">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f3b5a-220">вызывается метод <xref:System.Data.DataRow.AcceptChanges%2A>;</span><span class="sxs-lookup"><span data-stu-id="f3b5a-220"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f3b5a-221">Каждая команда, связанная с <xref:System.Data.IDataAdapter> обычно имеет коллекции параметров, связанных с ним.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-221">Each command associated with the <xref:System.Data.IDataAdapter> usually has a parameter collection associated with it.</span></span> <span data-ttu-id="f3b5a-222">Параметры сопоставляются с текущей строкой с помощью `SourceColumn` и `SourceVersion` свойств поставщика данных .NET Framework `Parameter` класса.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-222">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f3b5a-223">`SourceColumn` ссылается на <xref:System.Data.DataTable> столбца, <xref:System.Data.IDataAdapter> ссылки для получения значений параметров для текущей строки.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-223">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.IDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f3b5a-224">`SourceColumn` ссылается на имя несопоставленный столбец перед применением сопоставления таблиц.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-224">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f3b5a-225">Если `SourceColumn` ссылается на несуществующий столбец, предпринимаемые действия зависят от одного из следующих <xref:System.Data.MissingMappingAction> значения.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-225">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f3b5a-226">Значение перечисления</span><span class="sxs-lookup"><span data-stu-id="f3b5a-226">Enumeration Value</span></span>|<span data-ttu-id="f3b5a-227">Действие, выполняемое</span><span class="sxs-lookup"><span data-stu-id="f3b5a-227">Action Taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f3b5a-228">Используйте имена исходных столбцов и таблиц в <xref:System.Data.DataSet> Если сопоставление отсутствует.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-228">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f3b5a-229">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-229">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f3b5a-230">Если сопоставления заданы явно, отсутствие сопоставления для входного параметра обычно возникает из-за ошибки.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-230">When the mappings are explicitly set, a missing mapping for an input parameter is usually caused by an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f3b5a-231">Объект <xref:System.SystemException> создается.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-231">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f3b5a-232">`SourceColumn` Свойство также используется для сопоставления значений выходных значений или входных/выходных параметров обратно в `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-232">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f3b5a-233">Исключение создается в том случае, если он ссылается на несуществующий столбец.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-233">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f3b5a-234">`SourceVersion` Свойства поставщика данных .NET Framework `Parameter` класс определяет, следует ли использовать `Original`, `Current`, или `Proposed` версии значения столбца.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-234">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the `Original`, `Current`, or `Proposed` version of the column value.</span></span> <span data-ttu-id="f3b5a-235">Эта возможность часто используется для включения исходных значений в предложении WHERE инструкции UPDATE на наличие нарушений оптимистичного параллелизма.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-235">This capability is frequently used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3b5a-236">В случае ошибки при обновлении строки создается исключение, и выполнение обновления прекращается.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-236">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f3b5a-237">Чтобы продолжить операцию обновления без появления исключения при обнаружении ошибки, установите <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> свойства `true` перед вызовом <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-237">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f3b5a-238">Также можно ответить на ошибки для каждой строки в `RowUpdated` события объекта DataAdapter.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-238">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f3b5a-239">Чтобы продолжить операцию обновления без генерации исключения в `RowUpdated` набор событий, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> свойство <xref:System.Data.Common.RowUpdatedEventArgs> для <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-239">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3b5a-240">В следующем примере используется производный класс <xref:System.Data.OleDb.OleDbDataAdapter>в <xref:System.Data.Common.DataAdapter.Update%2A> источника данных.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-240">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to <xref:System.Data.Common.DataAdapter.Update%2A> the data source.</span></span> <span data-ttu-id="f3b5a-241">В этом примере предполагается, что вы создали <xref:System.Data.OleDb.OleDbDataAdapter> и <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-241">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f3b5a-242">Попытка выполнить оператор INSERT, UPDATE или DELETE привела к нулевому количеству обработанных записей.</span><span class="sxs-lookup"><span data-stu-id="f3b5a-242">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>