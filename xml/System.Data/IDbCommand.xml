<Type Name="IDbCommand" FullName="System.Data.IDbCommand">
  <TypeSignature Language="C#" Value="public interface IDbCommand : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbCommand implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbCommand&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbCommand : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="19f8f-101">Представляет инструкцию SQL, выполняемую при подключении к источнику данных, которую реализуют поставщики данных платформы NET Framework, имеющие доступ к реляционным базам данных.</span><span class="sxs-lookup"><span data-stu-id="19f8f-101">Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f8f-102"><xref:System.Data.IDbCommand> Интерфейс позволяет наследующему классу реализовать класс команды, который представляет инструкцию SQL, который выполняется в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="19f8f-102">The <xref:System.Data.IDbCommand> interface enables an inheriting class to implement a Command class, which represents an SQL statement that is executed at a data source.</span></span> <span data-ttu-id="19f8f-103">Дополнительные сведения о классах Command см. в разделе [выполнение команды](~/docs/framework/data/adonet/executing-a-command.md).</span><span class="sxs-lookup"><span data-stu-id="19f8f-103">For more information about Command classes, see [Executing a Command](~/docs/framework/data/adonet/executing-a-command.md).</span></span>  
  
 <span data-ttu-id="19f8f-104">Приложение не создает экземпляр <xref:System.Data.IDbCommand> интерфейса напрямую, но создает экземпляр класса, наследующего <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="19f8f-104">An application does not create an instance of the <xref:System.Data.IDbCommand> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbCommand>.</span></span>  
  
 <span data-ttu-id="19f8f-105">Классы, наследующие <xref:System.Data.IDbCommand> должны реализовывать все наследуемые члены и обычно определяются дополнительные члены для добавления функций конкретного поставщика.</span><span class="sxs-lookup"><span data-stu-id="19f8f-105">Classes that inherit <xref:System.Data.IDbCommand> must implement all inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="19f8f-106">Например <xref:System.Data.IDbCommand> интерфейс определяет <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19f8f-106">For example, the <xref:System.Data.IDbCommand> interface defines the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="19f8f-107">В свою очередь <xref:System.Data.SqlClient.SqlCommand> класс наследует этот метод, а также определяет <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="19f8f-107">In turn, the <xref:System.Data.SqlClient.SqlCommand> class inherits this method, and also defines the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19f8f-108">В следующем примере создается экземпляров производных классов <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, и <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="19f8f-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="19f8f-109">В примере считываются по данным, выводятся в консоль.</span><span class="sxs-lookup"><span data-stu-id="19f8f-109">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="19f8f-110">Наконец, в примере выполняется закрытие <xref:System.Data.SqlClient.SqlDataReader>, то <xref:System.Data.SqlClient.SqlConnection>.</span><span class="sxs-lookup"><span data-stu-id="19f8f-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="19f8f-111">Для обеспечения согласованности между поставщиками данных .NET Framework, наследующий классу имя в форме <paramref name="PrvClassname" /> где <paramref name="Prv" /> имеет стандартный префикс, назначаемый всем классам в пространстве имен поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="19f8f-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="PrvClassname" /> where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="19f8f-112">Например <paramref name="Sql" /> префикс для <see cref="T:System.Data.SqlClient.SqlCommand" /> класса в <see langword="System.Data.SqlClient" /> пространства имен.</span><span class="sxs-lookup"><span data-stu-id="19f8f-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
 <span data-ttu-id="19f8f-113">При наследовании от <see cref="T:System.Data.IDbCommand" /> интерфейс, должны реализовывать следующие конструкторы:</span><span class="sxs-lookup"><span data-stu-id="19f8f-113">When you inherit from the <see cref="T:System.Data.IDbCommand" /> interface, you should implement the following constructors:</span></span>  
  
 <span data-ttu-id="19f8f-114"><list type="table"><listheader><term> Элемент</span><span class="sxs-lookup"><span data-stu-id="19f8f-114"><list type="table"><listheader><term> Item</span></span>  
  
 <span data-ttu-id="19f8f-115"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="19f8f-115"></term><description> Description</span></span>  
  
 <span data-ttu-id="19f8f-116"></description></listheader><item><term> PrvCommand()</span><span class="sxs-lookup"><span data-stu-id="19f8f-116"></description></listheader><item><term> PrvCommand()</span></span>  
  
 <span data-ttu-id="19f8f-117"></term><description> Инициализирует новый экземпляр класса PrvCommand.</span><span class="sxs-lookup"><span data-stu-id="19f8f-117"></term><description> Initializes a new instance of the PrvCommand class.</span></span>  
  
 <span data-ttu-id="19f8f-118"></description></item><item><term> PrvCommand (строка cmdText)</span><span class="sxs-lookup"><span data-stu-id="19f8f-118"></description></item><item><term> PrvCommand(string cmdText)</span></span>  
  
 <span data-ttu-id="19f8f-119"></term><description> Инициализирует новый экземпляр класса PrvCommand с текстом запроса.</span><span class="sxs-lookup"><span data-stu-id="19f8f-119"></term><description> Initializes a new instance of the PrvCommand class with the text of the query.</span></span>  
  
 <span data-ttu-id="19f8f-120"></description></item><item><term> PrvCommand (строка cmdText, PrvConnection при получении соединения)</span><span class="sxs-lookup"><span data-stu-id="19f8f-120"></description></item><item><term> PrvCommand(string cmdText, PrvConnection connection)</span></span>  
  
 <span data-ttu-id="19f8f-121"></term><description> Инициализирует новый экземпляр класса PrvCommand с текстом запроса и PrvConnection при получении.</span><span class="sxs-lookup"><span data-stu-id="19f8f-121"></term><description> Initializes a new instance of the PrvCommand class with the text of the query and a PrvConnection.</span></span>  
  
 <span data-ttu-id="19f8f-122"></description></item><item><term> PrvCommand (строка cmdText, PrvConnection при получении соединения, PrvTransaction транзакций)</span><span class="sxs-lookup"><span data-stu-id="19f8f-122"></description></item><item><term> PrvCommand(string cmdText, PrvConnection connection, PrvTransaction transaction)</span></span>  
  
 <span data-ttu-id="19f8f-123"></term><description> Инициализирует новый экземпляр класса PrvCommand с текстом запроса, PrvConnection при получении и PrvTransaction.</span><span class="sxs-lookup"><span data-stu-id="19f8f-123"></term><description> Initializes a new instance of the PrvCommand class with the text of the query, a PrvConnection, and the PrvTransaction.</span></span>  
  
 </description></item></list></para>
    </block>
    <altmember cref="T:System.Data.Common.DbDataAdapter" />
    <altmember cref="T:System.Data.IDbConnection" />
    <altmember cref="T:System.Data.OleDb.OleDbCommand" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19f8f-124">Пытается отменить выполнение <see cref="T:System.Data.IDbCommand" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-124">Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f8f-125">Если нужно отменить, ничего не происходит.</span><span class="sxs-lookup"><span data-stu-id="19f8f-125">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="19f8f-126">Если выполняемая команда имеется и попытка ее отмены оканчивается неудачей, исключение не формируется.</span><span class="sxs-lookup"><span data-stu-id="19f8f-126">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f8f-127">Возвращает или задает текстовую команду для выполнения в отношении источника данных.</span><span class="sxs-lookup"><span data-stu-id="19f8f-127">Gets or sets the text command to run against the data source.</span></span></summary>
        <value><span data-ttu-id="19f8f-128">Текстовая команда для выполнения.</span><span class="sxs-lookup"><span data-stu-id="19f8f-128">The text command to execute.</span></span> <span data-ttu-id="19f8f-129">Значением по умолчанию является пустая строка ("").</span><span class="sxs-lookup"><span data-stu-id="19f8f-129">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f8f-130">Когда <xref:System.Data.IDbCommand.CommandType%2A> свойству `StoredProcedure`, задайте <xref:System.Data.IDbCommand.CommandText%2A> на имя хранимой процедуры.</span><span class="sxs-lookup"><span data-stu-id="19f8f-130">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="19f8f-131">Пользователь может потребоваться использовать синтаксис escape-символов, если имя хранимой процедуры содержит специальные символы.</span><span class="sxs-lookup"><span data-stu-id="19f8f-131">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="19f8f-132">Команда вызывает эту хранимую процедуру при вызове одного из методов Execute.</span><span class="sxs-lookup"><span data-stu-id="19f8f-132">The command will call this stored procedure when you call one of the Execute methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19f8f-133">В следующем примере создается экземпляр производного класса <xref:System.Data.OleDb.OleDbCommand> и задает некоторые его свойства.</span><span class="sxs-lookup"><span data-stu-id="19f8f-133">The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
        <altmember cref="P:System.Data.IDbCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f8f-134">Возвращает или задает время ожидания перед завершением попытки выполнить команду и созданием ошибки.</span><span class="sxs-lookup"><span data-stu-id="19f8f-134">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="19f8f-135">Время (в секундах) ожидания выполнения команды.</span><span class="sxs-lookup"><span data-stu-id="19f8f-135">The time (in seconds) to wait for the command to execute.</span></span> <span data-ttu-id="19f8f-136">Значение по умолчанию - 30 секунды.</span><span class="sxs-lookup"><span data-stu-id="19f8f-136">The default value is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19f8f-137">В следующем примере создается экземпляр производного класса <xref:System.Data.SqlClient.SqlCommand> и задает некоторые его свойства.</span><span class="sxs-lookup"><span data-stu-id="19f8f-137">The following example creates an instance of a derived class, <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="19f8f-138">Присвоенное значение свойства меньше 0.</span><span class="sxs-lookup"><span data-stu-id="19f8f-138">The property value assigned is less than 0.</span></span></exception>
        <altmember cref="P:System.Data.IDbCommand.CommandText" />
        <altmember cref="P:System.Data.IDbCommand.Connection" />
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f8f-139">Указывает или определяет, как интерпретируется свойство <see cref="P:System.Data.IDbCommand.CommandText" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-139">Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="19f8f-140">Одно из значений перечисления <see cref="T:System.Data.CommandType" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-140">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="19f8f-141">Значение по умолчанию: <see langword="Text" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-141">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f8f-142">При задании <xref:System.Data.IDbCommand.CommandType%2A> свойства `StoredProcedure`, следует задать <xref:System.Data.IDbCommand.CommandText%2A> на имя хранимой процедуры.</span><span class="sxs-lookup"><span data-stu-id="19f8f-142">When you set the <xref:System.Data.IDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="19f8f-143">Команда выполняет эту хранимую процедуру при вызове одного из методов Execute.</span><span class="sxs-lookup"><span data-stu-id="19f8f-143">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); void set(System::Data::IDbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f8f-144">Возвращает или задает объект <see cref="T:System.Data.IDbConnection" />, используемый этим экземпляром класса <see cref="T:System.Data.IDbCommand" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-144">Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</span></span></summary>
        <value><span data-ttu-id="19f8f-145">Подключение к источнику данных.</span><span class="sxs-lookup"><span data-stu-id="19f8f-145">The connection to the data source.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.IDbDataParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDbDataParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As IDbDataParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbDataParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19f8f-146">Создает новый экземпляр объекта <see cref="T:System.Data.IDbDataParameter" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-146">Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="19f8f-147">Объект <see langword="IDbDataParameter" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-147">An <see langword="IDbDataParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f8f-148">При наследовании от <xref:System.Data.IDbCommand>, поставщик данных .NET Framework реализует строго типизированную версию <xref:System.Data.IDbCommand.CreateParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="19f8f-148">When inheriting from <xref:System.Data.IDbCommand>, a .NET Framework data provider implements a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19f8f-149">Выполняет инструкцию SQL для объекта <see langword="Connection" /> поставщика данных .NET Framework и возвращает число задействованных строк.</span><span class="sxs-lookup"><span data-stu-id="19f8f-149">Executes an SQL statement against the <see langword="Connection" /> object of a .NET Framework data provider, and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="19f8f-150">Число обработанных строк.</span><span class="sxs-lookup"><span data-stu-id="19f8f-150">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f8f-151">Можно использовать <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> для выполнения операций с каталогом (например, запрос структуры базы данных или создание объектов базы данных, таких как таблицы) или для изменения данных в базе данных без использования <xref:System.Data.DataSet> , выполнив UPDATE, INSERT или DELETE инструкции.</span><span class="sxs-lookup"><span data-stu-id="19f8f-151">You can use the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="19f8f-152">Несмотря на то что <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> не возвращает строк, любые выходные параметры или возвращаемые значения, которые сопоставлены с параметрами, заполняются данными.</span><span class="sxs-lookup"><span data-stu-id="19f8f-152">Although the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="19f8f-153">Операторы UPDATE, INSERT и DELETE возвращают количество строк, которые были обработаны с их помощью.</span><span class="sxs-lookup"><span data-stu-id="19f8f-153">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="19f8f-154">Для всех прочих типов операторов возвращаемым значением является -1.</span><span class="sxs-lookup"><span data-stu-id="19f8f-154">For all other types of statements, the return value is -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19f8f-155">В следующем примере создается экземпляр производного класса <xref:System.Data.OleDb.OleDbCommand>, а затем выполняет ее.</span><span class="sxs-lookup"><span data-stu-id="19f8f-155">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and then executes it.</span></span> <span data-ttu-id="19f8f-156">Чтобы выполнить это, методу передается строка, являющаяся инструкцией SQL SELECT и строка, используемая для подключения к источнику данных.</span><span class="sxs-lookup"><span data-stu-id="19f8f-156">To accomplish this, the method is passed a string that is a SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="19f8f-157">Подключение не существует.</span><span class="sxs-lookup"><span data-stu-id="19f8f-157">The connection does not exist.</span></span>  
  
 <span data-ttu-id="19f8f-158">- или -</span><span class="sxs-lookup"><span data-stu-id="19f8f-158">-or-</span></span>  
  
 <span data-ttu-id="19f8f-159">Соединение не открыто.</span><span class="sxs-lookup"><span data-stu-id="19f8f-159">The connection is not open.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19f8f-160">Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> в <see cref="P:System.Data.IDbCommand.Connection" /> и создает <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-160">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19f8f-161">Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> в <see cref="P:System.Data.IDbCommand.Connection" /> и создает <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-161">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="19f8f-162">Объект <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-162">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="19f8f-163">Одно из значений перечисления <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-163">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="19f8f-164">Выполняет <see cref="P:System.Data.IDbCommand.CommandText" /> в <see cref="P:System.Data.IDbCommand.Connection" /> и строит <see cref="T:System.Data.IDataReader" /> с помощью одного из значений <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-164">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="19f8f-165">Объект <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-165">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f8f-166">Вызывающий объект должен вызвать <xref:System.Data.IDbConnection.Open%2A> метод <xref:System.Data.IDbCommand.Connection%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="19f8f-166">The caller must call the <xref:System.Data.IDbConnection.Open%2A> method of the <xref:System.Data.IDbCommand.Connection%2A> property.</span></span>  
  
 <span data-ttu-id="19f8f-167">Когда <xref:System.Data.IDbCommand.CommandType%2A> свойству `StoredProcedure`, <xref:System.Data.IDbCommand.CommandText%2A> свойство должно быть присвоено имя хранимой процедуры.</span><span class="sxs-lookup"><span data-stu-id="19f8f-167">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.IDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="19f8f-168">Команда выполняет эту хранимую процедуру при вызове <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="19f8f-168">The command executes this stored procedure when you call <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19f8f-169">Используйте <xref:System.Data.CommandBehavior.SequentialAccess> для получения больших значений и двоичные данные.</span><span class="sxs-lookup"><span data-stu-id="19f8f-169">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="19f8f-170">В противном случае <xref:System.OutOfMemoryException> может возникнуть, и соединение будет закрыто.</span><span class="sxs-lookup"><span data-stu-id="19f8f-170">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="19f8f-171">Хотя <xref:System.Data.IDataReader> используется, связанный с ним <xref:System.Data.IDbConnection> обслуживает <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="19f8f-171">While the <xref:System.Data.IDataReader> is in use, the associated <xref:System.Data.IDbConnection> is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="19f8f-172">В этом состоянии могут выполняться никакие другие операции на <xref:System.Data.IDbConnection> кроме закрытия.</span><span class="sxs-lookup"><span data-stu-id="19f8f-172">While in this state, no other operations can be performed on the <xref:System.Data.IDbConnection> other than closing it.</span></span> <span data-ttu-id="19f8f-173">Это состояние сохраняется до <xref:System.Data.IDataReader.Close%2A> вызывается метод объекта DataReader.</span><span class="sxs-lookup"><span data-stu-id="19f8f-173">This is the case until the <xref:System.Data.IDataReader.Close%2A> method of the DataReader is called.</span></span> <span data-ttu-id="19f8f-174">Если в процессе создания DataReader с <xref:System.Data.CommandBehavior> значение `CloseConnection`, закрытие DataReader подключение будет закрыто автоматически.</span><span class="sxs-lookup"><span data-stu-id="19f8f-174">If the DataReader is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the DataReader closes the connection automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19f8f-175">Выполняет запрос и возвращает первый столбец первой строки результирующего набора, возвращаемого запросом.</span><span class="sxs-lookup"><span data-stu-id="19f8f-175">Executes the query, and returns the first column of the first row in the resultset returned by the query.</span></span> <span data-ttu-id="19f8f-176">Дополнительные столбцы или строки не обрабатываются.</span><span class="sxs-lookup"><span data-stu-id="19f8f-176">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="19f8f-177">Первый столбец или первая строка в результирующем наборе.</span><span class="sxs-lookup"><span data-stu-id="19f8f-177">The first column of the first row in the resultset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f8f-178">Используйте <xref:System.Data.IDbCommand.ExecuteScalar%2A> метод для извлечения из базы данных одно значение (например, статистическое значение).</span><span class="sxs-lookup"><span data-stu-id="19f8f-178">Use the <xref:System.Data.IDbCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="19f8f-179">Это требует меньшего объема кода, чем при использовании <xref:System.Data.IDbCommand.ExecuteReader%2A> метода и затем выполнение операций, необходимых для создания одного значения на основе данных, возвращаемых функцией <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="19f8f-179">This requires less code than using the <xref:System.Data.IDbCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value using the data returned by an <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="19f8f-180">Типичный <xref:System.Data.IDbCommand.ExecuteScalar%2A> запрос может быть отформатирован как в следующем примере на C#:</span><span class="sxs-lookup"><span data-stu-id="19f8f-180">A typical <xref:System.Data.IDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "select count(*) as NumberOfRegions from region";  
Int32 count = (int) ExecuteScalar();  
```  
  
 <span data-ttu-id="19f8f-181">Если первый столбец первой строки в результирующем наборе не найден, пустая ссылка (`Nothing` в Visual Basic) возвращается.</span><span class="sxs-lookup"><span data-stu-id="19f8f-181">If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned.</span></span> <span data-ttu-id="19f8f-182">Если значение в базе данных `null`, запрос возвращает `DBNull.Value`.</span><span class="sxs-lookup"><span data-stu-id="19f8f-182">If the value in the database is `null`, the query returns `DBNull.Value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19f8f-183">В следующем примере создается экземпляр производного класса <xref:System.Data.SqlClient.SqlCommand>, а затем выполняет его с помощью <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span><span class="sxs-lookup"><span data-stu-id="19f8f-183">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="19f8f-184">В примере передаются строка, являющаяся инструкции Transact-SQL, которая возвращает итоговый результат и строка, используемая для подключения к источнику данных.</span><span class="sxs-lookup"><span data-stu-id="19f8f-184">The example is passed a string that is a Transact-SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDataParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDataParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDataParameterCollection ^ Parameters { System::Data::IDataParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f8f-185">Возвращает набор <see cref="T:System.Data.IDataParameterCollection" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-185">Gets the <see cref="T:System.Data.IDataParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="19f8f-186">Параметры инструкции SQL или хранимой процедуры.</span><span class="sxs-lookup"><span data-stu-id="19f8f-186">The parameters of the SQL statement or stored procedure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19f8f-187">В следующем примере создается экземпляр производного класса <xref:System.Data.SqlClient.SqlCommand>и отображение его параметров.</span><span class="sxs-lookup"><span data-stu-id="19f8f-187">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and displays its parameters.</span></span> <span data-ttu-id="19f8f-188">В примере приложение передает <xref:System.Data.SqlClient.SqlConnection>, строки запроса, которая является инструкцией Transact-SQL SELECT и массив <xref:System.Data.SqlClient.SqlParameter> объектов.</span><span class="sxs-lookup"><span data-stu-id="19f8f-188">In the example, the application passes a <xref:System.Data.SqlClient.SqlConnection>, a query string that is a Transact-SQL SELECT statement, and an array of <xref:System.Data.SqlClient.SqlParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.IDataParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19f8f-189">Создает подготовленную (или скомпилированную) версию команды в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="19f8f-189">Creates a prepared (or compiled) version of the command on the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f8f-190">Если <xref:System.Data.IDbCommand.CommandType%2A> свойству `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="19f8f-190">If the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="19f8f-191">Если <xref:System.Data.IDbCommand.CommandType%2A> равно `StoredProcedure`, вызов <xref:System.Data.IDbCommand.Prepare%2A> будет успешным, хотя он может привести к холостой.</span><span class="sxs-lookup"><span data-stu-id="19f8f-191">If <xref:System.Data.IDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.IDbCommand.Prepare%2A> should succeed, although it may result in a no-op.</span></span> <span data-ttu-id="19f8f-192">Сервер автоматически кэширует планы для повторного использования в случае необходимости; Таким образом нет необходимости вызывать этот метод непосредственно в клиентском приложении.</span><span class="sxs-lookup"><span data-stu-id="19f8f-192">The server automatically caches plans for reuse as necessary; therefore, there is no need to call this method directly in your client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19f8f-193">В следующем примере создается экземпляр производного класса <xref:System.Data.OleDb.OleDbCommand>и открывает соединение.</span><span class="sxs-lookup"><span data-stu-id="19f8f-193">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and opens the connection.</span></span> <span data-ttu-id="19f8f-194">Затем в примере подготавливается хранимая процедура для источника данных путем передачи строка, являющаяся инструкцией SQL SELECT и строка, используемая для подключения к источнику данных.</span><span class="sxs-lookup"><span data-stu-id="19f8f-194">The example then prepares a stored procedure on the data source by passing a string that is a SQL Select statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="19f8f-195"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> не указывается.</span><span class="sxs-lookup"><span data-stu-id="19f8f-195">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span></span>  
  
 <span data-ttu-id="19f8f-196">- или -</span><span class="sxs-lookup"><span data-stu-id="19f8f-196">-or-</span></span>  
  
 <span data-ttu-id="19f8f-197">Свойство <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> не является методом <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-197">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.IDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As IDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbTransaction ^ Transaction { System::Data::IDbTransaction ^ get(); void set(System::Data::IDbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f8f-198">Возвращает или задает транзакцию, в рамках которой выполняется объект <see langword="Command" /> поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="19f8f-198">Gets or sets the transaction within which the <see langword="Command" /> object of a .NET Framework data provider executes.</span></span></summary>
        <value><span data-ttu-id="19f8f-199">выполняется объект <see langword="Command" /> поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="19f8f-199">the <see langword="Command" /> object of a .NET Framework data provider executes.</span></span> <span data-ttu-id="19f8f-200">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-200">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19f8f-201">Возвращает или задает способ применения результатов команды к объекту <see cref="T:System.Data.DataRow" /> при использовании метода <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> объекта <see cref="T:System.Data.Common.DbDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-201">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <value><span data-ttu-id="19f8f-202">Одно из значений перечисления <see cref="T:System.Data.UpdateRowSource" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-202">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span> <span data-ttu-id="19f8f-203">Значение по умолчанию — <see langword="Both" />, если команда не создается автоматически.</span><span class="sxs-lookup"><span data-stu-id="19f8f-203">The default is <see langword="Both" /> unless the command is automatically generated.</span></span> <span data-ttu-id="19f8f-204">Значение по умолчанию — <see langword="None" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-204">Then the default is <see langword="None" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="19f8f-205">Введенное значение не являлось одним из значений <see cref="T:System.Data.UpdateRowSource" />.</span><span class="sxs-lookup"><span data-stu-id="19f8f-205">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>