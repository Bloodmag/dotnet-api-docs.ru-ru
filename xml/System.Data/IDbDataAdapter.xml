<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad7ef39687c100899e7bccb842a442f2c82c114b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37668546" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="27a10-101">Представляет набор связанных с командой свойств, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных, реализуемый поставщиками данных .NET Framework, осуществляющими доступ к реляционным базам данных.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27a10-101">Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a10-102"><xref:System.Data.IDbDataAdapter> Интерфейс наследует от <xref:System.Data.IDataAdapter> интерфейс, а также позволяет объекту создавать DataAdapter, разработанный для использования в реляционной базе данных.</span><span class="sxs-lookup"><span data-stu-id="27a10-102">The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database.</span></span> <span data-ttu-id="27a10-103"><xref:System.Data.IDbDataAdapter> Интерфейса и, возможно, служебный класс, <xref:System.Data.Common.DbDataAdapter>, разрешить наследующему классу реализовать класс DataAdapter, который представляет собой мост между источником данных и <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="27a10-103">The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="27a10-104">Дополнительные сведения о классах DataAdapter, см. в разделе [заполнение набора данных из объекта DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span><span class="sxs-lookup"><span data-stu-id="27a10-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span> <span data-ttu-id="27a10-105">Дополнительные сведения о реализации поставщиков данных .NET Framework, см. в разделе [ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span><span class="sxs-lookup"><span data-stu-id="27a10-105">For more information about implementing .NET Framework data providers, see [&#91;\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span></span>  
  
 <span data-ttu-id="27a10-106">Приложение не создает экземпляр <xref:System.Data.IDbDataAdapter> интерфейса напрямую, но создает экземпляр класса, наследующего <xref:System.Data.IDbDataAdapter> и <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="27a10-106">An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="27a10-107">Классы, наследующие <xref:System.Data.IDbDataAdapter> необходимо реализовать наследуемые члены и обычно определяются дополнительные члены для добавления функций конкретного поставщика.</span><span class="sxs-lookup"><span data-stu-id="27a10-107">Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="27a10-108">Например <xref:System.Data.IDbDataAdapter> интерфейс определяет <xref:System.Data.IDbDataAdapter.SelectCommand%2A> свойство и <xref:System.Data.Common.DbDataAdapter> интерфейс определяет <xref:System.Data.IDataAdapter.Fill%2A> метода, принимающего <xref:System.Data.DataTable> как параметр.</span><span class="sxs-lookup"><span data-stu-id="27a10-108">For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter.</span></span> <span data-ttu-id="27a10-109">В свою очередь <xref:System.Data.OleDb.OleDbDataAdapter> класс наследует <xref:System.Data.IDbDataAdapter.SelectCommand%2A> свойство и <xref:System.Data.Common.DbDataAdapter.Fill%2A> метода, а также определяет две дополнительные перегрузки <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> метод, который объект ADO Recordset как параметр.</span><span class="sxs-lookup"><span data-stu-id="27a10-109">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27a10-110">В следующем примере используется производными классами <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> и <xref:System.Data.SqlClient.SqlConnection>, для выбора записей из источника данных.</span><span class="sxs-lookup"><span data-stu-id="27a10-110">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source.</span></span> <span data-ttu-id="27a10-111">Заполненный <xref:System.Data.DataSet> затем возвращается.</span><span class="sxs-lookup"><span data-stu-id="27a10-111">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="27a10-112">Чтобы выполнить это, методу передается инициализированный <xref:System.Data.DataSet>, строку соединения и строки запроса, которая является инструкцией Transact-SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="27a10-112">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="27a10-113">
        <para>Для обеспечения согласованности между поставщиками данных .NET Framework, наследующий классу имя в форме <paramref name="Prv" /> DataAdapter где <paramref name="Prv" /> — стандартный префикс для всех классов в пространстве имен поставщика данных .NET Framework. Например <paramref name="Sql" /> является префиксом <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> в класс <see langword="System.Data.SqlClient" /> пространства имен.  При наследовании от <see cref="T:System.Data.IDbDataAdapter" /> интерфейса, следует реализовать следующие конструкторы: <list type="table"><listheader><term> элемент </term><description> описание </description></listheader><item><term> PrvDataAdapter() </term><description> Инициализирует новый экземпляр класса PrvDataAdapter.  </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand) </term><description> Инициализирует новый экземпляр класса PrvDataAdapter с заданным оператором SQL SELECT.  </description></item><item><term> PrvDataAdapter (selectCommandText строка, строка selectConnectionString) </term><description> Инициализирует новый экземпляр класса PrvDataAdapter с оператором SQL SELECT и строку подключения.  </description></item><item><term> PrvDataAdapter (строка selectCommandText, selectConnection PrvConnection при получении) </term><description> Инициализирует новый экземпляр класса PrvDataAdapter с оператором SQL SELECT и объектом PrvConnection при получении.  </description></item></list></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="27a10-113">
          <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.  When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> PrvDataAdapter()  </term><description> Initializes a new instance of the PrvDataAdapter class.  </description></item><item><term> PrvDataAdapter(PrvCommand selectCommand)  </term><description> Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.  </description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString)  </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.  </description></item><item><term> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)  </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.  </description></item></list></para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27a10-114">Возвращает или задает оператор SQL для удаления записей из набора данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a10-114">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27a10-115">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a10-115">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a10-116">Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> могут создаваться автоматически, если задать `SelectCommand` свойства поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="27a10-116">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="27a10-117">Затем любые дополнительные команды, не устанавливайте генерируются CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="27a10-117">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="27a10-118">Этот код требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="27a10-118">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="27a10-119">Дополнительные сведения см. в разделе [создание команд с помощью построителей CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="27a10-119">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="27a10-120">Когда <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> назначается для ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется.</span><span class="sxs-lookup"><span data-stu-id="27a10-120">When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="27a10-121"><xref:System.Data.IDbDataAdapter.DeleteCommand%2A> Сохраняет ссылку на ранее созданный <xref:System.Data.IDbCommand> объекта.</span><span class="sxs-lookup"><span data-stu-id="27a10-121">The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27a10-122">В следующем примере создается экземпляр наследуемого <xref:System.Data.OleDb.OleDbDataAdapter> и задает <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="27a10-122">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="27a10-123">Предполагается, что вы уже создали <xref:System.Data.OleDb.OleDbConnection> объекта.</span><span class="sxs-lookup"><span data-stu-id="27a10-123">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27a10-124">Возвращает или задает оператор SQL для вставки новых записей в источник данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a10-124">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27a10-125">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a10-125">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a10-126">Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> могут создаваться автоматически, если задать `SelectCommand` свойства поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="27a10-126">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="27a10-127">Затем любые дополнительные команды, не устанавливайте генерируются CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="27a10-127">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="27a10-128">Этот код требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="27a10-128">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="27a10-129">Дополнительные сведения см. в разделе [создание команд с помощью построителей CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="27a10-129">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="27a10-130">Когда <xref:System.Data.IDbDataAdapter.InsertCommand%2A> назначается для ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется.</span><span class="sxs-lookup"><span data-stu-id="27a10-130">When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="27a10-131"><xref:System.Data.IDbDataAdapter.InsertCommand%2A> Сохраняет ссылку на ранее созданный <xref:System.Data.IDbCommand> объекта.</span><span class="sxs-lookup"><span data-stu-id="27a10-131">The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27a10-132">Если выполнение этой команды возвращает строки, эти строки могут быть добавлены к <xref:System.Data.DataSet> в зависимости от того, как задать <xref:System.Data.IDbCommand.UpdatedRowSource%2A> свойство <xref:System.Data.IDbCommand> объекта.</span><span class="sxs-lookup"><span data-stu-id="27a10-132">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27a10-133">В следующем примере создается экземпляр наследуемого <xref:System.Data.OleDb.OleDbDataAdapter> и задает <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="27a10-133">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="27a10-134">Предполагается, что вы уже создали <xref:System.Data.OleDb.OleDbConnection> объекта.</span><span class="sxs-lookup"><span data-stu-id="27a10-134">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27a10-135">Возвращает или задает оператор SQL для выбора записей в источнике данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a10-135">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27a10-136">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a10-136">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a10-137">Когда <xref:System.Data.IDbDataAdapter.SelectCommand%2A> назначается для ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется.</span><span class="sxs-lookup"><span data-stu-id="27a10-137">When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="27a10-138"><xref:System.Data.IDbDataAdapter.SelectCommand%2A> Сохраняет ссылку на ранее созданный <xref:System.Data.IDbCommand> объекта.</span><span class="sxs-lookup"><span data-stu-id="27a10-138">The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
 <span data-ttu-id="27a10-139">Если <xref:System.Data.IDbDataAdapter.SelectCommand%2A> не возвращает все строки таблицы не добавляются к <xref:System.Data.DataSet>, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="27a10-139">If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27a10-140">В следующем примере создается экземпляр наследуемого <xref:System.Data.OleDb.OleDbDataAdapter> и задает <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="27a10-140">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="27a10-141">Предполагается, что вы уже создали <xref:System.Data.OleDb.OleDbConnection> объекта.</span><span class="sxs-lookup"><span data-stu-id="27a10-141">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27a10-142">Возвращает или задает оператор SQL для обновления записей в источнике данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a10-142">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27a10-143">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a10-143">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a10-144">Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> могут создаваться автоматически, если задать `SelectCommand` свойства поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="27a10-144">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="27a10-145">Затем любые дополнительные команды, не устанавливайте генерируются CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="27a10-145">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="27a10-146">Этот код требует сведения о ключевом столбце должны присутствовать в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="27a10-146">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="27a10-147">Дополнительные сведения см. в разделе [создание команд с помощью построителей CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="27a10-147">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="27a10-148">Когда <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> назначается для ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется.</span><span class="sxs-lookup"><span data-stu-id="27a10-148">When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="27a10-149"><xref:System.Data.IDbDataAdapter.UpdateCommand%2A> Сохраняет ссылку на ранее созданный <xref:System.Data.IDbCommand> объекта.</span><span class="sxs-lookup"><span data-stu-id="27a10-149">The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27a10-150">Если выполнение этой команды возвращает строки, эти строки добавляются к <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="27a10-150">If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27a10-151">В следующем примере создается экземпляр наследуемого <xref:System.Data.OleDb.OleDbDataAdapter> и задает <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="27a10-151">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="27a10-152">Предполагается, что вы уже создали <xref:System.Data.OleDb.OleDbConnection> объекта.</span><span class="sxs-lookup"><span data-stu-id="27a10-152">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>