<Type Name="IDbTransaction" FullName="System.Data.IDbTransaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2066228366ddeba4b875c2f1e8eecded239d6124" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37668367" /></Metadata><TypeSignature Language="C#" Value="public interface IDbTransaction : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbTransaction implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbTransaction" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbTransaction : IDisposable" />
  <TypeSignature Language="F#" Value="type IDbTransaction = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8fb20-101">Представляет транзакцию, выполняемую с источником данных; реализуется поставщиками данных платформы NET Framework, у которых есть доступ к реляционным базам данных.</span><span class="sxs-lookup"><span data-stu-id="8fb20-101">Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fb20-102"><xref:System.Data.IDbTransaction> Интерфейс позволяет наследующему классу реализовать класс транзакции, который представляет транзакцию, выполняемую с источником данных.</span><span class="sxs-lookup"><span data-stu-id="8fb20-102">The <xref:System.Data.IDbTransaction> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source.</span></span> <span data-ttu-id="8fb20-103">Дополнительные сведения о классах транзакции, см. в разделе [транзакции и параллельность](~/docs/framework/data/adonet/transactions-and-concurrency.md).</span><span class="sxs-lookup"><span data-stu-id="8fb20-103">For more information about Transaction classes, see [Transactions and Concurrency](~/docs/framework/data/adonet/transactions-and-concurrency.md).</span></span>  
  
 <span data-ttu-id="8fb20-104">Приложение не создает экземпляр <xref:System.Data.IDbTransaction> интерфейса напрямую, но создает экземпляр класса, наследующего <xref:System.Data.IDbTransaction>.</span><span class="sxs-lookup"><span data-stu-id="8fb20-104">An application does not create an instance of the <xref:System.Data.IDbTransaction> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbTransaction>.</span></span>  
  
 <span data-ttu-id="8fb20-105">Классы, наследующие <xref:System.Data.IDbTransaction> необходимо реализовать наследуемые члены и обычно определяются дополнительные члены для добавления функций конкретного поставщика.</span><span class="sxs-lookup"><span data-stu-id="8fb20-105">Classes that inherit <xref:System.Data.IDbTransaction> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="8fb20-106">Например <xref:System.Data.IDbTransaction> интерфейс определяет <xref:System.Data.IDbTransaction.Commit%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8fb20-106">For example, the <xref:System.Data.IDbTransaction> interface defines the <xref:System.Data.IDbTransaction.Commit%2A> method.</span></span> <span data-ttu-id="8fb20-107">В свою очередь <xref:System.Data.OleDb.OleDbTransaction> класс наследует это свойство, а также определяет <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8fb20-107">In turn, the <xref:System.Data.OleDb.OleDbTransaction> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fb20-108">В следующем примере создается экземпляров из производных классов, <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="8fb20-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="8fb20-109">Также демонстрируется использование <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="8fb20-109">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><span data-ttu-id="8fb20-110"><para>Для обеспечения согласованности между поставщиками данных .NET Framework, наследующий классу имя в форме <paramref name="Prv" /> транзакции где <paramref name="Prv" /> — стандартный префикс для всех классов в пространстве имен поставщика данных .NET Framework. Например <paramref name="Sql" /> является префиксом <see cref="T:System.Data.SqlClient.SqlTransaction" /> в класс <see langword="System.Data.SqlClient" /> пространства имен.</para></span><span class="sxs-lookup"><span data-stu-id="8fb20-110"><para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Transaction where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlTransaction" /> class in the <see langword="System.Data.SqlClient" /> namespace.</para></span></span></block>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="abstract member Commit : unit -&gt; unit" Usage="iDbTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8fb20-111">Фиксирует транзакцию базы данных.</span><span class="sxs-lookup"><span data-stu-id="8fb20-111">Commits the database transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8fb20-112">В следующем примере создается экземпляров из производных классов, <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="8fb20-112">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="8fb20-113">Также демонстрируется использование <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="8fb20-113">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="8fb20-114">Ошибка при попытке фиксации транзакции.</span><span class="sxs-lookup"><span data-stu-id="8fb20-114">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8fb20-115">Транзакция уже зафиксирована, или выполнен откат.</span><span class="sxs-lookup"><span data-stu-id="8fb20-115">The transaction has already been committed or rolled back.</span></span>  
  
<span data-ttu-id="8fb20-116">- или -</span><span class="sxs-lookup"><span data-stu-id="8fb20-116">-or-</span></span> 
<span data-ttu-id="8fb20-117">Соединение закрыто.</span><span class="sxs-lookup"><span data-stu-id="8fb20-117">The connection is broken.</span></span></exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
        <altmember cref="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
        <altmember cref="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.IDbConnection" Usage="System.Data.IDbTransaction.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fb20-118">Указывает объект Connection для связывания с транзакцией.</span><span class="sxs-lookup"><span data-stu-id="8fb20-118">Specifies the Connection object to associate with the transaction.</span></span></summary>
        <value><span data-ttu-id="8fb20-119">Объект Connection для связывания с транзакцией.</span><span class="sxs-lookup"><span data-stu-id="8fb20-119">The Connection object to associate with the transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fb20-120">Одно приложение может иметь несколько подключений к базе данных, каждый из которых ноль или несколько транзакций.</span><span class="sxs-lookup"><span data-stu-id="8fb20-120">A single application may have multiple database connections, each with zero or more transactions.</span></span> <span data-ttu-id="8fb20-121">Это свойство позволяет определить объект соединения, связанный с определенной транзакцией.</span><span class="sxs-lookup"><span data-stu-id="8fb20-121">This property enables you to determine the connection object associated with a particular transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.IsolationLevel : System.Data.IsolationLevel" Usage="System.Data.IDbTransaction.IsolationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8fb20-122">Указывает <see cref="T:System.Data.IsolationLevel" /> для этой транзакции.</span><span class="sxs-lookup"><span data-stu-id="8fb20-122">Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span></summary>
        <value><span data-ttu-id="8fb20-123"><see cref="T:System.Data.IsolationLevel" /> для этой транзакции.</span><span class="sxs-lookup"><span data-stu-id="8fb20-123">The <see cref="T:System.Data.IsolationLevel" /> for this transaction.</span></span> <span data-ttu-id="8fb20-124">Значение по умолчанию: <see langword="ReadCommitted" />.</span><span class="sxs-lookup"><span data-stu-id="8fb20-124">The default is <see langword="ReadCommitted" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fb20-125">Параллельные транзакции не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="8fb20-125">Parallel transactions are not supported.</span></span> <span data-ttu-id="8fb20-126">Таким образом <xref:System.Data.IsolationLevel> применяется ко всей транзакции.</span><span class="sxs-lookup"><span data-stu-id="8fb20-126">Therefore, the <xref:System.Data.IsolationLevel> applies to the entire transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback();" />
      <MemberSignature Language="F#" Value="abstract member Rollback : unit -&gt; unit" Usage="iDbTransaction.Rollback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8fb20-127">Откатывает транзакцию из состояния ожидания.</span><span class="sxs-lookup"><span data-stu-id="8fb20-127">Rolls back a transaction from a pending state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fb20-128">Можно только выполнен откат транзакции из состояния ожидания (после <xref:System.Data.IDbConnection.BeginTransaction%2A> был вызван, но перед <xref:System.Data.IDbTransaction.Commit%2A> вызывается).</span><span class="sxs-lookup"><span data-stu-id="8fb20-128">The transaction can only be rolled back from a pending state (after <xref:System.Data.IDbConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.IDbTransaction.Commit%2A> is called).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8fb20-129">В следующем примере создается экземпляров из производных классов, <xref:System.Data.SqlClient.SqlConnection> и <xref:System.Data.SqlClient.SqlTransaction>.</span><span class="sxs-lookup"><span data-stu-id="8fb20-129">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>.</span></span> <span data-ttu-id="8fb20-130">Также демонстрируется использование <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, и <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="8fb20-130">It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.</span></span>  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="8fb20-131">Ошибка при попытке фиксации транзакции.</span><span class="sxs-lookup"><span data-stu-id="8fb20-131">An error occurred while trying to commit the transaction.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8fb20-132">Транзакция уже зафиксирована, или выполнен откат.</span><span class="sxs-lookup"><span data-stu-id="8fb20-132">The transaction has already been committed or rolled back.</span></span>  
  
<span data-ttu-id="8fb20-133">- или -</span><span class="sxs-lookup"><span data-stu-id="8fb20-133">-or-</span></span> 
<span data-ttu-id="8fb20-134">Соединение закрыто.</span><span class="sxs-lookup"><span data-stu-id="8fb20-134">The connection is broken.</span></span></exception>
        <block subset="none" type="overrides"><span data-ttu-id="8fb20-135"><para>При переопределении метода <see cref="M:System.Data.IDbTransaction.Rollback" /> в производном классе, не забудьте вызвать базовый класс <see langword="Rollback" /> метод.</para></span><span class="sxs-lookup"><span data-stu-id="8fb20-135"><para>When overriding <see cref="M:System.Data.IDbTransaction.Rollback" /> in a derived class, be sure to call the base class's <see langword="Rollback" /> method.</para></span></span></block>
        <altmember cref="M:System.Data.IDbTransaction.Commit" />
        <altmember cref="M:System.Data.IDbConnection.BeginTransaction" />
      </Docs>
    </Member>
  </Members>
</Type>