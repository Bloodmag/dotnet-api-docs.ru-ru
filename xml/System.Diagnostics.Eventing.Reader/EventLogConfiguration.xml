<Type Name="EventLogConfiguration" FullName="System.Diagnostics.Eventing.Reader.EventLogConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc8e53c792d41383e1bf1f6aa8eb88ac27575df2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventLogConfiguration : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogConfiguration extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogConfiguration&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogConfiguration : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="fc791-101">Содержит статическую информацию и параметры конфигурации для журнала событий.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc791-101">Contains static information and configuration settings for an event log.</span>
      </span>
      <span data-ttu-id="fc791-102">Многие параметры конфигураций были определены поставщиком событий, создавшим журнал.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc791-102">Many of the configurations settings were defined by the event provider that created the log.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc791-103">Если свойство изменяется для этого объекта, вызовите <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> метод, чтобы сохранить изменения.</span><span class="sxs-lookup"><span data-stu-id="fc791-103">If a property is changed for this object, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc791-104">Пример кода, с помощью этого класса см [как: Настройка и чтение журнала событий свойств](http://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).</span><span class="sxs-lookup"><span data-stu-id="fc791-104">For example code using this class, see [How to: Configure and Read Event Log Properties](http://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-105">Инициализирует новый объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-105">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogConfiguration (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogConfiguration(System::String ^ logName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="fc791-106">Имя локального журнала событий, для которого следует получить информацию и параметры конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-106">The name of the local event log for which to get information and configuration settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc791-107">Инициализирует новый объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />, указывая локальный журнал событий, для которого следует получить информацию и параметры конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-107">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object by specifying the local event log for which to get information and configuration settings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogConfiguration (string logName, System.Diagnostics.Eventing.Reader.EventLogSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, class System.Diagnostics.Eventing.Reader.EventLogSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, session As EventLogSession)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogConfiguration(System::String ^ logName, System::Diagnostics::Eventing::Reader::EventLogSession ^ session);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="session" Type="System.Diagnostics.Eventing.Reader.EventLogSession" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="fc791-108">Имя журнала событий, для которого следует получить информацию и параметры конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-108">The name of the event log for which to get information and configuration settings.</span>
          </span>
        </param>
        <param name="session">
          <span data-ttu-id="fc791-109">Сеанс журнала событий, используемый для определения службы журнала событий, к которой принадлежит указанный журнал.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-109">The event log session used to determine the event log service that the specified log belongs to.</span>
          </span>
          <span data-ttu-id="fc791-110">Сеанс подключается к службе журнала событий на локальном или удаленном компьютере.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-110">The session is either connected to the event log service on the local computer or a remote computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc791-111">Инициализирует новый объект <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />, указывая имя журнала, для которого следует получить информацию и параметры конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-111">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object by specifying the name of the log for which to get information and configuration settings.</span>
          </span>
          <span data-ttu-id="fc791-112">Журнал может располагаться на локальном или удаленном компьютере (в зависимости от указанного сеанса журнала событий).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-112">The log can be on the local computer or a remote computer, based on the event log session specified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-113">Освобождает ресурсы, используемые этим объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-113">Releases the resources used by this object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc791-114">Освобождает все ресурсы, используемые этим объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-114">Releases all the resources used by this object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="fc791-115">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-115">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc791-116">Освобождает неуправляемые ресурсы, используемые этим объектом. Кроме того, возможно освобождение управляемых ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-116">Releases the unmanaged resources used by this object, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClassicLog">
      <MemberSignature Language="C#" Value="public bool IsClassicLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClassicLog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClassicLog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClassicLog { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-117">Получает флаг, указывающий, является ли журнал событий классическим журналом событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-117">Gets the flag that indicates if the event log is a classic event log.</span>
          </span>
          <span data-ttu-id="fc791-118">Классический журнал событий является журналом, события которого определены в файле .mc, а не в файле манифеста (XML-файле), используемом поставщиком событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-118">A classic event log is one that has its events defined in a .mc file instead of a manifest (.xml file) used by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-119">Возвращает значение <see langword="true" />, если журнал событий является классическим журналом; возвращает значение <see langword="false" />, если журнал событий не является классическим журналом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-119">Returns <see langword="true" /> if the event log is a classic log, and returns <see langword="false" /> if the event log is not a classic log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-120">Получает или задает логическое значение, определяющее состояние журнала события (включен или отключен).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-120">Gets or sets a Boolean value that determines whether the event log is enabled or disabled.</span>
          </span>
          <span data-ttu-id="fc791-121">Включенный журнал событий является журналом, в котором могут регистрироваться события; отключенный журнал событий является журналом, в котором события регистрироваться не могут.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-121">An enabled log is one in which events can be logged, and a disabled log is one in which events cannot be logged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-122">Возвращает значение <see langword="true" />, если журнал включен; возвращает значение<see langword="false" />, если журнал отключен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-122">Returns <see langword="true" /> if the log is enabled, and returns <see langword="false" /> if the log is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc791-123">При изменении значения этого свойства, вызовите <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> метод, чтобы сохранить изменения.</span><span class="sxs-lookup"><span data-stu-id="fc791-123">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFilePath">
      <MemberSignature Language="C#" Value="public string LogFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-124">Получает или задает путь к каталогу файла, в котором сохраняются события для журнала.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-124">Gets or sets the file directory path to the location of the file where the events are stored for the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-125">Возвращает строку, содержащую путь к файлу журнала событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-125">Returns a string that contains the path to the event log file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc791-126">При изменении значения этого свойства, вызовите <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> метод, чтобы сохранить изменения.</span><span class="sxs-lookup"><span data-stu-id="fc791-126">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIsolation">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogIsolation As EventLogIsolation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogIsolation LogIsolation { System::Diagnostics::Eventing::Reader::EventLogIsolation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogIsolation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-127">Получает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" />, указывающее тип журнала событий (журнал событий приложений, журнал событий системы или пользовательский журнал событий).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-127">Gets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> value that specifies whether the event log is an application, system, or custom event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-128">Возвращает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-128">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMode">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogMode LogMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogMode LogMode" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMode As EventLogMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogMode LogMode { System::Diagnostics::Eventing::Reader::EventLogMode get(); void set(System::Diagnostics::Eventing::Reader::EventLogMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-129">Получает или задает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" />, определяющее способ обработки событий при заполнении журнала событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-129">Gets or sets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> value that determines how events are handled when the event log becomes full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-130">Возвращает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-130">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc791-131">При изменении значения этого свойства, вызовите <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> метод, чтобы сохранить изменения.</span><span class="sxs-lookup"><span data-stu-id="fc791-131">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogName">
      <MemberSignature Language="C#" Value="public string LogName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-132">Получает имя журнала событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-132">Gets the name of the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-133">Возвращает строку, содержащую имя журнала событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-133">Returns a string that contains the name of the event log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogType LogType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogType LogType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogType As EventLogType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogType LogType { System::Diagnostics::Eventing::Reader::EventLogType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-134">Получает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" />, определяющее тип журнала событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-134">Gets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> value that determines the type of the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-135">Возвращает значение <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-135">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeInBytes">
      <MemberSignature Language="C#" Value="public long MaximumSizeInBytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumSizeInBytes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumSizeInBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumSizeInBytes { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-136">Получает или задает максимальный размер файла журнала событий (в байтах).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-136">Gets or sets the maximum size, in bytes, that the event log file is allowed to be.</span>
          </span>
          <span data-ttu-id="fc791-137">При достижении максимального размера файл считается заполненным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-137">When the file reaches this maximum size, it is considered full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-138">Возвращает длинное значение, представляющее максимальный размер файла журнала событий (в байтах).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-138">Returns a long value that represents the maximum size, in bytes, that the event log file is allowed to be.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc791-139">При изменении значения этого свойства, вызовите <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> метод, чтобы сохранить изменения.</span><span class="sxs-lookup"><span data-stu-id="fc791-139">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwningProviderName">
      <MemberSignature Language="C#" Value="public string OwningProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OwningProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OwningProviderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-140">Получает имя поставщика событий, создавшего данный журнал событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-140">Gets the name of the event provider that created this event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-141">Возвращает строку, содержащую имя поставщика событий, создавшего данный журнал событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-141">Returns a string that contains the name of the event provider that created this event log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderBufferSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderBufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderBufferSize As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderBufferSize { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-142">Получает размер буфера, используемого поставщиком событий для публикации событий в журнале.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-142">Gets the size of the buffer that the event provider uses for publishing events to the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-143">Возвращает целое значение (может иметь значение null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-143">Returns an integer value that can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderControlGuid">
      <MemberSignature Language="C#" Value="public Nullable&lt;Guid&gt; ProviderControlGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Guid&gt; ProviderControlGuid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderControlGuid As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Guid&gt; ProviderControlGuid { Nullable&lt;Guid&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-144">Получает глобальный уникальный ИД (GUID) для журнала событий, если журнал является журналом отладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-144">Gets the control globally unique identifier (GUID) for the event log if the log is a debug log.</span>
          </span>
          <span data-ttu-id="fc791-145">Если данный журнал не является журналом отладки, данное значение будет равно null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-145">If this log is not a debug log, this value will be null.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-146">Возвращает значение GUID или значение null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-146">Returns a GUID value or null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderKeywords">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; ProviderKeywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; ProviderKeywords" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderKeywords As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; ProviderKeywords { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-147">Получает или задает маску ключевого слова, используемого поставщиком событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-147">Gets or sets keyword mask used by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-148">Возвращает длинное значение, которое может быть равно null, если поставщик событий не определил ключевые слова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-148">Returns a long value that can be null if the event provider did not define any keywords.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc791-149">При изменении значения этого свойства, вызовите <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> метод, чтобы сохранить изменения.</span><span class="sxs-lookup"><span data-stu-id="fc791-149">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderLatency">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderLatency { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderLatency" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderLatency As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderLatency { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-150">Получает максимальное время задержки, используемое поставщиком событий при публикации событий в журнале.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-150">Gets the maximum latency time used by the event provider when publishing events to the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-151">Возвращает целое значение, которое может иметь значение null, если время задержки не было определено поставщиком событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-151">Returns an integer value that can be null if no latency time was specified by the event provider.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderLevel">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderLevel As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderLevel { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-152">Получает или задает максимальный уровень события (определяющий важность события) для регистрации в журнале событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-152">Gets or sets the maximum event level (which defines the severity of the event) that is allowed to be logged in the event log.</span>
          </span>
          <span data-ttu-id="fc791-153">Данное значение определяется поставщиком событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-153">This value is defined by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-154">Возвращает целое значение, которое может иметь значение null, если максимальный уровень события не был определен поставщиком событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-154">Returns an integer value that can be null if the maximum event level was not defined in the event provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc791-155">При изменении значения этого свойства, вызовите <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> метод, чтобы сохранить изменения.</span><span class="sxs-lookup"><span data-stu-id="fc791-155">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderMaximumNumberOfBuffers">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderMaximumNumberOfBuffers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderMaximumNumberOfBuffers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderMaximumNumberOfBuffers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderMaximumNumberOfBuffers { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-156">Получает максимальное количество буферов, используемых поставщиком событий при публикации событий в журнале событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-156">Gets the maximum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-157">Возвращает целое значение, представляющее максимальное количество буферов, используемых поставщиком событий при публикации событий в журнале событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-157">Returns an integer value that is the maximum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
          <span data-ttu-id="fc791-158">Это значение может быть равно null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-158">This value can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderMinimumNumberOfBuffers">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderMinimumNumberOfBuffers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderMinimumNumberOfBuffers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderMinimumNumberOfBuffers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderMinimumNumberOfBuffers { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-159">Получает минимальное количество буферов, используемых поставщиком событий при публикации событий в журнале событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-159">Gets the minimum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-160">Возвращает целое значение, представляющее минимальное количество буферов, используемых поставщиком событий при публикации событий в журнале событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-160">Returns an integer value that is the minimum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
          <span data-ttu-id="fc791-161">Это значение может быть равно null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-161">This value can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; ProviderNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; ProviderNames" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderNames As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ ProviderNames { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-162">Получает перечисляемую коллекцию имен всех поставщиков событий, которые могут публиковать события в данном журнале событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-162">Gets an enumerable collection of the names of all the event providers that can publish events to this event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-163">Возвращает перечисляемую коллекцию строк, содержащих имена поставщиков событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-163">Returns an enumerable collection of strings that contain the event provider names.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public void SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc791-164">Сохраняет параметры конфигурации</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-164">Saves the configuration settings that</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityDescriptor">
      <MemberSignature Language="C#" Value="public string SecurityDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityDescriptor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityDescriptor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc791-165">Получает или задает дескриптор безопасности журнала событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-165">Gets or sets the security descriptor of the event log.</span>
          </span>
          <span data-ttu-id="fc791-166">Дескриптор безопасности определяет пользователей и группы, которые могут считывать и производить запись в журнал событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-166">The security descriptor defines the users and groups of users that can read and write to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc791-167">Возвращает строку, содержащую дескриптор безопасности журнала событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc791-167">Returns a string that contains the security descriptor for the event log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc791-168">При изменении значения этого свойства, вызовите <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> метод, чтобы сохранить изменения.</span><span class="sxs-lookup"><span data-stu-id="fc791-168">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>