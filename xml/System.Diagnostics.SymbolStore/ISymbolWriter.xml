<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ISymbolWriter.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56e350929abc36f84a74566e71622bef50159cab1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e350929abc36f84a74566e71622bef50159cab1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.SymbolStore.ISymbolWriter">
          <source>Represents a symbol writer for managed code.</source>
          <target state="translated">Представляет модуль записи символов для управляемого кода.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.SymbolStore.ISymbolWriter">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> interface provides methods that define documents, sequence points, lexical scopes, and variables.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> Интерфейс предоставляет методы, определяющие документы, точки оценки, лексические области и переменные.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.SymbolStore.ISymbolWriter">
          <source>This interface is the managed counterpart of the <ph id="ph1">`ISymUnmanagedWriter`</ph> interface, which is one of the unmanaged symbol store interfaces that provides an alternative way to read and write debug symbol information.</source>
          <target state="translated">Этот интерфейс является управляемым аналогом <ph id="ph1">`ISymUnmanagedWriter`</ph> интерфейс, который является одним из неуправляемых интерфейсов хранилища символов, предоставляет альтернативный способ чтения и записи информации о символах отладки.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
          <source>Closes <ph id="ph1">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> and commits the symbols to the symbol store.</source>
          <target state="translated">Закрывает интерфейс <ph id="ph1">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> и сохраняет символы в хранилище символов.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Close">
          <source>After this call, <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> becomes invalid for further updates.</source>
          <target state="translated">После этого вызова <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> становится недействительным для дальнейших обновлений.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
          <source>Closes the current method.</source>
          <target state="translated">Закрывает текущий метод.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod">
          <source>After a method is closed, you cannot define a symbol from within it.</source>
          <target state="translated">После закрытия метода определить символ в нем нельзя.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace">
          <source>Closes the most recent namespace.</source>
          <target state="translated">Закрывает последнее пространство имен.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
          <source>The points past the last instruction in the scope.</source>
          <target state="translated">точки после последней инструкции в области.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
          <source>Closes the current lexical scope.</source>
          <target state="translated">Закрывает текущую лексическую область видимости.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)">
          <source>After a scope is closed, you cannot define a variable from within it.</source>
          <target state="translated">После закрытия области определить переменную в ней нельзя.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The URL that identifies the document.</source>
          <target state="translated">URL-адрес, предназначенный для идентификации документа.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The document language.</source>
          <target state="translated">Язык документа.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>This parameter can be <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">Этот параметр может иметь значение <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The identity of the vendor for the document language.</source>
          <target state="translated">Удостоверение поставщика языка документа.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>This parameter can be <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">Этот параметр может иметь значение <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The type of the document.</source>
          <target state="translated">Тип документа.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>This parameter can be <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</source>
          <target state="translated">Этот параметр может иметь значение <ph id="ph1">&lt;see cref="F:System.Guid.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>Defines a source document.</source>
          <target state="translated">Определяет исходный документ.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
          <source>The object that represents the document.</source>
          <target state="translated">Объект, представляющий документ.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The metadata type or method token.</source>
          <target state="translated">Тип метаданных или маркер метода.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The field name.</source>
          <target state="translated">Имя поля.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the field attributes.</source>
          <target state="translated">Побитовое сочетание атрибутов полей.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The field signature.</source>
          <target state="translated">Подпись поля.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Типы адресов для <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept> и <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the field specification.</source>
          <target state="translated">Первый адрес для спецификации поля.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the field specification.</source>
          <target state="translated">Второй адрес для спецификации поля.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the field specification.</source>
          <target state="translated">Третий адрес для спецификации поля.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Defines a field in a type or a global field.</source>
          <target state="translated">Определяет поле в типе или глобальное поле.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField%2A&gt;</ph> method defines a single variable that is not within a method by using specified fields in classes, bit fields, and so on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField%2A&gt;</ph> Метод определяет одну переменную, не внутри метода, используя заданные поля в классах, битовые поля и т. д.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The global variable name.</source>
          <target state="translated">Имя глобальной переменной.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the global variable attributes.</source>
          <target state="translated">Побитовое сочетание атрибутов глобальной переменной.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The global variable signature.</source>
          <target state="translated">Подпись глобальной переменной.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>, and <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">Типы адресов для <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept> и <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the global variable specification.</source>
          <target state="translated">Первый адрес для спецификации глобальной переменной.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the global variable specification.</source>
          <target state="translated">Второй адрес для спецификации глобальной переменной.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the global variable specification.</source>
          <target state="translated">Третий адрес для спецификации глобальной переменной.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Defines a single global variable.</source>
          <target state="translated">Определяет одну глобальную переменную.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The local variable name.</source>
          <target state="translated">Имя локальной переменной.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the local variable attributes.</source>
          <target state="translated">Побитовое сочетание атрибутов локальной переменной.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The local variable signature.</source>
          <target state="translated">Подпись локальной переменной.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>, and <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">Типы адресов для <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept> и <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the local variable specification.</source>
          <target state="translated">Первый адрес для спецификации локальной переменной.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the local variable specification.</source>
          <target state="translated">Второй адрес для спецификации локальной переменной.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the local variable specification.</source>
          <target state="translated">Третий адрес для спецификации локальной переменной.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The start offset for the variable.</source>
          <target state="translated">Начальное смещение для переменной.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If this parameter is zero, it is ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">Если этот параметр равен нулю, он не обрабатывается и переменная определяется для всей области.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the parameter is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">Если параметр имеет ненулевое значение, переменная находится в границах смещений текущей области.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The end offset for the variable.</source>
          <target state="translated">Конечное смещение для переменной.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If this parameter is zero, it is ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">Если этот параметр равен нулю, он не обрабатывается и переменная определяется для всей области.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If the parameter is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">Если параметр имеет ненулевое значение, переменная находится в границах смещений текущей области.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Defines a single variable in the current lexical scope.</source>
          <target state="translated">Определяет одну переменную в текущей лексической области видимости.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`startOffset`</ph> and <ph id="ph2">`endOffset`</ph> parameters are optional.</source>
          <target state="translated"><ph id="ph1">`startOffset`</ph> И <ph id="ph2">`endOffset`</ph> являются необязательными.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If their value is zero, they are ignored and the variable is defined throughout the entire scope.</source>
          <target state="translated">Если их значение равно нулю, они пропускаются, и переменная определяется для всей области.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If their value is nonzero, the variable falls within the offsets of the current scope.</source>
          <target state="translated">Если они имеют ненулевое значение, переменная находится в границах смещений текущей области.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You can call <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable%2A&gt;</ph> multiple times for a variable of the same name that occurs multiple times in different offset ranges throughout a scope.</source>
          <target state="translated">Можно вызвать <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable%2A&gt;</ph> несколько раз для переменной с тем же именем, которая встречается несколько раз в различных диапазонах смещений в пределах области.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>(In this case, start and end offsets must not overlap.)</source>
          <target state="translated">(В этом случае начального и конечного смещения не должны перекрываться.)</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The parameter name.</source>
          <target state="translated">Имя параметра.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>A bitwise combination of the parameter attributes.</source>
          <target state="translated">Побитовое сочетание атрибутов параметра.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The parameter signature.</source>
          <target state="translated">Подпись параметра.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The address types for <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept>, and <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated">Типы адресов для <bpt id="p1">&lt;c&gt;</bpt>addr1<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>addr2<ept id="p2">&lt;/c&gt;</ept> и <bpt id="p3">&lt;c&gt;</bpt>addr3<ept id="p3">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The first address for the parameter specification.</source>
          <target state="translated">Первый адрес для спецификации параметра.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The second address for the parameter specification.</source>
          <target state="translated">Второй адрес для спецификации параметра.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The third address for the parameter specification.</source>
          <target state="translated">Третий адрес для спецификации параметра.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Defines a single parameter in the current method.</source>
          <target state="translated">Определяет один параметр в текущем методе.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>The type of each parameter is taken from its position within the signature of the method.</source>
          <target state="translated">Тип каждого параметра извлекается из подписи метода в соответствии с его положением.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>If parameters are defined in the metadata for a given method, you do not have to define them again with calls to this method.</source>
          <target state="translated">Если параметры определены в метаданных для данного метода, у вас определять их с вызовом этого метода.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
          <source>Symbol readers need to check for these in the normal metadata first, and then use the symbol store.</source>
          <target state="translated">Средства чтения символов должны сначала проверьте эти в обычных метаданных, а затем использовать хранилище символов.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document object for which the sequence points are being defined.</source>
          <target state="translated">Объект документа, для которого определяются точки следования.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The sequence point offsets measured from the beginning of methods.</source>
          <target state="translated">Смещения точек следования определяются от начала методов.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document lines for the sequence points.</source>
          <target state="translated">Строки документа для точек следования.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document positions for the sequence points.</source>
          <target state="translated">Позиции в документе для точек следования.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document end lines for the sequence points.</source>
          <target state="translated">Конечные строки документа для точек следования.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The document end positions for the sequence points.</source>
          <target state="translated">Конечные позиции документа для точек следования.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>Defines a group of sequence points within the current method.</source>
          <target state="translated">Определяет группу точек следования в текущем методе.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>Each line and each column defines the start of a statement within a method.</source>
          <target state="translated">Каждая строка и каждый столбец определяют начало оператора в методе.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The arrays should be sorted in increasing order of offsets.</source>
          <target state="translated">Массивы должны быть упорядочены по возрастанию смещений.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
          <source>The offset is always the offset from the start of the method, in bytes.</source>
          <target state="translated">Смещение всегда является смещением от начала метода, в байтах.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>The metadata emitter interface.</source>
          <target state="translated">Интерфейс порождения метаданных.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>The file name for which the debugging symbols are written.</source>
          <target state="translated">Имя файла, для которого записываются символы отладки.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>Some writers require a file name, and others do not.</source>
          <target state="translated">Имя файла требуется не для всех средств записи.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>If a file name is specified for a writer that does not use file names, this parameter is ignored.</source>
          <target state="translated">Если имя файла задано для модуля записи, который не использует имена файлов, этот параметр пропускается.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> indicates that this is a full rebuild; <ph id="ph2">&lt;see langword="false" /&gt;</ph> indicates that this is an incremental compilation.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> указывает, что это полное перестроение; <ph id="ph2">&lt;see langword="false" /&gt;</ph> — что это добавочная компиляция.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>Sets the metadata emitter interface to associate with a writer.</source>
          <target state="translated">Задает интерфейс включения метаданных, который требуется связать со средством записи.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A&gt;</ph> also sets the output file name where the debugging symbols are written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A&gt;</ph> также задает имя выходного файла, который записываются символы отладки.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)">
          <source>This method can be called only once and must be called before any other writer methods.</source>
          <target state="translated">Этот метод может вызываться только один раз и должен вызываться до всех остальных методов средства записи.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>The metadata token for the method to be opened.</source>
          <target state="translated">Токен метаданных для открываемого метода.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>Opens a method to place symbol information into.</source>
          <target state="translated">Открывает метод для размещения символьной информации.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>The specified method becomes the current method for calls to define sequence points, parameters, and lexical scopes.</source>
          <target state="translated">Указанный метод становится текущим методом для вызовов с целью определения точек следования, параметров и лексические области.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>There is an implicit lexical scope around the entire method.</source>
          <target state="translated">Нет неявную лексическую область вокруг весь метод.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>Reopening a method that has been previously closed erases any previously defined symbols for the method.</source>
          <target state="translated">Повторное открытие метода, который был ранее закрыт стирает всех ранее определенных символов для метода.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>The name of the new namespace.</source>
          <target state="translated">Имя нового пространства имен.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>Opens a new namespace.</source>
          <target state="translated">Открывает новое пространство имен.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>Call this method before defining methods or variables that exist within a namespace.</source>
          <target state="translated">Этот метод следует вызывайте перед определением методов или переменных, которые существуют в пространстве имен.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
          <source>Namespaces can be nested.</source>
          <target state="translated">Пространства имен могут быть вложенными.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>The offset, in bytes, from the beginning of the method to the first instruction in the lexical scope.</source>
          <target state="translated">Смещение в байтах от начала метода до первой инструкции в лексической области.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Opens a new lexical scope in the current method.</source>
          <target state="translated">Открывает новую лексическую область видимости в текущем методе.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>An opaque scope identifier that can be used with <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /&gt;</ph> to define the start and end offsets of a scope at a later time.</source>
          <target state="translated">Непрозрачный идентификатор области видимости, который можно использовать с методом <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /&gt;</ph> для определения начального и конечного смещений области видимости в дальнейшем.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>In this case, the offsets passed to <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /&gt;</ph> are ignored.</source>
          <target state="translated">В этом случае смещения, переданные методам <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)" /&gt;</ph> и <ph id="ph2">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)" /&gt;</ph>, пропускаются.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>A scope identifier is valid only in the current method.</source>
          <target state="translated">Идентификатор области видимости действителен только в текущем методе.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>This scope becomes the new current scope and is pushed onto a stack of scopes.</source>
          <target state="translated">Эта область становится новой текущей областью и помещается в стек областей.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Scopes must form a hierarchy.</source>
          <target state="translated">Области должны образовывать иерархию.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Siblings are not allowed to overlap.</source>
          <target state="translated">Перекрытие элементов с общим родителем запрещено.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)">
          <source>Scope identifiers are valid only in the current method.</source>
          <target state="translated">Идентификаторы областей действительны только в текущем методе.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The document that contains the starting position.</source>
          <target state="translated">Документ, в котором находится начальная позиция.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The starting line number.</source>
          <target state="translated">Номер начальной строки.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The starting column.</source>
          <target state="translated">Начальный столбец.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The document that contains the ending position.</source>
          <target state="translated">Документ, в котором находится конечная позиция.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The ending line number.</source>
          <target state="translated">Номер конечной строки.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>The ending column number.</source>
          <target state="translated">Номер конечного столбца.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>Specifies the true start and end of a method within a source file.</source>
          <target state="translated">Указывает истинные начало и конец метода в исходном файле.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
          <source>Use <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /&gt;</ph> to specify the extent of a method, independent of the sequence points that exist within the method.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" /&gt;</ph> следует использовать для задания длины метода независимо от точек следования, имеющихся в методе.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>The identifier of the lexical scope.</source>
          <target state="translated">Идентификатор лексической области.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>The byte offset of the beginning of the lexical scope.</source>
          <target state="translated">Смещение начала лексической области в байтах.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>The byte offset of the end of the lexical scope.</source>
          <target state="translated">Смещение конца лексической области в байтах.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)">
          <source>Defines the offset range for the specified lexical scope.</source>
          <target state="translated">Определяет диапазон смещений для заданной лексической области видимости.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The metadata token for which the attribute is being defined.</source>
          <target state="translated">Токен метаданных, для которого определяется атрибут.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The attribute name.</source>
          <target state="translated">Имя атрибута.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The attribute value.</source>
          <target state="translated">Значение атрибута.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>Defines an attribute when given the attribute name and the attribute value.</source>
          <target state="translated">Определяет атрибут для заданного имени и значения атрибута.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute%2A&gt;</ph> method is only associated with symbolic information and is not a metadata custom attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute%2A&gt;</ph> Метод только в том случае, связанная с символьными данными и не является пользовательским атрибутом метаданных.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>A pointer to code that represents the underlying writer.</source>
          <target state="translated">Указатель на код, представляющий основное средство записи.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>Sets the underlying <ph id="ph1">&lt;see langword="ISymUnmanagedWriter" /&gt;</ph> (the corresponding unmanaged interface) that a managed <ph id="ph2">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> uses to emit symbols.</source>
          <target state="translated">Задает основной интерфейс <ph id="ph1">&lt;see langword="ISymUnmanagedWriter" /&gt;</ph> (соответствующий неуправляемый интерфейс), который используется управляемым интерфейсом <ph id="ph2">&lt;see cref="T:System.Diagnostics.SymbolStore.ISymbolWriter" /&gt;</ph> для генерации символов.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>The underlying <ph id="ph1">`ISymUnmanagedWriter`</ph> (the corresponding unmanaged interface) represents a symbol writer for managed code.</source>
          <target state="translated">Базовый <ph id="ph1">`ISymUnmanagedWriter`</ph> (соответствующий неуправляемый интерфейс) представляет средство записи символов для управляемого кода.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)">
          <source>The interface provides methods for defining documents, sequence points, lexical scopes, and variables.</source>
          <target state="translated">Этот интерфейс предоставляет методы для определения документов, точек следования, лексические области и переменные.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>The metadata token for the method that is the user entry point.</source>
          <target state="translated">Токен метаданных для метода, который является пользовательской точкой входа.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>Identifies the user-defined method as the entry point for the current module.</source>
          <target state="translated">Идентифицирует пользовательский метод в качестве точки входа для текущего модуля.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
          <source>This is normally your main method, rather than compiler-generated stubs before the main method.</source>
          <target state="translated">Обычно это основной метод, а не созданные компилятором заглушки перед основным методом.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>The fully qualified name of the namespace.</source>
          <target state="translated">Полное имя пространства имен.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>Specifies that the given, fully qualified namespace name is used within the open lexical scope.</source>
          <target state="translated">Указывает, что в открытой лексической области видимости используется заданное полное имя пространства имен.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>Closing the current scope prevents this scope from using the namespace.</source>
          <target state="translated">Закрытие текущей области запрещает этой области с использованием пространства имен.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
          <source>The namespace remains in use in all scopes that inherit from the current open scope.</source>
          <target state="translated">Пространство имен продолжает использоваться во всех областях, наследуемых из текущей открытой области.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>