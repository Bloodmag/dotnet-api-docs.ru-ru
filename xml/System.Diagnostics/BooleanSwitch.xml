<Type Name="BooleanSwitch" FullName="System.Diagnostics.BooleanSwitch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f2c5b9a734e8b3da61aeea288aca7d7bf1de24e" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34060771" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BooleanSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.BooleanSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanSwitch : System::Diagnostics::Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Boolean))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет простой выключатель, управляющий результатами отладки и трассировки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для включения или отключения сообщений в зависимости от их важности можно использовать логический переключатель трассировки. Используйте <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> свойство, чтобы получить текущее значение параметра.  
  
 Можно включить или отключить <xref:System.Diagnostics.BooleanSwitch> через файл конфигурации приложения и затем с помощью настроенного <xref:System.Diagnostics.BooleanSwitch> значение в приложении. Кроме того, можно создать <xref:System.Diagnostics.BooleanSwitch> в коде и набор <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> свойство непосредственно для инструментирования определенного раздела кода.  
  
 Чтобы настроить <xref:System.Diagnostics.BooleanSwitch>, измените файл конфигурации, соответствующий имени приложения. В этом файле можно добавить или удалить переключатель, задать его значение или удалить все переключатели, заданные приложением ранее. Файл конфигурации необходимо отформатировать как в следующем примере.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1"/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 В этом разделе примере конфигурации определены <xref:System.Diagnostics.BooleanSwitch> с <xref:System.Diagnostics.Switch.DisplayName%2A> свойство `mySwitch` и <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> значение `true`. В приложении, можно использовать настроенным значением переключателя, создав <xref:System.Diagnostics.BooleanSwitch> с тем же именем, как показано в следующем примере кода.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/remarks.cs#2)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/remarks.vb#2)]  
  
 По умолчанию <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> свойство задается с помощью значения, указанного в файле конфигурации. Настроить параметр со значением 0, чтобы задать <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> свойства `false`; настройки коммутатора с ненулевое значение, чтобы задать <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> свойства `true`. Если <xref:System.Diagnostics.BooleanSwitch> конструктор не может найти исходные настройки в файле конфигурации <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> нового переключателя задано значение `false` по умолчанию.  
  
 Трассировки или отладки перед использованием переключателя необходимо включить. Следующий синтаксис зависит от компилятора. При использовании компиляторов, отличных от C# или Visual Basic, см. в документации по вашим компилятором.  
  
-   Чтобы включить отладку в C#, добавьте `/d:DEBUG` флаг командную строку компилятора при компиляции кода, или можно добавить `#define DEBUG` в начало файла. В Visual Basic добавьте `/d:DEBUG=True` флаг компилятора командной строки.  
  
-   Чтобы включить трассировку в C#, добавьте `/d:TRACE` флаг командную строку компилятора при компиляции кода или добавьте `#define TRACE` в начало файла. В Visual Basic добавьте `/d:TRACE=True` флаг компилятора командной строки.  
  
> [!NOTE]
>  Эти отладки и трассировки компилятор не обязательно при использовании <xref:System.Diagnostics.BooleanSwitch> класса в изоляции. Они необходимы только в сочетании с <xref:System.Diagnostics.Trace> или <xref:System.Diagnostics.Debug> методы, которые являются условно скомпилированными.  
  
 Дополнительные сведения о настройке приложения см. в разделе <xref:System.Diagnostics.Debug> и <xref:System.Diagnostics.Trace>. Дополнительные сведения о настройке и использовании переключателей трассировки см. в разделе [переключатели трассировки](~/docs/framework/debug-trace-profile/trace-switches.md).  
  
> [!NOTE]
>  Чтобы повысить производительность, можно сделать <xref:System.Diagnostics.BooleanSwitch> члены `static` в классе.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Diagnostics.BooleanSwitch> и позволяет определить, следует ли сообщение об ошибке. Создайте коммутатор на уровне класса. `Main` Метод передает свое местоположение на `MyMethod`, которая выводит сообщение об ошибке и место возникновения ошибки.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.BooleanSwitch" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Имя, отображаемое в интерфейсе пользователя.</param>
        <param name="description">Описание переключателя.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.BooleanSwitch" /> заданным отображаемым именем и описанием.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании <xref:System.Diagnostics.BooleanSwitch>, `displayName` параметр используется для поиска исходных параметров переключателя. Если конструктор не может найти исходные параметры <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> свойству `false` (отключено).  
  
 Чтобы задать уровень вашей <xref:System.Diagnostics.BooleanSwitch>, измените файл конфигурации, соответствующий имени приложения. В этом файле можно добавить переключатель и задать его значение, удалить переключатель или удалить все переключатели, ранее установленный приложением. Файл конфигурации форматируются как в следующем примере:  
  
```xml  
<configuration>  
    <system.diagnostics>  
       <switches>  
          <add name="mySwitch" value="10" />  
          <add name="myNewSwitch" value="20" />  
          <remove name="mySwitch" />  
          <clear/>  
       </switches>  
    </system.diagnostics>  
 </configuration>  
```  
  
> [!NOTE]
>  Создаваемые переключатели должны быть `static`.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Diagnostics.BooleanSwitch> и позволяет определить, следует ли сообщение об ошибке. Переключатель создается на уровне класса. `Main` Метод передает свое местоположение на `MyMethod`, которая выводит сообщение об ошибке и место возникновения ошибки.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Имя, отображаемое в интерфейсе пользователя.</param>
        <param name="description">Описание переключателя.</param>
        <param name="defaultSwitchValue">Значение по умолчанию переключателя.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.BooleanSwitch" /> указанным отображаемым именем, описанием и операцией и значением переключателя по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `displayName` Параметр используется для задания значения <xref:System.Diagnostics.Switch.DisplayName%2A> свойство и `description` параметр позволяет задать значение <xref:System.Diagnostics.Switch.Description%2A> свойства. `defaultSwitchValue` Сохраняются как поле и используются для инициализации параметра <xref:System.Diagnostics.Switch.Value%2A> свойство первой ссылки. Дополнительные сведения об использовании конструктора см. в разделе <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> конструктор.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, включен или отключен параметр.</summary>
        <value>
          Значение <see langword="true" />, если параметр включен; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию это поле имеет значение `false` (отключено). Чтобы включить переключатель, установите для этого поля значение `true`. Чтобы отключить параметр, присвойте значение `false`.  Значение этого свойства определяется по значению свойства базового класса <xref:System.Diagnostics.Switch.SwitchSetting%2A>.  
  
> [!NOTE]
>  Этот метод использует <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> флаг для предотвращения вызова от ненадежного кода; только непосредственный вызывающий объект должен быть <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> разрешение. Если код можно вызвать из частично доверенного кода, не передавайте входных данных пользователя для <xref:System.Runtime.InteropServices.Marshal> методы без проверки класса.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Diagnostics.BooleanSwitch> и позволяет определить, следует ли сообщение об ошибке. Переключатель создается на уровне класса. `Main` Метод передает свое местоположение на `MyMethod`, которая выводит сообщение об ошибке и расположение, где произошла ошибка.  
  
 [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует правильное разрешение.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для работы с неуправляемым кодом. Требовать значение <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет, можно ли проанализировать новое значение свойства <see cref="P:System.Diagnostics.Switch.Value" /> как логическое значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.BooleanSwitch.OnValueChanged%2A> Метод определяет, является ли новое значение допустимое строковое представление логического значения («false» или «true»). Если Да, задает метод <xref:System.Diagnostics.Switch.SwitchSetting%2A> равным 0 или 1.  В противном случае вызывается базовый метод, который преобразует строковое значение в целочисленное значение, которое затем используется для установки <xref:System.Diagnostics.Switch.SwitchSetting%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>