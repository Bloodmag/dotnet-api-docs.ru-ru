<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="205ebec39040ed058ad9ffbdc4b91602849b5386" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30397218" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для событий <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> и <see cref="E:System.Diagnostics.Process.ErrorDataReceived" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для асинхронного сбора в перенаправленном <xref:System.Diagnostics.Process.StandardOutput%2A> или <xref:System.Diagnostics.Process.StandardError%2A> поток выходных данных процесса, необходимо создать метод, обрабатывающий события выхода перенаправленный поток. Метод обработчика событий вызывается, когда процесс записывает перенаправленный поток. События делегат вызывает обработчик событий с помощью экземпляра <xref:System.Diagnostics.DataReceivedEventArgs>. <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Свойство содержит строку текста, записывающий перенаправленный поток процесса.  
  
   
  
## Examples  
 В следующем примере кода показано, как для выполнения асинхронных операций чтения в перенаправленном <xref:System.Diagnostics.Process.StandardOutput%2A> поток `sort` команды. `sort` Команда является консольным приложением, которое считывает и сортирует ввода текста.  
  
 В примере создается делегат события для `SortOutputHandler` обработчик событий и связывает его с <xref:System.Diagnostics.Process.OutputDataReceived> событий. Обработчик событий получает строки текста из перенаправленной <xref:System.Diagnostics.Process.StandardOutput%2A> поток, форматирования текста и записывает текст на экране.  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает строку символов, записанную в перенаправленный поток вывода <see cref="T:System.Diagnostics.Process" />.</summary>
        <value>Строка, записанная соответствующим процессом <see cref="T:System.Diagnostics.Process" /> в перенаправленный поток <see cref="P:System.Diagnostics.Process.StandardOutput" /> или <see cref="P:System.Diagnostics.Process.StandardError" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При перенаправлении <xref:System.Diagnostics.Process.StandardOutput%2A> или <xref:System.Diagnostics.Process.StandardError%2A> поток <xref:System.Diagnostics.Process> в обработчик событий, событие возникает каждый раз при записи процессом строки перенаправленный поток. <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Свойство — это линия, <xref:System.Diagnostics.Process> написал перенаправленный выходной поток. Обработчик событий можно использовать <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> свойства для фильтрации выходных данных процесса или записывать выходные данные в альтернативное расположение. Например можно создать обработчик событий, который сохраняет все строки выходных данных ошибки в указанный файл журнала ошибок.  
  
 Строка определяется как последовательность знаков, а затем с помощью строки («\n») или символ возврата каретки сразу следует с помощью строки перевода («\r\n»). Символы строки кодируются с помощью кодовой страницы ANSI системы по умолчанию. <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Свойства не включает завершающий символ возврата каретки и перевод строки.  
  
 При закрытии перенаправленного потока обработчику событий отправляется строка null. Убедитесь, обработчик событий проверки <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> свойство соответствующим образом перед доступом к нему. Например, можно использовать статический метод <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> для проверки <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> свойство в обработчике событий.  
  
   
  
## Examples  
 В следующем примере кода показано использование обработчика простых событий, связанных с <xref:System.Diagnostics.Process.OutputDataReceived> событий. Обработчик событий получает строки текста из перенаправленной <xref:System.Diagnostics.Process.StandardOutput%2A> поток, форматирования текста и записывает текст на экране.  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>