<Type Name="Debug" FullName="System.Diagnostics.Debug">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1f2f5cb8de12cc67dfb0178935452c56a2348ef" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Debug" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Debug extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debug" />
  <TypeSignature Language="VB.NET" Value="Public Class Debug" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debug abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6b868-101">Предоставляет набор методов и свойств, помогающих при отладке кода.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b868-101">Provides a set of methods and properties that help debug your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-102">Если вы используете методы в <xref:System.Diagnostics.Debug> класса для распечатки данных отладки и проверки алгоритма с помощью утверждений, можно сделать код более надежным, не влияя на производительность или размер кода поставляемого продукта.</span><span class="sxs-lookup"><span data-stu-id="6b868-102">If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</span></span>  
  
 <span data-ttu-id="6b868-103">Этот класс предоставляет методы для отображения <xref:System.Diagnostics.Debug.Assert%2A> диалоговое окно и для выдачи утверждения, которое всегда будут завершаться ошибкой.</span><span class="sxs-lookup"><span data-stu-id="6b868-103">This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail.</span></span> <span data-ttu-id="6b868-104">Этот класс предоставляет методы для записи в следующие варианты: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> и <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-104">This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="6b868-105"><xref:System.Diagnostics.BooleanSwitch> И <xref:System.Diagnostics.TraceSwitch> классы предоставляют средства для динамического управления выходные данные трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-105">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="6b868-106">Значения этих параметров можно изменять без перекомпиляции приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-106">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="6b868-107">Сведения об использовании файла конфигурации для задания переключателя см. в разделе <xref:System.Diagnostics.Switch> класса и [переключатели трассировки](~/docs/framework/debug-trace-profile/trace-switches.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="6b868-107">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="6b868-108">Целевой выходные данные трассировки можно настроить путем добавления <xref:System.Diagnostics.TraceListener> или удалив экземпляры из <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-108">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="6b868-109"><xref:System.Diagnostics.Debug.Listeners%2A> Коллекции является общим для обоих <xref:System.Diagnostics.Debug> и <xref:System.Diagnostics.Trace> классы; Добавление прослушивателя трассировки для каждого класса добавляет прослушиватель оба.</span><span class="sxs-lookup"><span data-stu-id="6b868-109">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="6b868-110">По умолчанию <xref:System.Diagnostics.DefaultTraceListener> класс выдает выходные данные трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-110">By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b868-111">Добавление прослушивателя трассировки в <xref:System.Diagnostics.Debug.Listeners%2A> коллекции может вызвать исключение во время трассировки, если ресурс, используемый прослушивателем трассировки не доступен.</span><span class="sxs-lookup"><span data-stu-id="6b868-111">Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="6b868-112">Условия и возникновение исключения зависят от прослушивателя трассировки и не могут быть перечислены в этом разделе.</span><span class="sxs-lookup"><span data-stu-id="6b868-112">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="6b868-113">Может оказаться полезным звонить <xref:System.Diagnostics.Debug> методы в `try` / `catch` блоков для обнаружения и обработки исключений в прослушиватели трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-113">It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="6b868-114">Можно изменить уровень отступа с помощью <xref:System.Diagnostics.Debug.Indent%2A> метода или <xref:System.Diagnostics.Debug.IndentLevel%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="6b868-114">You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property.</span></span> <span data-ttu-id="6b868-115">Чтобы изменить значения отступов, используйте <xref:System.Diagnostics.Debug.IndentSize%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="6b868-115">To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property.</span></span> <span data-ttu-id="6b868-116">Можно задать автоматическую очистку буфера вывода после каждой операции записи, задав <xref:System.Diagnostics.Debug.AutoFlush%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="6b868-116">You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="6b868-117">Чтобы задать <xref:System.Diagnostics.Debug.AutoFlush%2A> и <xref:System.Diagnostics.Debug.IndentSize%2A> для <xref:System.Diagnostics.Debug>, можно изменить файл конфигурации, соответствующий имени приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-117">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="6b868-118">Следует быть формат файла конфигурации, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="6b868-118">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="6b868-119"><xref:System.Diagnostics.ConditionalAttribute> Атрибут применяется к методам <xref:System.Diagnostics.Debug>.</span><span class="sxs-lookup"><span data-stu-id="6b868-119">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>.</span></span> <span data-ttu-id="6b868-120">Компиляторы, поддерживающие <xref:System.Diagnostics.ConditionalAttribute> игнорировать вызовы этих методов «DEBUG» не определен как символ условной компиляции.</span><span class="sxs-lookup"><span data-stu-id="6b868-120">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="6b868-121">Компилятор документации, чтобы определить, является ли <xref:System.Diagnostics.ConditionalAttribute> поддерживается и синтаксис для определения символа условной компиляции.</span><span class="sxs-lookup"><span data-stu-id="6b868-121">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="6b868-122">В проектах Visual Studio C# и Visual Basic по умолчанию для отладочных построений определен символ условной компиляции «Отладка» и символ «TRACE» должен быть определен для отладочных построений и окончательные сборки.</span><span class="sxs-lookup"><span data-stu-id="6b868-122">In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="6b868-123">Сведения о том, как отключить это поведение, см. в документации Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="6b868-123">For information about how to disable this behavior, see the Visual Studio documentation.</span></span> <span data-ttu-id="6b868-124">Сведения об условной отладке в Visual C++ см. в разделе [класс Debug (C + +/ CLI)](/cpp/dotnet/debug-class-cpp-cli).</span><span class="sxs-lookup"><span data-stu-id="6b868-124">For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](/cpp/dotnet/debug-class-cpp-cli).</span></span>
  
 <span data-ttu-id="6b868-125">Чтобы определить символ условной компиляции «Отладка» в C#, добавьте `/d:DEBUG` параметр в командную строку компилятора при компиляции кода с помощью командной строки или добавить `#define DEBUG` в начало файла.</span><span class="sxs-lookup"><span data-stu-id="6b868-125">To define the "DEBUG" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="6b868-126">В Visual Basic добавьте `/d:DEBUG=True` параметр в командной строке компилятора или добавить `#Const DEBUG=True` в файл.</span><span class="sxs-lookup"><span data-stu-id="6b868-126">In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-127">В следующем примере используется <xref:System.Diagnostics.Debug> для определения начала и завершения выполнения программы.</span><span class="sxs-lookup"><span data-stu-id="6b868-127">The following example uses <xref:System.Diagnostics.Debug> to indicate the beginning and end of a program's execution.</span></span> <span data-ttu-id="6b868-128">В примере также используется <xref:System.Diagnostics.Debug.Indent%2A> и <xref:System.Diagnostics.Debug.Unindent%2A> для различения выходные данные трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-128">The example also uses <xref:System.Diagnostics.Debug.Indent%2A> and <xref:System.Diagnostics.Debug.Unindent%2A> to distinguish the tracing output.</span></span>  
  
 [!code-cpp[Classic Debug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug Example/CS/source.cs#1)]
 [!code-vb[Classic Debug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="6b868-129">Данный тип потокобезопасен.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b868-129">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-130">Проверяет условие; если условие имеет значение <see langword="false" />, выводит сообщения и отображает окно сообщения со стеком вызовов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-130">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-131">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-131">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-132">Если условие имеет значение <see langword="true" />, сообщение о сбое не отправляется и не отображается окно сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-132">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-133">Проверяет условие. Если условие имеет значение <see langword="false" />, отображается окно сообщения со стеком вызовов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-133">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-134">По умолчанию <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> метод работает только в отладочных построениях.</span><span class="sxs-lookup"><span data-stu-id="6b868-134">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="6b868-135">Используйте <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> создает метод, если вы хотите сделать утверждения в выпуске.</span><span class="sxs-lookup"><span data-stu-id="6b868-135">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="6b868-136">Дополнительные сведения см. в разделе [утверждения в управляемом коде](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="6b868-136">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6b868-137">`Assert` Методы недоступны для [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] приложений.</span><span class="sxs-lookup"><span data-stu-id="6b868-137">The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.</span></span>  
  
 <span data-ttu-id="6b868-138">Как правило <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> метод используется для выявления ошибок логики во время разработки программ.</span><span class="sxs-lookup"><span data-stu-id="6b868-138">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="6b868-139"><xref:System.Diagnostics.Debug.Assert%2A> вычисляет условие.</span><span class="sxs-lookup"><span data-stu-id="6b868-139"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="6b868-140">Если результатом является `false`, он отправляет сообщение о сбое для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-140">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="6b868-141">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> , или удалить одну из, <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-141">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="6b868-142">При выполнении приложения в режиме пользовательского интерфейса отображается окно сообщения, в котором показан стек вызовов с номерами файла и строки.</span><span class="sxs-lookup"><span data-stu-id="6b868-142">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="6b868-143">Окно сообщения содержит три кнопки: **прервать**, **повторите**, и **Ignore**.</span><span class="sxs-lookup"><span data-stu-id="6b868-143">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="6b868-144">Щелкнув **прервать** кнопка завершает работу приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-144">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="6b868-145">Щелкнув **повторите** отправляется кода в отладчике, если приложение выполняется в отладчике, или предлагает открыть отладчик, если это не так.</span><span class="sxs-lookup"><span data-stu-id="6b868-145">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="6b868-146">Щелкнув **Ignore** продолжает выполняться с использованием следующей инструкции в коде.</span><span class="sxs-lookup"><span data-stu-id="6b868-146">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="6b868-147"> приложения не поддерживают модальные диалоговые окна, поэтому они работают одинаково в режиме пользовательского интерфейса и режиме без пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="6b868-147"> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</span></span> <span data-ttu-id="6b868-148">Сообщение записывается в прослушиватели трассировки в режиме отладки или сообщение не записывается в режиме выпуска.</span><span class="sxs-lookup"><span data-stu-id="6b868-148">The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b868-149">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-149">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="6b868-150">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="6b868-150">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="6b868-151"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="6b868-151">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="6b868-152">Можно изменить поведение <xref:System.Diagnostics.DefaultTraceListener> в файле конфигурации, который соответствует имени приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-152">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="6b868-153">В этом файле можно включить и отключить в окне сообщения assert или задать <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="6b868-153">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="6b868-154">Файл конфигурации должен иметь следующий формат:</span><span class="sxs-lookup"><span data-stu-id="6b868-154">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b868-155">В следующем примере создается индекс для массива, выполняет какие-либо действия, чтобы задать значение индекса и затем вызывает метод <xref:System.Diagnostics.Debug.Assert%2A> , чтобы подтвердить правильность значения индекса.</span><span class="sxs-lookup"><span data-stu-id="6b868-155">The following example creates an index for an array, performs some action to set the value of the index, and then calls <xref:System.Diagnostics.Debug.Assert%2A> to confirm that the index value is valid.</span></span> <span data-ttu-id="6b868-156">Если оно является недопустимым, <xref:System.Diagnostics.Debug.Assert%2A> выводит стек вызовов.</span><span class="sxs-lookup"><span data-stu-id="6b868-156">If it is not valid, <xref:System.Diagnostics.Debug.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Debug.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-157">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-157">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-158">Если условие имеет значение <see langword="true" />, указанное сообщение не отправляется и окно сообщения не отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-158">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="6b868-159">Сообщение для отправки в коллекцию <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-159">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-160">Проверяет условие. Если условие имеет значение <see langword="false" />, выдается указанное сообщение и отображается окно сообщения со стеком вызовов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-160">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-161">По умолчанию <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> метод работает только в отладочных построениях.</span><span class="sxs-lookup"><span data-stu-id="6b868-161">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="6b868-162">Используйте <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> создает метод, если вы хотите сделать утверждения в выпуске.</span><span class="sxs-lookup"><span data-stu-id="6b868-162">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="6b868-163">Дополнительные сведения см. в разделе [утверждения в управляемом коде](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="6b868-163">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="6b868-164">Как правило <xref:System.Diagnostics.Debug.Assert%2A> метод используется для выявления ошибок логики во время разработки программ.</span><span class="sxs-lookup"><span data-stu-id="6b868-164">Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="6b868-165"><xref:System.Diagnostics.Debug.Assert%2A> вычисляет условие.</span><span class="sxs-lookup"><span data-stu-id="6b868-165"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="6b868-166">Если результатом является `false`, он отправляет указанное сообщение диагностики для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-166">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="6b868-167">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> , или удалить одну из, <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-167">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="6b868-168">При выполнении приложения в режиме пользовательского интерфейса отображается окно сообщения, в котором показан стек вызовов с номерами файла и строки.</span><span class="sxs-lookup"><span data-stu-id="6b868-168">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="6b868-169">Окно сообщения содержит три кнопки: **прервать**, **повторите**, и **Ignore**.</span><span class="sxs-lookup"><span data-stu-id="6b868-169">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="6b868-170">Щелкнув **прервать** кнопка завершает работу приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-170">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="6b868-171">Щелкнув **повторите** отправляется кода в отладчике, если приложение выполняется в отладчике, или предлагает открыть отладчик, если это не так.</span><span class="sxs-lookup"><span data-stu-id="6b868-171">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="6b868-172">Щелкнув **Ignore** продолжает выполняться с использованием следующей инструкции в коде.</span><span class="sxs-lookup"><span data-stu-id="6b868-172">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b868-173">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-173">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="6b868-174">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="6b868-174">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="6b868-175"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="6b868-175">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="6b868-176">Можно изменить поведение <xref:System.Diagnostics.DefaultTraceListener> в файле конфигурации, который соответствует имени приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-176">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="6b868-177">В этом файле можно включить и отключить в окне сообщения assert или задать <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="6b868-177">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="6b868-178">Файл конфигурации должен иметь следующий формат:</span><span class="sxs-lookup"><span data-stu-id="6b868-178">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b868-179">В следующем примере проверяется ли `type` параметр является допустимым.</span><span class="sxs-lookup"><span data-stu-id="6b868-179">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="6b868-180">Если `type` — `null`, <xref:System.Diagnostics.Trace.Assert%2A> выводит сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-180">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Debug.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-181">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-181">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-182">Если условие имеет значение <see langword="true" />, указанное сообщение не отправляется и окно сообщения не отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-182">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="6b868-183">Сообщение для отправки в коллекцию <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-183">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="6b868-184">Подробное сообщение для отправки в коллекцию <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-184">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-185">Проверяет условие. Если условие имеет значение <see langword="false" />, выдается два указанных сообщения и отображается окно сообщения со стеком вызовов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-185">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-186">По умолчанию <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> метод работает только в отладочных построениях.</span><span class="sxs-lookup"><span data-stu-id="6b868-186">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="6b868-187">Используйте <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> создает метод, если вы хотите сделать утверждения в выпуске.</span><span class="sxs-lookup"><span data-stu-id="6b868-187">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="6b868-188">Дополнительные сведения см. в разделе [утверждения в управляемом коде](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="6b868-188">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="6b868-189">Как правило <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> метод используется для выявления ошибок логики во время разработки программ.</span><span class="sxs-lookup"><span data-stu-id="6b868-189">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="6b868-190"><xref:System.Diagnostics.Debug.Assert%2A> вычисляет условие.</span><span class="sxs-lookup"><span data-stu-id="6b868-190"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="6b868-191">Если результатом является `false`, он отправляет указанное сообщение диагностики и подробное сообщение <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-191">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="6b868-192">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> , или удалить одну из, <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-192">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="6b868-193">При выполнении приложения в режиме пользовательского интерфейса отображается окно сообщения, в котором показан стек вызовов с номерами файла и строки.</span><span class="sxs-lookup"><span data-stu-id="6b868-193">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="6b868-194">Окно сообщения содержит три кнопки: **прервать**, **повторите**, и **Ignore**.</span><span class="sxs-lookup"><span data-stu-id="6b868-194">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="6b868-195">Щелкнув **прервать** кнопка завершает работу приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-195">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="6b868-196">Щелкнув **повторите** отправляется кода в отладчике, если приложение выполняется в отладчике, или предлагает открыть отладчик, если это не так.</span><span class="sxs-lookup"><span data-stu-id="6b868-196">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="6b868-197">Щелкнув **Ignore** продолжает выполняться с использованием следующей инструкции в коде.</span><span class="sxs-lookup"><span data-stu-id="6b868-197">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b868-198">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-198">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="6b868-199">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="6b868-199">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="6b868-200"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="6b868-200">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="6b868-201">Можно изменить поведение <xref:System.Diagnostics.DefaultTraceListener> в файле конфигурации, который соответствует имени приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-201">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="6b868-202">В этом файле можно включить и отключить в окне сообщения assert или задать <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="6b868-202">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="6b868-203">Файл конфигурации должен иметь следующий формат:</span><span class="sxs-lookup"><span data-stu-id="6b868-203">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6b868-204">В следующем примере проверяется ли `type` параметр является допустимым.</span><span class="sxs-lookup"><span data-stu-id="6b868-204">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="6b868-205">Если `type` — `null`, <xref:System.Diagnostics.Trace.Assert%2A> выводит два сообщения.</span><span class="sxs-lookup"><span data-stu-id="6b868-205">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs two messages.</span></span>  
  
 [!code-cpp[Classic Debug.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-206">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-206">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-207">Если условие имеет значение <see langword="true" />, указанное сообщение не отправляется и окно сообщения не отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-207">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="6b868-208">Сообщение для отправки в коллекцию <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-208">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessageFormat">
          <span data-ttu-id="6b868-209">Строка составного формата для отправки в коллекцию <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-209">The composite format string to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
          <span data-ttu-id="6b868-210">Это сообщение содержит текст, перемежаемый нулем или несколькими элементами форматирования, которые соответствуют объектам массива <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-210">This message contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="6b868-211">Массив объектов, содержащий нуль или более форматируемых объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-211">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-212">Проверяет условие; если условие имеет значение <see langword="false" />, выводит два сообщения (простое и отформатированное) и отображает окно сообщения со стеком вызовов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-212">Checks for a condition; if the condition is <see langword="false" />, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-213">Этот метод использует платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="6b868-213">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="6b868-214">Результирующая строка отправляется <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-214">The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="6b868-215">По умолчанию <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> метод работает только в отладочных построениях.</span><span class="sxs-lookup"><span data-stu-id="6b868-215">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="6b868-216">Используйте <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> создает метод, если вы хотите сделать утверждения в выпуске.</span><span class="sxs-lookup"><span data-stu-id="6b868-216">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="6b868-217">Дополнительные сведения см. в разделе [утверждения в управляемом коде](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="6b868-217">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="6b868-218">Как правило <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> метод используется для выявления ошибок логики во время разработки программ.</span><span class="sxs-lookup"><span data-stu-id="6b868-218">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="6b868-219"><xref:System.Diagnostics.Debug.Assert%2A> вычисляет условие.</span><span class="sxs-lookup"><span data-stu-id="6b868-219"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="6b868-220">Если результатом является `false`, <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> вызывается метод и `detailMessageFormat` строки и `args` массива, передаются в качестве параметров.</span><span class="sxs-lookup"><span data-stu-id="6b868-220">If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="6b868-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> Отправляет указанный текст сообщения и сообщения, форматированный текст <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="6b868-222">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> , или удалить одну из, <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-222">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="6b868-223">При выполнении приложения в режиме пользовательского интерфейса отображается окно сообщения, в котором показан стек вызовов с номерами файла и строки.</span><span class="sxs-lookup"><span data-stu-id="6b868-223">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="6b868-224">Окно сообщения содержит три кнопки: **прервать**, **повторите**, и **Ignore**.</span><span class="sxs-lookup"><span data-stu-id="6b868-224">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="6b868-225">Щелкнув **прервать** кнопка завершает работу приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-225">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="6b868-226">Щелкнув **повторите** отправляется кода в отладчике, если приложение выполняется в отладчике, или предлагает открыть отладчик, если это не так.</span><span class="sxs-lookup"><span data-stu-id="6b868-226">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="6b868-227">Щелкнув **Ignore** продолжает выполняться с использованием следующей инструкции в коде.</span><span class="sxs-lookup"><span data-stu-id="6b868-227">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b868-228">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-228">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="6b868-229">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="6b868-229">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="6b868-230"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="6b868-230">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="6b868-231">Можно изменить поведение <xref:System.Diagnostics.DefaultTraceListener> в файле конфигурации, который соответствует имени приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-231">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="6b868-232">В этом файле можно включить и отключить в окне сообщения assert или задать <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="6b868-232">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="6b868-233">Файл конфигурации должен иметь следующий формат:</span><span class="sxs-lookup"><span data-stu-id="6b868-233">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-234">Получает или задает значение, определяющее необходимость вызова метода <see cref="M:System.Diagnostics.Debug.Flush" /> для свойства <see cref="P:System.Diagnostics.Debug.Listeners" /> после каждой записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-234">Gets or sets a value indicating whether <see cref="M:System.Diagnostics.Debug.Flush" /> should be called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b868-235">
            <see langword="true" />, если <see cref="M:System.Diagnostics.Debug.Flush" /> вызывается в <see cref="P:System.Diagnostics.Debug.Listeners" /> после каждой операции записи; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-235">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Debug.Flush" /> is called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-236">Значение по умолчанию: `false`.</span><span class="sxs-lookup"><span data-stu-id="6b868-236">The default is `false`.</span></span>  
  
 <span data-ttu-id="6b868-237">Сброс потока его основной кодировщик не очищается, пока не будет явно вызван метод <xref:System.Diagnostics.Debug.Flush%2A> или <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-237">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="6b868-238">Установка <xref:System.Diagnostics.Debug.AutoFlush%2A> для `true` означает, что данные будут сброшены из буфера в поток, но состояние кодировщика при этом не сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="6b868-238">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="6b868-239">Это позволяет кодировщику сохранить свое состояние (частичные символы), чтобы правильно выполнить кодировку следующего блока знаков.</span><span class="sxs-lookup"><span data-stu-id="6b868-239">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="6b868-240">Этот сценарий влияет на кодировки UTF8 и UTF7, в которых определенные символы кодируются только после кодировщик получает соседние знаки.</span><span class="sxs-lookup"><span data-stu-id="6b868-240">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="6b868-241">Чтобы задать <xref:System.Diagnostics.Debug.AutoFlush%2A> и <xref:System.Diagnostics.Debug.IndentSize%2A> для <xref:System.Diagnostics.Debug>, можно также изменить файл конфигурации, соответствующий имени приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-241">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="6b868-242">Следует быть формат файла конфигурации, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="6b868-242">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6b868-243">для работы с неуправляемым кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-243">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="6b868-244">Требовать значение <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-244">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b868-245">Очищает выходной буфер, а затем вызывает метод <see langword="Close" /> на каждый <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-245">Flushes the output buffer and then calls the <see langword="Close" /> method on each of the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-246">Используйте этот метод при выводе в файл, например <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-246">Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-247">Сброс потока его основной кодировщик не очищается, пока не будет явно вызван метод <xref:System.Diagnostics.Debug.Flush%2A> или <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-247">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="6b868-248">Установка <xref:System.Diagnostics.Debug.AutoFlush%2A> для `true` означает, что данные будут сброшены из буфера в поток, но состояние кодировщика при этом не сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="6b868-248">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="6b868-249">Это позволяет кодировщику сохранить свое состояние (частичные символы), чтобы правильно выполнить кодировку следующего блока знаков.</span><span class="sxs-lookup"><span data-stu-id="6b868-249">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="6b868-250">Этот сценарий влияет на кодировки UTF8 и UTF7, в которых определенные символы кодируются только после кодировщик получает соседние знаки.</span><span class="sxs-lookup"><span data-stu-id="6b868-250">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-251">В следующем примере создается <xref:System.Diagnostics.TextWriterTraceListener> с именем `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="6b868-251">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="6b868-252">`myTextListener` использует <xref:System.IO.StreamWriter> вызывается `myOutputWriter` для записи в файл с именем `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="6b868-252">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="6b868-253">В примере создается файл, поток и средство записи текста, одна строка текста записывается в файл и затем сбрасывает и закрывает выходные данные.</span><span class="sxs-lookup"><span data-stu-id="6b868-253">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6b868-254">для работы с неуправляемым кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-254">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="6b868-255">Требовать значение <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-255">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-256">Порождает сообщение об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-256">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6b868-257">Выдаваемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-257">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-258">Выдает указанное сообщение об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-258">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-259">Это поведение по умолчанию <xref:System.Diagnostics.DefaultTraceListener> генерирует сообщение в окно сообщения, если приложение выполняется в режиме пользовательского интерфейса и <xref:System.Diagnostics.TraceListener> экземпляров в <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-259">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b868-260">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-260">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="6b868-261">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="6b868-261">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="6b868-262"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="6b868-262">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="6b868-263">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> , или удалить одну из, <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-263">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-264">В следующем примере используется <xref:System.Diagnostics.Debug.Fail%2A> метод печать сообщения во время обработки исключений.</span><span class="sxs-lookup"><span data-stu-id="6b868-264">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6b868-265">Можно также использовать <xref:System.Diagnostics.Debug.Fail%2A> метода в операторе switch.</span><span class="sxs-lookup"><span data-stu-id="6b868-265">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6b868-266">Выдаваемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-266">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="6b868-267">Выдаваемое подробное сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-267">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-268">Выдает простое и подробное сообщение об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-268">Emits an error message and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-269">Это поведение по умолчанию <xref:System.Diagnostics.DefaultTraceListener> генерирует сообщение в окно сообщения, если приложение выполняется в режиме пользовательского интерфейса и <xref:System.Diagnostics.TraceListener> экземпляров в <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-269">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b868-270">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-270">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="6b868-271">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="6b868-271">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="6b868-272"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="6b868-272">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="6b868-273">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> , или удалить одну из, <xref:System.Diagnostics.Debug.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="6b868-273">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-274">В следующем примере используется <xref:System.Diagnostics.Debug.Fail%2A> метод печать сообщения во время обработки исключений.</span><span class="sxs-lookup"><span data-stu-id="6b868-274">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6b868-275">Можно также использовать <xref:System.Diagnostics.Debug.Fail%2A> метода в операторе switch.</span><span class="sxs-lookup"><span data-stu-id="6b868-275">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b868-276">Очищает выходной буфер и вызывает запись данных буфера в коллекцию <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-276">Flushes the output buffer and causes buffered data to write to the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-277">Сброс потока его основной кодировщик не очищается, пока не будет явно вызван метод <xref:System.Diagnostics.Debug.Flush%2A> или <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-277">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="6b868-278">Установка <xref:System.Diagnostics.Debug.AutoFlush%2A> для `true` означает, что данные будут сброшены из буфера в поток, но состояние кодировщика при этом не сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="6b868-278">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="6b868-279">Это позволяет кодировщику сохранить свое состояние (частичные символы), чтобы правильно выполнить кодировку следующего блока знаков.</span><span class="sxs-lookup"><span data-stu-id="6b868-279">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="6b868-280">Этот сценарий влияет на кодировки UTF8 и UTF7, в которых определенные символы кодируются только после кодировщик получает соседние знаки.</span><span class="sxs-lookup"><span data-stu-id="6b868-280">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-281">В следующем примере создается <xref:System.Diagnostics.TextWriterTraceListener> с именем `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="6b868-281">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="6b868-282">`myTextListener` использует <xref:System.IO.FileStream> вызывается `myFileStream` для записи в файл с именем `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="6b868-282">`myTextListener` uses a <xref:System.IO.FileStream> called `myFileStream` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="6b868-283">В примере создается поток, открывает файл, если он существует или создает новый, одна строка текста записывается в файл и затем сохраняет и закрывает выходные данные.</span><span class="sxs-lookup"><span data-stu-id="6b868-283">The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b868-284">Уменьшает текущее значение <see cref="P:System.Diagnostics.Debug.IndentLevel" /> на единицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-284">Increases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b868-285">В следующем примере задается уровень отступа и выдаются сообщения отладки.</span><span class="sxs-lookup"><span data-stu-id="6b868-285">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6b868-286">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="6b868-286">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Unindent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-287">Возвращает или задает уровень отступа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-287">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b868-288">Уровень отступа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-288">The indent level.</span>
          </span>
          <span data-ttu-id="6b868-289">Значение по умолчанию — 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-289">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-290"><xref:System.Diagnostics.Debug.IndentLevel%2A> Свойство представляет количество размер отступа <xref:System.Diagnostics.Debug.IndentSize%2A> применяется.</span><span class="sxs-lookup"><span data-stu-id="6b868-290">The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-291">В следующем примере задается уровень отступа и выдаются сообщения отладки.</span><span class="sxs-lookup"><span data-stu-id="6b868-291">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6b868-292">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="6b868-292">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-293">Возвращает или задает число пробелов в отступе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-293">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b868-294">Число пробелов в отступе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-294">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="6b868-295">Значение по умолчанию — четыре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-295">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-296">Объект <xref:System.Diagnostics.TextWriterTraceListener> интерпретирует это число как пробелы.</span><span class="sxs-lookup"><span data-stu-id="6b868-296">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="6b868-297"><xref:System.Diagnostics.EventLogTraceListener> Игнорирует это значение.</span><span class="sxs-lookup"><span data-stu-id="6b868-297">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="6b868-298">Чтобы задать <xref:System.Diagnostics.Debug.AutoFlush%2A> и <xref:System.Diagnostics.Debug.IndentSize%2A> для <xref:System.Diagnostics.Debug>, можно также изменить файл конфигурации, соответствующий имени приложения.</span><span class="sxs-lookup"><span data-stu-id="6b868-298">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="6b868-299">Следует быть формат файла конфигурации, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="6b868-299">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-300">Получает коллекцию слушателей, отслеживающих данные отладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-300">Gets the collection of listeners that is monitoring the debug output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b868-301">Класс <see cref="T:System.Diagnostics.TraceListenerCollection" />, представляющий коллекцию типа <see cref="T:System.Diagnostics.TraceListener" />, которая позволяет отслеживать данные отладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-301">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> representing a collection of type <see cref="T:System.Diagnostics.TraceListener" /> that monitors the debug output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-302">Прослушиватели осуществляют Форматированные выходные данные отладки.</span><span class="sxs-lookup"><span data-stu-id="6b868-302">The listeners produce formatted output from the debug output.</span></span> <span data-ttu-id="6b868-303">По умолчанию коллекция содержит экземпляр <xref:System.Diagnostics.DefaultTraceListener> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-303">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="6b868-304">Чтобы удалить прослушивателя по умолчанию, вызовите <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> метода и передать ему экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-304">To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="6b868-305">Перенаправлять выходные данные в окне консоли, нужно добавить экземпляр <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-305">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span> <span data-ttu-id="6b868-306">Перенаправлять выходные данные в файл или поток, нужно добавить экземпляр <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-306">To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b868-307"><xref:System.Diagnostics.Debug.Listeners%2A> Коллекции является общим для обоих <xref:System.Diagnostics.Debug> и <xref:System.Diagnostics.Trace> классы; Добавление прослушивателя трассировки для каждого класса добавляет прослушиватель оба.</span><span class="sxs-lookup"><span data-stu-id="6b868-307">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-308">В следующем примере создается <xref:System.Diagnostics.TextWriterTraceListener> , выводящий данные в окно консоли.</span><span class="sxs-lookup"><span data-stu-id="6b868-308">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="6b868-309">Затем код добавляет новый прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-309">The code then adds the new listener to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Debug.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6b868-310">для работы с неуправляемым кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-310">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="6b868-311">Требовать значение <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-311">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Print">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-312">Записывает сообщение, заканчивающееся ограничителем строки, в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-312">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6b868-313">Сообщение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-313">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-314">Записывает сообщение, заканчивающееся ограничителем строки, в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-314">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-315">По умолчанию признаком конца строки является символ возврата каретки и перевода строки.</span><span class="sxs-lookup"><span data-stu-id="6b868-315">The default line terminator is a carriage return followed by a line feed.</span></span> <span data-ttu-id="6b868-316">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-316">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="6b868-317">Строка составного формата, содержащая текст, который перемежается несколькими элементами форматирования (или ни одним из них), соответствующими объектам в массиве <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-317">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="6b868-318">Массив объектов, содержащий один или несколько (либо ни одного) объектов, которые необходимо отформатировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-318">An object array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-319">Записывает форматированную строку, заканчивающееся ограничителем строки, в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-319">Writes a formatted string followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-320">Этот метод использует платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="6b868-320">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="6b868-321">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-321">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6b868-322">Свойство <paramref name="format" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-322">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6b868-323">
            <paramref name="format" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-323">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="6b868-324">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-324">-or-</span>
          </span>
          <span data-ttu-id="6b868-325">Число, указывающее аргумент для форматирования, меньше нуля или больше или равно числу указанных объектов для форматирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-325">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b868-326">Уменьшает текущее значение <see cref="P:System.Diagnostics.Debug.IndentLevel" /> на единицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-326">Decreases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6b868-327">В следующем примере задается уровень отступа и выдаются сообщения отладки.</span><span class="sxs-lookup"><span data-stu-id="6b868-327">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6b868-328">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="6b868-328">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Indent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-329">Записывает сведения об отладке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-329">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6b868-330">Объект, имя которого отправляется в <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-330">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-331">Записывает значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-331">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-332">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-332">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-333">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-333">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-334">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-334">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-335">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-335">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-336">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-336">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-337">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-337">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-338">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-338">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-339">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-339">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6b868-340">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-340">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-341">Записывает сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-341">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-342">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-342">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-343">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-343">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-344">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-344">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-345">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-345">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-346">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-346">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-347">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-347">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-348">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-348">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-349">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-349">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6b868-350">Объект, имя которого отправляется в <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-350">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="6b868-351">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-351">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-352">Записывает имя категории и значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-352">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-353">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-353">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-354">Используйте `category` вывод параметров для группы сообщений.</span><span class="sxs-lookup"><span data-stu-id="6b868-354">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="6b868-355">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-355">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-356">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-356">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-357">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-357">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-358">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-358">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-359">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-359">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-360">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-360">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-361">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-361">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6b868-362">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-362">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="6b868-363">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-363">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-364">Записывает имя категории и сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-364">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-365">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-366">Используйте `category` вывод параметров для группы сообщений.</span><span class="sxs-lookup"><span data-stu-id="6b868-366">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="6b868-367">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-367">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-368">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-368">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-369">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-369">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-370">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-370">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-371">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-371">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-372">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-372">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-373">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-373">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-374">Записывает сведения об отладке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />, если условие имеет значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-374">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-375">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-375">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-376">Если условие имеет значение <see langword="true" />, значение записывается в прослушиватели трассировки в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-376">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6b868-377">Объект, имя которого отправляется в <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-377">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-378">Записывает значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />, если условие — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-378">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-379">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-379">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-380">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-380">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-381">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-381">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-382">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-382">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-383">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, в примере выводится имя параметра значения <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-383">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-384">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-384">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-385">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится сообщение в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-385">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="6b868-386">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-386">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6b868-387">Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> инструкции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-387">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="6b868-388">В следующих двух примерах кода отправить то же сообщение отладки.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-388">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="6b868-389">Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" />, не следует вызывать <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-389">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="6b868-390">Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-390">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="6b868-391">Это может привести к ненужному выполнению произвольного сложного кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-391">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="6b868-392">Первый пример.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-392">First example:</span>
            </span>  
  
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="6b868-393">Во втором примере:</span><span class="sxs-lookup"><span data-stu-id="6b868-393">Second example:</span></span>  
  
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-394">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-394">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-395">Если условие имеет значение <see langword="true" />, сообщение записывается в прослушиватели трассировки в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-395">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="6b868-396">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-396">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-397">Записывает сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />, если задано условие <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-397">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-398">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-398">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-399">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-399">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-400">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-400">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-401">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-401">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-402">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-402">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-403">Дополнительные сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-403">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-404">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-404">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-405">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-405">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6b868-406">Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> инструкции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-406">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="6b868-407">В следующих двух примерах кода отправить то же сообщение отладки.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-407">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="6b868-408">Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" />, не следует вызывать <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-408">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="6b868-409">Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-409">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="6b868-410">Это может привести к ненужному выполнению произвольного сложного кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-410">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="6b868-411">Первый пример.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-411">First example:</span>
            </span>  
  
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="6b868-412">Во втором примере:</span><span class="sxs-lookup"><span data-stu-id="6b868-412">Second example:</span></span>  
  
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-413">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-413">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-414">Если условие имеет значение <see langword="true" />, имя категории и значение записываются в прослушиватели трассировки в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-414">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6b868-415">Объект, имя которого отправляется в <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-415">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="6b868-416">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-416">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-417">Записывает имя категории и значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />, если задано условие <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-417">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-418">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-418">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-419">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="6b868-419">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="6b868-420">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-420">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-421">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-421">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-422">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-422">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-423">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Verbose`, в примере выводится имя `myObject` и `category` для <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-423">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-424">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-424">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-425">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Error` или выше, второе сообщение об ошибке выводится в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-425">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-426">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-426">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6b868-427">Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> инструкции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-427">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="6b868-428">В следующих двух примерах кода отправить то же сообщение отладки.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-428">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="6b868-429">Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" />, не следует вызывать <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-429">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="6b868-430">Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-430">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="6b868-431">Это может привести к ненужному выполнению произвольного сложного кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-431">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="6b868-432">Первый пример.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-432">First example:</span>
            </span>  
  
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="6b868-433">Во втором примере:</span><span class="sxs-lookup"><span data-stu-id="6b868-433">Second example:</span></span>  
  
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-434">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-434">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-435">Если условие имеет значение <see langword="true" />, имя категории и сообщение записываются в прослушиватели трассировки в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-435">If the condition is <see langword="true" />, the category name and message are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="6b868-436">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-436">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="6b868-437">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-437">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-438">Записывает имя категории и сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />, если условие равно <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-438">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-439">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-439">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-440">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="6b868-440">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="6b868-441">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-441">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-442">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-442">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-443">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-443">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-444">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Verbose`, первое сообщение об ошибке выводится в примере <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-444">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-445">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-445">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-446">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Error` или выше, второе сообщение об ошибке выводится в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-446">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-447">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-447">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6b868-448">Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> инструкции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-448">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="6b868-449">В следующих двух примерах кода отправить то же сообщение отладки.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-449">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="6b868-450">Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" />, не следует вызывать <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-450">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />.</span>
            </span>
            <span data-ttu-id="6b868-451">Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-451">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="6b868-452">Это может привести к ненужному выполнению произвольного сложного кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-452">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="6b868-453">Первый пример.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-453">First example:</span>
            </span>  
  
```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="6b868-454">Во втором примере:</span><span class="sxs-lookup"><span data-stu-id="6b868-454">Second example:</span></span>  
  
```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-455">Записывает сведения об отладке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-455">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6b868-456">Объект, имя которого отправляется в <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-456">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-457">Записывает значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-457">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-458">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-458">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-459">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-459">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-460">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-460">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-461">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-461">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-462">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-462">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-463">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-463">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-464">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится имя объекта в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-464">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="6b868-465">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-465">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6b868-466">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-466">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-467">Записывает сообщение, заканчивающееся ограничителем строки, в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-467">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-468">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-468">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-469">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-469">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-470">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-470">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-471">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-471">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-472">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-472">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-473">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-473">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-474">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-474">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-475">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-475">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6b868-476">Объект, имя которого отправляется в <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-476">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="6b868-477">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-477">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-478">Записывает имя категории и значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-478">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-479">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-479">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-480">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="6b868-480">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="6b868-481">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-481">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-482">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-482">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-483">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-483">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-484">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-484">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-485">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-485">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-486">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-486">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-487">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="6b868-487">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="6b868-488">Строка составного формата, содержащая текст, который перемежается несколькими элементами форматирования (или ни одним из них), соответствующими объектам в массиве <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-488">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="6b868-489">Массив объектов, содержащий нуль или более форматируемых объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-489">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-490">Записывает форматированное сообщение, заканчивающееся ограничителем строки, в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-490">Writes a formatted message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-491">Этот метод использует платформы .NET Framework, чтобы преобразовать значение объекта в его текстовое представление и встроить это представление в строку.</span><span class="sxs-lookup"><span data-stu-id="6b868-491">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span>  
  
 <span data-ttu-id="6b868-492">Ключевое слово в синтаксисе для этого метода означает, что массив объектов может быть одно значение.</span><span class="sxs-lookup"><span data-stu-id="6b868-492">The  keyword in the syntax for this method implies that the object array can be a single value.</span></span> <span data-ttu-id="6b868-493">Исключением является <xref:System.String> объекта.</span><span class="sxs-lookup"><span data-stu-id="6b868-493">The exception to this is the <xref:System.String> object.</span></span> <span data-ttu-id="6b868-494">Явные перегрузки имеют более высокий приоритет, поэтому `arg` значения одной строки по умолчанию будет <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="6b868-494">Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> overload.</span></span>  
  
 <span data-ttu-id="6b868-495">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-495">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-496">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-496">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6b868-497">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-497">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="6b868-498">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-498">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-499">Записывает имя категории и сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-499">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-500">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-500">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-501">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="6b868-501">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="6b868-502">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-502">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-503">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-503">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-504">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-504">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-505">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-505">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-506">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-506">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-507">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке и `category` в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-507">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="6b868-508">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-508">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6b868-509">Записывает сведения об отладке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />, если условие имеет значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-509">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-510">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-510">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-511">Если условие имеет значение <see langword="true" />, значение записывается в прослушиватели трассировки в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-511">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6b868-512">Объект, имя которого отправляется в <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-512">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-513">Записывает значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />, если условие — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-513">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-514">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-514">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-515">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-515">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-516">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-516">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-517">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-517">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-518">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-518">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-519">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-519">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-520">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится имя объекта в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-520">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="6b868-521">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-521">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6b868-522">Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> инструкции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-522">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="6b868-523">В следующих двух примерах кода отправить то же сообщение отладки.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-523">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="6b868-524">Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" />, не следует вызывать <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-524">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="6b868-525">Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-525">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="6b868-526">Это может привести к ненужному выполнению произвольного сложного кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-526">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="6b868-527">Первый пример.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-527">First example:</span>
            </span>  
  
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="6b868-528">Во втором примере:</span><span class="sxs-lookup"><span data-stu-id="6b868-528">Second example:</span></span>  
  
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-529">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-529">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-530">Если условие имеет значение <see langword="true" />, сообщение записывается в прослушиватели трассировки в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-530">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="6b868-531">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-531">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-532">Записывает сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />, если задано условие <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-532">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-533">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-533">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-534">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-534">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-535">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-535">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-536">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-536">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-537">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-537">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-538">Дополнительные сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-538">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-539">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-539">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-540">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-540">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6b868-541">Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> инструкции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-541">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="6b868-542">В следующих двух примерах кода отправить то же сообщение отладки.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-542">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="6b868-543">Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" />, не следует вызывать <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-543">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="6b868-544">Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-544">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="6b868-545">Это может привести к ненужному выполнению произвольного сложного кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-545">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="6b868-546">Первый пример.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-546">First example:</span>
            </span>  
  
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="6b868-547">Во втором примере:</span><span class="sxs-lookup"><span data-stu-id="6b868-547">Second example:</span></span>  
  
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-548">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-548">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="6b868-549">Если условие имеет значение <see langword="true" />, имя категории и значение записываются в прослушиватели трассировки в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-549">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6b868-550">Объект, имя которого отправляется в <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-550">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="6b868-551">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-551">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-552">Записывает имя категории и значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />, если задано условие <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-552">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-553">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-553">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-554">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="6b868-554">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="6b868-555">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-555">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-556">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-556">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-557">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-557">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-558">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-558">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-559">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-559">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-560">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-560">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="6b868-561">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-561">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6b868-562">Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> инструкции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-562">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="6b868-563">В следующих двух примерах кода отправить то же сообщение отладки.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-563">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="6b868-564">Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" />, не следует вызывать <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-564">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="6b868-565">Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-565">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="6b868-566">Это может привести к ненужному выполнению произвольного сложного кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-566">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="6b868-567">Первый пример.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-567">First example:</span>
            </span>  
  
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="6b868-568">Во втором примере:</span><span class="sxs-lookup"><span data-stu-id="6b868-568">Second example:</span></span>  
  
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="6b868-569">Значение <see langword="true" />, если требуется запись сообщения. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-569">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="6b868-570">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-570">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="6b868-571">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-571">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b868-572">Записывает имя категории и сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Debug.Listeners" />, если условие равно <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b868-572">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b868-573">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="6b868-573">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="6b868-574">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="6b868-574">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="6b868-575">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="6b868-575">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b868-576">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="6b868-576">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="6b868-577">Этот переключатель установлен за пределами в образце кода.</span><span class="sxs-lookup"><span data-stu-id="6b868-577">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="6b868-578">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="6b868-578">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="6b868-579">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Debug.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="6b868-579">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="6b868-580">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке и `category` в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-580">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="6b868-581">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="6b868-581">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6b868-582">Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> инструкции.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-582">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements.</span>
            </span>
            <span data-ttu-id="6b868-583">В следующих двух примерах кода отправить то же сообщение отладки.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-583">The following two code examples send the same debugging message.</span>
            </span>
            <span data-ttu-id="6b868-584">Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" />, не следует вызывать <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-584">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />.</span>
            </span>
            <span data-ttu-id="6b868-585">Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-585">The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span>
            </span>
            <span data-ttu-id="6b868-586">Это может привести к ненужному выполнению произвольного сложного кода.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-586">This can result in unnecessary execution of arbitrarily complex code.</span>
            </span>
            <span data-ttu-id="6b868-587">Первый пример.</span>
            <span class="sxs-lookup">
              <span data-stu-id="6b868-587">First example:</span>
            </span>  
  
```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="6b868-588">Во втором примере:</span><span class="sxs-lookup"><span data-stu-id="6b868-588">Second example:</span></span>  
  
```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>