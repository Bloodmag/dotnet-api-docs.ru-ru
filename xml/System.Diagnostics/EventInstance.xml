<Type Name="EventInstance" FullName="System.Diagnostics.EventInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d5923ea6f0adb7e9a29cff95c32d8b297910978" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399328" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class EventInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventInstance" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет не зависящие от языка сведения для записи журнала событий.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Diagnostics.EventInstance> для записи в журнал событий запись с идентификатором ресурса, а не значение типа string. Чтобы записать событие в журнал, инициализировать <xref:System.Diagnostics.EventInstance.InstanceId%2A> свойства и передайте экземпляр для <xref:System.Diagnostics.EventLog.WriteEvent%2A> метод. Средство просмотра событий использует идентификатор экземпляра для поиска и отображения соответствующей строки из локализованного файла ресурсов на основе текущих настроек языка. Перед тем как записывать события с использованием идентификаторов ресурсов, необходимо зарегистрировать источник событий в соответствующем файле ресурсов.  
  
 Если запись событий, вы можете задать <xref:System.Diagnostics.EventInstance.EntryType%2A> свойство, чтобы указать значок, отображаемый средство просмотра событий для записи. Можно также указать <xref:System.Diagnostics.EventInstance.CategoryId%2A> свойство, чтобы указать категорию, которая отображает журнал системных событий для записи.  
  
 Средство просмотра событий использует категории для фильтрации событий, записанных источником события. Категория может отображаться в средстве просмотра событий в виде числового значения или его можно использовать категорию как идентификатор ресурсов для отображения локализованной строки категории.  
  
 Для отображения локализованных строк категории в средстве просмотра событий, необходимо использовать источник событий настройки с файлом ресурсов категории и <xref:System.Diagnostics.EventInstance.CategoryId%2A> идентификатор ресурса в файле ресурсов категории. Если источник событий не имеет настроенный файл ресурсов категории, или указанный <xref:System.Diagnostics.EventInstance.CategoryId%2A> индекс строки в файле ресурсов категории, а затем средство просмотра событий отображает числовое значение категории для этой записи. Настройка файла ресурсов категории, вместе с количеством строк категорий в файле ресурсов с помощью <xref:System.Diagnostics.EventLogInstaller> или <xref:System.Diagnostics.EventSourceCreationData> класса.  
  
 Перед использованием необходимо зарегистрировать источник журнала событий <xref:System.Diagnostics.EventInstance> для записи о событии <xref:System.Diagnostics.EventLog.WriteEvent%2A> метод. Источник должен быть настроен для записи локализованных записей в журнал и источник необходимо определить хотя бы сообщение файл ресурсов.  
  
 Создайте новый источник событий во время установки приложения. Это позволяет время для операционной системы обновить свой список зарегистрированных источников событий и их конфигурации. Если операционная система не обновлялись свой список источников событий и предпринимается попытка записать событие с новым источником, операция записи окончится неудачей. Можно настроить с помощью нового источника <xref:System.Diagnostics.EventLogInstaller>, или с помощью <xref:System.Diagnostics.EventLog.CreateEventSource%2A> метод. Необходимо иметь права администратора на компьютере, чтобы создать новый источник событий.  
  
 Дополнительные сведения об определении сообщения о событиях и создание файлов ресурсов журналов событий, см. в разделе «Сообщения компилятора» в документации Platform SDK в [ http://msdn.microsoft.com ](http://msdn.microsoft.com).  
  
   
  
## Examples  
 В следующем примере кода вносит запись информационное событие, а затем использует <xref:System.Diagnostics.EventInstance> записи события предупреждения в существующий журнал событий. Текст сообщения события задается с помощью идентификатора ресурса в файле ресурсов сообщения. В примере кода предполагается, что соответствующий файл ресурсов сообщения был зарегистрирован для источника.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов EventLogMsgs.dll. Текстовый файл сообщения — источник, из которого создается файле ресурсов сообщения. В текстовом файле сообщения определяет идентификаторы ресурсов и текст категории, сообщение о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
    <altmember cref="T:System.Diagnostics.EventLogEntry" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventInstance" />, используя не зависящие от языка сведения для определения записи в журнале событий.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instanceId">Идентификатор ресурса, соответствующий строке, заданной в файле ресурсов сообщения для источника событий.</param>
        <param name="categoryId">Идентификатор ресурса, соответствующий строке, заданной в файле ресурсов категории для источника событий, или нуль, свидетельствующий об отсутствии категории для данного события.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventInstance" />, используя заданные идентификаторы ресурсов для локализованного сообщения и текст категории для записи о событии.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы информационные запись в журнал событий, инициализируйте <xref:System.Diagnostics.EventInstance> и передать его в <xref:System.Diagnostics.EventLog.WriteEvent%2A> метод. Задать `instanceId` идентификатору ресурса, сообщения о событии в соответствующем <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> свойств для источника. Задать `categoryId` значение категории числовых данных, либо идентификатор ресурса категории событий в <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> свойство источника; набор `categoryId` в ноль для категории без событий. <xref:System.Diagnostics.EventInstance.EntryType%2A> Для нового экземпляра свойству <xref:System.Diagnostics.EventLogEntryType.Information> по умолчанию.  
  
 Средство просмотра событий использует идентификаторы ресурсов для отображения соответствующих строк из локализованным файлам ресурсов для источника. Прежде чем записывать события с использованием идентификаторов ресурсов, необходимо зарегистрировать источник соответствующих файлов ресурсов.  
  
   
  
## Examples  
 В следующем примере кода вносит запись информационное событие, а затем использует <xref:System.Diagnostics.EventInstance> записи события предупреждения в существующий журнал событий. Текст сообщения события задается с помощью идентификатора ресурса в файле ресурсов сообщения. В примере кода предполагается, что соответствующий файл ресурсов сообщения был зарегистрирован для источника.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов EventLogMsgs.dll. Текстовый файл сообщения — источник, из которого создается файле ресурсов сообщения. В текстовом файле сообщения определяет идентификаторы ресурсов и текст категории, сообщение о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="instanceId" /> является отрицательным числом или превышает значение <see cref="F:System.UInt32.MaxValue" />.  
  
 - или -  
  
 Значение параметра <paramref name="categoryId" /> является отрицательным числом или превышает значение <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId, System.Diagnostics.EventLogEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId, valuetype System.Diagnostics.EventLogEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer, entryType As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId, System::Diagnostics::EventLogEntryType entryType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
        <Parameter Name="entryType" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="instanceId">Идентификатор ресурса, соответствующий строке, заданной в файле ресурсов сообщения для источника событий.</param>
        <param name="categoryId">Идентификатор ресурса, соответствующий строке, заданной в файле ресурсов категории для источника событий, или нуль, свидетельствующий об отсутствии категории для данного события.</param>
        <param name="entryType">Значение <see cref="T:System.Diagnostics.EventLogEntryType" />, обозначающее тип события.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventInstance" />, используя заданные идентификаторы ресурсов для локализованного сообщения и текст категории для записи о событии, а также указанный тип журнала событий.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы добавить запись в журнал событий, инициализируйте <xref:System.Diagnostics.EventInstance> и передать его в <xref:System.Diagnostics.EventLog.WriteEvent%2A> метод. Задать `instanceId` идентификатору ресурса, сообщения о событии в соответствующем <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> свойств для источника. Задать `categoryId` значение категории числовых данных, либо идентификатор ресурса категории событий в <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> свойство источника; набор `categoryId` в ноль для категории без событий.  
  
 Средство просмотра событий использует идентификаторы ресурсов для отображения соответствующих строк из локализованным файлам ресурсов для источника. Прежде чем записывать события с использованием идентификаторов ресурсов, необходимо зарегистрировать источник соответствующих файлов ресурсов.  
  
 Задать `entryType` к одной из предопределенных типов записей. Средство просмотра событий использует тип события для определения значка, отображаемого в представлении списка журнала событий.  
  
   
  
## Examples  
 Следующий пример кода записывает двух элементов событие в журнал событий аудита `myNewLog`. В примере кода создается новый источник событий и новый журнал событий, если они не существуют на локальном компьютере. Текст сообщения события задается с помощью идентификатора ресурса в файле ресурсов.  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов EventLogMsgs.dll. Текстовый файл сообщения — источник, из которого создается файле ресурсов сообщения. В текстовом файле сообщения определяет идентификаторы ресурсов и текст категории, сообщение о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="entryType" /> не является допустимым значением <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="instanceId" /> является отрицательным числом или превышает значение <see cref="F:System.UInt32.MaxValue" />.  
  
 - или -  
  
 Значение параметра <paramref name="categoryId" /> является отрицательным числом или превышает значение <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName="CategoryId">
      <MemberSignature Language="C#" Value="public int CategoryId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.CategoryId" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает идентификатор ресурса, определяющий заданную приложением категорию записи о событии.</summary>
        <value>Числовое значение категории либо идентификатор ресурса, соответствующий строке, заданной в файле ресурсов категории для источника событий, или нуль, свидетельствующий об отсутствии категории для данного события. Значение по умолчанию равно нулю. Это означает, что для записи о событии категория отображаться не будет.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Категории журнала событий, определяемые приложением значения, которые помогают фильтровать события или указать дополнительные сведения о событии. Например приложение может определить отдельные категории для различных компонентов или операций.  
  
 Задать <xref:System.Diagnostics.EventInstance.CategoryId%2A> свойство, чтобы указать категорию, которая отображает журнал системных событий для записи. Категория может отображаться в средстве просмотра событий в виде числового значения, или он может использовать <xref:System.Diagnostics.EventInstance.CategoryId%2A> как ресурс на основе идентификатора для отображения локализованной строки категории от текущих языковых параметров.  
  
 Для отображения локализованных строк категории в средстве просмотра событий, необходимо использовать источник событий настройки с файлом ресурсов категории и <xref:System.Diagnostics.EventInstance.CategoryId%2A> идентификатор ресурса в файле ресурсов категории. Если источник событий не имеет настроенный файл ресурсов категории, или указанный <xref:System.Diagnostics.EventInstance.CategoryId%2A> индекс строки в файле ресурсов категории, а затем средство просмотра событий отображает числовое значение категории для этой записи.  
  
 Прежде чем писать категории событий с использованием идентификаторов ресурсов, необходимо зарегистрировать источник соответствующий файл ресурсов. Настройка файла ресурсов категории, вместе с количеством строк категорий в файле ресурсов с помощью <xref:System.Diagnostics.EventLogInstaller> или <xref:System.Diagnostics.EventSourceCreationData> класса. При определении строки категорий в файле ресурсов, категорий идентификаторы ресурсов должны быть пронумерованы последовательно, начиная с 1 до настроенного <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> значение свойства.  
  
 Категории событий являются необязательными. Если приложение использует категории, не устанавливайте <xref:System.Diagnostics.EventInstance.CategoryId%2A> для записи в журнале событий.  
  
 Дополнительные сведения об определении сообщения о событиях и построению файлов ресурсов, см. в разделе «Сообщения компилятора» в документации Platform SDK в [ http://msdn.microsoft.com ](http://msdn.microsoft.com/). Дополнительные сведения об определении категорий в файлах ресурсов см. в разделе «Категории событий» в пакете SDK для платформы  
  
   
  
## Examples  
 В следующем примере кода вносит запись информационное событие, а затем использует <xref:System.Diagnostics.EventInstance> записи события предупреждения в существующий журнал событий. Текст сообщения события задается с помощью идентификатора ресурса в файле ресурсов сообщения. В примере кода предполагается, что соответствующий файл ресурсов сообщения был зарегистрирован для источника.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов EventLogMsgs.dll. Текстовый файл сообщения — источник, из которого создается файле ресурсов сообщения. В текстовом файле сообщения определяет идентификаторы ресурсов и текст категории, сообщение о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано отрицательное значением или значение, превышающее <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryType EntryType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.EventLogEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public Property EntryType As EventLogEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryType EntryType { System::Diagnostics::EventLogEntryType get(); void set(System::Diagnostics::EventLogEntryType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип события для записи в журнале событий.</summary>
        <value>Значение <see cref="T:System.Diagnostics.EventLogEntryType" />, обозначающее тип записи о событии. Значение по умолчанию — <see cref="F:System.Diagnostics.EventLogEntryType.Information" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждое событие имеет одного типа, определяемый приложением при записи этого события. Средство просмотра событий использует тип события для определения значка, отображаемого в представлении списка журнала событий.  
  
   
  
## Examples  
 В следующем примере кода вносит запись информационное событие, а затем использует <xref:System.Diagnostics.EventInstance> записи события предупреждения в существующий журнал событий. Текст сообщения события задается с помощью идентификатора ресурса в файле ресурсов сообщения. В примере кода предполагается, что соответствующий файл ресурсов сообщения был зарегистрирован для источника.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов EventLogMsgs.dll. Текстовый файл сообщения — источник, из которого создается файле ресурсов сообщения. В текстовом файле сообщения определяет идентификаторы ресурсов и текст категории, сообщение о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Для свойства не задано допустимое значение <see cref="T:System.Diagnostics.EventLogEntryType" />.</exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.EntryType" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public long InstanceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceId { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает идентификатор ресурса, определяющий текст сообщения для записи о событии.</summary>
        <value>Идентификатор ресурса, соответствующий строке, заданной в файле ресурсов сообщения для источника событий.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventInstance.InstanceId%2A> Свойство однозначно определяет запись событий для источника событий. Для события, определенные в файлах ресурсов сообщений <xref:System.Diagnostics.EventInstance.InstanceId%2A> соответствует идентификатору ресурса, скомпилированного из полей определений сообщения в текстовом файле. Приложение может вносить записи локализованных событий журнала, установив <xref:System.Diagnostics.EventInstance.InstanceId%2A> идентификатор ресурса. Средство просмотра событий использует <xref:System.Diagnostics.EventInstance.InstanceId%2A> идентификатор ресурса для поиска и отображения соответствующей строки из локализованного файла ресурсов в зависимости от текущих языковых параметров. Перед тем как записывать события с использованием идентификаторов ресурсов, необходимо зарегистрировать источник в соответствующем файле ресурсов.  
  
 Дополнительные сведения об определении сообщения о событиях и создание файлов ресурсов журналов событий, см. в разделе «Сообщения компилятора» в документации Platform SDK в [ http://msdn.microsoft.com ](http://msdn.microsoft.com/). Дополнительные сведения об идентификаторах журнала событий см. в разделе «Идентификаторы событий» в пакете SDK для платформы.  
  
   
  
## Examples  
 В следующем примере кода вносит запись информационное событие, а затем использует <xref:System.Diagnostics.EventInstance> записи события предупреждения в существующий журнал событий. Текст сообщения события задается с помощью идентификатора ресурса в файле ресурсов сообщения. В примере кода предполагается, что соответствующий файл ресурсов сообщения был зарегистрирован для источника.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов EventLogMsgs.dll. Текстовый файл сообщения — источник, из которого создается файле ресурсов сообщения. В текстовом файле сообщения определяет идентификаторы ресурсов и текст категории, сообщение о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано отрицательное значением или значение, превышающее <see cref="F:System.UInt32.MaxValue" />.</exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.InstanceId" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      </Docs>
    </Member>
  </Members>
</Type>