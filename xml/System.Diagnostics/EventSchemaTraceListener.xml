<Type Name="EventSchemaTraceListener" FullName="System.Diagnostics.EventSchemaTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="abdcf6aaf89cf211719c282b059b7c15b4d68ff5" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061177" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSchemaTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSchemaTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventSchemaTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSchemaTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSchemaTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Направляет результаты трассировки или отладки сквозных событий в совместимый со схемой файл журнала в XML-представлении.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventSchemaTraceListener> Класс обеспечивает трассировку событий, совместимые со схемой начала до конца. End-to-end трассировку можно использовать для системы, в которой есть разнородные компоненты, которые пересекают потока, <xref:System.AppDomain>, процесса, а также компьютерами. Схема событий (в разделе [представление события для получателей события](http://go.microsoft.com/fwlink/?LinkId=78955)) был определен для реализации трассировки через эти границы. Схема позволяет добавлять пользовательские элементы, совместимые со схемой. Можно использовать [программы Service Trace Viewer (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) для отображения данных события.  
  
 <xref:System.Diagnostics.EventSchemaTraceListener> настраивается для ведения журнала производительности с неявную поддержку трассировки без блокировки.  
  
 <xref:System.Diagnostics.EventSchemaTraceListener> Класс преобразует трассировки и отладки сведения в поток данных текст в кодировке XML. В таблицах далее в этом разделе отображается описание выходные данные XML.  
  
 Можно включить или отключить <xref:System.Diagnostics.EventSchemaTraceListener> через файл конфигурации приложения, а затем использовать настроенного <xref:System.Diagnostics.EventSchemaTraceListener> объекта в приложении. Кроме того, можно создать <xref:System.Diagnostics.EventSchemaTraceListener> объекта в коде. Корпорация Майкрософт рекомендует включить прослушиватели трассировки в файле конфигурации приложения. Сведения об использовании файлов конфигурации для трассировки и отладки см. в разделе [отладки схема параметров трассировки и](http://msdn.microsoft.com/library/277ca5f6-e1c4-41b6-a47f-3a67ce5b94ac).  
  
 Чтобы настроить <xref:System.Diagnostics.EventSchemaTraceListener> объекта, измените файл конфигурации, соответствующий имени приложения. В этом файле можно добавить, удалить или задать свойства для прослушивателя. Файл конфигурации должен иметь следующий формат:  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sources>  
            <source name="TestSource" >  
                <listeners>  
                    <!--Remove the default trace listener for better performance.-->  
                    <remove name="Default"/>  
                    <!--Note: Removing the default trace listener prevents the dialog box   
                    from being displayed for Debug.Fail or Debug.Assert commands that are   
                    executed in user mode.-->  
                    <add name="eventListener"   
                      type="System.Diagnostics.EventSchemaTraceListener,  system.core"  
                      initializeData="TraceOutput.xml"   
                      traceOutputOptions="ProcessId, DateTime, Timestamp"   
                      bufferSize="65536"  
                      maximumFileSize="20480000"  
                      logRetentionOption="LimitedCircularFiles"  
                      maximumNumberOfFiles="2"/>  
                </listeners>  
            </source>  
        </sources>  
    </system.diagnostics>  
```  
  
 <xref:System.Diagnostics.EventSchemaTraceListener> Класс наследует <xref:System.Diagnostics.TraceListener.Filter%2A> свойства из базового класса <xref:System.Diagnostics.TraceListener>. <xref:System.Diagnostics.TraceListener.Filter%2A> Свойство обеспечивает дополнительный уровень фильтрации в прослушиватель трассировки. Если фильтр присутствует, `Trace` методы вызова прослушивателя трассировки <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> метод фильтра, чтобы определить, следует ли выводить трассировки.  
  
 Если попытка записи в файл, который уже используется или является недоступным, суффикс GUID автоматически добавляется к имени файла.  
  
> [!NOTE]
>  Методы прослушивателя предназначен для вызова методов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, и <xref:System.Diagnostics.TraceSource> классы. Не вызывайте методы прослушивателя непосредственно из кода приложения. <xref:System.Diagnostics.EventSchemaTraceListener> Прослушивателя в основном предназначен для использования с <xref:System.Diagnostics.TraceSource> класса.  
  
 В следующей таблице описаны элементы и атрибуты выходных XML.  
  
|Элемент|Атрибуты|Вывод|Примечания|  
|-------------|----------------|------------|-----------|  
|`CallStack`|Нет|Зависит от наличия <xref:System.Diagnostics.TraceOptions.Callstack> флаг в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Специальные символы, такие как > или < заменяются escape-последовательности. См. в таблице перевода escape-символов в следующей таблице.|  
|`Computer`|Нет|Всегда присутствует.|Этот элемент представляет значение <xref:System.Environment.MachineName%2A> свойства.|  
|`Correlation`|`ActivityID`|Всегда присутствует.|Если `ActivityID` не указан, значение по умолчанию — пустой GUID.|  
||`RelatedActivityID`|Зависит от наличия `relatedActivityId` параметр в `Trace` вызова метода.|`RelatedActivityID` Атрибут соответствует `relatedActivityId` параметр <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> метода.|  
|`Data`|Нет|Всегда присутствует.|Этот элемент представляет входные данные параметра (`data`). Для каждого объекта данных предусмотрен один элемент. В случае журналы событий `Data` элемент содержит escape-XML-данных. В случае журналы данных `Data` элемент содержит escape-последовательность данных. Данные в журнале выходных данных использует `ToString` метода переданное данных объектов.|  
|`Event`|Нет|Всегда присутствует.|Этот элемент содержит событие трассировки.|  
|`EventData`|Нет|Присутствует для журналов событий.|Этот элемент представляет входные данные параметра (`message`, `args`). Он содержит `Data` элементов с помощью escape-XML-данных, который создается путем вызова <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> метод.|  
|`EventID`|Нет|Всегда присутствует.|Этот элемент представляет входные данные параметра (`id`).|  
|`Execution`|`ProcessID`|Зависит от наличия <xref:System.Diagnostics.TraceOptions.ProcessId> флаг в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|`ProcessID` Задан в <xref:System.Diagnostics.TraceEventCache>. В Microsoft Windows 98 и Windows Millenium Edition операционные системы, если `ProcessID` больше, чем 2 147 483 647, оно является положительным представлением отрицательного числа и должны быть преобразованы для получения правильного идентификатора процесса.|  
||`ThreadID`|Когда представить `ProcessID` присутствует.|`ThreadID` Задан в <xref:System.Diagnostics.TraceEventCache>.|  
|`Level`|Нет|Всегда присутствует.|Этот элемент представляет входные данные параметра (числовое значение `eventType`). Значения параметров, размер которых превышает 255 выводятся как уровень 8, который представляет <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>. Типы событий трассировки <xref:System.Diagnostics.TraceEventType.Critical>, <xref:System.Diagnostics.TraceEventType.Error>, <xref:System.Diagnostics.TraceEventType.Warning>, <xref:System.Diagnostics.TraceEventType.Information>, и <xref:System.Diagnostics.TraceEventType.Verbose> выводятся как уровни 1, 2, 4, 8 и 10, соответственно.|  
|`LogicalOperationStack`|Нет|Зависит от наличия <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> флаг в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Может существовать только одна логическая операция. Таким образом, значения записываются в виде `LogicalOperation` узлов в `LogicalOperationStack` элемент.|  
|`OpCode`|Нет|Когда представить `Level` больше 255.|Этот элемент представляет типы события трассировки, числовые значения больше 255. <xref:System.Diagnostics.TraceEventType.Start>, <xref:System.Diagnostics.TraceEventType.Stop>, <xref:System.Diagnostics.TraceEventType.Suspend>, <xref:System.Diagnostics.TraceEventType.Resume>, или <xref:System.Diagnostics.TraceEventType.Transfer> выводятся как уровни 1, 2, 4, 8 и 10, соответственно.|  
|`Provider`|`GUID`|Всегда присутствует.|Всегда пустой.|  
|`RenderingInfo`|`Culture`|Всегда присутствует.|Этот атрибут представляет строку ресурса для типа событий. Всегда равно «en-EN\\».|  
|`System`|`Name`|Всегда присутствует.||  
|`TimeCreated`|`SystemTime`|Зависит от наличия <xref:System.Diagnostics.TraceOptions.DateTime> флаг в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Время — это значение <xref:System.Diagnostics.TraceEventCache.DateTime%2A?displayProperty=nameWithType> свойства. Это свойство выражается в формате UTC|  
|`TimeStamp`|Нет|Зависит от наличия <xref:System.Diagnostics.TraceOptions.Timestamp> флаг в <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> свойство.|Этот элемент задается в <xref:System.Diagnostics.TraceEventCache>.|  
|`UserData`|Нет|Присутствует для журналов данных.|Этот элемент содержит `Data` элементы с escape-последовательность, предоставленные пользователем данными из <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> метод.|  
  
 Следующая таблица показывает символы, которые заменяются в выходные данные XML. Экранирование происходит в элементы и атрибуты, за исключением `UserData` элемент, который содержит предоставленные пользователем, escape-последовательности данных. `UserData` Элемент является результатом вызовов <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> метод.  
  
|Escape-символ|Значение|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|"|&quot;|  
|\|&apos;|  
|0xD|&\#xD;|  
|0xA|&\#xA;|  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Diagnostics.EventSchemaTraceListener> класса.  
  
 [!code-cpp[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/CPP/eventschematracelistener.cpp#1)]
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Путь к файлу журнала.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" />, используя указанный файл в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию регистрируется один файл Неограниченный размер.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%29?displayProperty=nameWithType> конструктор.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Путь к файлу журнала.</param>
        <param name="name">Имя прослушивателя.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> заданным именем, используя указанный файл в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> конструктор.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileName">Путь к файлу журнала.</param>
        <param name="name">Имя прослушивателя.</param>
        <param name="bufferSize">Размер выходного буфера в байтах.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> заданным именем и указанным размером буфера, используя указанный файл в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По соображениям производительности `bufferSize` должно быть кратно 1024 байта.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> конструктор.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
      </Parameters>
      <Docs>
        <param name="fileName">Путь к файлу журнала.</param>
        <param name="name">Имя прослушивателя.</param>
        <param name="bufferSize">Размер выходного буфера в байтах.</param>
        <param name="logRetentionOption">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceLogRetentionOption" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> заданным именем и указанным размером буфера, используя указанный файл с заданной политикой хранения журнала в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По соображениям производительности `bufferSize` должно быть кратно 1024 байта.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%29?displayProperty=nameWithType> конструктор.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#4)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption, long maximumFileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption, int64 maximumFileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption, maximumFileSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption, long maximumFileSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
        <Parameter Name="maximumFileSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileName">Путь к файлу журнала.</param>
        <param name="name">Имя прослушивателя.</param>
        <param name="bufferSize">Размер выходного буфера в байтах.</param>
        <param name="logRetentionOption">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceLogRetentionOption" />.</param>
        <param name="maximumFileSize">Максимальный размер файла в байтах.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> заданным именем и указанным размером буфера, используя указанный файл с заданной политикой хранения и максимальным размером журнала в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По соображениям производительности `bufferSize` и `maximumFileSize` должно быть кратно 1024 байта. `maximumFileSize` не является абсолютным значением, это пороговое значение, которое может быть превышено вплоть до размера последнего сообщения.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%2CSystem.Int64%29?displayProperty=nameWithType> конструктор.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maximumFileSize" /> является отрицательным числом.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption, long maximumFileSize, int maximumNumberOfFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption, int64 maximumFileSize, int32 maximumNumberOfFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption, maximumFileSize As Long, maximumNumberOfFiles As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption, long maximumFileSize, int maximumNumberOfFiles);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
        <Parameter Name="maximumFileSize" Type="System.Int64" />
        <Parameter Name="maximumNumberOfFiles" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileName">Путь к файлу журнала.</param>
        <param name="name">Имя прослушивателя.</param>
        <param name="bufferSize">Размер выходного буфера в байтах.</param>
        <param name="logRetentionOption">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceLogRetentionOption" />.</param>
        <param name="maximumFileSize">Максимальный размер файла в байтах.</param>
        <param name="maximumNumberOfFiles">Максимальное количество выходных файлов журнала.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> заданным именем и указанным размером буфера, используя в качестве получателя выходных данных отладки и трассировки указанный файл с заданной политикой хранения и максимальным размером журнала, а также счетчиком файлов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По соображениям производительности `bufferSize` и `maximumFileSize` должно быть кратно 1024 байта. `maximumFileSize` не является абсолютным значением; Это пороговое значение, которое может быть превышено вплоть до размера последнего сообщения.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> конструктор. Данный пример кода является частью большего примера, приведенного для <xref:System.Diagnostics.EventSchemaTraceListener> класса.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#2)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maximumNumberOfFiles" /> меньше 2, а <paramref name="logRetentionOption" /> равно <see cref="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает размер выходного буфера.</summary>
        <value>Размер выходного буфера в байтах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства задается `bufferSize` параметр в конструкторе. Для повышения производительности размер буфера должно быть присвоено кратно 1024 байта. Мы рекомендуем размер 32 * 1024 байт по умолчанию, или 64\*1024 байта для достижения оптимальной производительности.  
  
   
  
## Examples  
 В следующем примере кода показано, как отобразить значение <xref:System.Diagnostics.EventSchemaTraceListener.BufferSize%2A> свойства. Данный пример кода является частью большего примера, приведенного для <xref:System.Diagnostics.EventSchemaTraceListener> класса.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает файл журнала данного прослушивателя. Теперь этот журнал не будет получать выходные данные отладки или трассировки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Записываемое базовое сообщение об ошибке.</param>
        <param name="detailMessage">Подробное сообщение об ошибке, дополняющее базовое сообщение об ошибке.</param>
        <summary>Записывает в файл журнала сведения об ошибках, в том числе базовое и подробное сообщение об ошибке.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает запись буферизованных данных в журнал этого прослушивателя.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает настраиваемые атрибуты конфигурации XML, поддерживаемые прослушивателем трассировки.</summary>
        <returns>Массив типа <see cref="T:System.String" />, содержащий атрибуты конфигурации XML, распознаваемые данным прослушивателем.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Настраиваемые атрибуты, возвращаемые этим методом может использоваться в XML-файл конфигурации для управления поведением экземпляра <xref:System.Diagnostics.EventSchemaTraceListener> класса. При использовании любого другого атрибута возникает исключение конфигурации. <xref:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes%2A> Метод <xref:System.Diagnostics.EventSchemaTraceListener> возвращает следующую строку в массив значений: «bufferSize», «logRetentionOption», «maximumFileSize» и «maximumNumberOfFiles».  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsThreadSafe { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли прослушиватель трассировки потокобезопасным.</summary>
        <value>Всегда возвращает значение <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как отобразить значение <xref:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe%2A> свойства. Данный пример кода является частью большего примера, приведенного для <xref:System.Diagnostics.EventSchemaTraceListener> класса.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#4)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumFileSize">
      <MemberSignature Language="C#" Value="public long MaximumFileSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumFileSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumFileSize { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает максимальный размер файла журнала.</summary>
        <value>Максимальный размер файла в байтах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства задается `maximumFileSize` параметра конструктору или `maximumFileSize` атрибут в файле конфигурации. Для повышения производительности максимальный размер файла должен присвоено кратно 1024 байта. <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> Значение свойства не является абсолютным; это пороговое значение, которое может быть превышено вплоть до размера последнего сообщения.  
  
 Ниже приведены возможные и значения по умолчанию для размера файла, связанные с каждой параметр хранения журнала трассировки. Указать, что значения, помеченные словом нет <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> для этого свойства не проверяется <xref:System.Diagnostics.TraceLogRetentionOption> значение.  
  
|TraceLogRetentionOption|Максимальный размер файла|Размер файла по умолчанию|  
|-----------------------------|-----------------------|-----------------------|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles>|Н/Д|-1|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles>|>0|4 КБ|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize>|>0|4 КБ|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize>|>0|4 КБ|  
|<xref:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles>|>0|4 КБ|  
  
   
  
## Examples  
 В следующем примере кода показано, как отобразить значение <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> свойства. Данный пример кода является частью большего примера, приведенного для <xref:System.Diagnostics.EventSchemaTraceListener> класса.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#6)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumNumberOfFiles">
      <MemberSignature Language="C#" Value="public int MaximumNumberOfFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumNumberOfFiles" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumNumberOfFiles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumNumberOfFiles { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает максимальное количество файлов журнала.</summary>
        <value>Максимальное количество файлов журнала, определяемое значением свойства <see cref="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" /> файла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства задается `maximumNumberOfFiles` параметра конструктору или `maximumNumberOfFiles` атрибут в файле конфигурации.  
  
 Ниже приведены возможные и значения по умолчанию для размера файла и число файлов, связанных с каждой параметр хранения журнала трассировки. Указать, что значения, помеченные словом нет <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> для этого свойства не проверяется <xref:System.Diagnostics.TraceLogRetentionOption> значение.  
  
|TraceLogRetentionOption|Максимальное число файлов|Число файлов по умолчанию|  
|-----------------------------|-----------------------------|-----------------------------|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles>|Н/Д|1|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles>|Н/Д|1|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize>|Н/Д|-1|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize>|>0|1|  
|<xref:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles>|>1|2|  
  
   
  
## Examples  
 В следующем примере кода показано, как отобразить значение <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> свойства. Данный пример кода является частью большего примера, приведенного для <xref:System.Diagnostics.EventSchemaTraceListener> класса.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#7)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает данные трассировки в файл журнала.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий идентификаторы текущего процесса и потока, а также информацию трассировки стека.</param>
        <param name="source">Имя источника.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="data">Порождаемый объект данных.</param>
        <summary>Записывает в файл журнала информацию трассировки, единичный объект данных и сведения о событии.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `eventCache`, `source`, `eventType`, И `id` в колонтитулы трассировки используются параметры. `id` Параметр преобразуется в целое число без знака, до их записи. Таким образом, отрицательное `id` значение записывается как большое положительное целое число. `data` Параметр записывается как `Data` узел в `UserData` элемент. `ToString` Метод объекта данных используется для преобразования объекта в строку.  
  
> [!IMPORTANT]
>  Этот метод не предназначен для вызова непосредственно из кода приложения. Вызывается с помощью методов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, и <xref:System.Diagnostics.TraceSource> классы для записи данных трассировки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий идентификаторы текущего процесса и потока, а также информацию трассировки стека.</param>
        <param name="source">Имя источника.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="data">Порождаемый массив объектов данных.</param>
        <summary>Записывает в файл журнала информацию трассировки, несколько объектов данных и сведения о событии.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `eventCache`, `source`, `eventType`, И `id` в колонтитулы трассировки используются параметры. `id` Параметр преобразуется в целое число без знака, до их записи. Таким образом, отрицательное `id` значение записывается как большое положительное целое число. Объекты в `data` записывается как массив параметров `Data` узлов в `UserData` элемент. `ToString` Метод каждого объекта данных используется для преобразования объекта в строку.  
  
> [!IMPORTANT]
>  Этот метод не предназначен для вызова непосредственно из кода приложения. Вызывается с помощью методов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, и <xref:System.Diagnostics.TraceSource> классы для записи данных трассировки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает информацию трассировки в файл журнала.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий идентификаторы текущего процесса и потока, а также информацию трассировки стека.</param>
        <param name="source">Имя источника.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="message">Сообщение для записи.</param>
        <summary>Записывает в файл журнала информацию трассировки, сообщение и сведения о событиях.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `eventCache`, `source`, `eventType`, И `id` в колонтитулы трассировки используются параметры. `id` Параметр преобразуется в целое число без знака, до их записи. Таким образом, отрицательное `id` значение записывается как большое положительное целое число. `message` Параметр записывается как `Data` узел в `EventData` элемент.  
  
> [!IMPORTANT]
>  Этот метод не предназначен для вызова непосредственно из кода приложения. Вызывается с помощью методов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, и <xref:System.Diagnostics.TraceSource> классы для записи данных трассировки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий идентификаторы текущего процесса и потока, а также информацию трассировки стека.</param>
        <param name="source">Имя источника.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="format">Строка формата, содержащая 0 или больше элементов форматирования, соответствующих объектам в массиве <c>args</c>.</param>
        <param name="args">Массив объектов, содержащий нуль или более форматируемых объектов.</param>
        <summary>Записывает в файл журнала информацию трассировки, форматированное сообщение и сведения о событиях.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `eventCache`, `source`, `eventType`, И `id` в колонтитулы трассировки используются параметры. `id` Параметр преобразуется в целое число без знака, до их записи. Таким образом, отрицательное `id` значение записывается как большое положительное целое число. <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> Вызывается метод и `format` строки и `args` массива, передаются в качестве параметров. Этот метод форматирует `args` массив объектов и записывает форматированный массив как `Data` узел в `EventData` элемент.  
  
> [!IMPORTANT]
>  Этот метод не предназначен для вызова непосредственно из кода приложения. Вызывается с помощью методов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, и <xref:System.Diagnostics.TraceSource> классы для записи данных трассировки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceLogRetentionOption">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceLogRetentionOption As TraceLogRetentionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceLogRetentionOption TraceLogRetentionOption { System::Diagnostics::TraceLogRetentionOption get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceLogRetentionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает для файла параметр хранения журнала трассировки.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Diagnostics.TraceLogRetentionOption" />. Значение по умолчанию: <see cref="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как отобразить значение <xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A> свойства. Данный пример кода является частью большего примера, приведенного для <xref:System.Diagnostics.EventSchemaTraceListener> класса.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#9)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий идентификаторы текущего процесса и потока, а также информацию трассировки стека.</param>
        <param name="source">Имя источника.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="message">Сообщение трассировки для записи.</param>
        <param name="relatedActivityId">Структура <see cref="T:System.Guid" />, идентифицирующая связанное действие.</param>
        <summary>Записывает в файл журнала информацию трассировки, включая удостоверение связанного действия, сообщение и сведения о событии.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> Метод позволяет сопоставлять связанные трассировки. `eventCache`, `source`, `id`, И `relatedActivityId` в колонтитулы трассировки используются параметры. `id` Параметр преобразуется в целое число без знака, до их записи. Таким образом, отрицательное `id` значение записывается как большое положительное целое число. `message` Параметр записывается как `Data` элемента. <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> Метод вызывается для преобразования `relatedActivityId` значение «B» в формате строки, которая отображается в заголовке. `Opcode` Элемент в нижнем колонтитуле определяет тип события трассировки, как <xref:System.Diagnostics.TraceEventType.Transfer>.  
  
> [!IMPORTANT]
>  <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> Метод не должен вызываться кодом приложения. Он предназначен для использования <xref:System.Diagnostics.TraceSource> для выпуска данные трассировки для ее <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение для записи.</param>
        <summary>Записывает сообщение в файл журнала, не указывая какой-либо дополнительной контекстной информации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> Метод вызывается в журнал сообщение как <xref:System.Diagnostics.TraceEventType.Information> событий.  
  
> [!IMPORTANT]
>  Этот метод не предназначен для вызова непосредственно из кода приложения. Вызывается с помощью методов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, и <xref:System.Diagnostics.TraceSource> классы для записи данных трассировки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение для записи.</param>
        <summary>Записывает в файл журнала сообщение, после которого следует текущий разделитель строк, без какой-либо дополнительной контекстной информации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> Метод вызывается в журнал сообщение как <xref:System.Diagnostics.TraceEventType.Information> событий.  
  
> [!IMPORTANT]
>  Этот метод не предназначен для вызова непосредственно из кода приложения. Вызывается с помощью методов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, и <xref:System.Diagnostics.TraceSource> классы для записи данных трассировки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Writer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.Writer" />
      <MemberSignature Language="VB.NET" Value="Public Property Writer As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Writer { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает основной модуль записи текста, записывающий данные в файл журнала.</summary>
        <value>Объект <see cref="T:System.IO.TextWriter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Попытка использовать метод доступа set для <xref:System.Diagnostics.EventSchemaTraceListener.Writer%2A> свойство вызывает <xref:System.NotSupportedException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Предпринята попытка присвоить значение свойству <see cref="P:System.Diagnostics.EventSchemaTraceListener.Writer" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>