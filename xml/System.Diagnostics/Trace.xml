<Type Name="Trace" FullName="System.Diagnostics.Trace">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e42fd94386357117b180964fe8e0ea782e8fcab0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36674308" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Trace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Trace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Trace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Trace" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trace sealed" />
  <TypeSignature Language="F#" Value="type Trace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c0e1b-101">Предоставляет набор методов и свойств, используемых при трассировке выполнения кода.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0e1b-101">Provides a set of methods and properties that help you trace the execution of your code.</span>
      </span>
      <span data-ttu-id="c0e1b-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0e1b-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-103">Можно использовать свойства и методы в <xref:System.Diagnostics.Trace> создает класс для инструментирования выпуска.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-103">You can use the properties and methods in the <xref:System.Diagnostics.Trace> class to instrument release builds.</span></span> <span data-ttu-id="c0e1b-104">Инструментирование позволяет отслеживать работоспособность вашего приложения, работающего в реальных условиях.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-104">Instrumentation allows you to monitor the health of your application running in real-life settings.</span></span> <span data-ttu-id="c0e1b-105">С помощью трассировки выявления проблем и исправлять их, не нарушая работающей системе.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-105">Tracing helps you isolate problems and fix them without disturbing a running system.</span></span>  
  
 <span data-ttu-id="c0e1b-106">Этот класс предоставляет методы для отображения <xref:System.Diagnostics.Trace.Assert%2A> диалоговое окно и для выдачи утверждения, которое всегда будет <xref:System.Diagnostics.Trace.Fail%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-106">This class provides methods to display an <xref:System.Diagnostics.Trace.Assert%2A> dialog box, and to emit an assertion that will always <xref:System.Diagnostics.Trace.Fail%2A>.</span></span> <span data-ttu-id="c0e1b-107">Этот класс предоставляет методы для записи в следующие варианты: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, и <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-107">This class provides write methods in the following variations: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, and <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="c0e1b-108"><xref:System.Diagnostics.BooleanSwitch> И <xref:System.Diagnostics.TraceSwitch> классы предоставляют средства для динамического управления выходные данные трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-108">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="c0e1b-109">Значения этих параметров можно изменять без перекомпиляции приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-109">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="c0e1b-110">Сведения об использовании файла конфигурации для задания переключателя см. в разделе <xref:System.Diagnostics.Switch> класса и [как: создание, инициализация и настройка переключателей трассировки](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-110">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="c0e1b-111">Целевой выходные данные трассировки можно настроить путем добавления <xref:System.Diagnostics.TraceListener> или удалив экземпляры из <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-111">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="c0e1b-112"><xref:System.Diagnostics.Trace.Listeners%2A> Коллекции является общим для обоих <xref:System.Diagnostics.Debug> и <xref:System.Diagnostics.Trace> классы; Добавление прослушивателя трассировки для каждого класса добавляет прослушиватель оба.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-112">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="c0e1b-113">По умолчанию выходные данные трассировки создается с помощью <xref:System.Diagnostics.DefaultTraceListener> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-113">By default, trace output is emitted using the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-114">Добавление прослушивателя трассировки в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции может вызвать исключение во время трассировки, если ресурс, используемый прослушивателем трассировки не доступен.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-114">Adding a trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="c0e1b-115">Условия и возникновение исключения зависят от прослушивателя трассировки и не могут быть перечислены в этом разделе.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-115">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="c0e1b-116">Может оказаться полезным звонить <xref:System.Diagnostics.Trace> методы в `try` / `catch` блоков для обнаружения и обработки исключений в прослушиватели трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-116">It may be useful to place calls to the <xref:System.Diagnostics.Trace> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-117">При добавлении прослушивателей трассировки для частично доверенного кода, вы получите <xref:System.Security.SecurityException> исключения, поскольку Добавление прослушивателей трассировки требуется <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> разрешение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-117">If you add trace listeners to partially trusted code, you will get a <xref:System.Security.SecurityException> exception, because adding trace listeners requires <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission.</span></span> <span data-ttu-id="c0e1b-118">Для трассировки частично доверенный код, который выполняется в "песочнице" в Visual Studio, не следует добавлять прослушиватели трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-118">To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</span></span> <span data-ttu-id="c0e1b-119">Вместо этого просмотра <xref:System.Diagnostics.Trace> и <xref:System.Diagnostics.Debug> сообщений в **вывода** окна.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-119">Instead, view the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> messages in the **Output** window.</span></span>  
  
 <span data-ttu-id="c0e1b-120"><xref:System.Diagnostics.Trace> Класс предоставляет свойства, чтобы получить или задать уровень <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, а также необходимость <xref:System.Diagnostics.Trace.AutoFlush%2A> после каждой операции записи.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-120">The <xref:System.Diagnostics.Trace> class provides properties to get or set the level of <xref:System.Diagnostics.Trace.Indent%2A>, the <xref:System.Diagnostics.Trace.IndentSize%2A>, and whether to <xref:System.Diagnostics.Trace.AutoFlush%2A> after each write.</span></span>  
  
 <span data-ttu-id="c0e1b-121">Чтобы задать <xref:System.Diagnostics.Trace.AutoFlush%2A> и <xref:System.Diagnostics.Trace.IndentSize%2A> для <xref:System.Diagnostics.Trace>, можно изменить файл конфигурации, соответствующий имени приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-121">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="c0e1b-122">Файл конфигурации форматируются как в следующем примере:</span><span class="sxs-lookup"><span data-stu-id="c0e1b-122">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="c0e1b-123"><xref:System.Diagnostics.ConditionalAttribute> Атрибут применяется к методам <xref:System.Diagnostics.Trace>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-123">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Trace>.</span></span> <span data-ttu-id="c0e1b-124">Компиляторы, поддерживающие <xref:System.Diagnostics.ConditionalAttribute> игнорировать вызовы этих методов «TRACE» не определен как символ условной компиляции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-124">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="c0e1b-125">Компилятор документации, чтобы определить, является ли <xref:System.Diagnostics.ConditionalAttribute> поддерживается и синтаксис для определения символа условной компиляции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-125">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-126">В проектах Visual Studio, по умолчанию для отладочных построений определен символ условной компиляции «Отладка» и символ «TRACE» должен быть определен для отладочных построений и окончательные сборки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-126">In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="c0e1b-127">Сведения о том, как отключить это поведение, см. в документации Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-127">For information about how to disable this behavior, see the Visual Studio documentation.</span></span>  
  
 <span data-ttu-id="c0e1b-128">Чтобы определить символ условной компиляции «TRACE» в C#, добавьте `/d:TRACE` параметр в командную строку компилятора при компиляции кода с помощью командной строки или добавить `#define TRACE` в начало файла.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-128">To define the "TRACE" conditional compilation symbol in C#, add the `/d:TRACE` option to the compiler command line when you compile your code using a command line, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="c0e1b-129">В Visual Basic добавьте `/d:TRACE=True` параметр в командной строке компилятора или добавить `#Const TRACE=True` в файл.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-129">In Visual Basic, add the `/d:TRACE=True` option to the compiler command line or add `#Const TRACE=True` to the file.</span></span>  
  
 <span data-ttu-id="c0e1b-130"><xref:System.Diagnostics.ConditionalAttribute> не поддерживается компилятором C++.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-130"><xref:System.Diagnostics.ConditionalAttribute> is not supported by the C++ compiler.</span></span> <span data-ttu-id="c0e1b-131">Чтобы обеспечить аналогичную функциональность, необходимо заключить вызовы методов <xref:System.Diagnostics.Trace> в `#if defined(TRACE) ... #endif` блокировку и добавить `/DTRACE` параметр в командной строке компилятора или добавить `#define TRACE` в файл.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-131">To provide equivalent functionality, you must enclose calls to the methods of <xref:System.Diagnostics.Trace> in an `#if defined(TRACE) ... #endif` block, and add the `/DTRACE` option to the compiler command line or add `#define TRACE` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-132">В следующем примере используется <xref:System.Diagnostics.Trace> для определения начала и завершения выполнения программы.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-132">The following example uses <xref:System.Diagnostics.Trace> to indicate the beginning and the end of a program's execution.</span></span> <span data-ttu-id="c0e1b-133">В примере также используется <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> и <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> методов, чтобы отличить выходные данные трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-133">The example also uses the <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> methods to distinguish the tracing output.</span></span> <span data-ttu-id="c0e1b-134">Более полный пример использования <xref:System.Diagnostics.Trace>, в разделе [как: добавление операторов трассировки в код приложения](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span><span class="sxs-lookup"><span data-stu-id="c0e1b-134">For a more complete example of the use of <xref:System.Diagnostics.Trace>, see [How to: Add Trace Statements to Application Code](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span></span>  
  
 [!code-cpp[Classic Trace Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace Example/CS/source.cs#1)]
 [!code-vb[Classic Trace Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="c0e1b-135">для работы с неуправляемым кодом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0e1b-135">for operating with unmanaged code.</span>
      </span>
      <span data-ttu-id="c0e1b-136">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0e1b-136">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      </span>
      <span data-ttu-id="c0e1b-137">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="c0e1b-137">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="c0e1b-138">Данный тип потокобезопасен.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0e1b-138">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-139">Проверяет условие; если условие имеет значение <see langword="false" />, выводит сообщения и отображает окно сообщения со стеком вызовов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-139">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Trace.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-140">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-140">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="c0e1b-141">Если условие имеет значение <see langword="true" />, сообщение о сбое не отправляется и не отображается окно сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-141">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-142">Проверяет условие. Если условие имеет значение <see langword="false" />, отображается окно сообщения со стеком вызовов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-142">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-143">Используйте <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> создает метод, если вы хотите сделать утверждения в выпуске.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-143">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="c0e1b-144"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> Метод работает только в отладочных построениях.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-144">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="c0e1b-145">Дополнительные сведения см. в разделе [утверждения в управляемом коде](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="c0e1b-145">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="c0e1b-146">Как правило <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> метод используется для выявления ошибок логики во время разработки программ.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-146">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="c0e1b-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> вычисляет условие.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> evaluates the condition.</span></span> <span data-ttu-id="c0e1b-148">Если результатом является `false`, он отправляет сообщение о сбое для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-148">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="c0e1b-149">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> , или удалить одну из, <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-149">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="c0e1b-150">При выполнении приложения в режиме пользовательского интерфейса отображается окно сообщения, в котором показан стек вызовов с номерами файла и строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-150">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="c0e1b-151">Окно сообщения содержит три кнопки: **прервать**, **повторите**, и **Ignore**.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-151">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="c0e1b-152">Щелкнув **прервать** кнопка завершает работу приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-152">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="c0e1b-153">Щелкнув **повторите** отправляется кода в отладчике, если приложение выполняется в отладчике, или предлагает открыть отладчик, если это не так.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-153">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="c0e1b-154">Щелкнув **Ignore** продолжает выполняться с использованием следующей инструкции в коде.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-154">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-155">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-155">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="c0e1b-156">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-156">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="c0e1b-157"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="c0e1b-157">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="c0e1b-158">Можно изменить поведение <xref:System.Diagnostics.DefaultTraceListener> в файле конфигурации, который соответствует имени приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-158">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="c0e1b-159">В этом файле можно включить и отключить в окне сообщения assert или задать <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-159">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c0e1b-160">Файл конфигурации должен иметь следующий формат:</span><span class="sxs-lookup"><span data-stu-id="c0e1b-160">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-161">В следующем примере создается индекс для массива.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-161">The following example creates an index for an array.</span></span> <span data-ttu-id="c0e1b-162">Затем выполняется какое-либо действие, задающее значение индекса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-162">Then some action is performed that sets the value of the index.</span></span> <span data-ttu-id="c0e1b-163">Затем код вызывает <xref:System.Diagnostics.Trace.Assert%2A> для проверки индекса значение является допустимым.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-163">Next the code calls <xref:System.Diagnostics.Trace.Assert%2A> to verify the index value is valid.</span></span> <span data-ttu-id="c0e1b-164">Если оно является недопустимым, <xref:System.Diagnostics.Trace.Assert%2A> выводит стек вызовов.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-164">If it is not valid, the <xref:System.Diagnostics.Trace.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Trace.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-165">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-165">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="c0e1b-166">Если условие имеет значение <see langword="true" />, указанное сообщение не отправляется и окно сообщения не отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-166">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="c0e1b-167">Сообщение для отправки в коллекцию <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-167">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-168">Проверяет условие. Если условие имеет значение <see langword="false" />, выдается указанное сообщение и отображается окно сообщения со стеком вызовов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-168">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-169">Используйте <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> создает метод, если вы хотите сделать утверждения в выпуске.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-169">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="c0e1b-170"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> Метод работает только в отладочных построениях.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-170">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="c0e1b-171">Дополнительные сведения см. в разделе [утверждения в управляемом коде](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="c0e1b-171">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="c0e1b-172">Как правило <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> метод используется для выявления ошибок логики во время разработки программ.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-172">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="c0e1b-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> вычисляет условие.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> evaluates the condition.</span></span> <span data-ttu-id="c0e1b-174">Если результатом является `false`, он отправляет указанное сообщение диагностики для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-174">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="c0e1b-175">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> , или удалить одну из, <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-175">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="c0e1b-176">При выполнении приложения в режиме пользовательского интерфейса отображается окно сообщения, в котором показан стек вызовов с номерами файла и строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-176">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="c0e1b-177">Окно сообщения содержит три кнопки: **прервать**, **повторите**, и **Ignore**.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-177">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="c0e1b-178">Щелкнув **прервать** кнопка завершает работу приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-178">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="c0e1b-179">Щелкнув **повторите** отправляется кода в отладчике, если приложение выполняется в отладчике, или предлагает открыть отладчик, если это не так.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-179">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="c0e1b-180">Щелкнув **Ignore** продолжает выполняться с использованием следующей инструкции в коде.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-180">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-181">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-181">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="c0e1b-182">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-182">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="c0e1b-183"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="c0e1b-183">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="c0e1b-184">Можно изменить поведение <xref:System.Diagnostics.DefaultTraceListener> в файле конфигурации, который соответствует имени приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-184">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="c0e1b-185">В этом файле можно включить и отключить в окне сообщения assert или задать <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-185">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c0e1b-186">Файл конфигурации должен иметь следующий формат:</span><span class="sxs-lookup"><span data-stu-id="c0e1b-186">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-187">В следующем примере проверяется, чтобы убедиться, что `type` параметр является допустимым.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-187">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="c0e1b-188">Если `type` переданный — `null`, <xref:System.Diagnostics.Trace.Assert%2A> выводит сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-188">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-189">Условное выражение для вычисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-189">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="c0e1b-190">Если условие имеет значение <see langword="true" />, указанное сообщение не отправляется и окно сообщения не отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-190">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="c0e1b-191">Сообщение для отправки в коллекцию <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-191">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="c0e1b-192">Подробное сообщение для отправки в коллекцию <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-192">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-193">Проверяет условие. Если условие имеет значение <see langword="false" />, выдается два указанных сообщения и отображается окно сообщения со стеком вызовов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-193">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-194">Используйте <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> создает метод, если вы хотите сделать утверждения в выпуске.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-194">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="c0e1b-195"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> Метод работает только в отладочных построениях.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-195">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="c0e1b-196">Дополнительные сведения см. в разделе [утверждения в управляемом коде](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="c0e1b-196">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="c0e1b-197">Как правило <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> метод используется для выявления ошибок логики во время разработки программ.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-197">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="c0e1b-198"><xref:System.Diagnostics.Trace.Assert%2A> вычисляет условие.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-198"><xref:System.Diagnostics.Trace.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="c0e1b-199">Если результатом является `false`, он отправляет указанное сообщение диагностики и подробное сообщение <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-199">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="c0e1b-200">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> , или удалить одну из, <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-200">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="c0e1b-201">При выполнении приложения в режиме пользовательского интерфейса отображается окно сообщения, в котором показан стек вызовов с номерами файла и строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-201">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="c0e1b-202">Окно сообщения содержит три кнопки: **прервать**, **повторите**, и **Ignore**.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-202">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="c0e1b-203">Щелкнув **прервать** кнопка завершает работу приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-203">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="c0e1b-204">Щелкнув **повторите** отправляется кода в отладчике, если приложение выполняется в отладчике, или предлагает открыть отладчик, если это не так.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-204">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="c0e1b-205">Щелкнув **Ignore** продолжает выполняться с использованием следующей инструкции в коде.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-205">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-206">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-206">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="c0e1b-207">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-207">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="c0e1b-208"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="c0e1b-208">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="c0e1b-209">Можно изменить поведение <xref:System.Diagnostics.DefaultTraceListener> в файле конфигурации, который соответствует имени приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-209">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="c0e1b-210">В этом файле можно включить и отключить в окне сообщения assert или задать <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-210">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c0e1b-211">Файл конфигурации должен иметь следующий формат:</span><span class="sxs-lookup"><span data-stu-id="c0e1b-211">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-212">В следующем примере проверяется, чтобы убедиться, что `type` параметр является допустимым.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-212">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="c0e1b-213">Если `type` переданный — `null`, <xref:System.Diagnostics.Trace.Assert%2A> выводит сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-213">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Trace.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-214">Возвращает или задает вызов <see cref="M:System.Diagnostics.Trace.Flush" /> в <see cref="P:System.Diagnostics.Trace.Listeners" /> после каждой операции записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-214">Gets or sets whether <see cref="M:System.Diagnostics.Trace.Flush" /> should be called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0e1b-215">
            <see langword="true" />, если <see cref="M:System.Diagnostics.Trace.Flush" /> вызывается в <see cref="P:System.Diagnostics.Trace.Listeners" /> после каждой операции записи; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-215">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Trace.Flush" /> is called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-216">Значение по умолчанию: `false`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-216">The default is `false`.</span></span>  
  
 <span data-ttu-id="c0e1b-217">Сброс потока его основной кодировщик не очищается, пока не будет явно вызван метод <xref:System.Diagnostics.Trace.Flush%2A> или <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-217">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="c0e1b-218">Установка <xref:System.Diagnostics.Trace.AutoFlush%2A> для `true` означает, что данные будут сброшены из буфера в поток, но состояние кодировщика при этом не сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-218">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="c0e1b-219">Это позволяет кодировщику сохранить свое состояние (частичные символы), чтобы правильно выполнить кодировку следующего блока знаков.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-219">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="c0e1b-220">Этот сценарий влияет на кодировки UTF8 и UTF7, в которых определенные символы кодируются только после кодировщик получает соседние знаки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-220">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="c0e1b-221">Чтобы задать <xref:System.Diagnostics.Trace.AutoFlush%2A> и <xref:System.Diagnostics.Trace.IndentSize%2A> для <xref:System.Diagnostics.Trace>, можно также изменить файл конфигурации, соответствующий имени приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-221">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="c0e1b-222">Файл конфигурации форматируются как в следующем примере:</span><span class="sxs-lookup"><span data-stu-id="c0e1b-222">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c0e1b-223">для работы с неуправляемым кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-223">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="c0e1b-224">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="c0e1b-225">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Trace.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-226">Очищает выходной буфер, а затем закрывает <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-226">Flushes the output buffer, and then closes the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-227">Используйте этот метод при выводе в файл, например <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-227">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-228">Сброс потока его основной кодировщик не очищается, пока не будет явно вызван метод <xref:System.Diagnostics.Trace.Flush%2A> или <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-228">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="c0e1b-229">Установка <xref:System.Diagnostics.Trace.AutoFlush%2A> для `true` означает, что данные будут сброшены из буфера в поток, но состояние кодировщика при этом не сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-229">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="c0e1b-230">Это позволяет кодировщику сохранить свое состояние (частичные символы), чтобы правильно выполнить кодировку следующего блока знаков.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-230">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="c0e1b-231">Этот сценарий влияет на кодировки UTF8 и UTF7, в которых определенные символы кодируются только после кодировщик получает соседние знаки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-231">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-232">В следующем примере создается <xref:System.Diagnostics.TextWriterTraceListener> с именем `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-232">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="c0e1b-233">`myTextListener` использует <xref:System.IO.StreamWriter> вызывается `myOutputWriter` для записи в файл с именем `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-233">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="c0e1b-234">В примере создается файл, поток и средство записи текста, одна строка текста записывается в файл и затем сохраняет и закрывает выходные данные.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-234">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c0e1b-235">для работы с неуправляемым кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-235">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="c0e1b-236">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-236">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="c0e1b-237">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationManager">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.CorrelationManager CorrelationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.CorrelationManager CorrelationManager" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.CorrelationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrelationManager As CorrelationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::CorrelationManager ^ CorrelationManager { System::Diagnostics::CorrelationManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationManager : System.Diagnostics.CorrelationManager" Usage="System.Diagnostics.Trace.CorrelationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CorrelationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-238">Получает диспетчер корреляции для потока для данной трассировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-238">Gets the correlation manager for the thread for this trace.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0e1b-239">Объект <see cref="T:System.Diagnostics.CorrelationManager" />, связанный с потоком для данной трассировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-239">The <see cref="T:System.Diagnostics.CorrelationManager" /> object associated with the thread for this trace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-240">Это дополнительное свойство, большинство приложений не следует использовать.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-240">This is an advanced property that most applications should not have occasion to use.</span></span>  
  
 <span data-ttu-id="c0e1b-241"><xref:System.Diagnostics.CorrelationManager> Класс предоставляет методы для сохранения удостоверения логической операции в контексте с привязкой к потоку и автоматически отмечает каждое событие трассировки, созданное потоком с сохраненного удостоверения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-241">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c0e1b-242">для работы с неуправляемым кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-242">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="c0e1b-243">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-243">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="c0e1b-244">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-244">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.CorrelationManager" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-245">Порождает сообщение об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-245">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Trace.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0e1b-246">Выдаваемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-246">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-247">Выдает указанное сообщение об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-247">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-248">Поведение по умолчанию для прослушивателя трассировки по умолчанию — вывод `message` параметр в окно сообщения при выполнении приложения в режиме пользовательского интерфейса и <xref:System.Diagnostics.TraceListener> экземпляров в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-248">The default behavior for the default trace listener is to output the `message` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-249">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-249">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="c0e1b-250">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-250">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="c0e1b-251"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="c0e1b-251">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="c0e1b-252">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> для или удалите его из, <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-252">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-253">В следующем примере используется <xref:System.Diagnostics.Trace.Fail%2A> метод печать сообщения во время обработки исключений.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-253">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c0e1b-254">Можно также использовать <xref:System.Diagnostics.Trace.Fail%2A> метода в операторе switch.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-254">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0e1b-255">Выдаваемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-255">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="c0e1b-256">Выдаваемое подробное сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-256">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-257">Выдает сообщение об ошибке и подробное сообщение об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-257">Emits an error message, and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-258">По умолчанию выполняется для прослушивателя трассировки по умолчанию для вывода `message` параметр и `detailedMessage` параметр в окно сообщения при выполнении приложения в режиме пользовательского интерфейса и <xref:System.Diagnostics.TraceListener> экземпляров в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции .</span><span class="sxs-lookup"><span data-stu-id="c0e1b-258">The default behavior is for the default trace listener to output the `message` parameter and the `detailedMessage` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-259">Отображение окна сообщения зависит от наличия <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-259">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="c0e1b-260">Если <xref:System.Diagnostics.DefaultTraceListener> не находится в <xref:System.Diagnostics.Trace.Listeners%2A> коллекции окно сообщения не отображается.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-260">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="c0e1b-261"><xref:System.Diagnostics.DefaultTraceListener> Можно удалить с [ &lt;снимите&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), или путем вызова <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> метод <xref:System.Diagnostics.Trace.Listeners%2A> свойство (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="c0e1b-261">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="c0e1b-262">Это поведение можно настроить, добавив <xref:System.Diagnostics.TraceListener> для или удалите его из, <xref:System.Diagnostics.Trace.Listeners%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-262">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-263">В следующем примере используется <xref:System.Diagnostics.Trace.Fail%2A> метод печать сообщения во время обработки исключений.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-263">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c0e1b-264">Можно также использовать <xref:System.Diagnostics.Trace.Fail%2A> метода в операторе switch.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-264">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Trace.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-265">Очищает выходной буфер и вызывает запись буферизованных данных в <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-265">Flushes the output buffer, and causes buffered data to be written to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-266">Сброс потока его основной кодировщик не очищается, пока не будет явно вызван метод <xref:System.Diagnostics.Trace.Flush%2A> или <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-266">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="c0e1b-267">Установка <xref:System.Diagnostics.Trace.AutoFlush%2A> для `true` означает, что данные будут сброшены из буфера в поток, но состояние кодировщика при этом не сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-267">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="c0e1b-268">Это позволяет кодировщику сохранить свое состояние (частичные символы), чтобы правильно выполнить кодировку следующего блока знаков.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-268">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="c0e1b-269">Этот сценарий влияет на кодировки UTF8 и UTF7, в которых определенные символы кодируются только после кодировщик получает соседние знаки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-269">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-270">В следующем примере создается <xref:System.Diagnostics.TextWriterTraceListener> с именем `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-270">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="c0e1b-271">`myTextListener` использует <xref:System.IO.StreamWriter> вызывается `myOutputWriter` для записи в файл с именем `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-271">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="c0e1b-272">В примере создается файл, поток и средство записи текста, одна строка текста записывается в файл и затем сохраняет и закрывает выходные данные.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-272">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-273">Уменьшает текущее значение <see cref="P:System.Diagnostics.Trace.IndentLevel" /> на единицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-273">Increases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c0e1b-274">Следующий пример увеличивается или уменьшается уровень отступа и выдаются сообщения трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-274">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c0e1b-275">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="c0e1b-275">This example produces the following output:</span></span>  
  
```  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Unindent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Trace.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-276">Возвращает или задает уровень отступа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-276">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0e1b-277">Уровень отступа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-277">The indent level.</span>
          </span>
          <span data-ttu-id="c0e1b-278">По умолчанию используется значение ноль.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-278">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-279"><xref:System.Diagnostics.Trace.IndentLevel%2A> Свойство представляет количество размер отступа <xref:System.Diagnostics.Trace.IndentSize%2A> применяется.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-279">The <xref:System.Diagnostics.Trace.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Trace.IndentSize%2A> is applied.</span></span> <span data-ttu-id="c0e1b-280">Это свойство хранится для каждого потока или для каждого запроса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-280">This property is stored on per-thread/per-request basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-281">Следующий пример увеличивается или уменьшается уровень отступа и выдаются сообщения трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-281">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c0e1b-282">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="c0e1b-282">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Trace.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-283">Возвращает или задает число пробелов в отступе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-283">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0e1b-284">Число пробелов в отступе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-284">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="c0e1b-285">Значение по умолчанию — четыре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-285">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-286">Объект <xref:System.Diagnostics.TextWriterTraceListener> интерпретирует это число как пробелы.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-286">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="c0e1b-287"><xref:System.Diagnostics.EventLogTraceListener> Игнорирует это значение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-287">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="c0e1b-288">Это свойство хранится для каждого потока или для каждого запроса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-288">This property is stored on per-thread/per-request basis.</span></span>  
  
 <span data-ttu-id="c0e1b-289">Чтобы задать <xref:System.Diagnostics.Trace.AutoFlush%2A> и <xref:System.Diagnostics.Trace.IndentSize%2A> для <xref:System.Diagnostics.Trace>, можно также изменить файл конфигурации, соответствующий имени приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-289">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="c0e1b-290">Файл конфигурации форматируются как в следующем примере:</span><span class="sxs-lookup"><span data-stu-id="c0e1b-290">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Trace.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-291">Получает коллекцию прослушивателей, отслеживающую выходные данные трассировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-291">Gets the collection of listeners that is monitoring the trace output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0e1b-292">Объект <see cref="T:System.Diagnostics.TraceListenerCollection" />, представляющий коллекцию типа <see cref="T:System.Diagnostics.TraceListener" />, отслеживающую выходные данные трассировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-292">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that represents a collection of type <see cref="T:System.Diagnostics.TraceListener" /> monitoring the trace output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-293">Прослушиватели осуществляют Форматированные выходные данные из выходных данных трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-293">The listeners produce formatted output from the trace output.</span></span> <span data-ttu-id="c0e1b-294">По умолчанию коллекция содержит экземпляр <xref:System.Diagnostics.DefaultTraceListener> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-294">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="c0e1b-295">Если вы хотите удалить прослушиватель по умолчанию, вызовите <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> метода и передать ему экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-295">If you want to remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="c0e1b-296">Перенаправлять выходные данные в окне консоли, нужно добавить экземпляр <xref:System.Diagnostics.ConsoleTraceListener> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-296">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-297"><xref:System.Diagnostics.Trace.Listeners%2A> Коллекции является общим для обоих <xref:System.Diagnostics.Debug> и <xref:System.Diagnostics.Trace> классы; Добавление прослушивателя трассировки для каждого класса добавляет прослушиватель оба.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-297">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-298">В следующем примере создается <xref:System.Diagnostics.ConsoleTraceListener> , выводящий данные в окно консоли.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-298">The following example creates a <xref:System.Diagnostics.ConsoleTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="c0e1b-299">Затем код добавляет новый прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-299">The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Trace.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c0e1b-300">для работы с неуправляемым кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-300">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="c0e1b-301">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="c0e1b-302">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh();" />
      <MemberSignature Language="F#" Value="static member Refresh : unit -&gt; unit" Usage="System.Diagnostics.Trace.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-303">Обновляет данные конфигурации трассировки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-303">Refreshes the trace configuration data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-304">Данные конфигурации трассировки записываются при запуске приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-304">Trace configuration data is captured when the application is started.</span></span> <span data-ttu-id="c0e1b-305">Если данные конфигурации был изменен после запуска приложения, вызовите <xref:System.Diagnostics.Trace.Refresh%2A> метод, чтобы обновить данные конфигурации трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-305">If the configuration data is changed after the application is started, call the <xref:System.Diagnostics.Trace.Refresh%2A> method to update the trace configuration data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceError">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-306">Записывает информацию об ошибке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-306">Writes error information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceError : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0e1b-307">Информационное сообщение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-307">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-308">Записывает сообщение об ошибке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, используя указанное сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-308">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-309"><xref:System.Diagnostics.Trace.TraceError%2A> вызовы `TraceEvent` метод для каждого прослушивателя трассировки с типом события трассировки <xref:System.Diagnostics.TraceEventType.Error>, передав информационное сообщение в качестве строки сообщения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-309"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceError : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceError (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c0e1b-310">Строка формата, не содержащая элементов формата или содержащая один либо несколько элементов формата, соответствующих объектам в массиве <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-310">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c0e1b-311">Массив <see langword="object" />, содержащий несколько объектов (или ни одного), которые необходимо отформатировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-311">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-312">Записывает сообщение об ошибке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, используя для этого указанный массив объектов и сведения о форматировании.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-312">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-313"><xref:System.Diagnostics.Trace.TraceError%2A> вызовы `TraceEvent` методы в прослушиватели трассировки с типом события трассировки <xref:System.Diagnostics.TraceEventType.Error>, передавая содержимое сообщения как массив объектов со сведениями о форматировании.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-313"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="c0e1b-314">В разделе <xref:System.String.Format%2A> Дополнительные сведения о `format` и `args` параметров.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-314">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-315">Записывает информационное сообщение в прослушиватели трассировки коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-315">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0e1b-316">Информационное сообщение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-316">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-317">Записывает информационное сообщение в прослушиватели трассировки коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, используя для этого указанное сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-317">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> вызовы `TraceEvent` метод для каждого прослушивателя трассировки с типом события трассировки <xref:System.Diagnostics.TraceEventType.Information>, передав информационное сообщение в качестве строки сообщения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c0e1b-319">Строка формата, не содержащая элементов формата или содержащая один либо несколько элементов формата, соответствующих объектам в массиве <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-319">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c0e1b-320">Массив <see langword="object" />, содержащий несколько объектов (или ни одного), которые необходимо отформатировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-320">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-321">Записывает информационное сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, используя для этого указанный массив объектов и сведения о форматировании.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-321">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> вызовы `TraceEvent` методы в прослушиватели трассировки с типом события трассировки <xref:System.Diagnostics.TraceEventType.Information>, передавая содержимое сообщения как массив объектов со сведениями о форматировании.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="c0e1b-323">В разделе <xref:System.String.Format%2A> Дополнительные сведения о `format` и `args` параметров.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-323">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceWarning">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-324">Записывает предупреждающую информацию в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-324">Writes warning information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0e1b-325">Информационное сообщение для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-325">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-326">Записывает предупреждение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, используя указанное сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-326">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> вызовы `TraceEvent` метод для каждого прослушивателя трассировки с типом события трассировки <xref:System.Diagnostics.TraceEventType.Warning>, передав информационное сообщение в качестве строки сообщения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` method for each trace listener with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c0e1b-328">Строка формата, не содержащая элементов формата или содержащая один либо несколько элементов формата, соответствующих объектам в массиве <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-328">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="c0e1b-329">Массив <see langword="object" />, содержащий несколько объектов (или ни одного), которые необходимо отформатировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-329">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-330">Записывает предупреждение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, используя для этого указанный массив объектов и сведения о форматировании.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-330">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> вызовы `TraceEvent` методы в прослушиватели трассировки с типом события трассировки <xref:System.Diagnostics.TraceEventType.Warning>, передавая содержимое сообщения как массив объектов со сведениями о форматировании.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="c0e1b-332">В разделе <xref:System.String.Format%2A> Дополнительные сведения о `format` и `args` параметров.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-332">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-333">Уменьшает текущее значение <see cref="P:System.Diagnostics.Trace.IndentLevel" /> на единицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-333">Decreases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c0e1b-334">Следующий пример увеличивается или уменьшается уровень отступа и выдаются сообщения трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-334">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c0e1b-335">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="c0e1b-335">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Indent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="UseGlobalLock">
      <MemberSignature Language="C#" Value="public static bool UseGlobalLock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseGlobalLock" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.UseGlobalLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseGlobalLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseGlobalLock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseGlobalLock : bool with get, set" Usage="System.Diagnostics.Trace.UseGlobalLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-336">Получает или задает значение, указывающее, следует ли использовать глобальную блокировку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-336">Gets or sets a value indicating whether the global lock should be used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0e1b-337">Значение <see langword="true" />, если нужно использовать глобальную блокировку; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-337">
              <see langword="true" /> if the global lock is to be used; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c0e1b-338">Значение по умолчанию: <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-338">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-339">Если прослушиватель трассировки не является потокобезопасным, независимо от значения всегда использовать глобальную блокировку <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-339">The global lock is always used if the trace listener is not thread safe, regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="c0e1b-340"><xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> Свойство позволяет определить, является ли прослушиватель потокобезопасным.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-340">The <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> property is used to determine if the listener is thread safe.</span></span> <span data-ttu-id="c0e1b-341">Не использовать глобальную блокировку только в том случае, если значение <xref:System.Diagnostics.Trace.UseGlobalLock%2A> — `false` и значение <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> — `true`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-341">The global lock is not used only if the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false` and the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true`.</span></span> <span data-ttu-id="c0e1b-342">Поведение по умолчанию является использование глобальной блокировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-342">The default behavior is to use the global lock.</span></span>  
  
 <span data-ttu-id="c0e1b-343">Чтобы задать <xref:System.Diagnostics.Trace.UseGlobalLock%2A> для <xref:System.Diagnostics.Trace>, можно также изменить файл конфигурации, соответствующий имени приложения.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-343">To set the <xref:System.Diagnostics.Trace.UseGlobalLock%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="c0e1b-344">Файл конфигурации форматируются как в следующем примере:</span><span class="sxs-lookup"><span data-stu-id="c0e1b-344">The configuration file should be formatted like the following example:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace useGlobalLock="false" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c0e1b-345">для работы с неуправляемым кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-345">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="c0e1b-346">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-346">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="c0e1b-347">Связанное перечисление:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-347">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-348">Записывает сведения о трассировке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-348">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Trace.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0e1b-349">Объект <see cref="T:System.Object" />, имя которого отправляется к <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-349">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-350">Записывает значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-350">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-351">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-351">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-352">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-352">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-353">ASP.NET предоставляет функциональные возможности трассировки адаптированные для веб-страниц.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-353">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="c0e1b-354">Запись сообщений трассировки на страницах ASP.NET, используйте <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-354">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c0e1b-355">По умолчанию в код, связанный с веб-страницу ASP.NET, инструкция `Trace.Write("...")` представляет собой вызов <xref:System.Web.TraceContext.Write%2A> метод <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-355">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c0e1b-356">Для использования <xref:System.Diagnostics.Trace?displayProperty=nameWithType> класса на веб-страницах, должен включать пространство имен, например, `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-356">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-357">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-357">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-358">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-358">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-359">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, в примере выводится имя `value` параметр <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-359">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the `value` parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-360">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-360">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-361">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится сообщение в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-361">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-362">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-362">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Trace.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0e1b-363">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-363">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-364">Записывает сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-364">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-365">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-366">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-367">ASP.NET предоставляет функциональные возможности трассировки адаптированные для веб-страниц.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-367">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="c0e1b-368">Запись сообщений трассировки на страницах ASP.NET, используйте <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-368">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c0e1b-369">По умолчанию в код, связанный с веб-страницу ASP.NET, инструкция `Trace.Write("...")` представляет собой вызов <xref:System.Web.TraceContext.Write%2A> метод <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-369">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c0e1b-370">Для использования <xref:System.Diagnostics.Trace?displayProperty=nameWithType> класса на веб-страницах, должен включать пространство имен, например, `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-370">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-371">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-371">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-372">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-372">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-373">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-373">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-374">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-374">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-375">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-375">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-376">Признак конца строки следует второе сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-376">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0e1b-377">Имя <see cref="T:System.Object" /> отправляется в <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-377">An <see cref="T:System.Object" /> name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="c0e1b-378">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-378">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-379">Записывает имя категории и значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-379">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-380">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-380">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-381">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-381">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="c0e1b-382">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-382">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-383">ASP.NET предоставляет функциональные возможности трассировки адаптированные для веб-страниц.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-383">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="c0e1b-384">Запись сообщений трассировки на страницах ASP.NET, используйте <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-384">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c0e1b-385">По умолчанию в код, связанный с веб-страницу ASP.NET, инструкция `Trace.Write("...")` представляет собой вызов <xref:System.Web.TraceContext.Write%2A> метод <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-385">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c0e1b-386">Для использования <xref:System.Diagnostics.Trace?displayProperty=nameWithType> класса на веб-страницах, должен включать пространство имен, например, `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-386">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-387">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-387">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-388">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-388">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-389">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Verbose`, в примере выводится имя `myObject` и `category` для <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-389">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-390">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-390">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-391">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Error` или выше, второе сообщение об ошибке выводится в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-391">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-392">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-392">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0e1b-393">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-393">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="c0e1b-394">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-394">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-395">Записывает имя категории и сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-395">Writes a category name and a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-396">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-396">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-397">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-397">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="c0e1b-398">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-398">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0e1b-399">ASP.NET предоставляет функциональные возможности трассировки адаптированные для веб-страниц.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-399">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="c0e1b-400">Запись сообщений трассировки на страницах ASP.NET, используйте <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-400">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c0e1b-401">По умолчанию в код, связанный с веб-страницу ASP.NET, инструкция `Trace.Write("...")` представляет собой вызов <xref:System.Web.TraceContext.Write%2A> метод <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-401">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c0e1b-402">Для использования <xref:System.Diagnostics.Trace?displayProperty=nameWithType> класса на веб-страницах, должен включать пространство имен, например, `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-402">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-403">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-403">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-404">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-404">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-405">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Verbose`, первое сообщение об ошибке выводится в примере <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-405">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-406">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-406">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-407">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Error` или выше, второе сообщение об ошибке выводится в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-407">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-408">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-408">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-409">Записывает сведения о трассировке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, если условие имеет значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-409">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-410">Значение <see langword="true" />, если требуется запись сообщения. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-410">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0e1b-411">Объект <see cref="T:System.Object" />, имя которого отправляется к <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-411">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-412">Записывает значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, если условие — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-412">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-413">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-413">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-414">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-414">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-415">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-415">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-416">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-416">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-417">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, в примере выводится имя параметра значения <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-417">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-418">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-418">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-419">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится сообщение в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-419">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-420">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-420">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0e1b-421">
            <para>Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> инструкции. В следующих двух примерах кода отправить то же сообщение отладки. Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" /> не вызывается <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся. Это может привести к ненужному выполнению произвольного сложного кода.  \*\* Первый пример \*\* ''' if(mySwitch.TraceError) Trace.Write («aNumber = "+ aNumber +"вне допустимого диапазона"); '' "\*\* Второй пример \*\* ''' Trace.WriteIf (mySwitch.TraceError, «aNumber =" + aNumber + "вне допустимого диапазона"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-421">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-422">Значение <see langword="true" />, если требуется запись сообщения. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-422">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="c0e1b-423">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-423">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-424">Записывает сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, если задано условие <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-424">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-425">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-425">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-426">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-426">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-427">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-427">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-428">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-428">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-429">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-429">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-430">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-430">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-431">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-431">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-432">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-432">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0e1b-433">
            <para>Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> инструкции. В следующих двух примерах кода отправить то же сообщение отладки. Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" /> не вызывается <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся. Это может привести к ненужному выполнению произвольного сложного кода.  \*\* Первый пример \*\* ''' if(mySwitch.TraceError) Trace.Write («aNumber = "+ aNumber +"вне допустимого диапазона"); '' "\*\* Второй пример \*\* ''' Trace.WriteIf (mySwitch.TraceError, «aNumber =" + aNumber + "вне допустимого диапазона"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-433">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-434">Значение <see langword="true" />, если требуется запись сообщения. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-434">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0e1b-435">Объект <see cref="T:System.Object" />, имя которого отправляется к <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-435">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="c0e1b-436">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-436">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-437">Записывает имя категории и значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, если задано условие <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-437">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-438">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-438">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-439">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-439">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="c0e1b-440">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-440">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-441">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-441">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-442">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-442">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-443">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Verbose`, в примере выводится имя `myObject` и `category` для <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-443">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-444">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-444">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-445">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Error` или выше, второе сообщение об ошибке выводится в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-445">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-446">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-446">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0e1b-447">
            <para>Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> инструкции. В следующих двух примерах кода отправить то же сообщение отладки. Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" /> не вызывается <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся. Это может привести к ненужному выполнению произвольного сложного кода.  \*\* Первый пример \*\* ''' if(mySwitch.TraceError) Trace.Write («aNumber = "+ aNumber +"вне допустимого диапазона"); '' "\*\* Второй пример \*\* ''' Trace.WriteIf (mySwitch.TraceError, «aNumber =" + aNumber + "вне допустимого диапазона"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-447">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-448">Значение <see langword="true" />, если требуется запись сообщения. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-448">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="c0e1b-449">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-449">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="c0e1b-450">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-450">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-451">Записывает имя категории и сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, если условие равно <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-451">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-452">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-452">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-453">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-453">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="c0e1b-454">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.Write%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-454">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-455">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-455">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-456">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-456">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-457">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Verbose`, первое сообщение об ошибке выводится в примере <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-457">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-458">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-458">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-459">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Error` или выше, второе сообщение об ошибке выводится в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-459">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-460">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-460">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0e1b-461">
            <para>Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> инструкции. В следующих двух примерах кода отправить то же сообщение отладки. Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" /> не вызывается <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся. Это может привести к ненужному выполнению произвольного сложного кода.  \*\* Первый пример \*\* ''' if(mySwitch.TraceError) Trace.Write («aNumber = "+ aNumber +"вне допустимого диапазона"); '' "\*\* Второй пример \*\* ''' Trace.WriteIf (mySwitch.TraceError, «aNumber =" + aNumber + "вне допустимого диапазона"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-461">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-462">Записывает сведения о трассировке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-462">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0e1b-463">Объект <see cref="T:System.Object" />, имя которого отправляется к <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-463">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-464">Записывает значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-464">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-465">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-465">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-466">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-466">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-467">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-467">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-468">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-468">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-469">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-469">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-470">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-470">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-471">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится имя объекта в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-471">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-472">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-472">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0e1b-473">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-473">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-474">Записывает сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-474">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-475">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-475">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-476">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-476">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-477">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-477">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-478">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-478">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-479">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-479">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-480">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-480">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-481">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-481">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-482">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-482">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0e1b-483">Объект <see cref="T:System.Object" />, имя которого отправляется к <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-483">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="c0e1b-484">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-484">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-485">Записывает имя категории и значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-485">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-486">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-486">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-487">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-487">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="c0e1b-488">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-488">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-489">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-489">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-490">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-490">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-491">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-491">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-492">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-492">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-493">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-493">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-494">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-494">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0e1b-495">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-495">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="c0e1b-496">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-496">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-497">Записывает имя категории и сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-497">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-498">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-498">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-499">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-499">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="c0e1b-500">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-500">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-501">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-501">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-502">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-502">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-503">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-503">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-504">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-504">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-505">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке и `category` в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-505">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-506">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-506">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0e1b-507">Записывает сведения о трассировке в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, если условие имеет значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-507">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-508">Значение <see langword="true" />, если требуется запись сообщения. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-508">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0e1b-509">Объект <see cref="T:System.Object" />, имя которого отправляется к <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-509">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-510">Записывает значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, если условие — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-510">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-511">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-511">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-512">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-512">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-513">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-513">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-514">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-514">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-515">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-515">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-516">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-516">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-517">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится имя объекта в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-517">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-518">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-518">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0e1b-519">
            <para>Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> инструкции. В следующих двух примерах кода отправить то же сообщение отладки. Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" /> не вызывается <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся. Это может привести к ненужному выполнению произвольного сложного кода.  \*\* Первый пример \*\* ''' if(mySwitch.TraceError) Trace.WriteLine («aNumber = "+ aNumber +"вне допустимого диапазона"); '' "\*\* Второй пример \*\* ''' Trace.WriteLineIf (mySwitch.TraceError, «aNumber =" + aNumber + "вне допустимого диапазона"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-519">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-520">Значение <see langword="true" />, если требуется запись сообщения. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-520">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="c0e1b-521">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-521">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-522">Записывает сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, если задано условие <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-522">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-523">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-523">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-524">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-524">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-525">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-525">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-526">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-526">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-527">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-527">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-528">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-528">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-529">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-529">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-530">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-530">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0e1b-531">
            <para>Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> инструкции. В следующих двух примерах кода отправить то же сообщение отладки. Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" /> не вызывается <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся. Это может привести к ненужному выполнению произвольного сложного кода.  \*\* Первый пример \*\* ''' if(mySwitch.TraceError) Trace.WriteLine («aNumber = "+ aNumber +"вне допустимого диапазона"); '' "\*\* Второй пример \*\* ''' Trace.WriteLineIf (mySwitch.TraceError, «aNumber =" + aNumber + "вне допустимого диапазона"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-531">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-532">Значение <see langword="true" />, если требуется запись сообщения. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-532">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0e1b-533">Объект <see cref="T:System.Object" />, имя которого отправляется к <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-533">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="c0e1b-534">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-534">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-535">Записывает имя категории и значение метода <see cref="M:System.Object.ToString" /> объекта в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, если задано условие <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-535">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-536">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-536">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-537">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-537">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="c0e1b-538">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-538">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-539">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-539">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-540">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-540">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-541">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-541">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-542">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-542">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-543">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-543">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-544">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-544">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0e1b-545">
            <para>Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> инструкции. В следующих двух примерах кода отправить то же сообщение отладки. Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" /> не вызывается <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся. Это может привести к ненужному выполнению произвольного сложного кода.  \*\* Первый пример \*\* ''' if(mySwitch.TraceError) Trace.WriteLine («aNumber = "+ aNumber +"вне допустимого диапазона"); '' "\*\* Второй пример \*\* ''' Trace.WriteLineIf (mySwitch.TraceError, «aNumber =" + aNumber + "вне допустимого диапазона"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-545">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="c0e1b-546">Значение <see langword="true" />, если требуется запись сообщения. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-546">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="c0e1b-547">Записываемое сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-547">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="c0e1b-548">Имя категории, используемое для систематизации выходных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-548">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0e1b-549">Записывает имя категории и сообщение в прослушиватели трассировки в коллекции <see cref="P:System.Diagnostics.Trace.Listeners" />, если условие равно <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-549">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0e1b-550">По умолчанию запись выходных данных в экземпляр <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-550">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="c0e1b-551">`category` Используется для группирования выходных сообщений.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-551">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="c0e1b-552">Этот метод вызывает метод <xref:System.Diagnostics.TraceListener.WriteLine%2A> метод прослушивателя трассировки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-552">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0e1b-553">В следующем примере создается <xref:System.Diagnostics.TraceSwitch> с именем `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-553">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="c0e1b-554">Этот переключатель задается вне примера кода.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-554">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="c0e1b-555">Если переключатель установлен в положение <xref:System.Diagnostics.TraceLevel> `Error` или более поздней версии, выдается первое сообщение об ошибке <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-555">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="c0e1b-556">Сведения о добавлении прослушиватель для <xref:System.Diagnostics.Trace.Listeners%2A> коллекции, в разделе <xref:System.Diagnostics.TraceListenerCollection> класса.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-556">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="c0e1b-557">Затем, если <xref:System.Diagnostics.TraceLevel> равно `Verbose`, выводится второе сообщение об ошибке и `category` в той же строке, что и первое сообщение.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-557">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="c0e1b-558">Второе сообщение следует признак конца строки.</span><span class="sxs-lookup"><span data-stu-id="c0e1b-558">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0e1b-559">
            <para>Можно свести к минимуму снижение производительности приложения с помощью <see langword="If...Then" /> операторов, а не с помощью <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> инструкции. В следующих двух примерах кода отправить то же сообщение отладки. Однако первый пример выполняется значительно быстрее при трассировке, поскольку если <c>mySwitch.TraceError</c> равен <see langword="false" /> не вызывается <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. Во втором примере всегда вызывает <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, даже если <c>mySwitch.TraceError</c> — <see langword="false" /> и выходные данные трассировки не выводятся. Это может привести к ненужному выполнению произвольного сложного кода.  \*\* Первый пример \*\* ''' if(mySwitch.TraceError) Trace.WriteLine («aNumber = "+ aNumber +"вне допустимого диапазона"); '' "\*\* Второй пример \*\* ''' Trace.WriteLineIf (mySwitch.TraceError, «aNumber =" + aNumber + "вне допустимого диапазона"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0e1b-559">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>