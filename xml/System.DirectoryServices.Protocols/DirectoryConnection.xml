<Type Name="DirectoryConnection" FullName="System.DirectoryServices.Protocols.DirectoryConnection">
  <TypeSignature Language="C#" Value="public abstract class DirectoryConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DirectoryConnection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DirectoryConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryConnection abstract" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7c533-101"><see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> — абстрактный класс, для которого невозможно создать экземпляр.</span><span class="sxs-lookup"><span data-stu-id="7c533-101">The <see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> class is an abstract class and cannot be instantiated.</span></span> <span data-ttu-id="7c533-102">Классы <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> или <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> используются для подключения к серверу каталогов.</span><span class="sxs-lookup"><span data-stu-id="7c533-102">Use the <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> or <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> classes to connect to a directory server.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DirectoryConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DirectoryConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DirectoryConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c533-103">Конструктор <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.#ctor" /> инициализирует новый экземпляр класса <see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" />.</span><span class="sxs-lookup"><span data-stu-id="7c533-103">The <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.#ctor" /> constructor initializes a new instance of a <see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c533-104">Свойство <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> задает один или несколько клиентских сертификатов, отправляемых для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="7c533-104">The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> property specifies one or more client certificates to send for authentication.</span></span></summary>
        <value><span data-ttu-id="7c533-105">Один или несколько клиентских сертификатов, отправляемых для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="7c533-105">One or more client certificates to send for authentication.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkCredential Credential { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DirectoryConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkCredential ^ Credential {  void set(System::Net::NetworkCredential ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c533-106">Свойство <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Credential" /> задает альтернативные учетные данные для объекта подключения.</span><span class="sxs-lookup"><span data-stu-id="7c533-106">The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Credential" /> property specifies alternate credentials for the connection object.</span></span></summary>
        <value><span data-ttu-id="7c533-107">Альтернативные учетные данные для объекта подключения.</span><span class="sxs-lookup"><span data-stu-id="7c533-107">Alternate credentials for the connection object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c533-108">Если не указан, значение по умолчанию — `null`.</span><span class="sxs-lookup"><span data-stu-id="7c533-108">If not specified, the default value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public virtual System.DirectoryServices.Protocols.DirectoryIdentifier Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.Protocols.DirectoryIdentifier Directory" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DirectoryConnection.Directory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Directory As DirectoryIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::DirectoryServices::Protocols::DirectoryIdentifier ^ Directory { System::DirectoryServices::Protocols::DirectoryIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c533-109">Свойство <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Directory" /> задает домен или сервер, к которому следует выполнить подключение.</span><span class="sxs-lookup"><span data-stu-id="7c533-109">The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Directory" /> property specifies the domain or the server to which the connection should be made.</span></span></summary>
        <value><span data-ttu-id="7c533-110">Домен или сервер, к которому следует выполнить подключение.</span><span class="sxs-lookup"><span data-stu-id="7c533-110">The domain or the server to which the connection should be made.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c533-111">Например «http://fabrikam.com/platforms/adssoap.dll» представляет сервер DSML и «контроллер домена 01.fabrikam.com» представляет сервера LDAP.</span><span class="sxs-lookup"><span data-stu-id="7c533-111">For example, "http://fabrikam.com/platforms/adssoap.dll" represents a DSML server and "dc-01.fabrikam.com" represents an LDAP server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public abstract System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendRequest (request As DirectoryRequest) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="7c533-112">Объект <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" />, содержащий запрос.</span><span class="sxs-lookup"><span data-stu-id="7c533-112">A <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object that contains the request.</span></span></param>
        <summary><span data-ttu-id="7c533-113">Метод <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> отправляет на сервер отдельную операцию с каталогом.</span><span class="sxs-lookup"><span data-stu-id="7c533-113">The <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> method sends a single directory operation to the server.</span></span></summary>
        <returns><span data-ttu-id="7c533-114">Объект <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" />, содержащий ответ сервера на операцию запроса.</span><span class="sxs-lookup"><span data-stu-id="7c533-114">A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object that contains the server response to the request operation.</span></span> <span data-ttu-id="7c533-115">Возвращенный объект ответа может отличаться от запрошенного, если сервер вернет другой ответ.</span><span class="sxs-lookup"><span data-stu-id="7c533-115">The returned response object may be different than the requested object if the server returns a different response.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DirectoryConnection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c533-116">Свойство <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Timeout" /> содержит продолжительность времени в секундах до тайм-аута подключения.</span><span class="sxs-lookup"><span data-stu-id="7c533-116">The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Timeout" /> property contains the length of time, in seconds, before the connection times out.</span></span></summary>
        <value><span data-ttu-id="7c533-117">Значение времени ожидания подключения (в секундах).</span><span class="sxs-lookup"><span data-stu-id="7c533-117">The length of time, in seconds, before the connection times out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c533-118">Тридцать секунд устанавливается по умолчанию время длина свойства.</span><span class="sxs-lookup"><span data-stu-id="7c533-118">Thirty seconds is the default time length property setting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>