<Type Name="PropertyValueUIItemInvokeHandler" FullName="System.Drawing.Design.PropertyValueUIItemInvokeHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="278e34e1ce07c81f9bcf7455f811bf2a01ec4538" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30406268" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyValueUIItemInvokeHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyValueUIItemInvokeHandler(context As ITypeDescriptorContext, descriptor As PropertyDescriptor, invokedItem As PropertyValueUIItem)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext ^ context, PropertyDescriptor ^ descriptor, PropertyValueUIItem ^ invokedItem);" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
    <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
    <Parameter Name="invokedItem" Type="System.Drawing.Design.PropertyValueUIItem" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context">Интерфейс <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> для свойства, связанного со значком, для которого был выполнен двойной щелчок.</param>
    <param name="descriptor">Свойство, связанное со значком, для которого был выполнен двойной щелчок.</param>
    <param name="invokedItem">Объект <see cref="T:System.Drawing.Design.PropertyValueUIItem" />, связанный со значком, для которого был выполнен двойной щелчок.</param>
    <summary>Представляет метод, обрабатывающий событие <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> объекта <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дважды щелкните значок в окне «Свойства» будут вызывать <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> событие <xref:System.Drawing.Design.PropertyValueUIItem> , значок, связанный с. <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> События обычно запускает пользовательский интерфейс (UI), чтобы изменить значение свойства. Добавить <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> для <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> свойство <xref:System.Drawing.Design.PropertyValueUIItem> присвоить обработчик событий для выполнения соответствующего расширения функциональности при двойном щелчке значка, отображаемого рядом с именем свойства.  
  
 При создании делегата <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> необходимо указать метод, обрабатывающий событие. Чтобы связать событие с обработчиком событий, нужно добавить в событие экземпляр делегата. Обработчик событий вызывается всякий раз, когда происходит событие, если делегат не удален. Дополнительные сведения о делегатах-обработчиках событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Следующий пример кода возвращает <xref:System.Drawing.Design.PropertyValueUIItem> объекта для всех свойств компонента с именем `HorizontalMargin` или `VerticalMargin`. <xref:System.Drawing.Design.PropertyValueUIItem> Для этих свойств предоставляет изображение, подсказку и обработчик событий, отображает окно сообщения, при щелчке изображения для этого свойства. Данный пример кода является частью большего примера, приведенного для <xref:System.Drawing.Design.IPropertyValueUIService> интерфейса.  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
</Type>