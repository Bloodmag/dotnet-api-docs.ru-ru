<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="505a37abd33a073266c9d007345cfd6abcc97978" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37659013" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPath = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e3b73-101">Представляет последовательность соединенных линий и кривых.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3b73-101">Represents a series of connected lines and curves.</span>
      </span>
      <span data-ttu-id="e3b73-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3b73-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-103">Приложения используют пути для рисования контуров, фигур, заливки фигур и создания отсеченных областей.</span><span class="sxs-lookup"><span data-stu-id="e3b73-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="e3b73-104">Графики поддерживает координаты геометрических фигур в пути в мировом пространстве координат.</span><span class="sxs-lookup"><span data-stu-id="e3b73-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="e3b73-105">Путь может состоять из произвольного числа фигур (субконтуров).</span><span class="sxs-lookup"><span data-stu-id="e3b73-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="e3b73-106">Каждая фигура либо представляет собой последовательность соединенных линий и кривых либо примитивов геометрические фигуры.</span><span class="sxs-lookup"><span data-stu-id="e3b73-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="e3b73-107">Начальная точка фигуры является первой точки последовательность соединенных линий и кривых.</span><span class="sxs-lookup"><span data-stu-id="e3b73-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="e3b73-108">Конечная точка является последней точкой в последовательности.</span><span class="sxs-lookup"><span data-stu-id="e3b73-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="e3b73-109">Начальную и конечную точки примитивов геометрические фигуры определены его спецификацией.</span><span class="sxs-lookup"><span data-stu-id="e3b73-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="e3b73-110">Фигура, состоящая из последовательность соединенных линий и кривых, (возможно, которого начальную и конечную точки гладкой) является незамкнутой фигуры, если он не будет явно закрыт.</span><span class="sxs-lookup"><span data-stu-id="e3b73-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="e3b73-111">Рисунок можно закрыть явно, с помощью <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> метод, который замыкает текущую фигуру путем соединения начальной точки строки конечной точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="e3b73-112">Фигура, состоящая из геометрического примитива является замкнутую фигуру.</span><span class="sxs-lookup"><span data-stu-id="e3b73-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="e3b73-113">В целях заполнения и отсечения (например, в том случае, если путь отображается с помощью <xref:System.Drawing.Graphics.FillPath%2A>), то все открытые данные будут закрыты, добавив строку с первой точки рисунка в зависимости от последней точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="e3b73-114">Новой фигуры запускается неявно в том случае, когда создается путь или замкнутой.</span><span class="sxs-lookup"><span data-stu-id="e3b73-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="e3b73-115">Новая фигура создается явно при <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="e3b73-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="e3b73-116">При добавлении примитивов геометрические фигуры в контур добавляет фигуру, содержащую геометрическую форму и также неявно открывает новую фигуру.</span><span class="sxs-lookup"><span data-stu-id="e3b73-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="e3b73-117">Следовательно всегда найдется текущую фигуру в пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="e3b73-118">При добавлении линии и кривые к пути строку неявное добавляется как необходимые для подключения конечной точки текущую фигуру к начальную точку новой линий и кривых, чтобы сформировать последовательность соединенных линий и кривых.</span><span class="sxs-lookup"><span data-stu-id="e3b73-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="e3b73-119">У фигуры есть направление, определяющее, как отрезки прямых и кривых следуют от начальную и конечную точку.</span><span class="sxs-lookup"><span data-stu-id="e3b73-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="e3b73-120">Направление определяется в порядке, в котором линии и кривые добавляются к фигуре или определяется примитивов геометрические фигуры.</span><span class="sxs-lookup"><span data-stu-id="e3b73-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="e3b73-121">Направление используется в определении внутренние пути для обрезки и заливки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-122">Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с перечислением <see cref="T:System.Drawing.Drawing2D.FillMode" /> для объекта <see langword="Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-122">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-123">Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> со значением <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> для объекта <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath fillMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode">
          <span data-ttu-id="e3b73-124">Перечисление <see cref="T:System.Drawing.Drawing2D.FillMode" />, определяющее, как заполняется внутренняя область этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-124">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-125">Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с указанным перечислением <see cref="T:System.Drawing.Drawing2D.FillMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-125">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="e3b73-126">Массив структур <see cref="T:System.Drawing.Point" />, определяющий координаты точек, составляющих этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-126">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="e3b73-127">Массив элементов перечисления <see cref="T:System.Drawing.Drawing2D.PathPointType" />, определяющий тип каждой соответствующей точки в массиве <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-127">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-128">Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с заданными массивами <see cref="T:System.Drawing.Drawing2D.PathPointType" /> и <see cref="T:System.Drawing.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-128">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="e3b73-129">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий координаты точек, составляющих этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-129">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="e3b73-130">Массив элементов перечисления <see cref="T:System.Drawing.Drawing2D.PathPointType" />, определяющий тип каждой соответствующей точки в массиве <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-130">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-131">Инициализирует новый экземпляр массива <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с заданными массивами <see cref="T:System.Drawing.Drawing2D.PathPointType" /> и <see cref="T:System.Drawing.PointF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="e3b73-132">Массив структур <see cref="T:System.Drawing.Point" />, определяющий координаты точек, составляющих этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-132">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="e3b73-133">Массив элементов перечисления <see cref="T:System.Drawing.Drawing2D.PathPointType" />, определяющий тип каждой соответствующей точки в массиве <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-133">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="e3b73-134">Перечисление <see cref="T:System.Drawing.Drawing2D.FillMode" />, определяющее, как заполняются внутренние области фигур в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-134">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-135">Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с указанными массивами <see cref="T:System.Drawing.Drawing2D.PathPointType" /> и <see cref="T:System.Drawing.Point" /> и с заданным элементом перечисления <see cref="T:System.Drawing.Drawing2D.FillMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-135">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="e3b73-136">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий координаты точек, составляющих этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-136">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="e3b73-137">Массив элементов перечисления <see cref="T:System.Drawing.Drawing2D.PathPointType" />, определяющий тип каждой соответствующей точки в массиве <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-137">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="e3b73-138">Перечисление <see cref="T:System.Drawing.Drawing2D.FillMode" />, определяющее, как заполняются внутренние области фигур в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-138">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-139">Инициализирует новый экземпляр массива <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> с указанными массивами <see cref="T:System.Drawing.Drawing2D.PathPointType" /> и <see cref="T:System.Drawing.PointF" /> и заданным элементом перечисления <see cref="T:System.Drawing.Drawing2D.FillMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-139">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-140">Присоединяет дугу эллипса к текущей фигуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-140">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="e3b73-141">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий прямоугольник, ограничивающий эллипс, частью которого является дуга.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-141">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="e3b73-142">Начальный угол дуги, измеряемый в градусах, от оси X по часовой стрелке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-142">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="e3b73-143">Угол между объектом <c>startAngle</c> и концом дуги.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-143">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-144">Присоединяет дугу эллипса к текущей фигуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-144">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-145">При возникновении линии и кривые на рисунке, строку добавляется к конечной точке предыдущего сегмента в начале дуги.</span><span class="sxs-lookup"><span data-stu-id="e3b73-145">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="e3b73-146">Дуга по периметру эллипса, ограниченного указанным прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="e3b73-146">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="e3b73-147">Начальная точка дуги определяется путем измерения по часовой стрелке от оси x эллипса (в угол 0 градусов) на число градусов в начальный угол.</span><span class="sxs-lookup"><span data-stu-id="e3b73-147">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="e3b73-148">Конечная точка находится аналогичным образом Измеряя по часовой стрелке от начальной точки на число градусов в угол поворота.</span><span class="sxs-lookup"><span data-stu-id="e3b73-148">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="e3b73-149">Если угол поворота превышает 360 или меньше-360 градусов, дуга охватывает ровно 360 или -360 градусов, соответственно.</span><span class="sxs-lookup"><span data-stu-id="e3b73-149">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-150">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-150">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-151">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-151">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-152">Создает прямоугольник, из которого определяется дуги.</span><span class="sxs-lookup"><span data-stu-id="e3b73-152">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="e3b73-153">Создает путь, `myPath`.</span><span class="sxs-lookup"><span data-stu-id="e3b73-153">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="e3b73-154">Определяет эллиптической дуги 180 градусов, который выполняет очистку от 0 до 180 градусов и добавляет его к пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-154">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="e3b73-155">Выводит путь экрана.</span><span class="sxs-lookup"><span data-stu-id="e3b73-155">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="e3b73-156">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, ограничивающий эллипс, частью которого является дуга.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-156">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="e3b73-157">Начальный угол дуги, измеряемый в градусах, от оси X по часовой стрелке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-157">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="e3b73-158">Угол между объектом <c>startAngle</c> и концом дуги.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-158">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-159">Присоединяет дугу эллипса к текущей фигуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-159">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-160">При возникновении линии и кривые на рисунке, строку добавляется к конечной точке предыдущего сегмента в начале дуги.</span><span class="sxs-lookup"><span data-stu-id="e3b73-160">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="e3b73-161">Дуга по периметру эллипса, ограниченного указанным прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="e3b73-161">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="e3b73-162">Начальная точка дуги определяется путем измерения по часовой стрелке от оси x эллипса (в угол 0 градусов) на число градусов в начальный угол.</span><span class="sxs-lookup"><span data-stu-id="e3b73-162">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="e3b73-163">Конечная точка находится аналогичным образом Измеряя по часовой стрелке от начальной точки на число градусов в угол поворота.</span><span class="sxs-lookup"><span data-stu-id="e3b73-163">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="e3b73-164">Если угол поворота превышает 360 или меньше-360 градусов, дуга охватывает ровно 360 или -360 градусов, соответственно.</span><span class="sxs-lookup"><span data-stu-id="e3b73-164">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-165">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-165">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-166">Координата по оси X левого верхнего угла прямоугольной области, определяющей эллипс, дуга которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-166">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-167">Координата по оси Y левого верхнего угла прямоугольной области, определяющей эллипс, дуга которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-167">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="e3b73-168">Ширина прямоугольной области, определяющей эллипс, дуга которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-168">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="e3b73-169">Высота прямоугольной области, определяющей эллипс, дуга которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-169">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="e3b73-170">Начальный угол дуги, измеряемый в градусах, от оси X по часовой стрелке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-170">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="e3b73-171">Угол между объектом <c>startAngle</c> и концом дуги.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-171">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-172">Присоединяет дугу эллипса к текущей фигуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-172">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-173">При возникновении линии и кривые на рисунке, строку добавляется к конечной точке предыдущего сегмента в начале дуги.</span><span class="sxs-lookup"><span data-stu-id="e3b73-173">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="e3b73-174">Дуга по периметру эллипса, ограниченного указанным прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="e3b73-174">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="e3b73-175">Начальная точка дуги определяется путем измерения по часовой стрелке от оси x эллипса (в угол 0 градусов) на число градусов в начальный угол.</span><span class="sxs-lookup"><span data-stu-id="e3b73-175">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="e3b73-176">Конечная точка находится аналогичным образом Измеряя по часовой стрелке от начальной точки на число градусов в угол поворота.</span><span class="sxs-lookup"><span data-stu-id="e3b73-176">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="e3b73-177">Если угол поворота превышает 360 или меньше-360 градусов, дуга охватывает ровно 360 или -360 градусов, соответственно.</span><span class="sxs-lookup"><span data-stu-id="e3b73-177">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-178">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-178">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-179">Координата по оси X левого верхнего угла прямоугольной области, определяющей эллипс, дуга которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-179">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-180">Координата по оси Y левого верхнего угла прямоугольной области, определяющей эллипс, дуга которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-180">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="e3b73-181">Ширина прямоугольной области, определяющей эллипс, дуга которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-181">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="e3b73-182">Высота прямоугольной области, определяющей эллипс, дуга которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-182">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="e3b73-183">Начальный угол дуги, измеряемый в градусах, от оси X по часовой стрелке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-183">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="e3b73-184">Угол между объектом <c>startAngle</c> и концом дуги.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-184">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-185">Присоединяет дугу эллипса к текущей фигуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-185">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-186">При возникновении линии и кривые на рисунке, строку добавляется к конечной точке предыдущего сегмента в начале дуги.</span><span class="sxs-lookup"><span data-stu-id="e3b73-186">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="e3b73-187">Дуга по периметру эллипса, ограниченного указанным прямоугольником.</span><span class="sxs-lookup"><span data-stu-id="e3b73-187">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="e3b73-188">Начальная точка дуги определяется путем измерения по часовой стрелке от оси x эллипса (в угол 0 градусов) на число градусов в начальный угол.</span><span class="sxs-lookup"><span data-stu-id="e3b73-188">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="e3b73-189">Конечная точка находится аналогичным образом Измеряя по часовой стрелке от начальной точки на число градусов в угол поворота.</span><span class="sxs-lookup"><span data-stu-id="e3b73-189">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="e3b73-190">Если угол поворота превышает 360 или меньше-360 градусов, дуга охватывает ровно 360 или -360 градусов, соответственно.</span><span class="sxs-lookup"><span data-stu-id="e3b73-190">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-191">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-191">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-192">Добавляет в текущую фигуру кривую Безье третьего порядка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-192">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="e3b73-193">Объект <see cref="T:System.Drawing.Point" />, представляющий собой начальную точку кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-193">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="e3b73-194">Объект <see cref="T:System.Drawing.Point" />, представляющий собой первую контрольную точку кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-194">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="e3b73-195">Объект <see cref="T:System.Drawing.Point" />, представляющий собой вторую контрольную точку кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-195">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="e3b73-196">Объект <see cref="T:System.Drawing.Point" />, представляющий конечную точку кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-196">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-197">Добавляет в текущую фигуру кривую Безье третьего порядка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-197">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-198">Кривая третьего создается с первой точки к четвертой точке с использованием второй и третьей точек как контрольные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-198">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="e3b73-199">Если предыдущей линии или сегмента кривой на рисунке, строку добавляется к конечной точке предыдущего сегмента до начальной точки кривой третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="e3b73-199">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-200">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-200">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="e3b73-201">Объект <see cref="T:System.Drawing.PointF" />, представляющий собой начальную точку кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-201">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="e3b73-202">Объект <see cref="T:System.Drawing.PointF" />, представляющий собой первую контрольную точку кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-202">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="e3b73-203">Объект <see cref="T:System.Drawing.PointF" />, представляющий собой вторую контрольную точку кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-203">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="e3b73-204">Объект <see cref="T:System.Drawing.PointF" />, представляющий конечную точку кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-204">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-205">Добавляет в текущую фигуру кривую Безье третьего порядка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-205">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-206">Кривая третьего создается с первой точки к четвертой точке с использованием второй и третьей точек как контрольные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-206">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="e3b73-207">Если предыдущей линии или сегмента кривой на рисунке, строку добавляется к конечной точке предыдущего сегмента до начальной точки кривой третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="e3b73-207">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-208">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-208">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : int * int * int * int * int * int * int * int -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="e3b73-209">Координата X начальной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-209">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="e3b73-210">Координата Y начальной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-210">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="e3b73-211">Координата X первой контрольной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-211">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="e3b73-212">Координата Y первой контрольной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-212">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="e3b73-213">Координата X второй контрольной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-213">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="e3b73-214">Координата Y второй контрольной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-214">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="e3b73-215">Координата X конечной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-215">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="e3b73-216">Координата Y конечной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-216">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-217">Добавляет в текущую фигуру кривую Безье третьего порядка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-217">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-218">Кривая третьего создается с первой точки к четвертой точке с использованием второй и третьей точек как контрольные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-218">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="e3b73-219">Если предыдущей линии или сегмента кривой на рисунке, строку добавляется к конечной точке предыдущего сегмента до начальной точки кривой третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="e3b73-219">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-220">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-221">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-222">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-222">Creates a path.</span></span>  
  
-   <span data-ttu-id="e3b73-223">Добавляет кривую Безье третьего порядка, определяемую точками (50, 50), (70, 0), (100, 120) и (150, 50) в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-223">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-224">Закрывает кривой.</span><span class="sxs-lookup"><span data-stu-id="e3b73-224">Closes the curve.</span></span>  
  
-   <span data-ttu-id="e3b73-225">Выводит путь экрана.</span><span class="sxs-lookup"><span data-stu-id="e3b73-225">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : single * single * single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="e3b73-226">Координата X начальной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-226">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="e3b73-227">Координата Y начальной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-227">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="e3b73-228">Координата X первой контрольной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-228">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="e3b73-229">Координата Y первой контрольной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-229">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="e3b73-230">Координата X второй контрольной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-230">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="e3b73-231">Координата Y второй контрольной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-231">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="e3b73-232">Координата X конечной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-232">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="e3b73-233">Координата Y конечной точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-233">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-234">Добавляет в текущую фигуру кривую Безье третьего порядка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-234">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-235">Кривая третьего создается с первой точки к четвертой точке с использованием второй и третьей точек как контрольные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-235">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="e3b73-236">Если предыдущей линии или сегмента кривой на рисунке, строку добавляется к конечной точке предыдущего сегмента до начальной точки кривой третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="e3b73-236">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-237">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-237">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-238">Добавляет в текущую фигуру последовательность соединенных кривых Безье третьего порядка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-238">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-239">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривые.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-239">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-240">Добавляет в текущую фигуру последовательность соединенных кривых Безье третьего порядка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-240">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-241">`points` Указывает массив конечных точек и контрольные точки, соединенных кривых.</span><span class="sxs-lookup"><span data-stu-id="e3b73-241">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="e3b73-242">Первая кривая создается с первой точки до четвертой точки `points` массива, используя второй и третьей точек в качестве контрольных точек.</span><span class="sxs-lookup"><span data-stu-id="e3b73-242">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="e3b73-243">Кроме конечной точки предыдущей кривой, каждой последующей кривой в последовательности необходимо ровно три точки: следующие две точки в последовательности — контрольные точки, а третий — конечную точку для добавляемой кривой.</span><span class="sxs-lookup"><span data-stu-id="e3b73-243">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="e3b73-244">При возникновении линии и кривые на рисунке, строку добавляется к конечной точке предыдущего сегмента до начальной точки первой кривой третьего порядка в последовательности.</span><span class="sxs-lookup"><span data-stu-id="e3b73-244">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-245">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-245">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-246">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-246">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-247">Создает массив из семи точек (представляющих двух соединенных кривых Безье).</span><span class="sxs-lookup"><span data-stu-id="e3b73-247">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="e3b73-248">Создает контур и добавляет ряд точки кривой Безье в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-248">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-249">Выводит путь экрана.</span><span class="sxs-lookup"><span data-stu-id="e3b73-249">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-250">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривые.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-250">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-251">Добавляет в текущую фигуру последовательность соединенных кривых Безье третьего порядка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-251">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-252">`points` Указывает массив конечных точек и контрольные точки, соединенных кривых.</span><span class="sxs-lookup"><span data-stu-id="e3b73-252">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="e3b73-253">Первая кривая создается с первой точки до четвертой точки `points` массива, используя второй и третьей точек в качестве контрольных точек.</span><span class="sxs-lookup"><span data-stu-id="e3b73-253">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="e3b73-254">Кроме конечной точки предыдущей кривой, каждой последующей кривой в последовательности необходимо ровно три точки: следующие две точки в последовательности — контрольные точки, а третий — конечную точку для добавляемой кривой.</span><span class="sxs-lookup"><span data-stu-id="e3b73-254">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="e3b73-255">При возникновении линии и кривые на рисунке, строку добавляется к конечной точке предыдущего сегмента до начальной точки первой кривой третьего порядка в последовательности.</span><span class="sxs-lookup"><span data-stu-id="e3b73-255">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-256">Для примера см.:</span><span class="sxs-lookup"><span data-stu-id="e3b73-256">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-257">Добавляет замкнутую кривую к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-257">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="e3b73-258">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-258">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-259">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривую.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-259">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-260">Добавляет замкнутую кривую к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-260">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="e3b73-261">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-261">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-262">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-262">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-263">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-263">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="e3b73-264">Если первая и последняя точки в `points` массива не тот же момент, кривая замыкается путем соединения этих двух точек.</span><span class="sxs-lookup"><span data-stu-id="e3b73-264">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="e3b73-265">Напряжение не может иметь значение для этого метода и значения по умолчанию равно 0,5.</span><span class="sxs-lookup"><span data-stu-id="e3b73-265">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-266">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-266">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-267">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривую.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-267">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-268">Добавляет замкнутую кривую к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-268">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="e3b73-269">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-269">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-270">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-270">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-271">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-271">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="e3b73-272">Если первая и последняя точки в `points` массива не тот же момент, кривая замыкается путем соединения этих двух точек.</span><span class="sxs-lookup"><span data-stu-id="e3b73-272">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="e3b73-273">Напряжение не может иметь значение для этого метода и значения по умолчанию равно 0,5.</span><span class="sxs-lookup"><span data-stu-id="e3b73-273">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-274">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-274">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-275">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривую.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-275">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="e3b73-276">Значение между 0 и 1, определяющее степень изгиба кривой между точками; значение 0 соответствует наименьшей кривой (наиболее острый угол), а 1 – наиболее сглаженной кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-276">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-277">Добавляет замкнутую кривую к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-277">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="e3b73-278">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-278">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-279">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-279">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-280">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-280">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="e3b73-281">Если первая и последняя точки в `points` массива не тот же момент, кривая замыкается путем соединения этих двух точек.</span><span class="sxs-lookup"><span data-stu-id="e3b73-281">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-282">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-282">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-283">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-283">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-284">Создает массив из шести точек (представляющий фундаментальный сплайн).</span><span class="sxs-lookup"><span data-stu-id="e3b73-284">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="e3b73-285">Создает путь и добавляет замкнутой фундаментальной сплайновой кривые к пути (закрыто из конечной точки к начальной точке).</span><span class="sxs-lookup"><span data-stu-id="e3b73-285">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="e3b73-286">Выводит путь экрана.</span><span class="sxs-lookup"><span data-stu-id="e3b73-286">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="e3b73-287">Обратите внимание на то, что используется натяжение, равное 0,5.</span><span class="sxs-lookup"><span data-stu-id="e3b73-287">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-288">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривую.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-288">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="e3b73-289">Значение между 0 и 1, определяющее степень изгиба кривой между точками; значение 0 соответствует наименьшей кривой (наиболее острый угол), а 1 – наиболее сглаженной кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-289">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-290">Добавляет замкнутую кривую к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-290">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="e3b73-291">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-291">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-292">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-292">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-293">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-293">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="e3b73-294">Если первая и последняя точки в `points` массива не тот же момент, кривая замыкается путем соединения этих двух точек.</span><span class="sxs-lookup"><span data-stu-id="e3b73-294">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-295">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-295">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-296">Добавляет в текущую фигуру кривую сплайна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-296">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="e3b73-297">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-297">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-298">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривую.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-298">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-299">Добавляет в текущую фигуру кривую сплайна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-299">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="e3b73-300">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-300">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-301">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-301">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-302">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-302">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-303">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-303">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-304">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривую.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-304">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-305">Добавляет в текущую фигуру кривую сплайна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-305">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="e3b73-306">Используется кривая фундаментального сплайна, поскольку кривая проходит через все точки массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-306">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-307">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-307">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-308">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-308">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-309">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-309">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-310">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривую.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-310">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="e3b73-311">Значение, определяющее степень изгиба кривой между контрольными точками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-311">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="e3b73-312">Значения, превышающие 1, приводят к непредсказуемым результатам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-312">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-313">Добавляет в текущую фигуру кривую сплайна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-313">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-314">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-314">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-315">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-315">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-316">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-316">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-317">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривую.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-317">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="e3b73-318">Значение, определяющее степень изгиба кривой между контрольными точками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-318">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="e3b73-319">Значения, превышающие 1, приводят к непредсказуемым результатам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-319">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-320">Добавляет в текущую фигуру кривую сплайна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-320">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-321">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-321">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-322">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-322">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-323">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-323">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-324">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют кривую.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-324">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e3b73-325">Индекс элемента в массиве <c>points</c>, который используется в качестве первой точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-325">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="e3b73-326">Значение, определяющее степень изгиба кривой между контрольными точками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-326">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="e3b73-327">Значения, превышающие 1, приводят к непредсказуемым результатам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-327">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="e3b73-328">Значение, определяющее степень изгиба кривой между контрольными точками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-328">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="e3b73-329">Значения, превышающие 1, приводят к непредсказуемым результатам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-329">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-330">Добавляет в текущую фигуру кривую сплайна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-330">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-331">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-331">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-332">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-332">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="e3b73-333">Кривая начинается в точке массива, заданного параметром `offset` параметр и включает количество точек (сегментов), определяемое `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="e3b73-333">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-334">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-334">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-335">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-335">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-336">Создает массив из четырех точек (представляющих фундаментальный сплайн).</span><span class="sxs-lookup"><span data-stu-id="e3b73-336">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="e3b73-337">Создает путь и используя массив точек, добавляет к нему кривой.</span><span class="sxs-lookup"><span data-stu-id="e3b73-337">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-338">Выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-338">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="e3b73-339">Обратите внимание, что хотя массив содержит четыре точки, только три сегмента, который является число, указанное в качестве третьего аргумента вызова <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-339">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-340">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют кривую.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-340">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e3b73-341">Индекс элемента в массиве <c>points</c>, который используется в качестве первой точки кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-341">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="e3b73-342">Количество сегментов, используемых для отображения кривой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-342">The number of segments used to draw the curve.</span>
          </span>
          <span data-ttu-id="e3b73-343">Сегмент может быть определен как линия, соединяющая две точки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-343">A segment can be thought of as a line connecting two points.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="e3b73-344">Значение, определяющее степень изгиба кривой между контрольными точками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-344">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="e3b73-345">Значения, превышающие 1, приводят к непредсказуемым результатам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-345">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-346">Добавляет в текущую фигуру кривую сплайна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-346">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-347">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-347">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-348">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-348">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="e3b73-349">Кривая начинается в точке массива, заданного параметром `offset`и включает количество точек (сегментов), определяемое `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="e3b73-349">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-350">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-350">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-351">Добавляет эллипс в текущий контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-351">Adds an ellipse to the current path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="e3b73-352">Объект <see cref="T:System.Drawing.Rectangle" />, содержащий ограничивающий прямоугольник, который определяет эллипс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-352">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-353">Добавляет эллипс в текущий контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-353">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-354">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-354">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-355">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-355">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="e3b73-356">Создает ограничивающий прямоугольник, который определяет эллипс.</span><span class="sxs-lookup"><span data-stu-id="e3b73-356">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="e3b73-357">Создает контур и добавляет эллипс в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-357">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="e3b73-358">Выводит путь экрана.</span><span class="sxs-lookup"><span data-stu-id="e3b73-358">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="e3b73-359">Объект <see cref="T:System.Drawing.RectangleF" />, содержащий ограничивающий прямоугольник, который определяет эллипс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-359">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-360">Добавляет эллипс в текущий контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-360">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-361">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-361">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : int * int * int * int -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-362">Координата X верхнего левого угла ограничивающего прямоугольника, который определяет эллипс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-362">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-363">Координата Y верхнего левого угла ограничивающего прямоугольника, который определяет эллипс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-363">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="e3b73-364">Ширина ограничивающего прямоугольника, определяющего эллипс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-364">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="e3b73-365">Высота ограничивающего прямоугольника, определяющего эллипс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-365">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-366">Добавляет эллипс в текущий контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-366">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-367">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-367">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : single * single * single * single -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-368">Координата X верхнего левого угла ограничивающего прямоугольника, который определяет эллипс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-368">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-369">Координата Y верхнего левого угла ограничивающего прямоугольника, который определяет эллипс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-369">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="e3b73-370">Ширина ограничивающего прямоугольника, определяющего эллипс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-370">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="e3b73-371">Высота ограничивающего прямоугольника, определяющего эллипс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-371">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-372">Добавляет эллипс в текущий контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-372">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-373">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-373">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-374">Добавляет отрезок прямой к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-374">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="e3b73-375">Объект <see cref="T:System.Drawing.Point" />, представляющий начальную точку линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-375">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="e3b73-376">Объект <see cref="T:System.Drawing.Point" />, представляющий конечную точку линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-376">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-377">Добавляет отрезок прямой к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-377">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-378">Этот метод добавляет отрезок прямой, определяемый указанным указывает на конец этого объекта <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-378">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="e3b73-379">При наличии линии и кривые в <xref:System.Drawing.Drawing2D.GraphicsPath>, сегмент линии рисуется для подключения точки в пути к первой точки в новый сегмент линии.</span><span class="sxs-lookup"><span data-stu-id="e3b73-379">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-380">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-380">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="e3b73-381">Объект <see cref="T:System.Drawing.PointF" />, представляющий начальную точку линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-381">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="e3b73-382">Объект <see cref="T:System.Drawing.PointF" />, представляющий конечную точку линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-382">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-383">Добавляет отрезок прямой к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-383">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-384">Этот метод добавляет отрезок прямой, определяемый указанным указывает на конец этого объекта <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-384">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="e3b73-385">При наличии линии и кривые в <xref:System.Drawing.Drawing2D.GraphicsPath>, сегмент линии рисуется для подключения точки в пути к первой точки в новый сегмент линии.</span><span class="sxs-lookup"><span data-stu-id="e3b73-385">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-386">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-386">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : int * int * int * int -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="e3b73-387">Координата X начальной точки линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-387">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="e3b73-388">Координата Y начальной точки линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-388">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="e3b73-389">Координата X конечной точки линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-389">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="e3b73-390">Координата Y конечной точки линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-390">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-391">Добавляет отрезок прямой к текущей фигуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-391">Appends a line segment to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-392">Этот метод добавляет отрезок прямой, определяемый указанным указывает на конец текущей фигуре.</span><span class="sxs-lookup"><span data-stu-id="e3b73-392">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="e3b73-393">При наличии линии и кривые в <xref:System.Drawing.Drawing2D.GraphicsPath>, сегмент линии рисуется для подключения точки в пути к первой точки в новый сегмент линии.</span><span class="sxs-lookup"><span data-stu-id="e3b73-393">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-394">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-394">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-395">Код создает контур, добавляет три строки, образующие треугольник и затем выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-395">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : single * single * single * single -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="e3b73-396">Координата X начальной точки линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-396">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="e3b73-397">Координата Y начальной точки линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-397">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="e3b73-398">Координата X конечной точки линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-398">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="e3b73-399">Координата Y конечной точки линии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-399">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-400">Добавляет отрезок прямой к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-400">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-401">Этот метод добавляет отрезок прямой, определяемый указанным указывает на конец этого объекта <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-401">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="e3b73-402">При наличии линии и кривые в <xref:System.Drawing.Drawing2D.GraphicsPath>, сегмент линии рисуется для подключения точки в пути к первой точки в новый сегмент линии.</span><span class="sxs-lookup"><span data-stu-id="e3b73-402">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-403">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-403">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-404">Добавляет последовательность соединенных отрезков прямых в конец этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-404">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-405">Массив структур <see cref="T:System.Drawing.Point" />, представляющий точки, которые определяют добавляемые отрезки прямых.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-405">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-406">Добавляет последовательность соединенных отрезков прямых в конец этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-406">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-407">При возникновении линии и кривые на рисунке, строку добавляется к конечной точке предыдущего сегмента начальной точки линии.</span><span class="sxs-lookup"><span data-stu-id="e3b73-407">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="e3b73-408">`points` Параметр указывает массив конечных точек.</span><span class="sxs-lookup"><span data-stu-id="e3b73-408">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="e3b73-409">Первые два Укажите первую строку.</span><span class="sxs-lookup"><span data-stu-id="e3b73-409">The first two specify the first line.</span></span> <span data-ttu-id="e3b73-410">Каждая дополнительная точка Указывает конечную точку сегмента линии, начальной точкой является конечной точкой предыдущего разрыва строки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-410">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-411">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-411">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-412">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-412">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-413">Создает массив из четырех точек, определяющих треугольник.</span><span class="sxs-lookup"><span data-stu-id="e3b73-413">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="e3b73-414">Создает путь и добавляет массив строк.</span><span class="sxs-lookup"><span data-stu-id="e3b73-414">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="e3b73-415">Выводит путь экрана.</span><span class="sxs-lookup"><span data-stu-id="e3b73-415">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="e3b73-416">Обратите внимание на то, что каждой строки после первой точки использует предыдущую точку как начальную точку и новую точку как конечную точку.</span><span class="sxs-lookup"><span data-stu-id="e3b73-416">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-417">Массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки, которые определяют добавляемые отрезки прямых.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-417">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-418">Добавляет последовательность соединенных отрезков прямых в конец этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-418">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-419">При возникновении линии и кривые на рисунке, строку добавляется к конечной точке предыдущего сегмента начальной точки линии.</span><span class="sxs-lookup"><span data-stu-id="e3b73-419">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="e3b73-420">`points` Параметр указывает массив конечных точек.</span><span class="sxs-lookup"><span data-stu-id="e3b73-420">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="e3b73-421">Первые два Укажите первую строку.</span><span class="sxs-lookup"><span data-stu-id="e3b73-421">The first two specify the first line.</span></span> <span data-ttu-id="e3b73-422">Каждая дополнительная точка Указывает конечную точку сегмента линии, начальной точкой является конечной точкой предыдущего разрыва строки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-422">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-423">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-423">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberSignature Language="F#" Value="member this.AddPath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; unit" Usage="graphicsPath.AddPath (addingPath, connect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath">
          <span data-ttu-id="e3b73-424">Добавляемый объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-424">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span>
          </span>
        </param>
        <param name="connect">
          <span data-ttu-id="e3b73-425">Логическое значение, определяющее, является ли первая фигура в добавленном контуре частью последней фигуры в данном контуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-425">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="e3b73-426">Значение <see langword="true" /> указывает, что (если это возможно) первая фигура в добавленном контуре является частью последней фигуры в данном контуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-426">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="e3b73-427">Значение <see langword="false" /> указывает, что первая фигура в добавленном контуре отделена от последней фигуры в данном контуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-427">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-428">Добавляет указанный объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-428">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-429">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-429">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-430">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-430">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-431">Создает два пути один треугольник правой стороне доступ, а другой вверх – перевернутый треугольник.</span><span class="sxs-lookup"><span data-stu-id="e3b73-431">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="e3b73-432">Добавляет второй путь к первому.</span><span class="sxs-lookup"><span data-stu-id="e3b73-432">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="e3b73-433">Отображает результирующий путь на экране.</span><span class="sxs-lookup"><span data-stu-id="e3b73-433">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-434">Добавляет контур сектора к данному контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-434">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddPie (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="e3b73-435">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий ограничивающий прямоугольник, определяющий эллипс, сектор которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-435">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="e3b73-436">Начальный угол сектора, измеряемый в градусах от оси X по часовой стрелке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-436">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="e3b73-437">Угол между объектом <c>startAngle</c> и концом сектора, измеряемый в градусах по часовой стрелке от объекта <c>startAngle</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-437">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-438">Добавляет контур сектора к данному контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-438">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-439">Сектор определяется контура эллипса и двумя радиальными линиями, которые пересекают конечных точек контура.</span><span class="sxs-lookup"><span data-stu-id="e3b73-439">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="e3b73-440">Частичный контур начинается с `startAngle` (измеряется по часовой стрелке от оси x) и заканчивается в `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="e3b73-440">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-441">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-441">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-442">Координата по оси X левого верхнего угла ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-442">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-443">Координата по оси Y левого верхнего угла ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-443">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="e3b73-444">Ширина ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-444">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="e3b73-445">Высота ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-445">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="e3b73-446">Начальный угол сектора, измеряемый в градусах от оси X по часовой стрелке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-446">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="e3b73-447">Угол между объектом <c>startAngle</c> и концом сектора, измеряемый в градусах по часовой стрелке от объекта <c>startAngle</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-447">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-448">Добавляет контур сектора к данному контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-448">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-449">Сектор определяется контура эллипса и двумя радиальными линиями, которые пересекают конечных точек контура.</span><span class="sxs-lookup"><span data-stu-id="e3b73-449">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="e3b73-450">Частичный контур начинается с `startAngle` (измеряется по часовой стрелке от оси x) и заканчивается в `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="e3b73-450">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-451">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-451">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-452">Код создает графический контур, добавляет сектор и затем отображает путь на экране.</span><span class="sxs-lookup"><span data-stu-id="e3b73-452">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-453">Координата по оси X левого верхнего угла ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-453">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-454">Координата по оси Y левого верхнего угла ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-454">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="e3b73-455">Ширина ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-455">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="e3b73-456">Высота ограничивающего прямоугольника, определяющего эллипс, сектор которого отображается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-456">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="e3b73-457">Начальный угол сектора, измеряемый в градусах от оси X по часовой стрелке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-457">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="e3b73-458">Угол между объектом <c>startAngle</c> и концом сектора, измеряемый в градусах по часовой стрелке от объекта <c>startAngle</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-458">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-459">Добавляет контур сектора к данному контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-459">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-460">Сектор определяется контура эллипса и двумя радиальными линиями, которые пересекают конечных точек контура.</span><span class="sxs-lookup"><span data-stu-id="e3b73-460">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="e3b73-461">Частичный контур начинается с `startAngle` (измеряется по часовой стрелке от оси x) и заканчивается в `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="e3b73-461">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-462">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-462">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-463">Добавляет многоугольник к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-463">Adds a polygon to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-464">Массив структур <see cref="T:System.Drawing.Point" />, определяющий добавляемый многоугольник.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-464">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-465">Добавляет многоугольник к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-465">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-466">Точки в `points` массива определяют вершины многоугольника.</span><span class="sxs-lookup"><span data-stu-id="e3b73-466">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="e3b73-467">Если первая точка в массиве не совпадает с последней точки, эти две точки подключены к закрыть многоугольника.</span><span class="sxs-lookup"><span data-stu-id="e3b73-467">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-468">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-468">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-469">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-469">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-470">Создает массив точек, определяющих многоугольник.</span><span class="sxs-lookup"><span data-stu-id="e3b73-470">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="e3b73-471">Создает путь и добавляет многоугольник к пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-471">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-472">Выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-472">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="e3b73-473">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий добавляемый многоугольник.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-473">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-474">Добавляет многоугольник к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-474">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-475">Точки в `points` массива определяют вершины многоугольника.</span><span class="sxs-lookup"><span data-stu-id="e3b73-475">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="e3b73-476">Если первая точка в массиве не совпадает с последней точки, эти две точки подключены к закрыть многоугольника.</span><span class="sxs-lookup"><span data-stu-id="e3b73-476">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-477">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-477">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-478">Добавляет прямоугольник к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-478">Adds a rectangle to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="e3b73-479">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий добавляемый прямоугольник.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-479">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-480">Добавляет прямоугольник к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-480">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-481">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-481">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-482">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-482">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-483">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-483">Creates a path.</span></span>  
  
-   <span data-ttu-id="e3b73-484">Создает прямоугольник и добавляет прямоугольник к пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-484">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-485">Выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-485">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="e3b73-486">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий добавляемый прямоугольник.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-486">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-487">Добавляет прямоугольник к этому контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-487">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-488">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-488">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-489">Добавляет последовательность прямоугольников к данному контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-489">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.Rectangle[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="e3b73-490">Массив структур <see cref="T:System.Drawing.Rectangle" />, представляющий добавляемые прямоугольники.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-490">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-491">Добавляет последовательность прямоугольников к данному контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-491">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-492">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-492">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-493">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-493">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-494">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-494">Creates a path.</span></span>  
  
-   <span data-ttu-id="e3b73-495">Создает массив прямоугольников и добавляет прямоугольники в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-495">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-496">Выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-496">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.RectangleF[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="e3b73-497">Массив структур <see cref="T:System.Drawing.RectangleF" />, представляющий добавляемые прямоугольники.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-497">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-498">Добавляет последовательность прямоугольников к данному контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-498">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-499">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-499">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-500">Добавляет строку текста в этот контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-500">Adds a text string to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Point * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e3b73-501">Добавляемый объект <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-501">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="e3b73-502">Объект <see cref="T:System.Drawing.FontFamily" />, представляющий имя шрифта, с использованием которого выводится текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-502">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="e3b73-503">Перечисление <see cref="T:System.Drawing.FontStyle" />, представляющее информацию о стиле текста (полужирный, курсив и т. д.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-503">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="e3b73-504">Оно должно быть приведено к целому числу (см. пример кода ниже в этом разделе).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-504">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="e3b73-505">Высота рамки максимального пробела, ограничивающей символ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-505">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="e3b73-506">Объект <see cref="T:System.Drawing.Point" />, представляющий точку начала текста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-506">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="e3b73-507">Объект <see cref="T:System.Drawing.StringFormat" />, задающий информацию о форматировании текста, такую как интервал между строками и выравнивание.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-507">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-508">Добавляет строку текста в этот контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-508">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-509">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-509">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-510">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-510">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-511">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-511">Creates a path.</span></span>  
  
-   <span data-ttu-id="e3b73-512">Задает аргументы строки и шрифта.</span><span class="sxs-lookup"><span data-stu-id="e3b73-512">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="e3b73-513">Добавляет строки в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-513">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-514">Отображает строку на экран.</span><span class="sxs-lookup"><span data-stu-id="e3b73-514">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="e3b73-515">Есть две важные вещи, необходимо обратить внимание. Во-первых, обратите внимание, что `fontStyle` аргумент приводится к целому числу.</span><span class="sxs-lookup"><span data-stu-id="e3b73-515">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="e3b73-516"><xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> Метод требует это так, что два или несколько <xref:System.Drawing.FontStyle> члены могут быть объединены для создания нужный стиль шрифта (в этом случае <xref:System.Drawing.FontStyle.Italic> и <xref:System.Drawing.FontStyle.Underline>).</span><span class="sxs-lookup"><span data-stu-id="e3b73-516">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="e3b73-517">Во-вторых, обратите внимание, что <xref:System.Drawing.Graphics.FillPath%2A> метод используется вместо параметра <xref:System.Drawing.Graphics.DrawPath%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e3b73-517">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="e3b73-518">Если <xref:System.Drawing.Graphics.FillPath%2A> используется, выводится сплошной текст, а если <xref:System.Drawing.Graphics.DrawPath%2A> — используется, текст будет выровнен по стиль контура.</span><span class="sxs-lookup"><span data-stu-id="e3b73-518">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e3b73-519">Добавляемый объект <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-519">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="e3b73-520">Объект <see cref="T:System.Drawing.FontFamily" />, представляющий имя шрифта, с использованием которого выводится текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-520">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="e3b73-521">Перечисление <see cref="T:System.Drawing.FontStyle" />, представляющее информацию о стиле текста (полужирный, курсив и т. д.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-521">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="e3b73-522">Оно должно быть приведено к целому числу (см. пример кода ниже в этом разделе).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-522">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="e3b73-523">Высота рамки максимального пробела, ограничивающей символ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-523">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="e3b73-524">Объект <see cref="T:System.Drawing.PointF" />, представляющий точку начала текста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-524">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="e3b73-525">Объект <see cref="T:System.Drawing.StringFormat" />, задающий информацию о форматировании текста, такую как интервал между строками и выравнивание.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-525">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-526">Добавляет строку текста в этот контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-526">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-527">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-527">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Rectangle * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e3b73-528">Добавляемый объект <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-528">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="e3b73-529">Объект <see cref="T:System.Drawing.FontFamily" />, представляющий имя шрифта, с использованием которого выводится текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-529">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="e3b73-530">Перечисление <see cref="T:System.Drawing.FontStyle" />, представляющее информацию о стиле текста (полужирный, курсив и т. д.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-530">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="e3b73-531">Оно должно быть приведено к целому числу (см. пример кода ниже в этом разделе).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-531">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="e3b73-532">Высота рамки максимального пробела, ограничивающей символ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-532">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="e3b73-533">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий прямоугольник, который ограничивает текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-533">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="e3b73-534">Объект <see cref="T:System.Drawing.StringFormat" />, задающий информацию о форматировании текста, такую как интервал между строками и выравнивание.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-534">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-535">Добавляет строку текста в этот контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-535">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-536">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-536">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="e3b73-537">Добавляемый объект <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-537">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="e3b73-538">Объект <see cref="T:System.Drawing.FontFamily" />, представляющий имя шрифта, с использованием которого выводится текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-538">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="e3b73-539">Перечисление <see cref="T:System.Drawing.FontStyle" />, представляющее информацию о стиле текста (полужирный, курсив и т. д.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-539">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="e3b73-540">Оно должно быть приведено к целому числу (см. пример кода ниже в этом разделе).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-540">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="e3b73-541">Высота рамки максимального пробела, ограничивающей символ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-541">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="e3b73-542">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который ограничивает текст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-542">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="e3b73-543">Объект <see cref="T:System.Drawing.StringFormat" />, задающий информацию о форматировании текста, такую как интервал между строками и выравнивание.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-543">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-544">Добавляет строку текста в этот контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-544">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-545">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-545">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberSignature Language="F#" Value="member this.ClearMarkers : unit -&gt; unit" Usage="graphicsPath.ClearMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-546">Удаляет все токены из этого контура.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-546">Clears all markers from this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-547">Используйте <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> метод для создания маркера в текущем положении в <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-547">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="e3b73-548">Используйте <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> метод для выполнения итерации по существующие маркеры в пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="e3b73-549">Маркеры используются для разделения групп субконтуров.</span><span class="sxs-lookup"><span data-stu-id="e3b73-549">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="e3b73-550">Между двумя маркерами могут содержаться один или несколько подконтуров.</span><span class="sxs-lookup"><span data-stu-id="e3b73-550">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-551">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-551">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-552">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-552">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-553">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-553">Creates a path.</span></span>  
  
-   <span data-ttu-id="e3b73-554">Добавляет несколько объектов в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-554">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-555">Добавляет маркеры в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-555">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-556">Удаляет все маркеры из пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-556">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="e3b73-557">Выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-557">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="graphicsPath.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-558">Создает точную копию этого контура.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-558">Creates an exact copy of this path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-559">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, создаваемый этим методом, приводится к типу объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-559">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-560">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-560">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-561">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-561">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-562">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-562">Creates a path.</span></span>  
  
-   <span data-ttu-id="e3b73-563">Добавляет несколько фигур к пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-563">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-564">Выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-564">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="e3b73-565">Создает копию этого пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-565">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="e3b73-566">Выводит на экран новый путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-566">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="e3b73-567">Обратите внимание, что вызов <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> метод должен быть приведен как <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-567">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberSignature Language="F#" Value="member this.CloseAllFigures : unit -&gt; unit" Usage="graphicsPath.CloseAllFigures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-568">Замыкает все незамкнутые фигуры в этом контуре и открывает новую фигуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-568">Closes all open figures in this path and starts a new figure.</span>
          </span>
          <span data-ttu-id="e3b73-569">Каждая незамкнутая фигура замыкается путем соединения ее начальной и конечной точек линией.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-569">It closes each open figure by connecting a line from its endpoint to its starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-570">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-570">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-571">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-571">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-572">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-572">Creates a path.</span></span>  
  
-   <span data-ttu-id="e3b73-573">Добавляет несколько незамкнутые фигуры в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-573">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-574">Закрывает все фигуры в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-574">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="e3b73-575">Выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-575">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberSignature Language="F#" Value="member this.CloseFigure : unit -&gt; unit" Usage="graphicsPath.CloseFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-576">Замыкает текущую фигуру и открывает новую фигуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-576">Closes the current figure and starts a new figure.</span>
          </span>
          <span data-ttu-id="e3b73-577">Если текущая фигура содержит последовательность соединенных линий и кривых, метод замыкает ее путем соединения начальной и конечной точек линией.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-577">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-578">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-578">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-579">Код создает треугольник путем создания нового контура, запуска фигуры, добавления двух пересекающихся линий к рисунку и замыкания фигуры для формирования треугольника.</span><span class="sxs-lookup"><span data-stu-id="e3b73-579">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="e3b73-580">Затем контура на экран.</span><span class="sxs-lookup"><span data-stu-id="e3b73-580">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-581">Освобождает все ресурсы, используемые этим объектом <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-581">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-582">Вызов <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> позволяет ресурсы, используемые объектом <xref:System.Drawing.Drawing2D.GraphicsPath> перераспределить для других целей.</span><span class="sxs-lookup"><span data-stu-id="e3b73-582">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberSignature Language="F#" Value="member this.FillMode : System.Drawing.Drawing2D.FillMode with get, set" Usage="System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-583">Получает или задает перечисление <see cref="T:System.Drawing.Drawing2D.FillMode" />, определяющее, как заполняются внутренние области фигур в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-583">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3b73-584">Перечисление <see cref="T:System.Drawing.Drawing2D.FillMode" />, определяющее, как заполняются внутренние области фигур в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-584">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-585">Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как он будет уничтожен во время сборки мусора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-585">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-586">Преобразует каждую кривую в данном контуре в последовательность соединенных отрезков прямых.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-586">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; unit" Usage="graphicsPath.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-587">Преобразует каждую кривую в данном контуре в последовательность соединенных отрезков прямых.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-587">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-588">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-588">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Flatten matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="e3b73-589">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, посредством которого необходимо преобразовать этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> перед выравниванием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-589">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-590">Применяет указанное преобразование, а затем преобразует каждую кривую в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> в последовательность соединенных отрезков прямых.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-590">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-591">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-591">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Flatten (matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="e3b73-592">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, посредством которого необходимо преобразовать этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> перед выравниванием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-592">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="e3b73-593">Указывает максимальное допустимое расхождение между кривой и ее выровненной аппроксимацией.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-593">Specifies the maximum permitted error between the curve and its flattened approximation.</span>
          </span>
          <span data-ttu-id="e3b73-594">Значение по умолчанию равно 0,25.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-594">A value of 0.25 is the default.</span>
          </span>
          <span data-ttu-id="e3b73-595">Уменьшение значения выровненности увеличивает количество отрезков прямых в аппроксимации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-595">Reducing the flatness value will increase the number of line segments in the approximation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-596">Преобразует каждую кривую в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> в последовательность соединенных отрезков прямых.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-596">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-597">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-597">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-598">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-598">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-599">Создает графический контур и матрицу трансляции.</span><span class="sxs-lookup"><span data-stu-id="e3b73-599">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="e3b73-600">Добавляет кривую к пути, с помощью четырех точек.</span><span class="sxs-lookup"><span data-stu-id="e3b73-600">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="e3b73-601">Рисует контур (кривую) на экран, с помощью черного пера.</span><span class="sxs-lookup"><span data-stu-id="e3b73-601">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="e3b73-602">Сдвигает кривую вниз на 10 точек и объединяет его.</span><span class="sxs-lookup"><span data-stu-id="e3b73-602">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="e3b73-603">Выводит на экран, использование красной ручки кривой.</span><span class="sxs-lookup"><span data-stu-id="e3b73-603">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="e3b73-604">Обратите внимание, что красная кривая плоскую структуру линии, соединяющие точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-604">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-605">Возвращает прямоугольник, ограничивающий этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-605">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-606">Возвращает прямоугольник, ограничивающий этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-607">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который ограничивает этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-607">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-608">Размер возвращаемого ограничивающего прямоугольника влияют тип оконечных, ширину пера и ограничение по срезу пера и таким образом создает «свободные по размеру» ограниченного контура.</span><span class="sxs-lookup"><span data-stu-id="e3b73-608">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="e3b73-609">Примерная формула: исходного ограничивающего прямоугольника расширяется ширины пера, и этот результат умножается на ограничение по срезу, а также некоторый дополнительный запас для учета оконечных.</span><span class="sxs-lookup"><span data-stu-id="e3b73-609">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-610">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-610">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-611">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-611">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-612">Создает графический контур.</span><span class="sxs-lookup"><span data-stu-id="e3b73-612">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="e3b73-613">Добавляет эллипс (circle) к нему и отображает его на экране.</span><span class="sxs-lookup"><span data-stu-id="e3b73-613">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="e3b73-614">Возвращает ограничивающий прямоугольник, круг с помощью вызова <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> и рисует прямоугольник на экране.</span><span class="sxs-lookup"><span data-stu-id="e3b73-614">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="e3b73-615">Создает второй графический контур.</span><span class="sxs-lookup"><span data-stu-id="e3b73-615">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="e3b73-616">Добавляет круг и расширяет контур на 10.</span><span class="sxs-lookup"><span data-stu-id="e3b73-616">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="e3b73-617">Выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-617">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="e3b73-618">Получает ограничивающий прямоугольник для второго круга.</span><span class="sxs-lookup"><span data-stu-id="e3b73-618">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="e3b73-619">Рисует прямоугольник на экране.</span><span class="sxs-lookup"><span data-stu-id="e3b73-619">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="e3b73-620">Отображает размер прямоугольника в диалоговом окне.</span><span class="sxs-lookup"><span data-stu-id="e3b73-620">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="e3b73-621">Обратите внимание на то, что ограничивающий прямоугольник справа больше (для учетной записи дополнительную ширину линии).</span><span class="sxs-lookup"><span data-stu-id="e3b73-621">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="e3b73-622">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий преобразование, которое нужно применить к данному контуру до вычисления ограничивающего прямоугольника.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-622">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="e3b73-623">Этот контур не преобразуется постоянно; преобразование используется только для процесса вычисления ограничивающего прямоугольника.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-623">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-624">Возвращает ограничивающий прямоугольник для этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, когда данный контур преобразуется с помощью указанного объекта <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-624">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-625">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который ограничивает этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-625">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-626">Размер возвращаемого ограничивающего прямоугольника влияют тип оконечных, ширину пера и ограничение по срезу пера и таким образом создает «свободные по размеру» ограниченного контура.</span><span class="sxs-lookup"><span data-stu-id="e3b73-626">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="e3b73-627">Примерная формула: исходного ограничивающего прямоугольника расширяется ширины пера, и этот результат умножается на ограничение по срезу, а также некоторый дополнительный запас для учета оконечных.</span><span class="sxs-lookup"><span data-stu-id="e3b73-627">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-628">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-628">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix * System.Drawing.Pen -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds (matrix, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="e3b73-629">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий преобразование, которое нужно применить к данному контуру до вычисления ограничивающего прямоугольника.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-629">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="e3b73-630">Этот контур не преобразуется постоянно; преобразование используется только для процесса вычисления ограничивающего прямоугольника.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-630">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="e3b73-631">Объект <see cref="T:System.Drawing.Pen" />, посредством которого производится отображение объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-631">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-632">Возвращает ограничивающий прямоугольник для этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, когда данный контур преобразуется с помощью указанного объекта <see cref="T:System.Drawing.Drawing2D.Matrix" /> и отображается с помощью заданного объекта <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-632">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-633">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который ограничивает этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-633">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-634">Размер возвращаемого ограничивающего прямоугольника влияют тип оконечных, ширину пера и ограничение по срезу пера и таким образом создает «свободные по размеру» ограниченного контура.</span><span class="sxs-lookup"><span data-stu-id="e3b73-634">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="e3b73-635">Примерная формула: исходного ограничивающего прямоугольника расширяется ширины пера, и этот результат умножается на ограничение по срезу, а также некоторый дополнительный запас для учета оконечных.</span><span class="sxs-lookup"><span data-stu-id="e3b73-635">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-636">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-636">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberSignature Language="F#" Value="member this.GetLastPoint : unit -&gt; System.Drawing.PointF" Usage="graphicsPath.GetLastPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-637">Получает последнюю точку массива <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> для этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-637">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-638">Объект <see cref="T:System.Drawing.PointF" />, представляющий последнюю точку в этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-638">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-639">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-639">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-640">Код создает контур, добавляет строку к пути и затем получает последнюю точку в пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-640">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-641">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-641">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="e3b73-642">Объект <see cref="T:System.Drawing.Point" />, определяющий местоположение для тестирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-642">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="e3b73-643">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-643">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-644">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-644">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-645">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-645">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-646">Этот метод проверяет, если структура данного пути подготавливается к просмотру видимым в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="e3b73-646">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-647">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-647">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="e3b73-648">Объект <see cref="T:System.Drawing.PointF" />, определяющий местоположение для тестирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-648">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="e3b73-649">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-649">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-650">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-650">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-651">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-651">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-652">Этот метод проверяет, если структура данного пути подготавливается к просмотру видимым в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="e3b73-652">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-653">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-653">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="e3b73-654">Объект <see cref="T:System.Drawing.Point" />, определяющий местоположение для тестирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-654">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="e3b73-655">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-655">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="e3b73-656">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-656">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-657">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" /> и использовании заданного объекта <see cref="T:System.Drawing.Graphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-657">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-658">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-658">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-659">Этот метод проверяет, если структура данного пути подготавливается к просмотру видимым в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="e3b73-659">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="e3b73-660">Координаты точки проверяемый предоставляется в мировых координатах.</span><span class="sxs-lookup"><span data-stu-id="e3b73-660">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e3b73-661">Матрица преобразования `graphics` временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="e3b73-661">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-662">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-662">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="e3b73-663">Объект <see cref="T:System.Drawing.PointF" />, определяющий местоположение для тестирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-663">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="e3b73-664">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-664">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="e3b73-665">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-665">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-666">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" /> и использовании заданного объекта <see cref="T:System.Drawing.Graphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-666">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-667">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри (под) контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-667">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-668">Этот метод проверяет, если структура данного пути подготавливается к просмотру видимым в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="e3b73-668">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="e3b73-669">Координаты точки проверяемый предоставляется в мировых координатах.</span><span class="sxs-lookup"><span data-stu-id="e3b73-669">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e3b73-670">Матрица преобразования `graphics` временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="e3b73-670">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-671">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-671">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-672">Координата тестируемой точки по оси X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-672">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-673">Координата тестируемой точки по оси Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-673">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="e3b73-674">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-674">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-675">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-675">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-676">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-676">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-677">Этот метод проверяет, если структура данного пути подготавливается к просмотру видимым в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="e3b73-677">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-678">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-678">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-679">Координата тестируемой точки по оси X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-679">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-680">Координата тестируемой точки по оси Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-680">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="e3b73-681">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-681">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-682">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-682">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-683">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-683">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-684">Этот метод проверяет, если структура данного пути подготавливается к просмотру видимым в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="e3b73-684">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-685">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-685">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-686">Координата тестируемой точки по оси X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-686">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-687">Координата тестируемой точки по оси Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-687">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="e3b73-688">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-688">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="e3b73-689">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-689">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-690">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" /> и использовании заданного объекта <see cref="T:System.Drawing.Graphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-690">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-691">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-691">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-692">Этот метод проверяет, если структура данного пути подготавливается к просмотру видимым в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="e3b73-692">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="e3b73-693">Координаты точки проверяемый предоставляется в мировых координатах.</span><span class="sxs-lookup"><span data-stu-id="e3b73-693">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e3b73-694">Матрица преобразования `graphics` временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="e3b73-694">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-695">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> событий.</span><span class="sxs-lookup"><span data-stu-id="e3b73-695">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="e3b73-696">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-696">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-697">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-697">Creates a path.</span></span>  
  
-   <span data-ttu-id="e3b73-698">Добавляет прямоугольник к пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-698">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-699">Создает расширенный перо и расширяет контур пером, (чтобы сделать пример более наглядным),</span><span class="sxs-lookup"><span data-stu-id="e3b73-699">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="e3b73-700">Проверяет точку (100, 50) для просмотра, если он находится внутри (под) одной из границ прямоугольника, вызвав <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-700">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="e3b73-701">Результат отображается в окне сообщения (в нашем случае принимает значение true).</span><span class="sxs-lookup"><span data-stu-id="e3b73-701">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="e3b73-702">Другими словами edge отображается над этой точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-702">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-703">Координата тестируемой точки по оси X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-703">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-704">Координата тестируемой точки по оси Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-704">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="e3b73-705">Объект <see cref="T:System.Drawing.Pen" /> для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-705">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="e3b73-706">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-706">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-707">Указывает, содержится ли определенная точка внутри контура этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при его отображении с помощью указанного объекта <see cref="T:System.Drawing.Pen" /> и использовании заданного объекта <see cref="T:System.Drawing.Graphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-707">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-708">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится внутри (под) контура данного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> при отображении его с помощью указанного объекта <see cref="T:System.Drawing.Pen" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-708">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-709">Этот метод проверяет, если структура данного пути подготавливается к просмотру видимым в указанной точке.</span><span class="sxs-lookup"><span data-stu-id="e3b73-709">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="e3b73-710">Координаты точки проверяемый предоставляется в мировых координатах.</span><span class="sxs-lookup"><span data-stu-id="e3b73-710">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e3b73-711">Матрица преобразования `graphics` параметр временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="e3b73-711">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-712">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-712">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-713">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-713">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="e3b73-714">Объект <see cref="T:System.Drawing.Point" />, определяющий проверяемую точку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-714">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-715">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-715">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-716">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-716">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-717">Пример см. в разделе `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="e3b73-717">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="e3b73-718">Объект <see cref="T:System.Drawing.PointF" />, определяющий проверяемую точку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-718">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-719">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-719">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-720">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-720">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-721">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-721">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="e3b73-722">Объект <see cref="T:System.Drawing.Point" />, определяющий проверяемую точку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-722">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="e3b73-723">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-723">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-724">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-724">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-725">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-725">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-726">Координаты точки проверяемый предоставляется в мировых координатах.</span><span class="sxs-lookup"><span data-stu-id="e3b73-726">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e3b73-727">Матрица преобразования `graphics` параметр временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="e3b73-727">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-728">Пример см. в разделе `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="e3b73-728">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="e3b73-729">Объект <see cref="T:System.Drawing.PointF" />, определяющий проверяемую точку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-729">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="e3b73-730">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-730">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-731">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-731">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-732">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-732">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-733">Координаты точки проверяемый предоставляется в мировых координатах.</span><span class="sxs-lookup"><span data-stu-id="e3b73-733">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e3b73-734">Матрица преобразования `graphics` параметр временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="e3b73-734">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-735">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-735">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-736">Координата тестируемой точки по оси X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-736">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-737">Координата тестируемой точки по оси Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-737">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-738">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-738">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-739">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-739">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-740">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-740">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-741">Координата тестируемой точки по оси X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-741">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-742">Координата тестируемой точки по оси Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-742">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-743">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-743">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-744">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-744">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-745">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-745">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-746">Координата тестируемой точки по оси X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-746">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-747">Координата тестируемой точки по оси Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-747">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="e3b73-748">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-748">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-749">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, путем использования заданного объекта <see cref="T:System.Drawing.Graphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-749">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-750">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-750">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-751">Координаты точки проверяемый предоставляется в мировых координатах.</span><span class="sxs-lookup"><span data-stu-id="e3b73-751">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e3b73-752">Матрица преобразования `graphics` временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="e3b73-752">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-753">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-753">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-754">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-754">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-755">Создает контур и добавляет эллипс в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-755">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-756">Проверяет, является ли указанная точка содержится внутри контура.</span><span class="sxs-lookup"><span data-stu-id="e3b73-756">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="e3b73-757">Результат отображается в диалоговом окне.</span><span class="sxs-lookup"><span data-stu-id="e3b73-757">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e3b73-758">Координата тестируемой точки по оси X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-758">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e3b73-759">Координата тестируемой точки по оси Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-759">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="e3b73-760">Объект <see cref="T:System.Drawing.Graphics" />, видимость которого следует проверить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-760">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-761">Указывает, содержится ли указанная точка внутри этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> в видимой вырезанной области заданного объекта <see cref="T:System.Drawing.Graphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-761">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3b73-762">Этот метод возвращает значение <see langword="true" />, если указанная точка содержится в данном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; в противном случае, возвращается значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-762">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-763">Координаты точки проверяемый предоставляется в мировых координатах.</span><span class="sxs-lookup"><span data-stu-id="e3b73-763">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="e3b73-764">Матрица преобразования `graphics` параметр временно применяется перед проверкой на видимость.</span><span class="sxs-lookup"><span data-stu-id="e3b73-764">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-765">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-765">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathData : System.Drawing.Drawing2D.PathData" Usage="System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-766">Получает объект <see cref="T:System.Drawing.Drawing2D.PathData" />, инкапсулирующий массивы точек (<paramref name="points" />) и типов (<paramref name="types" />) для этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-766">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3b73-767">Объект <see cref="T:System.Drawing.Drawing2D.PathData" />, инкапсулирующий массивы точек и типов для этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-767">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathPoints : System.Drawing.PointF[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-768">Получает точки в контуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-768">Gets the points in the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3b73-769">Массив объектов <see cref="T:System.Drawing.PointF" />, представляющий контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-769">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathTypes : byte[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-770">Получает типы соответствующих точек в массиве <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-770">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3b73-771">Массив байтов, определяющий типы соответствующих точек в контуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-771">An array of bytes that specifies the types of the corresponding points in the path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-772">Массив байтов, возвращенных <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> свойство определяет типы точек и флаги для точек данных в пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-772">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="e3b73-773">Для каждой точки биты 0 до 2 указывают тип точки и биты с 3 по 7 содержат набор флагов, определяющих атрибуты точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-773">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="e3b73-774">Ниже приведены возможные значения и их описание.</span><span class="sxs-lookup"><span data-stu-id="e3b73-774">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="e3b73-775">Значение</span><span class="sxs-lookup"><span data-stu-id="e3b73-775">Value</span></span>|<span data-ttu-id="e3b73-776">Смысл</span><span class="sxs-lookup"><span data-stu-id="e3b73-776">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="e3b73-777">0</span><span class="sxs-lookup"><span data-stu-id="e3b73-777">0</span></span>|<span data-ttu-id="e3b73-778">Указывает, что точка является началом фигуры.</span><span class="sxs-lookup"><span data-stu-id="e3b73-778">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="e3b73-779">1</span><span class="sxs-lookup"><span data-stu-id="e3b73-779">1</span></span>|<span data-ttu-id="e3b73-780">Указывает, что точка является одной из двух конечных точек линии.</span><span class="sxs-lookup"><span data-stu-id="e3b73-780">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="e3b73-781">3</span><span class="sxs-lookup"><span data-stu-id="e3b73-781">3</span></span>|<span data-ttu-id="e3b73-782">Указывает, что точка является конечной точки и контрольной точкой сплайна Безье третьего порядка.</span><span class="sxs-lookup"><span data-stu-id="e3b73-782">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="e3b73-783">0x7</span><span class="sxs-lookup"><span data-stu-id="e3b73-783">0x7</span></span>|<span data-ttu-id="e3b73-784">Маскирует все биты за исключением трех младшие разряды, которые указывают тип point.</span><span class="sxs-lookup"><span data-stu-id="e3b73-784">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="e3b73-785">0x20</span><span class="sxs-lookup"><span data-stu-id="e3b73-785">0x20</span></span>|<span data-ttu-id="e3b73-786">Указывает, что точка дана маркера.</span><span class="sxs-lookup"><span data-stu-id="e3b73-786">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="e3b73-787">0x80</span><span class="sxs-lookup"><span data-stu-id="e3b73-787">0x80</span></span>|<span data-ttu-id="e3b73-788">Указывает, что точка является последней точкой в замкнутом субконтуре (рисунок).</span><span class="sxs-lookup"><span data-stu-id="e3b73-788">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointCount : int" Usage="System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-789">Получает число элементов в массиве <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> или <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-789">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3b73-790">Целое число, определяющее количество элементов в массиве <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> или <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-790">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="graphicsPath.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-791">Очищает массивы <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> и <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> и устанавливает <see cref="T:System.Drawing.Drawing2D.FillMode" /> в <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-791">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-792">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-792">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-793">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-793">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-794">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-794">Creates a path.</span></span>  
  
-   <span data-ttu-id="e3b73-795">Добавляет несколько примитивов, к нему.</span><span class="sxs-lookup"><span data-stu-id="e3b73-795">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="e3b73-796">Выводит массив точек контура на экран.</span><span class="sxs-lookup"><span data-stu-id="e3b73-796">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="e3b73-797">Сбрасывает путь пустое состояние.</span><span class="sxs-lookup"><span data-stu-id="e3b73-797">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="e3b73-798">Повторно запрашивает массив точек (если он существует).</span><span class="sxs-lookup"><span data-stu-id="e3b73-798">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="e3b73-799">Выводит массив на экран.</span><span class="sxs-lookup"><span data-stu-id="e3b73-799">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="e3b73-800">Обратите внимание на то, что он массив не удается найти следующий за вызовом сброса.</span><span class="sxs-lookup"><span data-stu-id="e3b73-800">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="graphicsPath.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-801">Изменяет порядок точек в массиве <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> на противоположный.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-801">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-802">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-802">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-803">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-803">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-804">Создает контур и добавляет к нему несколько примитивов.</span><span class="sxs-lookup"><span data-stu-id="e3b73-804">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-805">Выводит массив точек контура на экран.</span><span class="sxs-lookup"><span data-stu-id="e3b73-805">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="e3b73-806">Выводит массив обратном точек на экран.</span><span class="sxs-lookup"><span data-stu-id="e3b73-806">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="e3b73-807">Обратите внимание, что второй листинг точек в обратном порядке из первого.</span><span class="sxs-lookup"><span data-stu-id="e3b73-807">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberSignature Language="F#" Value="member this.SetMarkers : unit -&gt; unit" Usage="graphicsPath.SetMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-808">Устанавливает токен на этом объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-808">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-809">Этот метод создает маркер на путь, который может использоваться для разделения участков пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-809">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="e3b73-810">Затем можно использовать <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> методы для перемещения по маркерам в пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-810">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="e3b73-811">Маркеры используются для разделения групп субконтуров.</span><span class="sxs-lookup"><span data-stu-id="e3b73-811">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="e3b73-812">Между двумя маркерами в пути могут содержаться один или несколько подконтуров.</span><span class="sxs-lookup"><span data-stu-id="e3b73-812">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-813">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-813">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-814">Код создает контур и добавляет несколько примитивов в путь, разделенные маркеры и выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-814">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberSignature Language="F#" Value="member this.StartFigure : unit -&gt; unit" Usage="graphicsPath.StartFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-815">Открывает новую фигуру, не замыкая при этом текущую фигуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-815">Starts a new figure without closing the current figure.</span>
          </span>
          <span data-ttu-id="e3b73-816">Все последующие точки, добавляемые к контуру, добавляются к этой новой фигуре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-816">All subsequent points added to the path are added to this new figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-817">Пользователю следует сохранить исходные точки, если они требуются.</span><span class="sxs-lookup"><span data-stu-id="e3b73-817">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="e3b73-818">Исходные точки преобразуются в контрольные точки кривой Безье внутренне, поэтому отсутствует механизм для возвращения исходные точки.</span><span class="sxs-lookup"><span data-stu-id="e3b73-818">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="e3b73-819">Этот метод запускает новый вложенный путь в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-819">This method starts a new subpath in the path.</span></span> <span data-ttu-id="e3b73-820">Подконтуров дают возможность разделения пути в разделах и <xref:System.Drawing.Drawing2D.GraphicsPathIterator> класс перемещаться по субконтурам.</span><span class="sxs-lookup"><span data-stu-id="e3b73-820">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-821">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-821">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-822">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-822">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-823">Создает путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-823">Creates a path.</span></span>  
  
-   <span data-ttu-id="e3b73-824">Добавляет два набора значений.</span><span class="sxs-lookup"><span data-stu-id="e3b73-824">Adds two sets of figures.</span></span> <span data-ttu-id="e3b73-825">Первый набор объединяет четыре примитива в две фигуры.</span><span class="sxs-lookup"><span data-stu-id="e3b73-825">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="e3b73-826">Второй набор объединяет те же четыре примитивы (за исключением того, что они являются смещение по оси y) в три фигуры.</span><span class="sxs-lookup"><span data-stu-id="e3b73-826">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="e3b73-827">Выводит все фигуры на экране.</span><span class="sxs-lookup"><span data-stu-id="e3b73-827">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="e3b73-828">Обратите внимание на разницу в виде между двумя наборами значений.</span><span class="sxs-lookup"><span data-stu-id="e3b73-828">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="e3b73-829">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, представляющий применяемое преобразование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-829">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-830">Применяет матрицу преобразования к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-830">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-831">Преобразование можно масштабировать, перевод, поворачивать и наклонять <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-831">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-832">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-832">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-833">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-833">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-834">Создает контур и добавляет эллипс в путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-834">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-835">Выводит на экран путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-835">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="e3b73-836">Создает матрицу преобразования для преобразования контура на 100 единиц по оси х.</span><span class="sxs-lookup"><span data-stu-id="e3b73-836">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="e3b73-837">Выводит на экран преобразованный путь.</span><span class="sxs-lookup"><span data-stu-id="e3b73-837">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="e3b73-838">Обратите внимание на то, что исходный эллипс черным цветом, и преобразованный эллипс красным цветом.</span><span class="sxs-lookup"><span data-stu-id="e3b73-838">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-839">Применяет преобразование перекоса, определяемое прямоугольником и параллелограммом, к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-839">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="e3b73-840">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий параллелограмм, в который преобразуется прямоугольник, определяемый объектом <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-840">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="e3b73-841">Массив может содержать три или четыре элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-841">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="e3b73-842">Если массив содержит три элемента, то правый нижний угол параллелограмма вычисляется из первых трех точек.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-842">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="e3b73-843">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который преобразуется в параллелограмм, определяемый объектом <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-843">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-844">Применяет преобразование перекоса, определяемое прямоугольником и параллелограммом, к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-844">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-845">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-845">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="e3b73-846">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий параллелограмм, в который преобразуется прямоугольник, определяемый объектом <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-846">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="e3b73-847">Массив может содержать три или четыре элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-847">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="e3b73-848">Если массив содержит три элемента, то правый нижний угол параллелограмма вычисляется из первых трех точек.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-848">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="e3b73-849">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который преобразуется в параллелограмм, определяемый объектом <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-849">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="e3b73-850">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий геометрическое преобразование для контура.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-850">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-851">Применяет преобразование перекоса, определяемое прямоугольником и параллелограммом, к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-851">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-852">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-852">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="e3b73-853">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий параллелограмм, в который преобразуется прямоугольник, определяемый объектом <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-853">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="e3b73-854">Массив может содержать три или четыре элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-854">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="e3b73-855">Если массив содержит три элемента, то правый нижний угол параллелограмма вычисляется из первых трех точек.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-855">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="e3b73-856">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который преобразуется в параллелограмм, определяемый объектом <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-856">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="e3b73-857">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий геометрическое преобразование для контура.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-857">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="e3b73-858">Перечисление <see cref="T:System.Drawing.Drawing2D.WarpMode" />, указывающее, перспективный или билинейный режим использует операция перекоса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-858">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-859">Применяет преобразование перекоса, определяемое прямоугольником и параллелограммом, к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-859">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-860">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-860">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode * single -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="e3b73-861">Массив структур <see cref="T:System.Drawing.PointF" />, определяющий параллелограмм, в который преобразуется прямоугольник, определяемый объектом <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-861">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="e3b73-862">Массив может содержать три или четыре элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-862">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="e3b73-863">Если массив содержит три элемента, то правый нижний угол параллелограмма вычисляется из первых трех точек.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-863">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="e3b73-864">Объект <see cref="T:System.Drawing.RectangleF" />, представляющий прямоугольник, который преобразуется в параллелограмм, определяемый объектом <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-864">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="e3b73-865">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий геометрическое преобразование для контура.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-865">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="e3b73-866">Перечисление <see cref="T:System.Drawing.Drawing2D.WarpMode" />, указывающее, перспективный или билинейный режим использует операция перекоса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-866">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="e3b73-867">Значение от 0 до 1, определяющее, насколько гладок результирующий контур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-867">A value from 0 through 1 that specifies how flat the resulting path is.</span>
          </span>
          <span data-ttu-id="e3b73-868">Для получения дополнительных сведений см. методы <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-868">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-869">Применяет преобразование перекоса, определяемое прямоугольником и параллелограммом, к этому объекту <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-869">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e3b73-870">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-870">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-871">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-871">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-872">Создает контур и добавляет прямоугольник к пути.</span><span class="sxs-lookup"><span data-stu-id="e3b73-872">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-873">Рисует этот прямоугольник на экране черным цветом.</span><span class="sxs-lookup"><span data-stu-id="e3b73-873">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="e3b73-874">Порциях путь с деформацию перспективы.</span><span class="sxs-lookup"><span data-stu-id="e3b73-874">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="e3b73-875">Выводит на экран красным искаженной прямоугольника (путь).</span><span class="sxs-lookup"><span data-stu-id="e3b73-875">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3b73-876">Заменяет данный контур кривыми, окружающими область, заполняемую при отображении контура указанным пером.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-876">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen -&gt; unit" Usage="graphicsPath.Widen pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="e3b73-877">Объект <see cref="T:System.Drawing.Pen" />, определяющий расстояние между исходными очертаниями контура и новыми очертаниями, которые создает данный метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-877">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-878">Добавляет дополнительное очертание к контуру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-878">Adds an additional outline to the path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-879">Этот метод создает структуры вокруг исходных строк в этом <xref:System.Drawing.Drawing2D.GraphicsPath>, с расстоянием между существующие строки и новыми очертаниями, равным ширине элемента <xref:System.Drawing.Pen> используется в вызове <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-879">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="e3b73-880">Если вы хотите заполнить пространство между строками необходимо использовать <xref:System.Drawing.Graphics.FillPath%2A> а не <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-880">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-881">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-881">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Widen (pen, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="e3b73-882">Объект <see cref="T:System.Drawing.Pen" />, определяющий расстояние между исходными очертаниями контура и новыми очертаниями, которые создает данный метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-882">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="e3b73-883">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий геометрическое преобразование для контура перед расширением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-883">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-884">Добавляет дополнительное очертание в объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-884">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-885">Этот метод создает структуры вокруг исходных строк в этом <xref:System.Drawing.Drawing2D.GraphicsPath>, с расстоянием между существующие строки и новыми очертаниями, равным ширине элемента <xref:System.Drawing.Pen> используется в вызове <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-885">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="e3b73-886">Если вы хотите заполнить пространство между строками необходимо использовать <xref:System.Drawing.Graphics.FillPath%2A> а не <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-886">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-887">Пример см. в разделе <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-887">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Widen (pen, matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="e3b73-888">Объект <see cref="T:System.Drawing.Pen" />, определяющий расстояние между исходными очертаниями контура и новыми очертаниями, которые создает данный метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-888">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="e3b73-889">Объект <see cref="T:System.Drawing.Drawing2D.Matrix" />, определяющий геометрическое преобразование для контура перед расширением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-889">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="e3b73-890">Значение, указывающее сглаженность кривых.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-890">A value that specifies the flatness for curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3b73-891">Заменяет данный объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> кривыми, окружающими область, заполняемую при отображении контура указанным пером.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3b73-891">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3b73-892">Этот метод создает структуры вокруг исходных строк в этом <xref:System.Drawing.Drawing2D.GraphicsPath>, с расстоянием между существующие строки и новыми очертаниями, равным ширине элемента <xref:System.Drawing.Pen> используется в вызове <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-892">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="e3b73-893">Если вы хотите заполнить пространство между строками необходимо использовать <xref:System.Drawing.Graphics.FillPath%2A> а не <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="e3b73-893">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e3b73-894">В следующем примере кода предназначен для работы с Windows Forms и требует <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события.</span><span class="sxs-lookup"><span data-stu-id="e3b73-894">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="e3b73-895">Код выполняет следующие действия.</span><span class="sxs-lookup"><span data-stu-id="e3b73-895">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="e3b73-896">Создает контур и добавляет к нему двух эллипсов.</span><span class="sxs-lookup"><span data-stu-id="e3b73-896">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="e3b73-897">Рисует контур черным цветом.</span><span class="sxs-lookup"><span data-stu-id="e3b73-897">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="e3b73-898">Расширяет контур.</span><span class="sxs-lookup"><span data-stu-id="e3b73-898">Widens the path.</span></span>  
  
-   <span data-ttu-id="e3b73-899">Рисует контур красным цветом.</span><span class="sxs-lookup"><span data-stu-id="e3b73-899">Draws the path in red.</span></span>  
  
 <span data-ttu-id="e3b73-900">Обратите внимание на то, использует второй отрисовку <xref:System.Drawing.Graphics.FillPath%2A> вместо <xref:System.Drawing.Graphics.DrawPath%2A>, и поэтому имеет заполнен контур в готовом для просмотра рис.</span><span class="sxs-lookup"><span data-stu-id="e3b73-900">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>