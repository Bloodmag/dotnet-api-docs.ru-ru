<Type Name="GraphicsPathIterator" FullName="System.Drawing.Drawing2D.GraphicsPathIterator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="868cfafe7838293ffd89cde43221f26fa996840c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GraphicsPathIterator : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPathIterator extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPathIterator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPathIterator&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPathIterator sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет возможность перемещаться по субконтурам в объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> и проверять типы фигур, содержащихся в каждом субконтуре. Этот класс не наследуется.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPathIterator (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPathIterator(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, для которого необходимо инициализировать данный вспомогательный класс.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> с указанным объектом <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyData">
      <MemberSignature Language="C#" Value="public int CopyData (ref System.Drawing.PointF[] points, ref byte[] types, int startIndex, int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CopyData(valuetype System.Drawing.PointF[]&amp; points, unsigned int8[]&amp; types, int32 startIndex, int32 endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyData (ByRef points As PointF(), ByRef types As Byte(), startIndex As Integer, endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CopyData(cli::array &lt;System::Drawing::PointF&gt; ^ % points, cli::array &lt;System::Byte&gt; ^ % types, int startIndex, int endIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]&amp;" RefType="ref" />
        <Parameter Name="types" Type="System.Byte[]&amp;" RefType="ref" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="points">По возвращении содержит массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки в контуре.</param>
        <param name="types">По возвращении содержит массив байтов, представляющий типы точек в контуре.</param>
        <param name="startIndex">Указывает начальный индекс массивов.</param>
        <param name="endIndex">Указывает конечный индекс массивов.</param>
        <summary>Копирует свойство <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> и массивы свойств <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> связанного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> в два указанных массива.</summary>
        <returns>Число скопированных точек.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте `startIndex` и `endIndex` параметрами копируемых в указанный диапазон данных пути.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события. Код выполняет следующие действия.  
  
-   Создает графический контур.  
  
-   Добавляет в нее несколько примитивов и некоторые маркеры.  
  
-   Список данных контура в левой части экрана.  
  
-   Создает <xref:System.Drawing.Drawing2D.GraphicsPathIterator> и перематывает его.  
  
-   Увеличивает индекс данных контура до второго маркера.  
  
-   Вызовы <xref:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData%2A> метод, чтобы скопировать путь данных, содержащихся между начальной и конечной индексирует точкам и типы массивов.  
  
-   Список скопированных данных в правой части экрана.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает количество точек в контуре.</summary>
        <value>Количество точек в контуре.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, используемые этим объектом <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов `Dispose` позволяет ресурсы, используемые <xref:System.Drawing.Drawing2D.GraphicsPathIterator> объекта перераспределить для других целей.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public int Enumerate (ref System.Drawing.PointF[] points, ref byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Enumerate(valuetype System.Drawing.PointF[]&amp; points, unsigned int8[]&amp; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Enumerate (ByRef points As PointF(), ByRef types As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Enumerate(cli::array &lt;System::Drawing::PointF&gt; ^ % points, cli::array &lt;System::Byte&gt; ^ % types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]&amp;" RefType="ref" />
        <Parameter Name="types" Type="System.Byte[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="points">По возвращении содержит массив структур <see cref="T:System.Drawing.PointF" />, представляющий точки в контуре.</param>
        <param name="types">По возвращении содержит массив байтов, представляющий типы точек в контуре.</param>
        <summary>Копирует свойство <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> и массивы свойств <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> связанного объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> в два указанных массива.</summary>
        <returns>Число скопированных точек.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события. Код выполняет следующие действия.  
  
-   Создает графический контур.  
  
-   Добавляет в нее несколько примитивов и некоторые маркеры.  
  
-   Список данных контура в левой части экрана.  
  
-   Создает <xref:System.Drawing.Drawing2D.GraphicsPathIterator> и перематывает его.  
  
-   Увеличивает индекс данных контура до второго маркера.  
  
-   Вызовы <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate%2A> для копирования данных контура в `points` и `types` массивов.  
  
-   Список скопированных данных в правой части экрана.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPathIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPathIterator ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как он будет уничтожен во время сборки мусора.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCurve">
      <MemberSignature Language="C#" Value="public bool HasCurve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasCurve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve" />
      <MemberSignature Language="VB.NET" Value="Public Function HasCurve () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasCurve();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет, содержит ли контур, связанный с этим объектом <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />, кривую.</summary>
        <returns>Метод возвращает значение <see langword="true" />, если текущий субконтур содержит кривую; в противном случае он возвращает значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все кривые в контуре хранятся в виде последовательностей сплайнов Безье. Например при добавлении контура эллипса, укажите верхнего левого угла, ширина и высота его ограничивающего прямоугольника. Эти числа (левый верхний угол, ширину и высоту) не хранятся в каталоге; Вместо этого; эллипс преобразуется в последовательность из четырех сплайнов Безье. В контуре записаны конечные и контрольные точки этих сплайнов Безье.  
  
 Путь содержит массив точек данных, каждая из которых принадлежит линии или сплайн Безье. Если некоторые точки в массиве принадлежат сплайнов Безье, затем <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> возвращает `true`. Если все точки в массиве принадлежат строк, затем <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> возвращает `false`.  
  
 Некоторые методы Спрямление, это означает, что все кривые в пути преобразуются в последовательности линий. После путь был выровнен, <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> всегда будет возвращать `false`. Вызов <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A>, <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>, или <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A> метод <xref:System.Drawing.Drawing2D.GraphicsPath> выравнивает путь.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события. Код выполняет следующие действия.  
  
-   Создает <xref:System.Drawing.Drawing2D.GraphicsPath> объекта, `myPath`.  
  
-   Добавляет три линии, прямоугольник и эллипс.  
  
-   Создает <xref:System.Drawing.Drawing2D.GraphicsPathIterator> для объекта `myPath`.  
  
-   Проверяет, если текущий путь `myPath` содержит кривую.  
  
-   Показывает результат теста в окне сообщения.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextMarker">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Перемещает итератор к следующему маркеру в контуре.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextMarker">
      <MemberSignature Language="C#" Value="public int NextMarker (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextMarker(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMarker (path As GraphicsPath) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextMarker(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, в который будут скопированы точки.</param>
        <summary>У этого объекта <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> имеется связанный с ним объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />. Метод <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> увеличивает связанный с ним объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> до следующего маркера в его контуре и копирует все точки, содержащиеся между текущим и следующим маркерами (или концом контура), во второй объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, переданный в параметр.</summary>
        <returns>Количество точек между этим и следующим маркерами.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> метод для установки маркеров в контуре. Маркеры используются для создания групп подпути. Один или несколько вложенных путей может быть между двумя маркерами.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события. Код выполняет следующие действия.  
  
-   Создает объект <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
-   Добавляет три линии, прямоугольник, эллипс и двумя маркерами.  
  
-   Перечисляет значения путь указывает на левой стороне экрана.  
  
-   Создает объект <xref:System.Drawing.Drawing2D.GraphicsPathIterator>.  
  
-   Создает <xref:System.Drawing.Drawing2D.GraphicsPath> объекта, `myPathSection`, для получения копируемых точек.  
  
-   Вызовы <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> метод, который перемещается к первому маркеру и копирует все точки, содержащиеся между этим маркером и Далее, чтобы `myPathSection`.  
  
-   Возвращает число точек, скопированных в `markerPoints`.  
  
-   Содержит номер маркера (маркер первого) и количество точек, содержащихся в нем в правой части экрана.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextMarker">
      <MemberSignature Language="C#" Value="public int NextMarker (out int startIndex, out int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextMarker([out] int32&amp; startIndex, [out] int32&amp; endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMarker (ByRef startIndex As Integer, ByRef endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextMarker([Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startIndex">[out] Ссылка на целое число, предоставляемая данному параметру, получает индекс точки, с которой начинается субконтур.</param>
        <param name="endIndex">[out] Ссылка на целое число, предоставляемая данному параметру, получает индекс точки, которой заканчивается субконтур, на который указывает <c>startIndex</c>.</param>
        <summary>Увеличивает объект <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> до следующего маркера в контуре и возвращает начальный и конечный индексы в виде параметров [out].</summary>
        <returns>Количество точек между этим и следующим маркерами.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> метод для установки маркеров в контуре. Маркеры используются для создания групп подпути. Один или несколько вложенных путей может быть между двумя маркерами.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события. Код выполняет следующие действия.  
  
-   Создает объект <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
-   Добавляет три линии, прямоугольник и эллипс с маркерами между ними.  
  
-   Выводит на экран значения к массиву точек.  
  
-   Создает объект <xref:System.Drawing.Drawing2D.GraphicsPathIterator>.  
  
-   Вызывает метод <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>.  
  
-   Использует значения, возвращенные из вызовов итеративный <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> для отображения начальной и конечной точек для каждого маркера на экране.  
  
-   Отображает значение для общего количества точек на экране.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPathType">
      <MemberSignature Language="C#" Value="public int NextPathType (out byte pathType, out int startIndex, out int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextPathType([out] unsigned int8&amp; pathType, [out] int32&amp; startIndex, [out] int32&amp; endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextPathType (ByRef pathType As Byte, ByRef startIndex As Integer, ByRef endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextPathType([Runtime::InteropServices::Out] System::Byte % pathType, [Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathType" Type="System.Byte&amp;" RefType="out" />
        <Parameter Name="startIndex" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pathType">[out] Получает тип точки, общий для всех точек в группе. Возможные типы могут быть извлечены из перечисления <see cref="T:System.Drawing.Drawing2D.PathPointType" />.</param>
        <param name="startIndex">[out] Получает начальный индекс группы точек.</param>
        <param name="endIndex">[out] Получает конечный индекс группы точек.</param>
        <summary>Получает начальный и конечный индексы следующей группы точек данных, имеющих один и тот же тип.</summary>
        <returns>Данный метод возвращает количество точек данных в группе. Если в контуре нет больше групп, метод возвращает значение 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события. Код выполняет следующие действия.  
  
-   Создает объект <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
-   Добавляет три линии, прямоугольник и эллипс.  
  
-   Перечисляет значения всех точек в левой части экрана.  
  
-   Создает <xref:System.Drawing.Drawing2D.GraphicsPathIterator> и перематывает его.  
  
-   В `for` цикла, выполняет итерацию точки, с помощью <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> и <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> методы.  
  
-   Использует значения, возвращенные из вызовов итеративный списка номер вложенным, количество точек в нем и типа точек контура в правую часть экрана.  
  
-   Отображает значение для общего количества точек на экране.  
  
 Обратите внимание, что `ListPathPoints` — это вспомогательная функция, которая разделяет большинство (не все) отображения кода из кода путь графики.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextSubpath">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Перемещает субконтур к следующему субконтуру в указанном объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextSubpath">
      <MemberSignature Language="C#" Value="public int NextSubpath (System.Drawing.Drawing2D.GraphicsPath path, out bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextSubpath(class System.Drawing.Drawing2D.GraphicsPath path, [out] bool&amp; isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSubpath (path As GraphicsPath, ByRef isClosed As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextSubpath(System::Drawing::Drawing2D::GraphicsPath ^ path, [Runtime::InteropServices::Out] bool % isClosed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="isClosed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="path">Объект <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, данные о точках которого установлены в соответствии с данными о точках извлекаемой фигуры (субконтура) для данного итератора.</param>
        <param name="isClosed">[out] Указывает, является ли текущий субконтур замкнутым. Принимает значение <see langword="true" />, если фигура замкнута; в противном случае значение равно <see langword="false" />.</param>
        <summary>Получает следующую фигуру (субконтур) из контура, связанного с этим объектом <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />.</summary>
        <returns>Количество точек данных в извлеченной фигуре (субконтуре). Если больше нет фигур для извлечения, возвращается значение нуль.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события. Код выполняет следующие действия.  
  
-   Создает объект <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
-   Добавляет три линии, прямоугольник, эллипс и двумя маркерами.  
  
-   Перечисляет значения путь указывает на левой стороне экрана.  
  
-   Создает объект <xref:System.Drawing.Drawing2D.GraphicsPathIterator>.  
  
-   Создает <xref:System.Drawing.Drawing2D.GraphicsPath> объекта, `myPathSection`, для получения копируемых точек.  
  
-   Вызовы <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> метод, который выполняет итерацию с вложенным путем третий (рисунок) и копирует все точки, содержащиеся в этой вложенным в `myPathSection` пути и возвращает количество точек копируются в `subpathPoints`.  
  
-   Выводит номер вложенным и количество точек, содержащихся в нем в правой части экрана.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSubpath">
      <MemberSignature Language="C#" Value="public int NextSubpath (out int startIndex, out int endIndex, out bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextSubpath([out] int32&amp; startIndex, [out] int32&amp; endIndex, [out] bool&amp; isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSubpath (ByRef startIndex As Integer, ByRef endIndex As Integer, ByRef isClosed As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextSubpath([Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex, [Runtime::InteropServices::Out] bool % isClosed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="isClosed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startIndex">[out] Получает начальный индекс следующего субконтура.</param>
        <param name="endIndex">[out] Получает конечный индекс следующего субконтура.</param>
        <param name="isClosed">[out] Указывает, является ли субконтур замкнутым.</param>
        <summary>Перемещает объект <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> в следующий субконтур в контуре. Начальный и конечный индексы следующего субконтура содержатся в параметрах [out].</summary>
        <returns>Количество субконтуров в объекте <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> объект события. Код выполняет следующие действия.  
  
-   Создает объект <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
-   Добавляет три линии, прямоугольник и эллипс.  
  
-   Выводит на экран значения к массиву точек.  
  
-   Создает объект <xref:System.Drawing.Drawing2D.GraphicsPathIterator>.  
  
-   Вызывает метод <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A>.  
  
-   Использует значения, возвращенные из вызовов итеративный <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> для отображения начального и конечного значений для каждого вложенного пути на экране.  
  
-   Выводит общее количество подпути экрана.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewind">
      <MemberSignature Language="C#" Value="public void Rewind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rewind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rewind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rewind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Перематывает этот объект <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> на начало связанного с ним контура.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При первом вызове <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> метода итератора, он получает первую фигуру (вложенным) связанного пути, итератор. Во второй раз, он получает вторую фигуру и т. д. При вызове <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A> метод, последовательность начинается заново, то есть после вызова метода <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A>, при следующем вызове <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> получает первую фигуру в пути. <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> И <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> методы ведут себя аналогичным образом.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubpathCount">
      <MemberSignature Language="C#" Value="public int SubpathCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubpathCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubpathCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubpathCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает количество субконтуров в контуре.</summary>
        <value>Количество субконтуров в контуре.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>