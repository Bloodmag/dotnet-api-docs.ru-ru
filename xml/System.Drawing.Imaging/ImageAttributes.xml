<Type Name="ImageAttributes" FullName="System.Drawing.Imaging.ImageAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9888bff2f49f7c82f8eb886df908b8bf8e5a66bc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36670881" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImageAttributes : ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageAttributes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageAttributes&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageAttributes sealed : ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type ImageAttributes = class&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Contains information about how bitmap and metafile colors are manipulated during rendering.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Объект поддерживает несколько параметров настройки цвета, включая матрицы настройки цвета, матрицы настройки оттенков серого, значения гамма коррекции, таблицы карт цвета и цвета пороговые значения. Во время подготовки к просмотру, цвета могут быть исправлены, затемнены, светлее и удалены. Чтобы применить подобную обработку, инициализируйте <xref:System.Drawing.Imaging.ImageAttributes> и передать путь, <xref:System.Drawing.Imaging.ImageAttributes> объекта (и путь <xref:System.Drawing.Image>) для <xref:System.Drawing.Graphics.DrawImage%2A> метод.  
  
   
  
## Examples  
 В следующем примере берется изображение, которое находится только один цвет (0,2, 0,0, 0,4, 1.0) и удваивается красный компонент добавляет 0,2 красного, зеленого и синего компонентов  
  
 Ниже показан исходный образ в левой части экрана и преобразованное изображение справа.  
  
 ![Цвета](~/add/media/colortrans1.png "цветов")  
  
 Код в следующем примере использует следующие действия для выполнения гамме.  
  
1.  Инициализация <xref:System.Drawing.Imaging.ColorMatrix> объекта.  
  
2.  Создание <xref:System.Drawing.Imaging.ImageAttributes> и передать <xref:System.Drawing.Imaging.ColorMatrix> объект <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> метод <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
3.  Передайте <xref:System.Drawing.Imaging.ImageAttributes> объект <xref:System.Drawing.Graphics.DrawImage%2A> метод <xref:System.Drawing.Graphics> объекта.  
  
 [!code-csharp[System.Drawing.RecoloringImages#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RecoloringImages/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.RecoloringImages#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RecoloringImages/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBrushRemapTable">
      <MemberSignature Language="C#" Value="public void ClearBrushRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearBrushRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearBrushRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearBrushRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearBrushRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearBrushRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the brush color-remap table of this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать одну таблицу преобразования цветов для категории по умолчанию, таблицу различные преобразования цветов для категории точечных рисунков и по-прежнему таблицы различные преобразования цветов для категории кистей.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если не указать параметры настройки для категории кистей, параметры по умолчанию применяются для категории кистей.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например, предположим, что таблицу преобразования по умолчанию, которая преобразует красный, зеленый, и указать значение по умолчанию гамма 1.8. При вызове <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> метода, таблица преобразования по умолчанию (красный, зеленый цвет) и гамма-значение по умолчанию (1,8) не будет применяться к кисти. Если после этого вызвать <xref:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable%2A> метод, категория кистей не вернется к таблице преобразования по умолчанию; вместо этого категории кистей будет иметь таблицу без преобразования. Аналогичным образом категория кистей не вернется к гамма-значение по умолчанию; точнее категория кистей будет иметь не гамма-значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Clears the color key (transparency range).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey();" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : unit -&gt; unit" Usage="imageAttributes.ClearColorKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the color key (transparency range) for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать один ключ цвета для категории по умолчанию, другой — для категории точечных рисунков и по-прежнему для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorKey : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorKey type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color key is cleared.</param>
        <summary>Clears the color key (transparency range) for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать один ключ цвета для категории по умолчанию, другой — для категории точечных рисунков и по-прежнему для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например, предположим, что цветовой ключ по умолчанию, который делает любой цвет с красного компонента от 200 до 255 прозрачным и указать значение по умолчанию гамма 1.8. Если установить ключ цвета для категории перьев путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> метод, цветовой ключ по умолчанию и гамма-значение по умолчанию не будет применяться к перья. Если после этого цветовой ключ путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> метод, категория перьев не вернется к цветовой ключ по умолчанию; вместо этого пера категории будет иметь не цветовой ключ. Аналогичным образом категория перьев не вернется к гамма-значение по умолчанию; точнее категория перьев будет иметь не гамма-значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Clears the color-adjustment matrix.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix();" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : unit -&gt; unit" Usage="imageAttributes.ClearColorMatrix " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the color-adjustment matrix for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать матрицу настройки цвета для категории по умолчанию матрицу различные настройки цвета для категории точечных рисунков и по-прежнему матрицу различные настройки цвета для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, параметры по умолчанию применяются для категории пера.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearColorMatrix : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearColorMatrix type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-adjustment matrix is cleared.</param>
        <summary>Clears the color-adjustment matrix for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать матрицу настройки цвета для категории по умолчанию матрицу различные настройки цвета для категории точечных рисунков и по-прежнему матрицу различные настройки цвета для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, параметры по умолчанию применяются для категории пера.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что матрица настройки цвета и гамма-значение для категории по умолчанию. Если установить матрицу настройки цвета для категории перьев путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> метод, матрица настройки цвета по умолчанию не будет применяться к перья. Если после этого очистить матрицу настройки цвета пера путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> метод, категория перьев не вернется к матрице настройки по умолчанию; вместо этого пера категории будет иметь не матрицу настройки. Аналогичным образом категория перьев не вернется к гамма-значение по умолчанию; точнее категория перьев будет иметь не гамма-значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Disables gamma correction.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma();" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : unit -&gt; unit" Usage="imageAttributes.ClearGamma " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disables gamma correction for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearGamma : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearGamma type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which gamma correction is disabled.</param>
        <summary>Disables gamma correction for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, параметры по умолчанию применяются для категории пера.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что гамма-значение и матрицу настройки цвета для категории по умолчанию. Если установить гамма-значение для категории перьев путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> метода гамма-значение по умолчанию не будет применяться к перья. Если после этого пера гамма-значение путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> метод, категория перьев не вернется к гамма-значение по умолчанию; вместо этого пера категории будет иметь не гамма-значение. Аналогичным образом категория перьев не вернется к матрица настройки цвета по умолчанию; точнее категория перьев будет иметь не матрица настройки цвета.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Clears the <see langword="NoOp" /> setting.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp();" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : unit -&gt; unit" Usage="imageAttributes.ClearNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the <see langword="NoOp" /> setting for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.  
  
 Можно отключить настройку цвета для категории по умолчанию путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> метод. Позже можно восстановить настройку цвета для категории по умолчанию путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> метод. Настройка цвета возвращает была перед вызовом <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the <see langword="NoOp" /> setting is cleared.</param>
        <summary>Clears the <see langword="NoOp" /> setting for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.  
  
 Можно отключить настройку цвета для определенной категории, вызвав <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> метод. Позже можно восстановить настройку цвета для категории, вызвав <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> метод. Настройка цвета возвращает была перед вызовом <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Clears the CMYK (cyan-magenta-yellow-black) output channel setting.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the CMYK (cyan-magenta-yellow-black) output channel setting for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать канал вывода для категории по умолчанию и другие выходные канала для категории точечных рисунков.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannel : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannel type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel setting is cleared.</param>
        <summary>Clears the (cyan-magenta-yellow-black) output channel setting for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать канал вывода для категории по умолчанию и другие выходные канала для категории точечных рисунков.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что исходящий канал и матрицу настройки для категории по умолчанию. Если установить канал вывода для категории точечных рисунков путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> метод, по умолчанию выходной канал не будет применяться к точечным рисункам. Если после этого точечного рисунка выходной канал, вызвав <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> метод, категория точечных рисунков не вернется к каналу вывода по умолчанию; вместо этого категории растровое изображение будет иметь не канала вывода. Аналогичным образом категория точечных рисунков не вернется к матрица настройки цвета по умолчанию; точнее категория точечных рисунков будет иметь не матрица настройки цвета.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Clears the output channel color profile setting.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile();" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : unit -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the output channel color profile setting for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать профиль канала вывода для категории по умолчанию и другие выходные профиля канала для категории точечных рисунков.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearOutputChannelColorProfile : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearOutputChannelColorProfile type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel profile setting is cleared.</param>
        <summary>Clears the output channel color profile setting for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать профиль канала вывода для категории по умолчанию и другие выходные профиля канала для категории точечных рисунков.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что профиль канала вывода и матрицу настройки для категории по умолчанию. Если установить профиль канала вывода для категории точечных рисунков путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> метод, по умолчанию профиля канала вывода не будет применяться к точечным рисункам. Если после этого точечного рисунка выходных данных профиля канала путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> метод, категория точечных рисунков не вернется к профиля канала вывода по умолчанию; вместо этого категории растровое изображение будет иметь нет профиля канала вывода. Аналогичным образом категория точечных рисунков не вернется к матрица настройки цвета по умолчанию; точнее категория точечных рисунков будет иметь не матрица настройки цвета.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Clears the color-remap table.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable();" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : unit -&gt; unit" Usage="imageAttributes.ClearRemapTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the color-remap table for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать таблицу преобразования для категории по умолчанию, другую таблицу для категории точечных рисунков и по-прежнему другую таблицу для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearRemapTable : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearRemapTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the remap table is cleared.</param>
        <summary>Clears the color-remap table for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать таблицу преобразования для категории по умолчанию, другую таблицу для категории точечных рисунков и по-прежнему другую таблицу для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, параметры по умолчанию применяются для категории пера.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что таблица преобразования и гамма-значение для категории по умолчанию. Если установить таблица преобразования цветов для категории перьев путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> метод, таблица преобразования по умолчанию не будет применяться к перья. Если после этого таблицу путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> метод, категория перьев не вернется к таблице преобразования по умолчанию; вместо этого пера категории будет иметь таблицу без преобразования. Аналогичным образом категория перьев не вернется к гамма-значение по умолчанию; точнее категория перьев будет иметь не гамма-значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Clears the threshold value.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold();" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : unit -&gt; unit" Usage="imageAttributes.ClearThreshold " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the threshold value for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пороговое значение представляет собой значение от 0 до 1, определяющая точку отсечки для каждого компонента цвета. Например предположим, задано пороговое значение 0,7 и происходит отображение цвета, красный, зеленый и синий компоненты являются 230, 50 и 220 соответственно. Красного компонента (230) больше, чем 0.7x255, поэтому красного компонента будет изменена на 255 (полная насыщенность). Зеленый компонент (50) меньше, чем 0.7x255, поэтому будет изменена на 0. Синяя составляющая (220) превышает 0.7x255, поэтому синего компонента будет изменена на 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать пороговое значение для категории по умолчанию, различные пороговое значение для категории точечных рисунков и по-прежнему различных пороговое значение для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.ClearThreshold : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.ClearThreshold type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the threshold is cleared.</param>
        <summary>Clears the threshold value for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пороговое значение представляет собой значение от 0 до 1, определяющая точку отсечки для каждого компонента цвета. Например предположим, задано пороговое значение 0,7 и происходит отображение цвета, красный, зеленый и синий компоненты являются 230, 50 и 220 соответственно. Красного компонента (230) больше, чем 0.7x55, поэтому красного компонента будет изменена на 255 (полная насыщенность). Зеленый компонент (50) меньше, чем 0.7x255, поэтому будет изменена на 0. Синяя составляющая (220) превышает 0.7x255, поэтому синего компонента будет изменена на 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать пороговое значение для категории по умолчанию, различные пороговое значение для категории точечных рисунков и по-прежнему различных пороговое значение для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что пороговое значение и гамма-значение для категории по умолчанию. Если установить пороговое значение для категории перьев путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> метод, пороговое значение по умолчанию не будет применяться к перья. Если после этого порогового значения пера путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> метод, категория перьев не вернется к пороговое значение по умолчанию; вместо этого категория перьев не будет иметь порога. Аналогичным образом категория перьев не вернется к гамма-значение по умолчанию; точнее категория перьев будет иметь не гамма-значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="imageAttributes.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an exact copy of this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</summary>
        <returns>The <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object this class creates, cast as an object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="imageAttributes.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases all resources used by this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите метод <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> по окончании использования класса <xref:System.Drawing.Imaging.ImageAttributes>. Метод <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> оставляет класс <xref:System.Drawing.Imaging.ImageAttributes> в непригодном для использования состоянии. После вызова метода <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Drawing.Imaging.ImageAttributes> , сборщик мусора мог освободить память, <xref:System.Drawing.Imaging.ImageAttributes> занимаемую. Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Drawing.Imaging.ImageAttributes>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Drawing.Imaging.ImageAttributes> метод `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ImageAttributes ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="imageAttributes.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustedPalette">
      <MemberSignature Language="C#" Value="public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAdjustedPalette(class System.Drawing.Imaging.ColorPalette palette, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAdjustedPalette (palette As ColorPalette, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAdjustedPalette(System::Drawing::Imaging::ColorPalette ^ palette, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.GetAdjustedPalette : System.Drawing.Imaging.ColorPalette * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.GetAdjustedPalette (palette, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="palette" Type="System.Drawing.Imaging.ColorPalette" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="palette">A <see cref="T:System.Drawing.Imaging.ColorPalette" /> that on input contains the palette to be adjusted, and on output contains the adjusted palette.</param>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category whose adjustment settings will be applied to the palette.</param>
        <summary>Adjusts the colors in a palette according to the adjustment settings of a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать таблицу преобразования цветов для категории по умолчанию, таблицу различные преобразования цветов для категории точечных рисунков и по-прежнему таблицы различные преобразования цветов для категории пера.  
  
 При вызове <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> метода, можно указать категорию настройки, которая используется для настройки цветов палитры. Например, если передать <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> для <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> метод, настройки, параметры категории растрового изображения, используемые для настройки цветов палитры.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBrushRemapTable">
      <MemberSignature Language="C#" Value="public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBrushRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBrushRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBrushRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetBrushRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetBrushRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">An array of <see cref="T:System.Drawing.Imaging.ColorMap" /> objects.</param>
        <summary>Sets the color-remap table for the brush category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблицы преобразования цветов представляет собой массив <xref:System.Drawing.Imaging.ColorMap> структуры. Каждый <xref:System.Drawing.Imaging.ColorMap> структуры имеет два <xref:System.Drawing.Color> объектов: один задает со старым цветом, а второй указывает соответствующий новый цвет. Во время подготовки к просмотру, любой цвет, соответствующий одному из старых цветов в таблице преобразования меняется на соответствующий новый цвет.  
  
 Вызов <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> метод действует так же, как передача <xref:System.Drawing.Imaging.ColorAdjustType.Brush> для <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> метод. Указанная таблица преобразования применяется к элементам в метафайлах, которые заполнены с помощью кисти.  
  
 Этот метод предназначен для использования только с векторными изображениями.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, который является параметром <xref:System.Windows.Forms.Control.Paint> обработчика событий. Код выполняет следующие действия.  
  
1.  Создает одноэлементный <xref:System.Drawing.Imaging.ColorMap> массив, который содержит красный как старый цвет и зеленый как новый.  
  
2.  Передает этот массив только что созданный <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the color key (transparency range).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="colorLow">The low color-key value.</param>
        <param name="colorHigh">The high color-key value.</param>
        <summary>Sets the color key for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод задает значения высокой и низкой цветовой ключ, так что можно сделать прозрачным диапазон цветов. Любой цвет, все три составляющие (красный, зеленый, синий) между соответствующими составляющими максимального и минимального цветовых ключей, становится прозрачным.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать ключ цвета для категории по умолчанию, другой — для категории точечных рисунков и по-прежнему для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorKey : System.Drawing.Color * System.Drawing.Color * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorKey (colorLow, colorHigh, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorLow">The low color-key value.</param>
        <param name="colorHigh">The high color-key value.</param>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color key is set.</param>
        <summary>Sets the color key (transparency range) for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод задает значения высокой и низкой цветовой ключ, так что можно сделать прозрачным диапазон цветов. Любой цвет, все три составляющие (красный, зеленый, синий) между соответствующими составляющими максимального и минимального цветовых ключей, становится прозрачным.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать ключ цвета для категории по умолчанию, другой — для категории точечных рисунков и по-прежнему для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать ключ цвета для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType.Pen> для <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> , ни один из параметров настройки по умолчанию применяется ко перья.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, который является параметром <xref:System.Windows.Forms.Control.Paint> обработчика событий. Код выполняет следующие действия.  
  
1.  Открывает <xref:System.Drawing.Image> , использующего файл Circle.bmp и выводит на экран.  
  
2.  Создает <xref:System.Drawing.Imaging.ImageAttributes> и устанавливает его цветовой ключ путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> метод.  
  
3.  Выводит изображение на экране, используя ключ цвета для <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrices">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">The color-adjustment matrix.</param>
        <param name="grayMatrix">The grayscale-adjustment matrix.</param>
        <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать — для категории по умолчанию, другие — для категории точечных рисунков и по-прежнему другие — для категории перьев.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Вызов <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> метода эквивалентен вызову <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> метода и передача <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> для `flags` параметра. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Указывает, что все цвета (включая оттенки серого) настраиваются с помощью матрицы настройки цвета, не матрицу настройки оттенков серого. Таким образом матрица настройки оттенков серого, переданного этому методу не делает ничего.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">The color-adjustment matrix.</param>
        <param name="grayMatrix">The grayscale-adjustment matrix.</param>
        <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices.</param>
        <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать — для категории по умолчанию, другие — для категории точечных рисунков и по-прежнему другие — для категории перьев.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrices : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrices (newColorMatrix, grayMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">The color-adjustment matrix.</param>
        <param name="grayMatrix">The grayscale-adjustment matrix.</param>
        <param name="mode">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices.</param>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-adjustment and grayscale-adjustment matrices are set.</param>
        <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать — для категории по умолчанию, другие — для категории точечных рисунков и по-прежнему другие — для категории перьев.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать матрицы настройки цвета и настройки оттенков серого для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType.Pen> для <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> , ни один из параметров настройки по умолчанию применяется ко перья.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the color-adjustment matrix.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix -&gt; unit" Usage="imageAttributes.SetColorMatrix newColorMatrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">The color-adjustment matrix.</param>
        <summary>Sets the color-adjustment matrix for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать матрицу настройки цвета для категории по умолчанию матрицу различные настройки цвета для категории точечных рисунков и по-прежнему матрицу различные настройки цвета для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Вызов <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> метода эквивалентен вызову <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> метода и передача <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> для `flags` параметра. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Указывает, что все цвета (включая оттенки серого) настраиваются с помощью матрицы настройки цвета  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, который является параметром <xref:System.Windows.Forms.Control.Paint> обработчика событий. Код выполняет следующие действия.  
  
1.  Создает образ прямоугольник нужного цвета, присваиваемого значения 128, формируя прямоугольник, который заполняется сплошным промежуточным серым цветом. Затем код выводит этот прямоугольный рисунок на экран.  
  
2.  Создает <xref:System.Drawing.Imaging.ColorMatrix> и задает его <xref:System.Drawing.Drawing2D.Matrix> в 1,75, что подчеркивает красного компонента изображения.  
  
3.  Создает <xref:System.Drawing.Imaging.ImageAttributes> и вызывает <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> метод.  
  
4.  Выводит изображение (второй прямоугольник) на экран с помощью <xref:System.Drawing.Imaging.ColorMatrix> только что заданное на <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
 Обратите внимание, что второй прямоугольник имеет красный цвет.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">The color-adjustment matrix.</param>
        <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment matrix.</param>
        <summary>Sets the color-adjustment matrix for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать матрицу настройки цвета для категории по умолчанию матрицу различные настройки цвета для категории точечных рисунков и по-прежнему матрицу различные настройки цвета для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetColorMatrix : System.Drawing.Imaging.ColorMatrix * System.Drawing.Imaging.ColorMatrixFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetColorMatrix (newColorMatrix, mode, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">The color-adjustment matrix.</param>
        <param name="mode">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment matrix.</param>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-adjustment matrix is set.</param>
        <summary>Sets the color-adjustment matrix for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать матрицу настройки цвета для категории по умолчанию матрицу различные настройки цвета для категории точечных рисунков и по-прежнему матрицу различные настройки цвета для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать матрицу настройки цвета для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType.Pen> для <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> , ни один из параметров настройки по умолчанию применяется ко перья.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `RotateColors` из формы <xref:System.Windows.Forms.Control.Paint> метод обработки событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.RotateColors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RotateColors/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.RotateColors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RotateColors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the gamma value.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single -&gt; unit" Usage="imageAttributes.SetGamma gamma" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gamma">The gamma correction value.</param>
        <summary>Sets the gamma value for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Типичные значения `gamma` параметра — от 1.0 до 2.2; Тем не менее, могут оказаться полезными в некоторых случаях значения от 0,1 до 5.0.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Гамма значения за пределы обычного диапазона могут быть полезны для старых CRT мониторы и мониторы в особых условиях освещенности, например промышленных средах или витринах.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, который является параметром <xref:System.Windows.Forms.Control.Paint> обработчика событий. Кроме того необходимо изменить путь к файлу изображения на путь и имя, в вашей системе. Код выполняет следующие действия.  
  
1.  Открывает <xref:System.Drawing.Image> , использующий файл Camera.jpg и выводит его на экран, используется значение по умолчанию для гамма.  
  
2.  Создает <xref:System.Drawing.Imaging.ImageAttributes> объекта и устанавливает его гамму в 2,2 путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> метод.  
  
3.  Выводит изображение (вторая камера) на экран с помощью гамма-значение, просто установить <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetGamma : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetGamma (gamma, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="gamma">The gamma correction value.</param>
        <param name="type">An element of the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration that specifies the category for which the gamma value is set.</param>
        <summary>Sets the gamma value for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Типичные значения `gamma` параметра — от 1.0 до 2.2; Тем не менее, могут оказаться полезными в некоторых случаях значения от 0,1 до 5.0.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать гамма-значение для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType.Pen> для <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> , ни один из параметров настройки по умолчанию применяется ко перья.  
  
 Гамма значения за пределы обычного диапазона могут быть полезны для старых CRT мониторы и мониторы в особых условиях освещенности, например промышленных средах или витринах.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Turns off color adjustment.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp();" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : unit -&gt; unit" Usage="imageAttributes.SetNoOp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Turns off color adjustment for the default category. You can call the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> method to reinstate the color-adjustment settings that were in place before the call to the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, который является параметром <xref:System.Windows.Forms.Control.Paint> обработчика событий. Код выполняет следующие действия.  
  
1.  Открывает <xref:System.Drawing.Image> , использующий файл Camera.jpg.  
  
2.  Задает значение гамма <xref:System.Drawing.Imaging.ImageAttributes> в 0,25.  
  
3.  Рисует изображение на экране.  
  
4.  Вызовы <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> метод.  
  
5.  Выводит изображение (вторая камера) на экран; Тем не менее поскольку <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> метод был вызван, гамма, установка значений по умолчанию значение 1,0 и изображение выводится на экран с гамма по умолчанию.  
  
 Обратите внимание, что изображение слева очень размыто (гамма 0,25) изображение справа имеет более Контрастный (гамма 1.0).  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetNoOp : System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetNoOp type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which color correction is turned off.</param>
        <summary>Turns off color adjustment for a specified category. You can call the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> method to reinstate the color-adjustment settings that were in place before the call to the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the CMYK (cyan-magenta-yellow-black) output channel.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag -&gt; unit" Usage="imageAttributes.SetOutputChannel flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
      </Parameters>
      <Docs>
        <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> that specifies the output channel.</param>
        <summary>Sets the CMYK (cyan-magenta-yellow-black) output channel for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> метод преобразование изображения в цветовое пространство CMYK и изучить интенсивности CMYK цветовых каналов. Например, предположим, вы создаете <xref:System.Drawing.Imaging.ImageAttributes> и задайте его исходящего канала растрового изображения <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. Если вы передаете путь, <xref:System.Drawing.Imaging.ImageAttributes> объект <xref:System.Drawing.Graphics.DrawImage%2A> , метод вычисляется голубой составляющей каждой точки, и каждая точка в готовом для просмотра изображений — оттенок серого, что определяет интенсивность ее голубого канала. Аналогичным образом можно вывести изображения, которые определяют интенсивность magenta, желтого и черного каналов.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать канал вывода для категории по умолчанию и другие выходные канала для категории точечных рисунков.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>. Чтобы выполнить этот пример, вставьте следующий код в форму Windows. Обрабатывать формы <xref:System.Windows.Forms.Control.Paint> событий и вызовов `ShowOutputChannels`, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannel : System.Drawing.Imaging.ColorChannelFlag * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannel (flags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> that specifies the output channel.</param>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel is set.</param>
        <summary>Sets the CMYK (cyan-magenta-yellow-black) output channel for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> метод преобразование изображения в цветовое пространство CMYK и изучить интенсивности CMYK цветовых каналов. Например, предположим, вы создаете <xref:System.Drawing.Imaging.ImageAttributes> и задайте его исходящего канала растрового изображения <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. Если вы передаете путь, <xref:System.Drawing.Imaging.ImageAttributes> объект <xref:System.Drawing.Graphics.DrawImage%2A> , метод вычисляется голубой составляющей каждой точки, и каждая точка в готовом для просмотра изображений — оттенок серого, что определяет интенсивность ее голубого канала. Аналогичным образом можно вывести изображения, которые определяют интенсивность magenta, желтого и черного каналов.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать канал вывода для категории по умолчанию и другие выходные канала для категории точечных рисунков.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать канал вывода для категории точечных рисунков, передав <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> для <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> метода, ни один из параметров настройки по умолчанию будет применяться к точечным рисункам.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>. Чтобы выполнить этот пример, вставьте следующий код в форму Windows. Обрабатывать формы <xref:System.Windows.Forms.Control.Paint> событий и вызовов `ShowOutputChannels`, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the output channel color-profile file.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile colorProfileFilename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\System32\Spool\Drivers\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name.</param>
        <summary>Sets the output channel color-profile file for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> и <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> методы для преобразования изображения в цветовое пространство CMYK (голубой пурпурный желтый черный) и просмотрите интенсивности CMYK цветовых каналов. Например предположим, что можно написать код, который выполняет следующие действия:  
  
1.  Создание <xref:System.Drawing.Image>.  
  
2.  Создание <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
3.  Передайте <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> для <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> метод <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
4.  Передайте имя пути к файлу профиля цвета <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> метод <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
5.  Передайте пути <xref:System.Drawing.Image> и <xref:System.Drawing.Imaging.ImageAttributes> объектов <xref:System.Drawing.Graphics.DrawImage%2A> метод.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] файл цветового профиля будет использоваться для вычисления голубой составляющей каждой точки изображения и каждого пикселя в готовом для просмотра изображений будет оттенок серого, что определяет интенсивность ее голубого канала.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать файл цветового профиля выходного канала для категории по умолчанию и в другом выходном файле цветового профиля канала для категории точечных рисунков.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetOutputChannelColorProfile : string * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetOutputChannelColorProfile (colorProfileFilename, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\System32\Spool\Drivers\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name.</param>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel color-profile file is set.</param>
        <summary>Sets the output channel color-profile file for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> и <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> методы для преобразования изображения в цветовое пространство CMYK (голубой пурпурный желтый черный) и просмотрите интенсивности CMYK цветовых каналов. Например предположим, что можно написать код, который выполняет следующие действия:  
  
1.  Создание <xref:System.Drawing.Image>.  
  
2.  Создание <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
3.  Передайте <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> для <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> метод <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
4.  Передайте имя пути к файлу профиля цвета <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> метод <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
5.  Передайте пути <xref:System.Drawing.Image> и <xref:System.Drawing.Imaging.ImageAttributes> объектов <xref:System.Drawing.Graphics.DrawImage%2A> метод.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] файл цветового профиля будет использоваться для вычисления голубой составляющей каждой точки изображения и каждого пикселя в готовом для просмотра изображений будет оттенок серого, что определяет интенсивность ее голубого канала.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать файл цветового профиля выходного канала для категории по умолчанию и в другом выходном файле цветового профиля канала для категории точечных рисунков.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать файл цветового профиля выходного канала для категории точечных рисунков, передав <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> для <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> метода, ни один из параметров настройки по умолчанию будет применяться к точечным рисункам.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the color-remap table.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] -&gt; unit" Usage="imageAttributes.SetRemapTable map" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).</param>
        <summary>Sets the color-remap table for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблицы преобразования цветов представляет собой массив <xref:System.Drawing.Imaging.ColorMap> структуры. Каждый <xref:System.Drawing.Imaging.ColorMap> структуры имеет два <xref:System.Drawing.Color> объектов: один задает со старым цветом, а второй указывает соответствующий новый цвет. Во время подготовки к просмотру, любой цвет, соответствующий одному из старых цветов в таблице преобразования меняется на соответствующий новый цвет.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать Переназначение цветов для категории по умолчанию, таблицу преобразования цветов для категории точечных рисунков и по-прежнему таблицы различные преобразования цветов для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, который является параметром <xref:System.Windows.Forms.Control.Paint> обработчика событий. Код выполняет следующие действия.  
  
1.  Создает образ (красный кружок), сохраняет его как Circle2.jpg, открывает этот образ и выводит на экран.  
  
2.  Создает карту цветов, которая отображает красный зеленый цвет.  
  
3.  Рисует изображение, ранее созданное экрана снова, но на этот раз с помощью цветовой схемы.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap(), type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetRemapTable : System.Drawing.Imaging.ColorMap[] * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetRemapTable (map, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="map">An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).</param>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-remap table is set.</param>
        <summary>Sets the color-remap table for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблицы преобразования цветов представляет собой массив <xref:System.Drawing.Imaging.ColorMap> структуры. Каждый <xref:System.Drawing.Imaging.ColorMap> структуры имеет два <xref:System.Drawing.Color> объектов: один задает со старым цветом, а второй указывает соответствующий новый цвет. Во время подготовки к просмотру, любой цвет, соответствующий одному из старых цветов в таблице преобразования меняется на соответствующий новый цвет.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать Переназначение цветов для категории по умолчанию, таблицу преобразования цветов для категории точечных рисунков и по-прежнему таблицы различные преобразования цветов для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать таблицу преобразования цветов для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType.Pen> для <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> , ни один из параметров настройки по умолчанию применяется ко перья.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%28System.Drawing.Imaging.ColorMap%5B%5D%29> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the threshold (transparency range).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single -&gt; unit" Usage="imageAttributes.SetThreshold threshold" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="threshold">A real number that specifies the threshold value.</param>
        <summary>Sets the threshold (transparency range) for the default category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пороговое значение представляет собой значение от 0 до 1, определяющая точку отсечки для каждого компонента цвета. Например предположим, задано пороговое значение 0,7 и происходит отображение цвета, красный, зеленый и синий компоненты являются 230, 50 и 220 соответственно. Красного компонента (230) больше, чем 0.7x255, поэтому красного компонента будет изменена на 255 (полная насыщенность). Зеленый компонент (50) меньше, чем 0.7x255, поэтому будет изменена на 0. Синяя составляющая (220) превышает 0.7x255, поэтому синего компонента будет изменена на 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать пороговое значение для категории по умолчанию пороговое значение для категории точечных рисунков и по-прежнему различных пороговое значение для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, который является параметром <xref:System.Windows.Forms.Control.Paint> обработчика событий. Код выполняет следующие действия.  
  
1.  Открывает <xref:System.Drawing.Image> и выводит на экран.  
  
2.  Создает <xref:System.Drawing.Imaging.ImageAttributes> и устанавливает пороговое значение с помощью <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> метод.  
  
3.  Рисует изображение на экране с помощью порог <xref:System.Drawing.Imaging.ImageAttributes> объекта.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberSignature Language="F#" Value="member this.SetThreshold : single * System.Drawing.Imaging.ColorAdjustType -&gt; unit" Usage="imageAttributes.SetThreshold (threshold, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="threshold">A threshold value from 0.0 to 1.0 that is used as a breakpoint to sort colors that will be mapped to either a maximum or a minimum value.</param>
        <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color threshold is set.</param>
        <summary>Sets the threshold (transparency range) for a specified category.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пороговое значение представляет собой значение от 0 до 1, определяющая точку отсечки для каждого компонента цвета. Например предположим, задано пороговое значение 0,7 и происходит отображение цвета, красный, зеленый и синий компоненты являются 230, 50 и 220 соответственно. Красного компонента (230) больше, чем 0.7x255, поэтому красного компонента будет изменена на 255 (полная насыщенность). Зеленый компонент (50) меньше, чем 0.7x255, поэтому будет изменена на 0. Синяя составляющая (220) превышает 0.7x255, поэтому синего компонента будет изменена на 255.  
  
 <xref:System.Drawing.Imaging.ImageAttributes> Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст. Например можно указать пороговое значение для категории по умолчанию пороговое значение для категории точечных рисунков и по-прежнему различных пороговое значение для категории пера.  
  
 Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.  
  
 Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если установить пороговое значение для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType.Pen> для <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> , ни один из параметров настройки по умолчанию применяется ко перья.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetWrapMode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the wrap mode.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode -&gt; unit" Usage="imageAttributes.SetWrapMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="mode">An element of <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how repeated copies of an image are used to tile an area.</param>
        <summary>Sets the wrap mode that is used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> метода эквивалентен вызову <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> и передачи <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> для `color` параметра. <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Задает цвет пикселей за пределами отрисованного изображения. Данный цвет является видимым, если параметр mode имеет значение <xref:System.Drawing.Drawing2D.WrapMode.Clamp> и исходный прямоугольник, переданный <xref:System.Drawing.Graphics.DrawImage%2A> метод больше, чем само изображение.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms, и для него необходим <xref:System.Windows.Forms.PaintEventArgs> `e`, который является параметром <xref:System.Windows.Forms.Control.Paint> обработчика событий. Код выполняет следующие действия.  
  
1.  Открывает <xref:System.Drawing.Image> с Circle3.jpg (circle небольшой, заполненный красным) и выводит на экран.  
  
2.  Создает <xref:System.Drawing.Imaging.ImageAttributes> и устанавливает <xref:System.Drawing.Drawing2D.WrapMode> перечисления <xref:System.Drawing.Drawing2D.WrapMode.Tile>.  
  
3.  Создает <xref:System.Drawing.TextureBrush> с помощью образа из файла Circle3.jpg.  
  
4.  Рисует прямоугольник на экран, заполненный окружностями небольшой, заполненный красным.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="mode">An element of <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how repeated copies of an image are used to tile an area.</param>
        <param name="color">An <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> and the source rectangle passed to <see cref="Overload:System.Drawing.Graphics.DrawImage" /> is larger than the image itself.</param>
        <summary>Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Пример кода см. в разделе <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color, bool clamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color, bool clamp);" />
      <MemberSignature Language="F#" Value="member this.SetWrapMode : System.Drawing.Drawing2D.WrapMode * System.Drawing.Color * bool -&gt; unit" Usage="imageAttributes.SetWrapMode (mode, color, clamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="clamp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">An element of <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how repeated copies of an image are used to tile an area.</param>
        <param name="color">A color object that specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> and the source rectangle passed to <see cref="Overload:System.Drawing.Graphics.DrawImage" /> is larger than the image itself.</param>
        <param name="clamp">This parameter has no effect. Set it to <see langword="false" />.</param>
        <summary>Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Пример кода см. в разделе <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>