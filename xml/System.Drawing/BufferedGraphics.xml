<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BufferedGraphics.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58eb376f4bda7764bd0c534a86c20b084960c4a7d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8eb376f4bda7764bd0c534a86c20b084960c4a7d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphics">
          <source>Provides a graphics buffer for double buffering.</source>
          <target state="translated">Предоставляет графический буфер для двойной буферизации.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class allows you to implement custom double buffering for your graphics.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> Позволяет реализовать пользовательские двойной буферизации для изображений.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</source>
          <target state="translated">Он предоставляет оболочку для графического буфера, а также методы, которые можно использовать для записи в буфер и отображения ее содержимого на устройстве вывода.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</source>
          <target state="translated">Графика, использующая двойную буферизацию можно сократить или устранить мерцание, вызываемое перерисовкой отображаемой области.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</source>
          <target state="translated">При использовании двойной буферизации обновленная графика сначала прорисовывается буфер в памяти, и содержимое данного буфера затем быстро записываются все или некоторые из отображаемых рабочей области.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</source>
          <target state="translated">Эта относительно короткая перезапись отображаемой графики обычно уменьшает или исключает мерцание, которое иногда может происходить при обновлении графики.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The simplest way to use double buffering is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style flag on a control using the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.</source>
          <target state="translated">Самый простой способ использования двойной буферизации — для установки <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> управления флаг стиль для элемента управления с помощью <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> флаг для элемента управления перенаправляет все рисования в элементе управления через графический буфер по умолчанию, не требует никакого дополнительного кода.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This flag is set to <ph id="ph1">`true`</ph> by default.</source>
          <target state="translated">Этот флаг установлен в <ph id="ph1">`true`</ph> по умолчанию.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class has no public constructor and must be created by the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for an application domain using its <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> Класс не имеет открытого конструктора и должны быть созданы с <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> для домена приложения с помощью его <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>You can retrieve the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain from the static <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Вы можете получить <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> для текущего домена приложения из статического <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph> property can be used for drawing to the graphics buffer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph> Свойство можно использовать для рисования в графическом буфере.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This property provides access to the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that draws to the graphics buffer allocated for this <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">Это свойство предоставляет доступ к <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> объекта, который рисует графический буфер, выделенный для данного <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> Указан метод с без аргументов-выводит содержимое графического буфера в область, если буфер был выделен.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Other overloads of the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method allow you to specify a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object or an <ph id="ph3">&lt;xref:System.IntPtr&gt;</ph> object that points to a device context to which to draw the contents of the graphics buffer.</source>
          <target state="translated">Другие перегрузки <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> метода позволяют указывать <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> объекта или <ph id="ph3">&lt;xref:System.IntPtr&gt;</ph> объект, который указывает на контекст устройства, на котором будет размещено содержимое графического буфера.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>For more information about drawing double-buffered graphics, see <bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о графических двойная буферизация графики см. в разделе <bpt id="p1">[</bpt>двойная буферизация графики<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object to draw graphics using several types of buffering implementations.</source>
          <target state="translated">В следующем примере кода показано использование <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> объект для отрисовки графики с помощью нескольких типов реализаций буферизации.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Clicking the form alternately starts and stops a timer that causes draw updates.</source>
          <target state="translated">Можно также щелкнув форму запускает и останавливает таймер, который инициирует прорисовку обновлений.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The draw updates allow you to observe the effect of double buffering.</source>
          <target state="translated">Прорисовка обновлений позволяет наблюдать эффект двойной буферизации.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Right-clicking the form cycles through the following drawing modes:</source>
          <target state="translated">Щелкните правой кнопкой мыши форму циклический перебор следующие режимы отображения:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing directly to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Рисование непосредственно <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> для <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> method using the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style.</source>
          <target state="translated">Рисование путем переопределения <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> с помощью метода <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> стиль.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> method for the form method without using the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style.</source>
          <target state="translated">Рисование путем переопределения <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> метод для метода формы без использования <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> стиль.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</source>
          <target state="translated">В каждом режиме выводится текст, который идентифицирует текущий режим и описывает поведение, которое возникает, когда каждая кнопка мыши нажата.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> class is not thread safe.</source>
          <target state="translated">Класс <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> не является потокобезопасным.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</source>
          <target state="translated">При доступе к графический буфер из разных потоков, очень важно использовать механизм управления доступом к потоку для предотвращения конфликтов.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> object.</source>
          <target state="translated">Освобождает все ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">Вызовите <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> по окончании с помощью <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> Метода <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> объекта окажется в неработоспособном состоянии.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object was occupying.</source>
          <target state="translated">После вызова метода <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>, необходимо освободить все ссылки на <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> объекта, чтобы сборщик мусора может освободить память, <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> занимаемую объектом.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> и <bpt id="p2">[</bpt>метода<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">Всегда вызывайте метод <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> перед освобождением последней ссылки на <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> метод <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как он будет уничтожен во время сборки мусора.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object that outputs to the graphics buffer.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>, выводящий данные в графический буфер.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object that outputs to the graphics buffer.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>, выводящий данные в графический буфер.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>This property provides a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that draws to the graphics buffer allocated for this <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">Это свойство предоставляет <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> объекта, который рисует графический буфер, выделенный для данного <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphics">
          <source>Writes the contents of the graphics buffer.</source>
          <target state="translated">Записывает содержимое графического буфера.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render">
          <source>Writes the contents of the graphics buffer to the default device.</source>
          <target state="translated">Записывает содержимое графического буфера в устройство по умолчанию.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render">
          <source>This method writes the contents of the graphics buffer to the device specified by calling the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> used to create this <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">Этот метод записывает содержимое графического буфера в устройство, задаются путем вызова <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> метод <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> используется для создания этого <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object to which to write the contents of the graphics buffer.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>, в который записывается содержимое графического буфера.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>Writes the contents of the graphics buffer to the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object.</source>
          <target state="translated">Записывает содержимое графического буфера в заданный объект <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>This method writes the contents of the graphics buffer to the specified <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">Этот метод записывает содержимое графического буфера в заданный <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>The following code example demonstrates rendering the contents of the graphics buffer to a specified <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">В следующем примере кода демонстрируется отображение содержимое графического буфера в указанный <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that points to the device context to which to write the contents of the graphics buffer.</source>
          <target state="translated">Ссылка <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>, указывающая на контекст устройства, в который записывается содержимое графического буфера.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>Writes the contents of the graphics buffer to the device context associated with the specified <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> handle.</source>
          <target state="translated">Записывает содержимое графического буфера в контекст устройства, связанный с заданным дескриптором <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>This method writes the contents of the graphics buffer to the device context associated with the specified <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> handle.</source>
          <target state="translated">Этот метод записывает содержимое графического буфера в контекст устройства, связанный с заданным <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> обработки.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>The following code example demonstrates how to render the contents of the graphics buffer <ph id="ph1">`grafx`</ph> to a specified device context.</source>
          <target state="translated">В следующем примере кода показано, как отобразить содержимое графического буфера <ph id="ph1">`grafx`</ph> для заданного контекста устройств.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>for access to unmanaged code.</source>
          <target state="translated">для доступа к неуправляемому коду.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Связанные перечисления: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>