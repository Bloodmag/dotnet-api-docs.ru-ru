<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1dcef3471b8a77cbccccdedfd56c4e4b03063f8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36340427" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphics = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет графический буфер для двойной буферизации.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.BufferedGraphics> Позволяет реализовать пользовательские двойной буферизации для изображений. Он предоставляет оболочку для графического буфера, а также методы, которые можно использовать для записи в буфер и отображения ее содержимого на устройстве вывода.  
  
 Графика, использующая двойную буферизацию можно сократить или устранить мерцание, вызываемое перерисовкой отображаемой области. При использовании двойной буферизации обновленная графика сначала прорисовывается буфер в памяти, и содержимое данного буфера затем быстро записываются все или некоторые из отображаемых рабочей области. Эта относительно короткая перезапись отображаемой графики обычно уменьшает или исключает мерцание, которое иногда может происходить при обновлении графики.  
  
> [!NOTE]
>  Самый простой способ использования двойной буферизации — для установки <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> управления флаг стиль для элемента управления с помощью <xref:System.Windows.Forms.Control.SetStyle%2A> метод. Параметр <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> флаг для элемента управления перенаправляет все рисования в элементе управления через графический буфер по умолчанию, не требует никакого дополнительного кода. Этот флаг установлен в `true` по умолчанию.  
  
 <xref:System.Drawing.BufferedGraphics> Класс не имеет открытого конструктора и должны быть созданы с <xref:System.Drawing.BufferedGraphicsContext> для домена приложения с помощью его <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> метод. Вы можете получить <xref:System.Drawing.BufferedGraphicsContext> для текущего домена приложения из статического <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> свойство.  
  
 <xref:System.Drawing.BufferedGraphics.Graphics%2A> Свойство можно использовать для рисования в графическом буфере. Это свойство предоставляет доступ к <xref:System.Drawing.Graphics> объекта, который рисует графический буфер, выделенный для данного <xref:System.Drawing.BufferedGraphics> объекта.  
  
 <xref:System.Drawing.BufferedGraphics.Render%2A> Указан метод с без аргументов-выводит содержимое графического буфера в область, если буфер был выделен. Другие перегрузки <xref:System.Drawing.BufferedGraphics.Render%2A> метода позволяют указывать <xref:System.Drawing.Graphics> объекта или <xref:System.IntPtr> объект, который указывает на контекст устройства, на котором будет размещено содержимое графического буфера.  
  
 Дополнительные сведения о графических двойная буферизация графики см. в разделе [двойная буферизация графики](~/docs/framework/winforms/advanced/double-buffered-graphics.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Drawing.BufferedGraphics> объект для отрисовки графики с помощью нескольких типов реализаций буферизации. Можно также щелкнув форму запускает и останавливает таймер, который инициирует прорисовку обновлений. Прорисовка обновлений позволяет наблюдать эффект двойной буферизации. Щелкните правой кнопкой мыши форму циклический перебор следующие режимы отображения:  
  
-   Рисование непосредственно <xref:System.Windows.Forms.Control.Handle%2A> для <xref:System.Windows.Forms.Form>.  
  
-   Рисование путем переопределения <xref:System.Windows.Forms.Form.OnPaint%2A> с помощью метода <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> стиль.  
  
-   Рисование путем переопределения <xref:System.Windows.Forms.Form.OnPaint%2A> метод для метода формы без использования <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> стиль.  
  
 В каждом режиме выводится текст, который идентифицирует текущий режим и описывает поведение, которое возникает, когда каждая кнопка мыши нажата.  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Класс <see cref="T:System.Drawing.BufferedGraphics" /> не является потокобезопасным. При доступе к графический буфер из разных потоков, очень важно использовать механизм управления доступом к потоку для предотвращения конфликтов.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Drawing.BufferedGraphics" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите <xref:System.Drawing.BufferedGraphics.Dispose%2A> по окончании с помощью <xref:System.Drawing.BufferedGraphics> объекта. <xref:System.Drawing.BufferedGraphics.Dispose%2A> Метода <xref:System.Drawing.BufferedGraphics> объекта окажется в неработоспособном состоянии. После вызова метода <xref:System.Drawing.BufferedGraphics.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Drawing.BufferedGraphics> объекта, чтобы сборщик мусора может освободить память, <xref:System.Drawing.BufferedGraphics> занимаемую объектом. Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Drawing.BufferedGraphics.Dispose%2A> перед освобождением последней ссылки на <xref:System.Drawing.BufferedGraphics> объекта. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Drawing.BufferedGraphics> метод `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как он будет уничтожен во время сборки мусора.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Drawing.BufferedGraphics.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Drawing.Graphics" />, выводящий данные в графический буфер.</summary>
        <value>Объект <see cref="T:System.Drawing.Graphics" />, выводящий данные в графический буфер.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство предоставляет <xref:System.Drawing.Graphics> объекта, который рисует графический буфер, выделенный для данного <xref:System.Drawing.BufferedGraphics> объекта.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает содержимое графического буфера.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberSignature Language="F#" Value="member this.Render : unit -&gt; unit" Usage="bufferedGraphics.Render " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает содержимое графического буфера в устройство по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод записывает содержимое графического буфера в устройство, задаются путем вызова <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> метод <xref:System.Drawing.BufferedGraphicsContext> используется для создания этого <xref:System.Drawing.BufferedGraphics> объекта.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Drawing.Graphics -&gt; unit" Usage="bufferedGraphics.Render target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target">Объект <see cref="T:System.Drawing.Graphics" />, в который записывается содержимое графического буфера.</param>
        <summary>Записывает содержимое графического буфера в заданный объект <see cref="T:System.Drawing.Graphics" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод записывает содержимое графического буфера в заданный <xref:System.Drawing.Graphics> объекта.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется отображение содержимое графического буфера в указанный <xref:System.Drawing.Graphics> объекта. Данный пример кода является частью большего примера, приведенного для <xref:System.Drawing.BufferedGraphics> класса.  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberSignature Language="F#" Value="member this.Render : nativeint -&gt; unit" Usage="bufferedGraphics.Render targetDC" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC">Ссылка <see cref="T:System.IntPtr" />, указывающая на контекст устройства, в который записывается содержимое графического буфера.</param>
        <summary>Записывает содержимое графического буфера в контекст устройства, связанный с заданным дескриптором <see cref="T:System.IntPtr" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод записывает содержимое графического буфера в контекст устройства, связанный с заданным <xref:System.IntPtr> обработки.  
  
   
  
## Examples  
 В следующем примере кода показано, как отобразить содержимое графического буфера `grafx` для заданного контекста устройств. Данный пример кода является частью большего примера, приведенного для <xref:System.Drawing.BufferedGraphics> класса.  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для доступа к неуправляемому коду. Связанные перечисления: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <altmember cref="T:System.IntPtr" />
      </Docs>
    </Member>
  </Members>
</Type>