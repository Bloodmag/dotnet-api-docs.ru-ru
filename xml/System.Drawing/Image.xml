<Type Name="Image" FullName="System.Drawing.Image">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="39e462697b994994f65a8d2433d98a35691fb92b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410668" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Image : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Image extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Image" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Image&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Image abstract : MarshalByRefObject, ICloneable, IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.ImageEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ImageConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Абстрактный базовый класс, который предоставляет функциональные возможности для производных классов <see cref="T:System.Drawing.Bitmap" /> и <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы нарисовать <xref:System.Drawing.Image> в Windows Forms, следует использовать один из <xref:System.Drawing.Graphics.DrawImage%2A> методы.  
  
   
  
## Examples  
 Следующий пример кода предназначен для работы с Windows Forms. Это обработчик <xref:System.Windows.Forms.Control.Paint> событий. Объект <xref:System.Drawing.Graphics> объект передается на событие и используется для прорисовки изображения в форме. Код выполняет следующие действия.  
  
-   Создает образ, из файла с именем SampImag.jpg. Этот файл должен находиться в той же папке, что и исполняемый файл приложения.  
  
-   Создает точку, в котором выполняется отрисовка верхнего левого угла изображения.  
  
-   Формирует изображение, зависимым в форме.  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#55)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#55)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#55)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает точную копию данного объекта <see cref="T:System.Drawing.Image" />.</summary>
        <returns>
          <see cref="T:System.Drawing.Image" />, создаваемый этим методом, приводится к типу объекта.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождает все ресурсы, используемые этим объектом <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Drawing.Image.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Drawing.Image>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Drawing.Image> метод `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, используемые этим объектом <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Drawing.Image.Dispose%2A> метод позволяет ресурсы, используемые <xref:System.Drawing.Image> перераспределить для других целей.  
  
 Вызовите метод <xref:System.Drawing.Image.Dispose%2A> по окончании использования класса <xref:System.Drawing.Image>. Метод <xref:System.Drawing.Image.Dispose%2A> оставляет класс <xref:System.Drawing.Image> в непригодном для использования состоянии. После вызова метода <xref:System.Drawing.Image.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Drawing.Image> , сборщик мусора мог освободить память, <xref:System.Drawing.Image> занимаемую. Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Drawing.Image.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Drawing.Image>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Drawing.Image> метод `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Drawing.Image" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Drawing.Image.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Drawing.Image>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Drawing.Image> метод `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Image ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Image ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как он будет уничтожен во время сборки мусора.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public int Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Flags" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Flags { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает флаги атрибутов для пиксельных данных этого объекта <see cref="T:System.Drawing.Image" />.</summary>
        <value>Целое число, представляющее поразрядную комбинацию флажков <see cref="T:System.Drawing.Imaging.ImageFlags" /> для данного объекта <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает целочисленное значение будет соответствовать суммы <xref:System.Drawing.Imaging.ImageFlags>, как описано в следующей таблице.  
  
|Значение ImageFlag|Целочисленное представление|  
|---------------------|----------------------------|  
|`ImageFlagsNone`|0|  
|`ImageFlagsScalable`|1|  
|`ImageFlagsHasAlpha`|2|  
|`ImageFlagsHasTranslucent`|4|  
|`ImageFlagsPartiallyScalable`|8|  
|`ImageFlagsColorSpaceRGB`|16|  
|`ImageFlagsColorSpaceCMYK`|32|  
|`ImageFlagsColorSpaceGRAY`|64|  
|`ImageFlagsColorSpaceYCBCR`|128|  
|`ImageFlagsColorSpaceYCCK`|256|  
|`ImageFlagsHasRealDPI`|4096|  
|`ImageFlagsHasRealPixelSize`|8192|  
|`ImageFlagsReadOnly`|65536|  
|`ImageFlagsCaching`|131072|  
  
 Например если <xref:System.Drawing.Image.Flags%2A> свойство изображения возвращается 77960, <xref:System.Drawing.Imaging.ImageFlags> для изображения будет <xref:System.Drawing.Imaging.ImageFlags.ReadOnly>, <xref:System.Drawing.Imaging.ImageFlags.HasRealDpi>, <xref:System.Drawing.Imaging.ImageFlags.HasRealPixelSize>, <xref:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr>, и <xref:System.Drawing.Imaging.ImageFlags.PartiallyScalable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameDimensionsList">
      <MemberSignature Language="C#" Value="public Guid[] FrameDimensionsList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid[] FrameDimensionsList" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.FrameDimensionsList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FrameDimensionsList As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Guid&gt; ^ FrameDimensionsList { cli::array &lt;Guid&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает массив идентификаторов GUID, представляющих размеры кадров в объекте <see cref="T:System.Drawing.Image" />.</summary>
        <value>Массив идентификаторов GUID, которые задают размеры кадров в этом объекте <see cref="T:System.Drawing.Image" /> от наиболее важных до наименее важных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает сведения о многокадрового изображения, которые бывают двух типов: многостраничные и несколько разрешения.  
  
 Образ многостраничных это изображение, которое содержит несколько образов. Каждая страница содержит один образ (или кадр). Эти страницы (или изображения или кадры) обычно отображаются последовательно, чтобы создать анимированный ряд, например анимированного GIF-файла.  
  
 Образ различных разрешениях это изображение, которое содержит более одной копии изображения с различными разрешениями. Это обычно используется при сопоставлении MIP где размер выводимого изображения определяет разрешение изображения, используемого для рисования. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] может поддерживать произвольное число страниц (или изображения или кадры), а также произвольное количество разрешений. Определенные измерения являются свойствами <xref:System.Drawing.Imaging.FrameDimension>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromFile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает объект <see cref="T:System.Drawing.Image" /> из указанного файла.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFile (filename As String) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromFile(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Строка, содержащая имя файла, из которого следует создать объект <see cref="T:System.Drawing.Image" />.</param>
        <summary>Создает объект <see cref="T:System.Drawing.Image" /> из указанного файла.</summary>
        <returns>Объект <see cref="T:System.Drawing.Image" />, создаваемый этим методом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управляемом GDI + имеет встроенных кодировщиков и декодеров, которые поддерживают следующие типы файлов:  
  
-   BMP  
  
-   GIF  
  
-   JPEG  
  
-   Формат PNG  
  
-   TIFF  
  
 Файл остается заблокированным до <xref:System.Drawing.Image> удаляется.  
  
 Если файл не имеет допустимого формата изображений или [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] не поддерживает точечный формат файла, этот метод создает исключение <xref:System.OutOfMemoryException> исключение.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> Класс не поддерживает альфа-прозрачность растровых изображений. Чтобы включить альфа-прозрачность, используйте изображения PNG с 32 бита на пиксель.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Drawing.Image.FromFile%2A> <xref:System.Drawing.Image.GetPropertyItem%2A> и <xref:System.Drawing.Image.SetPropertyItem%2A> методы. Этот пример предназначен для использования с Windows Forms. Чтобы выполнить этот пример, вставьте его в форму и обработки формы <xref:System.Windows.Forms.Control.Paint> события путем вызова `DemonstratePropertyItem` метод, передавая `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">Формат файла не является допустимым форматом изображения.  
  
 - или -  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] не поддерживает формат пикселей в файле.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Указанный файл не существует.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filename" /> имеет значение <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromFile">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromFile (string filename, bool useEmbeddedColorManagement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromFile(string filename, bool useEmbeddedColorManagement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFile (filename As String, useEmbeddedColorManagement As Boolean) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromFile(System::String ^ filename, bool useEmbeddedColorManagement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useEmbeddedColorManagement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">Строка, содержащая имя файла, из которого следует создать объект <see cref="T:System.Drawing.Image" />.</param>
        <param name="useEmbeddedColorManagement">Значение <see langword="true" /> для использования информации управления цветом, внедренной в файл изображения; в противном случае — значение <see langword="false" />.</param>
        <summary>Создает объект <see cref="T:System.Drawing.Image" /> из указанного файла, используя внедренную информацию управления цветом из файла.</summary>
        <returns>Объект <see cref="T:System.Drawing.Image" />, создаваемый этим методом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управляемом GDI + имеет встроенных кодировщиков и декодеров, которые поддерживают следующие типы файлов:  
  
-   BMP  
  
-   GIF  
  
-   JPEG  
  
-   Формат PNG  
  
-   TIFF  
  
 Если файл не имеет допустимого формата изображений или [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] не поддерживает точечный формат файла, этот метод создает исключение <xref:System.OutOfMemoryException> исключение.  
  
 Файл остается заблокированным до <xref:System.Drawing.Image> удаляется.  
  
 `useEmbeddedColorManagement` Указывает ли новый <xref:System.Drawing.Image> применяется цветовая коррекция согласно управления цветом, внедренных в файл изображения. Внедренные данные могут включать профили, значения гамма и информацию о цветности международного консорциума цветов (ICC).  
  
> [!NOTE]
>  <xref:System.Drawing.Image> Класс не поддерживает альфа-прозрачность растровых изображений. Чтобы включить альфа-прозрачность, используйте изображения PNG с 32 бита на пиксель.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить новое растровое изображение с помощью <xref:System.Drawing.Image.FromFile%2A> метод. Он также демонстрирует <xref:System.Drawing.TextureBrush>.  
  
 Этот пример предназначен для использования с Windows Forms. Создайте форму, содержащую кнопку с именем `Button2`. Вставьте код в форму и свяжите `Button2_Click` метод с помощью кнопки <xref:System.Windows.Forms.Control.Click> событий.  
  
 [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">Формат файла не является допустимым форматом изображения.  
  
 - или -  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] не поддерживает формат пикселей в файле.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Указанный файл не существует.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filename" /> имеет значение <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromHbitmap">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает объект <see cref="T:System.Drawing.Bitmap" /> из дескриптора Windows.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromHbitmap">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHbitmap(native int hbitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromHbitmap(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHbitmap (hbitmap As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHbitmap(IntPtr hbitmap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hbitmap" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hbitmap">Дескриптор точечного рисунка [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)], из которого нужно создать объект <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Создает объект <see cref="T:System.Drawing.Bitmap" /> из дескриптора точечного рисунка GDI.</summary>
        <returns>Объект <see cref="T:System.Drawing.Bitmap" />, создаваемый этим методом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Image.FromHbitmap%2A> Метода создается копия [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] растрового изображения; поэтому освобождением входящего [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] растрового изображения с помощью [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` метод сразу после создания нового <xref:System.Drawing.Image>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHbitmap">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap, IntPtr hpalette);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHbitmap(native int hbitmap, native int hpalette) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHbitmap (hbitmap As IntPtr, hpalette As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHbitmap(IntPtr hbitmap, IntPtr hpalette);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hbitmap" Type="System.IntPtr" />
        <Parameter Name="hpalette" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hbitmap">Дескриптор точечного рисунка [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)], из которого нужно создать объект <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="hpalette">Дескриптор палитры [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)], используемый для определения цветов точечного рисунка, если точечный рисунок, заданный в параметре <c>hBitmap</c>, не является рисунком в формате DIB.</param>
        <summary>Создает объект <see cref="T:System.Drawing.Bitmap" /> из дескриптора точечного рисунка GDI и дескриптора палитры GDI.</summary>
        <returns>Объект <see cref="T:System.Drawing.Bitmap" />, создаваемый этим методом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Image.FromHbitmap%2A> Метода создается копия [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] растрового изображения; поэтому освобождением входящего [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] растрового изображения с помощью [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` метод сразу после создания нового <xref:System.Drawing.Image>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromStream">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает объект <see cref="T:System.Drawing.Image" /> из указанного потока данных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromStream(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Объект <see cref="T:System.IO.Stream" />, содержащий данные для этого объекта <see cref="T:System.Drawing.Image" />.</param>
        <summary>Создает объект <see cref="T:System.Drawing.Image" /> из указанного потока данных.</summary>
        <returns>Объект <see cref="T:System.Drawing.Image" />, создаваемый этим методом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо оставить поток открытым в течение времени существования <xref:System.Drawing.Image>.  
  
 Поток будет сброшено в ноль, если этот метод вызывается последовательно с тем же потоком.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> Класс не поддерживает альфа-прозрачность растровых изображений. Чтобы включить альфа-прозрачность, используйте изображения PNG с 32 бита на пиксель.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Формат потока не является допустимым форматом изображения.  
  
 - или -  
  
 Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromStream(class System.IO.Stream stream, bool useEmbeddedColorManagement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromStream(System::IO::Stream ^ stream, bool useEmbeddedColorManagement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useEmbeddedColorManagement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Объект <see cref="T:System.IO.Stream" />, содержащий данные для этого объекта <see cref="T:System.Drawing.Image" />.</param>
        <param name="useEmbeddedColorManagement">
          Значение <see langword="true" /> для использования информации об управлении цветом, внедренной в поток данных; в противном случае — значение <see langword="false" />.</param>
        <summary>Создает объект <see cref="T:System.Drawing.Image" /> из указанного потока данных, используя при необходимости внедренную информацию управления цветом из потока.</summary>
        <returns>Объект <see cref="T:System.Drawing.Image" />, создаваемый этим методом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо оставить поток открытым в течение времени существования <xref:System.Drawing.Image>.  
  
 `useEmbeddedColorManagement` Указывает ли новый <xref:System.Drawing.Image> применяется цветовая коррекция согласно управления цветом, внедренной в поток данных. Внедренные данные могут включать профили, значения гамма и информацию о цветности международного консорциума цветов (ICC).  
  
 Поток будет сброшено в ноль, если этот метод вызывается последовательно с тем же потоком.  
  
> [!NOTE]
>  <xref:System.Drawing.Image> Класс не поддерживает альфа-прозрачность растровых изображений. Чтобы включить альфа-прозрачность, используйте изображения PNG с 32 бита на пиксель.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Формат потока не является допустимым форматом изображения.  
  
 - или -  
  
 Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromStream">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image FromStream(class System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ FromStream(System::IO::Stream ^ stream, bool useEmbeddedColorManagement, bool validateImageData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useEmbeddedColorManagement" Type="System.Boolean" />
        <Parameter Name="validateImageData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Объект <see cref="T:System.IO.Stream" />, содержащий данные для этого объекта <see cref="T:System.Drawing.Image" />.</param>
        <param name="useEmbeddedColorManagement">
          Значение <see langword="true" /> для использования информации об управлении цветом, внедренной в поток данных; в противном случае — значение <see langword="false" />.</param>
        <param name="validateImageData">
          Значение <see langword="true" /> для проверки данных изображения; в противном случае — значение <see langword="false" />.</param>
        <summary>Создает объект <see cref="T:System.Drawing.Image" /> из заданного потока данных, используя при необходимости внедренную информацию об управлении цветом и проверяя данные изображения.</summary>
        <returns>Объект <see cref="T:System.Drawing.Image" />, создаваемый этим методом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `useEmbeddedColorManagement` Указывает ли новый <xref:System.Drawing.Image> применяется цветовая коррекция согласно управления цветом, внедренной в поток данных. Внедренные данные могут включать профили, значения гамма и информацию о цветности международного консорциума цветов (ICC).  
  
> [!NOTE]
>  <xref:System.Drawing.Image> Класс не поддерживает альфа-прозрачность растровых изображений. Чтобы включить альфа-прозрачность, используйте изображения PNG с 32 бита на пиксель.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Формат потока не является допустимым форматом изображения.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (ref System.Drawing.GraphicsUnit pageUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(valuetype System.Drawing.GraphicsUnit&amp; pageUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds (ByRef pageUnit As GraphicsUnit) As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::GraphicsUnit % pageUnit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageUnit" Type="System.Drawing.GraphicsUnit&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pageUnit">Одно из значений <see cref="T:System.Drawing.GraphicsUnit" />, указывающее единицы измерения для ограничивающего прямоугольника.</param>
        <summary>Возвращает границы изображения в указанных единицах измерения.</summary>
        <returns>Объект <see cref="T:System.Drawing.RectangleF" />, представляющий границы изображения в заданных единицах измерения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как загрузить рисунок из <xref:System.Drawing.Icon> обработать с помощью <xref:System.Drawing.GraphicsUnit> перечисления и способ использования <xref:System.Drawing.Rectangle.Round%2A> метод для отображения границы прямоугольника растрового изображения.  
  
 Этот пример предназначен для использования с Windows Forms. Создайте форму, содержащую кнопку с именем `Button2`. Вставьте код в форму и этот метод связывается с помощью кнопки <xref:System.Windows.Forms.Control.Click> событий.  
  
 [!code-cpp[System.Drawing.BitmapMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.BitmapMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BitmapMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoderParameterList">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.EncoderParameters GetEncoderParameterList (Guid encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.EncoderParameters GetEncoderParameterList(valuetype System.Guid encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncoderParameterList (encoder As Guid) As EncoderParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::EncoderParameters ^ GetEncoderParameterList(Guid encoder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.EncoderParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoder" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="encoder">GUID, который определяет кодировщик изображения.</param>
        <summary>Возвращает информацию о параметрах, поддерживаемых указанным кодировщиком изображения.</summary>
        <returns>Объект <see cref="T:System.Drawing.Imaging.EncoderParameters" />, который содержит массив объектов <see cref="T:System.Drawing.Imaging.EncoderParameter" />. Каждый объект <see cref="T:System.Drawing.Imaging.EncoderParameter" /> содержит информацию об одном из параметров, поддерживаемых указанным кодировщиком изображения.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrameCount">
      <MemberSignature Language="C#" Value="public int GetFrameCount (System.Drawing.Imaging.FrameDimension dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFrameCount(class System.Drawing.Imaging.FrameDimension dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFrameCount (dimension As FrameDimension) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFrameCount(System::Drawing::Imaging::FrameDimension ^ dimension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Drawing.Imaging.FrameDimension" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <see cref="T:System.Drawing.Imaging.FrameDimension" />, задающий удостоверение типа измерения.</param>
        <summary>Возвращает количество кадров указанного размера.</summary>
        <returns>Количество кадров указанного размера.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает сведения о многокадрового изображения, которые бывают двух типов: многостраничные и несколько разрешения.  
  
 Образ многостраничных это изображение, которое содержит несколько образов. Каждая страница содержит один образ (или кадр). Эти страницы (или изображения или кадры) обычно отображаются последовательно, чтобы создать анимированный ряд, например анимированного GIF-файла.  
  
 Образ различных разрешениях это изображение, которое содержит более одной копии изображения с различными разрешениями. Это обычно используется при сопоставлении MIP где размер выводимого изображения определяет разрешение изображения, используемого для рисования. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] может поддерживать произвольное число страниц (или изображения или кадры), а также произвольное количество разрешений. Определенные измерения являются свойствами <xref:System.Drawing.Imaging.FrameDimension>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelFormatSize">
      <MemberSignature Language="C#" Value="public static int GetPixelFormatSize (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPixelFormatSize(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPixelFormatSize (pixfmt As PixelFormat) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetPixelFormatSize(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">Член перечисления <see cref="T:System.Drawing.Imaging.PixelFormat" />, определяющий формат, для которого нужно найти размер.</param>
        <summary>Возвращает глубину цвета (число бит на пиксель) для указанного формата пикселей.</summary>
        <returns>Глубина цвета указанного формата пикселей.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyItem">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.PropertyItem GetPropertyItem (int propid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.PropertyItem GetPropertyItem(int32 propid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetPropertyItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyItem (propid As Integer) As PropertyItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::PropertyItem ^ GetPropertyItem(int propid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.PropertyItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propid">Идентификатор элемента свойств, который нужно получить.</param>
        <summary>Возвращает указанный элемент свойства из объекта <see cref="T:System.Drawing.Image" />.</summary>
        <returns>Объект <see cref="T:System.Drawing.Imaging.PropertyItem" />, возвращаемый этим методом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список идентификаторов элементов свойства и ссылки на дополнительные сведения см. в разделе <xref:System.Drawing.Imaging.PropertyItem.Id%2A>.  
  
 Трудно устанавливать элементы свойств, так как <xref:System.Drawing.Imaging.PropertyItem> класса не имеет открытых конструкторов. Чтобы обойти это ограничение можно получить <xref:System.Drawing.Imaging.PropertyItem> путем получения <xref:System.Drawing.Image.PropertyItems%2A> значение свойства или метода <xref:System.Drawing.Image.GetPropertyItem%2A> метод <xref:System.Drawing.Image> , уже содержит элементы свойств. Затем вы можете установить поля <xref:System.Drawing.Imaging.PropertyItem> и передать его в <xref:System.Drawing.Image.SetPropertyItem%2A>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Drawing.Image.GetPropertyItem%2A> и <xref:System.Drawing.Image.SetPropertyItem%2A> методы. В этом примере вызывается <xref:System.Drawing.Image.GetPropertyItem%2A> при передаче значения идентификатора. Список Идентификаторов коды, см. в разделе <xref:System.Drawing.Imaging.PropertyItem.Id%2A>. Этот пример предназначен для использования с Windows Forms. Чтобы выполнить этот пример, вставьте его в форму и обработки формы <xref:System.Windows.Forms.Control.Paint> события путем вызова `DemonstratePropertyItem` метод, передавая `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Формат этого изображения не поддерживает элементы свойств.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetThumbnailImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetThumbnailImage (int thumbWidth, int thumbHeight, System.Drawing.Image.GetThumbnailImageAbort callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetThumbnailImage(int32 thumbWidth, int32 thumbHeight, class System.Drawing.Image/GetThumbnailImageAbort callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetThumbnailImage (thumbWidth As Integer, thumbHeight As Integer, callback As Image.GetThumbnailImageAbort, callbackData As IntPtr) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetThumbnailImage(int thumbWidth, int thumbHeight, System::Drawing::Image::GetThumbnailImageAbort ^ callback, IntPtr callbackData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thumbWidth" Type="System.Int32" />
        <Parameter Name="thumbHeight" Type="System.Int32" />
        <Parameter Name="callback" Type="System.Drawing.Image+GetThumbnailImageAbort" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="thumbWidth">Ширина изображения запрашиваемого эскиза в пикселях.</param>
        <param name="thumbHeight">Высота изображения запрашиваемого эскиза в пикселях.</param>
        <param name="callback">Делегат <see cref="T:System.Drawing.Image.GetThumbnailImageAbort" />.  
  
 **Примечание.**  Необходимо создать делегат и передать ссылку на него в виде параметра <c>callback</c>, но сам делегат не используется.</param>
        <param name="callbackData">Должно иметь значение <see cref="F:System.IntPtr.Zero" />.</param>
        <summary>Возвращает эскиз для этого объекта <see cref="T:System.Drawing.Image" />.</summary>
        <returns>Объект <see cref="T:System.Drawing.Image" />, представляющий эскиз.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Drawing.Image> содержит внедренное изображение эскиза, этот метод извлекает ее и масштабирует до требуемого размера. Если <xref:System.Drawing.Image> не содержит внедренное изображение эскиза, данный метод создает эскиз путем масштабирования основного изображения.  
  
 <xref:System.Drawing.Image.GetThumbnailImage%2A> Метод хорошо работает при запрашиваемой пиктограммы имеет размер примерно 120 x 120 пикселей. Если запросить эскиз большого размера (например, 300 x 300) с <xref:System.Drawing.Image> , содержащего внедренный эскиз, может быть заметной потерей качества изображения эскиза. Лучше масштабировать основное изображение (вместо масштабирование внедренный эскиз) путем вызова <xref:System.Drawing.Graphics.DrawImage%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода создается и отображается эскиз. Этот делегат не вызывается.  
  
 [!code-csharp[System.Drawing.Misc3#GetThumbnail](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#getthumbnail)]
 [!code-vb[System.Drawing.Misc3#GetThumbnail](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#getthumbnail)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает высоту объекта <see cref="T:System.Drawing.Image" /> в пикселях.</summary>
        <value>Высота этого шрифта <see cref="T:System.Drawing.Image" /> в пикселях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как создать новое растровое изображение из файла, с помощью <xref:System.Drawing.Bitmap.GetPixel%2A> и <xref:System.Drawing.Bitmap.SetPixel%2A> методов, чтобы изменить цвет изображения. Она также использует <xref:System.Drawing.Image.PixelFormat%2A> и <xref:System.Drawing.Image.Height%2A> свойства.  
  
 Этот пример предназначен для использования с Windows Forms, которое содержит <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, и <xref:System.Windows.Forms.Button> с именем `Label1`, `PictureBox1`, и `Button1`соответственно. Вставьте код в форму и свяжите `Button1_Click` метод с помощью кнопки <xref:System.Windows.Forms.Control.Click> событий.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalResolution">
      <MemberSignature Language="C#" Value="public float HorizontalResolution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HorizontalResolution" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.HorizontalResolution" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalResolution As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float HorizontalResolution { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает горизонтальное разрешение объекта <see cref="T:System.Drawing.Image" /> в пикселях на дюйм.</summary>
        <value>Горизонтальное разрешение объекта <see cref="T:System.Drawing.Image" /> в пикселях на дюйм.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAlphaPixelFormat">
      <MemberSignature Language="C#" Value="public static bool IsAlphaPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAlphaPixelFormat(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAlphaPixelFormat (pixfmt As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAlphaPixelFormat(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">Объект <see cref="T:System.Drawing.Imaging.PixelFormat" /> для проверки.</param>
        <summary>Возвращает значение, указывающее, содержит ли формат пикселей данного объекта <see cref="T:System.Drawing.Image" /> данные альфа-канала.</summary>
        <returns>
          Значение <see langword="true" />, если параметр <paramref name="pixfmt" /> содержит данные альфа-канала; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonicalPixelFormat">
      <MemberSignature Language="C#" Value="public static bool IsCanonicalPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCanonicalPixelFormat(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCanonicalPixelFormat (pixfmt As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCanonicalPixelFormat(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">Объект <see cref="T:System.Drawing.Imaging.PixelFormat" /> для проверки.</param>
        <summary>Возвращает значение, определяющее, приходится ли в формате пикселей 32 бита на пиксель.</summary>
        <returns>
          Значение <see langword="true" />, если формат <paramref name="pixfmt" /> является каноническим; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Канонический формат пикселей указывает формат, в котором 32 бита на пиксель. Этот формат указывает на 24-разрядную глубину цвета и 8-разрядное альфа-канала.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExtendedPixelFormat">
      <MemberSignature Language="C#" Value="public static bool IsExtendedPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsExtendedPixelFormat(valuetype System.Drawing.Imaging.PixelFormat pixfmt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsExtendedPixelFormat (pixfmt As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsExtendedPixelFormat(System::Drawing::Imaging::PixelFormat pixfmt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixfmt" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixfmt">Проверяемое перечисление <see cref="T:System.Drawing.Imaging.PixelFormat" />.</param>
        <summary>Возвращает значение, определяющее, приходится ли в формате пикселей 64 бита на пиксель.</summary>
        <returns>
          Значение <see langword="true" />, если формат <paramref name="pixfmt" /> является расширенным; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.ColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.ColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::ColorPalette ^ Palette { System::Drawing::Imaging::ColorPalette ^ get(); void set(System::Drawing::Imaging::ColorPalette ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.ColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает палитру цветов, используемую для объекта <see cref="T:System.Drawing.Image" />.</summary>
        <value>Объект <see cref="T:System.Drawing.Imaging.ColorPalette" />, представляющий палитру цветов, используемую для объекта <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает копию <xref:System.Drawing.Imaging.ColorPalette> объект, используемый этим <xref:System.Drawing.Image>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalDimension">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF PhysicalDimension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.SizeF PhysicalDimension" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PhysicalDimension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalDimension As SizeF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::SizeF PhysicalDimension { System::Drawing::SizeF get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ширину и высоту данного изображения.</summary>
        <value>Структура <see cref="T:System.Drawing.SizeF" />, представляющая ширину и высоту объекта <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если изображение является точечным рисунком, ширина и высота возвращаются в пикселях. Если изображение является метафайла, ширина и высота возвращаются в единицах 0,01 мм.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelFormat">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.PixelFormat PixelFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Imaging.PixelFormat PixelFormat" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PixelFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelFormat As PixelFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::PixelFormat PixelFormat { System::Drawing::Imaging::PixelFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.PixelFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает формат пикселей для этого объекта <see cref="T:System.Drawing.Image" />.</summary>
        <value>Структура <see cref="T:System.Drawing.Imaging.PixelFormat" />, представляющая формат пикселей объекта <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как создать новое растровое изображение из файла, с помощью <xref:System.Drawing.Bitmap.GetPixel%2A> и <xref:System.Drawing.Bitmap.SetPixel%2A> методов, чтобы изменить цвет изображения. Она также использует <xref:System.Drawing.Image.PixelFormat%2A> свойство.  
  
 Этот пример предназначен для использования с Windows Form, содержащий <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> и <xref:System.Windows.Forms.Button> с именем `Label1`, `PictureBox1`, и `Button1`соответственно. Вставьте код в форму и свяжите `Button1_Click` метод с помощью кнопки <xref:System.Windows.Forms.Control.Click> событий.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyIdList">
      <MemberSignature Language="C#" Value="public int[] PropertyIdList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] PropertyIdList" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PropertyIdList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyIdList As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ PropertyIdList { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает идентификаторы элементов свойств, хранящихся в объекте <see cref="T:System.Drawing.Image" />.</summary>
        <value>Массив идентификаторов свойств, по одному для каждого элемента свойства, хранящегося в данном изображении.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если изображение не содержит свойства элементов, или если формат изображения не поддерживает элементы свойств <xref:System.Drawing.Image.PropertyIdList%2A> свойство возвращает пустой массив (то есть, массив нулевой длины).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyItems">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.PropertyItem[] PropertyItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.PropertyItem[] PropertyItems" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.PropertyItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyItems As PropertyItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Imaging::PropertyItem ^&gt; ^ PropertyItems { cli::array &lt;System::Drawing::Imaging::PropertyItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.PropertyItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает все элементы свойств (части метаданных), хранящихся в объекте <see cref="T:System.Drawing.Image" />.</summary>
        <value>Массив объектов <see cref="T:System.Drawing.Imaging.PropertyItem" />, один для каждого элемента свойств, хранящегося в данном изображении.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если изображение не содержит свойства элементов, или если формат изображения не поддерживает элементы свойств, <xref:System.Drawing.Image.PropertyItems%2A> возвращает пустой массив (то есть, массив нулевой длины).  
  
   
  
## Examples  
 В следующем примере кода показано, как для чтения и отображения метаданных в файл изображения с помощью <xref:System.Drawing.Imaging.PropertyItem?displayProperty=nameWithType> класса и <xref:System.Drawing.Image.PropertyItems%2A> свойства.  
  
 Этот пример предназначен для использовать форму Windows, который импортирует <xref:System.Drawing.Imaging?displayProperty=nameWithType> пространства имен. Вставьте код в форму и измените путь к `fakePhoto.jpg` для указания файла изображения в вашей системе. Вызовите `ExtractMetaData` метод при обработке формы <xref:System.Windows.Forms.Control.Paint> передачи событий `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.ImageExample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ImageExample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ImageExample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawFormat">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.ImageFormat RawFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Imaging.ImageFormat RawFormat" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.RawFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawFormat As ImageFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Imaging::ImageFormat ^ RawFormat { System::Drawing::Imaging::ImageFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.ImageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает формат файла этого объекта <see cref="T:System.Drawing.Image" />.</summary>
        <value>Структура <see cref="T:System.Drawing.Imaging.ImageFormat" />, представляющая формат файла объекта <see cref="T:System.Drawing.Image" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyItem">
      <MemberSignature Language="C#" Value="public void RemovePropertyItem (int propid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyItem(int32 propid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.RemovePropertyItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyItem (propid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyItem(int propid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propid">Идентификатор удаляемого элемента свойства.</param>
        <summary>Удаляет указанный элемент свойства из этого <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Трудно устанавливать элементы свойств, так как <xref:System.Drawing.Imaging.PropertyItem> класса не имеет открытых конструкторов. Чтобы обойти это ограничение можно получить <xref:System.Drawing.Imaging.PropertyItem> путем получения <xref:System.Drawing.Image.PropertyItems%2A> значение свойства или метода <xref:System.Drawing.Image.GetPropertyItem%2A> метод <xref:System.Drawing.Image> , уже содержит элементы свойств. Затем вы можете установить поля <xref:System.Drawing.Imaging.PropertyItem> и передать его в <xref:System.Drawing.Image.SetPropertyItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Изображение не содержит запрошенный элемент свойства.  
  
 - или -  
  
 Формат этого изображения не поддерживает элементы свойств.</exception>
      </Docs>
    </Member>
    <Member MemberName="RotateFlip">
      <MemberSignature Language="C#" Value="public void RotateFlip (System.Drawing.RotateFlipType rotateFlipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateFlip(valuetype System.Drawing.RotateFlipType rotateFlipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateFlip(System::Drawing::RotateFlipType rotateFlipType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotateFlipType" Type="System.Drawing.RotateFlipType" />
      </Parameters>
      <Docs>
        <param name="rotateFlipType">Член перечисления <see cref="T:System.Drawing.RotateFlipType" />, указывающий тип поворота и зеркального отражения, который нужно применить к изображению.</param>
        <summary>Поворачивает, зеркально отражает, либо поворачивает и зеркально отражает объект <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Image.RotateFlip%2A> Метод Поворот изображения по часовой стрелке.  
  
 Если требуется нарисовать на изображении после его поворота, всегда следует получать новый объект графики из изображения, в противном случае может произойти исключение.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать <xref:System.Drawing.Image.RotateFlip%2A> метод <xref:System.Drawing.Image> и <xref:System.Drawing.RotateFlipType> перечисления.  
  
 Этот пример предназначен для использования с Windows Form, содержащий <xref:System.Windows.Forms.PictureBox> с именем `PictureBox1` и кнопку с именем `Button1`. Вставьте код в форму, вызов `InitializeBitmap` из конструктора формы и связывание `Button1_Click` с помощью кнопки <xref:System.Windows.Forms.Control.Click> событий. Убедитесь, что в вашей системе путь к файлу в точечном рисунке.  
  
 [!code-cpp[System.Drawing.BitmapMembers#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.BitmapMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#3)]
 [!code-vb[System.Drawing.BitmapMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Сохраняет данное изображение в указанный поток в указанном формате.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Строка, содержащая имя файла, в который нужно сохранить объект <see cref="T:System.Drawing.Image" />.</param>
        <summary>Сохраняет объект <see cref="T:System.Drawing.Image" /> в указанный файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если нет кодировщика для формат файла изображения, используется кодировщик Portable Network Graphics (PNG). При использовании <xref:System.Drawing.Image.Save%2A> метод, чтобы сохранить графическое изображение в формате формате метафайла Windows (WMF) или формате расширенного метафайла (EMF), полученный файл сохраняется в формате Portable Network Graphics (PNG). Это происходит из-за [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] компонент [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] отсутствует кодировщик, который можно использовать для сохранения файлов в виде файлов .wmf или .emf.  
  
 Сохранение изображения в тот же файл которого он был создан из недопустимо и приводит к возникновению исключения.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать <xref:System.Drawing.Image.Save%2A> метод. Этот пример предназначен для использования с Windows Forms. Создайте форму, содержащую кнопку с именем `Button5`. Вставьте код в форму и свяжите метод с помощью кнопки <xref:System.Windows.Forms.Control.Click> событий.  
  
 [!code-cpp[System.Drawing.ImageExample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ImageExample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ImageExample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filename" /> равно <see langword="null." /></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Изображение сохранено в неправильном формате.  
  
 - или -  
  
 Изображение сохранено в тот же файл, из которого оно было создано.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::Drawing::Imaging::ImageFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="stream">Поток <see cref="T:System.IO.Stream" />, в который будет сохранено изображение.</param>
        <param name="format">Объект <see cref="T:System.Drawing.Imaging.ImageFormat" />, который указывает формат сохраняемого изображения.</param>
        <summary>Сохраняет данное изображение в указанный поток в указанном формате.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Не сохраняйте изображение в тот же поток, который использовался для его создания. Это может повредить поток.  
  
 Изображение должно быть сохранено в поток с нулевым смещением. Если перед сохранением изображения будет записана любых дополнительных данных в поток, будут повреждены данные изображения в потоке.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="stream" /> или <paramref name="format" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Изображение было сохранено в неправильном формате.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String, format As ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename, System::Drawing::Imaging::ImageFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="filename">Строка, содержащая имя файла, в который нужно сохранить объект <see cref="T:System.Drawing.Image" />.</param>
        <param name="format">
          <see cref="T:System.Drawing.Imaging.ImageFormat" /> для этой службы <see cref="T:System.Drawing.Image" />.</param>
        <summary>Сохраняет объект <see cref="T:System.Drawing.Image" /> в указанный файл в указанном формате.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как создать точечный рисунок из типа и способ использования <xref:System.Drawing.Image.Save%2A> метод. Чтобы выполнить этот пример, вставьте код в форму Windows Forms. Обрабатывать формы <xref:System.Windows.Forms.Control.Paint> событий и вызовов `ConstructFromResourceSaveAsGif` метод, передавая `e` как <xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="filename" /> или <paramref name="format" /> имеет значение <see langword="null." />.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Изображение сохранено в неправильном формате.  
  
 - или -  
  
 Изображение сохранено в тот же файл, из которого оно было создано.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream, class System.Drawing.Imaging.ImageCodecInfo encoder, class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream, System::Drawing::Imaging::ImageCodecInfo ^ encoder, System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoder" Type="System.Drawing.Imaging.ImageCodecInfo" />
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="stream">Поток <see cref="T:System.IO.Stream" />, в который будет сохранено изображение.</param>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> для этой службы <see cref="T:System.Drawing.Image" />.</param>
        <param name="encoderParams">Объект <see cref="T:System.Drawing.Imaging.EncoderParameters" />, задающий параметры, которые используются кодировщиком изображения.</param>
        <summary>Сохраняет данное изображение в указанный поток с заданным кодировщиком и определенными параметрами кодировщика изображения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Не сохраняйте изображение в тот же поток, который использовался для его создания. Это может повредить поток.  
  
 Изображение должно быть сохранено в поток с нулевым смещением. Если перед сохранением изображения будет записана любых дополнительных данных в поток, будут повреждены данные изображения в потоке.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Изображение сохранено в неправильном формате.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename, class System.Drawing.Imaging.ImageCodecInfo encoder, class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String, encoder As ImageCodecInfo, encoderParams As EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename, System::Drawing::Imaging::ImageCodecInfo ^ encoder, System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoder" Type="System.Drawing.Imaging.ImageCodecInfo" />
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="filename">Строка, содержащая имя файла, в который нужно сохранить объект <see cref="T:System.Drawing.Image" />.</param>
        <param name="encoder">
          <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> для этой службы <see cref="T:System.Drawing.Image" />.</param>
        <param name="encoderParams">Параметры <see cref="T:System.Drawing.Imaging.EncoderParameters" />, предназначенные для данного объекта <see cref="T:System.Drawing.Image" />.</param>
        <summary>Сохраняет объект <see cref="T:System.Drawing.Image" /> в указанный файл с заданным кодировщиком и определенными параметрами кодировщика изображения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сохранение изображения в тот же файл которого он был создан из недопустимо и приводит к возникновению исключения.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Drawing.Bitmap> объекта из BMP-файлов. Код сохраняет точечный рисунок в трех JPEG-файлы, каждый из которых различный уровень качества.  
  
 [!code-cpp[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="filename" /> или <paramref name="encoder" /> имеет значение <see langword="null." />.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Изображение сохранено в неправильном формате.  
  
 - или -  
  
 Изображение сохранено в тот же файл, из которого оно было создано.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveAdd">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет информацию из указанного объекта <see cref="T:System.Drawing.Image" /> в объект <see cref="T:System.Drawing.Image" />. Указанные параметры <see cref="T:System.Drawing.Imaging.EncoderParameters" /> определяют, каким образом новая информация будет включена в существующее изображение.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveAdd">
      <MemberSignature Language="C#" Value="public void SaveAdd (System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAdd(class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAdd (encoderParams As EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAdd(System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="encoderParams">Объект <see cref="T:System.Drawing.Imaging.EncoderParameters" />, который содержит параметры, необходимые кодировщику изображения, используемому операцией сохранения с добавлением.</param>
        <summary>Добавляет кадр в файл или поток, указанный в предыдущем вызове метода <see cref="Overload:System.Drawing.Image.Save" />. Используйте данный метод для сохранения выбранных кадров из многокадрового изображения в другое многокадровое изображение.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAdd">
      <MemberSignature Language="C#" Value="public void SaveAdd (System.Drawing.Image image, System.Drawing.Imaging.EncoderParameters encoderParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAdd(class System.Drawing.Image image, class System.Drawing.Imaging.EncoderParameters encoderParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAdd(System::Drawing::Image ^ image, System::Drawing::Imaging::EncoderParameters ^ encoderParams);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="encoderParams" Type="System.Drawing.Imaging.EncoderParameters" />
      </Parameters>
      <Docs>
        <param name="image">Объект <see cref="T:System.Drawing.Image" />, содержащий добавляемый кадр.</param>
        <param name="encoderParams">Объект <see cref="T:System.Drawing.Imaging.EncoderParameters" />, который содержит параметры, необходимые кодировщику изображения, используемому операцией сохранения с добавлением.</param>
        <summary>Добавляет кадр в файл или поток, указанный в предыдущем вызове метода <see cref="Overload:System.Drawing.Image.Save" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="image" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectActiveFrame">
      <MemberSignature Language="C#" Value="public int SelectActiveFrame (System.Drawing.Imaging.FrameDimension dimension, int frameIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SelectActiveFrame(class System.Drawing.Imaging.FrameDimension dimension, int32 frameIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectActiveFrame (dimension As FrameDimension, frameIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SelectActiveFrame(System::Drawing::Imaging::FrameDimension ^ dimension, int frameIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Drawing.Imaging.FrameDimension" />
        <Parameter Name="frameIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <see cref="T:System.Drawing.Imaging.FrameDimension" />, задающий удостоверение типа измерения.</param>
        <param name="frameIndex">Индекс активного кадра.</param>
        <summary>Выделяет кадр, определяемый размером и индексом.</summary>
        <returns>Всегда возвращает 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возможные значения `dimensionID` параметра являются свойствами <xref:System.Drawing.Imaging.FrameDimension>. Их можно использовать для идентификации изображения по времени, разрешения или номер страницы.  
  
 Вызов этого метода приводит все изменения, внесенные на предыдущий фрейм будут отменены. Прежде чем выбирать другой кадр, сохраните все изменения текущего кадра, включая изменения значений точек и свойств. Если вызов <xref:System.Drawing.Image.SelectActiveFrame%2A> метод завершается успешно (исключение не происходит), метод возвращает значение 0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyItem">
      <MemberSignature Language="C#" Value="public void SetPropertyItem (System.Drawing.Imaging.PropertyItem propitem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyItem(class System.Drawing.Imaging.PropertyItem propitem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyItem (propitem As PropertyItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyItem(System::Drawing::Imaging::PropertyItem ^ propitem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propitem" Type="System.Drawing.Imaging.PropertyItem" />
      </Parameters>
      <Docs>
        <param name="propitem">
          <see cref="T:System.Drawing.Imaging.PropertyItem" /> для сохранения.</param>
        <summary>Сохраняет элемент свойства (часть метаданных) в <see cref="T:System.Drawing.Image" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если формат изображения не поддерживает элементы свойств, этот метод создает <xref:System.ArgumentException> с сообщением «Свойство не поддерживается». Если формат изображения поддерживает элементы свойств, но не поддерживает определенное свойство, которое вы пытаетесь установить, этот метод игнорирует попытку, но не вызывает исключение.  
  
 Трудно устанавливать элементы свойств, так как <xref:System.Drawing.Imaging.PropertyItem> класса не имеет открытых конструкторов. Чтобы обойти это ограничение можно получить <xref:System.Drawing.Imaging.PropertyItem> путем получения <xref:System.Drawing.Image.PropertyItems%2A> значение свойства или метода <xref:System.Drawing.Image.GetPropertyItem%2A> метод <xref:System.Drawing.Image> , уже содержит элементы свойств. Затем вы можете установить поля <xref:System.Drawing.Imaging.PropertyItem> и передать его в <xref:System.Drawing.Image.SetPropertyItem%2A>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Drawing.Image.GetPropertyItem%2A> и <xref:System.Drawing.Image.SetPropertyItem%2A> методы. Этот пример предназначен для использования с Windows Forms. Чтобы выполнить этот пример, вставьте его в форму и обработки формы <xref:System.Windows.Forms.Control.Paint> события путем вызова `DemonstratePropertyItem` метод, передавая `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Формат этого изображения не поддерживает элементы свойств.</exception>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ширину и высоту изображения в пикселях.</summary>
        <value>Структура <see cref="T:System.Drawing.Size" />, которая представляет ширину и высоту данного изображения в пикселях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
        <param name="context">Конечный объект (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />) для этой сериализации.</param>
        <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации целевого объекта.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект, предоставляющий дополнительные данные об изображении.</summary>
        <value>Объект <see cref="T:System.Object" />, предоставляющий дополнительные данные об изображении.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalResolution">
      <MemberSignature Language="C#" Value="public float VerticalResolution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 VerticalResolution" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.VerticalResolution" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalResolution As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float VerticalResolution { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает вертикальное разрешение объекта <see cref="T:System.Drawing.Image" /> в пикселях на дюйм.</summary>
        <value>Вертикальное разрешение объекта <see cref="T:System.Drawing.Image" /> в пикселях на дюйм.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Image.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ширину объекта <see cref="T:System.Drawing.Image" /> в пикселях.</summary>
        <value>Ширина объекта <see cref="T:System.Drawing.Image" /> в пикселях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как создать новый <xref:System.Drawing.Bitmap> из файла, с помощью <xref:System.Drawing.Bitmap.GetPixel%2A> и <xref:System.Drawing.Bitmap.SetPixel%2A> методов, чтобы изменить цвет изображения. Она также использует <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, и <xref:System.Drawing.Image.Height%2A> свойства.  
  
 Этот пример предназначен для использования с Windows Forms, которое содержит <xref:System.Windows.Forms.Label> ,<xref:System.Windows.Forms.PictureBox> и <xref:System.Windows.Forms.Button> с именем `Label1`, `PictureBox1` и `Button1`соответственно. Вставьте код в форму и свяжите `Button1_Click` метод с помощью кнопки <xref:System.Windows.Forms.Control.Click> событий.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>