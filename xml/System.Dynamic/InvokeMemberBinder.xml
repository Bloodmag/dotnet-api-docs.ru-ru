<Type Name="InvokeMemberBinder" FullName="System.Dynamic.InvokeMemberBinder">
  <TypeSignature Language="C#" Value="public abstract class InvokeMemberBinder : System.Dynamic.DynamicMetaObjectBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InvokeMemberBinder extends System.Dynamic.DynamicMetaObjectBinder" />
  <TypeSignature Language="DocId" Value="T:System.Dynamic.InvokeMemberBinder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InvokeMemberBinder&#xA;Inherits DynamicMetaObjectBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvokeMemberBinder abstract : System::Dynamic::DynamicMetaObjectBinder" />
  <AssemblyInfo>
    <AssemblyName>System.Dynamic.Runtime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Dynamic.DynamicMetaObjectBinder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7743c-101">Представляет динамическую операцию вызова члена в источнике вызова с указанием семантики привязки и сведений об операции.</span><span class="sxs-lookup"><span data-stu-id="7743c-101">Represents the invoke member dynamic operation at the call site, providing the binding semantic and the details about the operation.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InvokeMemberBinder (string name, bool ignoreCase, System.Dynamic.CallInfo callInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, bool ignoreCase, class System.Dynamic.CallInfo callInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.InvokeMemberBinder.#ctor(System.String,System.Boolean,System.Dynamic.CallInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InvokeMemberBinder(System::String ^ name, bool ignoreCase, System::Dynamic::CallInfo ^ callInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="callInfo" Type="System.Dynamic.CallInfo" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7743c-102">Имя вызываемого члена.</span><span class="sxs-lookup"><span data-stu-id="7743c-102">The name of the member to invoke.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="7743c-103">Значение true, если имя должно сравниваться без учета регистра; в противном случае — значение false.</span><span class="sxs-lookup"><span data-stu-id="7743c-103">true if the name should be matched ignoring case; false otherwise.</span></span></param>
        <param name="callInfo"><span data-ttu-id="7743c-104">Сигнатура аргументов на сайте вызова.</span><span class="sxs-lookup"><span data-stu-id="7743c-104">The signature of the arguments at the call site.</span></span></param>
        <summary><span data-ttu-id="7743c-105">Инициализирует новый экземпляр класса <see cref="T:System.Dynamic.InvokeMemberBinder" />.</span><span class="sxs-lookup"><span data-stu-id="7743c-105">Initializes a new instance of the <see cref="T:System.Dynamic.InvokeMemberBinder" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public override sealed System.Dynamic.DynamicMetaObject Bind (System.Dynamic.DynamicMetaObject target, System.Dynamic.DynamicMetaObject[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Dynamic.DynamicMetaObject Bind(class System.Dynamic.DynamicMetaObject target, class System.Dynamic.DynamicMetaObject[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.InvokeMemberBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function Bind (target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Dynamic::DynamicMetaObject ^ Bind(System::Dynamic::DynamicMetaObject ^ target, cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="7743c-106">Целевой объект динамической операции вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7743c-106">The target of the dynamic invoke member operation.</span></span></param>
        <param name="args"><span data-ttu-id="7743c-107">Массив аргументов динамической операции вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7743c-107">An array of arguments of the dynamic invoke member operation.</span></span></param>
        <summary><span data-ttu-id="7743c-108">Выполняет привязку динамической операции вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7743c-108">Performs the binding of the dynamic invoke member operation.</span></span></summary>
        <returns><span data-ttu-id="7743c-109">Объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</span><span class="sxs-lookup"><span data-stu-id="7743c-109">The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallInfo">
      <MemberSignature Language="C#" Value="public System.Dynamic.CallInfo CallInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Dynamic.CallInfo CallInfo" />
      <MemberSignature Language="DocId" Value="P:System.Dynamic.InvokeMemberBinder.CallInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallInfo As CallInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Dynamic::CallInfo ^ CallInfo { System::Dynamic::CallInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.CallInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7743c-110">Получает сигнатуру аргументов на сайте вызова.</span><span class="sxs-lookup"><span data-stu-id="7743c-110">Gets the signature of the arguments at the call site.</span></span></summary>
        <value><span data-ttu-id="7743c-111">Сигнатура аргументов на сайте вызова.</span><span class="sxs-lookup"><span data-stu-id="7743c-111">The signature of the arguments at the call site.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvoke">
      <MemberSignature Language="C#" Value="public abstract System.Dynamic.DynamicMetaObject FallbackInvoke (System.Dynamic.DynamicMetaObject target, System.Dynamic.DynamicMetaObject[] args, System.Dynamic.DynamicMetaObject errorSuggestion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject FallbackInvoke(class System.Dynamic.DynamicMetaObject target, class System.Dynamic.DynamicMetaObject[] args, class System.Dynamic.DynamicMetaObject errorSuggestion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.InvokeMemberBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FallbackInvoke (target As DynamicMetaObject, args As DynamicMetaObject(), errorSuggestion As DynamicMetaObject) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Dynamic::DynamicMetaObject ^ FallbackInvoke(System::Dynamic::DynamicMetaObject ^ target, cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ args, System::Dynamic::DynamicMetaObject ^ errorSuggestion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="7743c-112">Целевой объект динамической операции вызова.</span><span class="sxs-lookup"><span data-stu-id="7743c-112">The target of the dynamic invoke operation.</span></span></param>
        <param name="args"><span data-ttu-id="7743c-113">Аргументы динамической операции вызова.</span><span class="sxs-lookup"><span data-stu-id="7743c-113">The arguments of the dynamic invoke operation.</span></span></param>
        <param name="errorSuggestion"><span data-ttu-id="7743c-114">Результат привязки для использования при сбое привязки или значение NULL.</span><span class="sxs-lookup"><span data-stu-id="7743c-114">The binding result to use if binding fails, or null.</span></span></param>
        <summary><span data-ttu-id="7743c-115">При переопределении в производном классе выполняет привязку динамической операции вызова, если не удается привязать динамический целевой объект.</span><span class="sxs-lookup"><span data-stu-id="7743c-115">When overridden in the derived class, performs the binding of the dynamic invoke operation if the target dynamic object cannot bind.</span></span></summary>
        <returns><span data-ttu-id="7743c-116">Объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</span><span class="sxs-lookup"><span data-stu-id="7743c-116">The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7743c-117">Этот метод вызывается для целевого объекта, когда он реализует операцию вызова члена как последовательность из get и вызова элемента, чтобы позволить <xref:System.Dynamic.DynamicMetaObject> запрашивать привязку только операции вызова.</span><span class="sxs-lookup"><span data-stu-id="7743c-117">This method is called by the target when the target implements the invoke member operation as a sequence of get member, and invoke, to let the <xref:System.Dynamic.DynamicMetaObject> request the binding of the invoke operation only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FallbackInvokeMember">
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7743c-118">Выполняет привязку динамической операции вызова члена, если не удается привязать динамический целевой объект.</span><span class="sxs-lookup"><span data-stu-id="7743c-118">Performs the binding of the dynamic invoke member operation if the target dynamic object cannot bind.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FallbackInvokeMember">
      <MemberSignature Language="C#" Value="public System.Dynamic.DynamicMetaObject FallbackInvokeMember (System.Dynamic.DynamicMetaObject target, System.Dynamic.DynamicMetaObject[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Dynamic.DynamicMetaObject FallbackInvokeMember(class System.Dynamic.DynamicMetaObject target, class System.Dynamic.DynamicMetaObject[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])" />
      <MemberSignature Language="VB.NET" Value="Public Function FallbackInvokeMember (target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Dynamic::DynamicMetaObject ^ FallbackInvokeMember(System::Dynamic::DynamicMetaObject ^ target, cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="7743c-119">Целевой объект динамической операции вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7743c-119">The target of the dynamic invoke member operation.</span></span></param>
        <param name="args"><span data-ttu-id="7743c-120">Аргументы динамической операции вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7743c-120">The arguments of the dynamic invoke member operation.</span></span></param>
        <summary><span data-ttu-id="7743c-121">Выполняет привязку динамической операции вызова члена, если не удается привязать динамический целевой объект.</span><span class="sxs-lookup"><span data-stu-id="7743c-121">Performs the binding of the dynamic invoke member operation if the target dynamic object cannot bind.</span></span></summary>
        <returns><span data-ttu-id="7743c-122">Объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</span><span class="sxs-lookup"><span data-stu-id="7743c-122">The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeMember">
      <MemberSignature Language="C#" Value="public abstract System.Dynamic.DynamicMetaObject FallbackInvokeMember (System.Dynamic.DynamicMetaObject target, System.Dynamic.DynamicMetaObject[] args, System.Dynamic.DynamicMetaObject errorSuggestion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Dynamic.DynamicMetaObject FallbackInvokeMember(class System.Dynamic.DynamicMetaObject target, class System.Dynamic.DynamicMetaObject[] args, class System.Dynamic.DynamicMetaObject errorSuggestion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Dynamic.InvokeMemberBinder.FallbackInvokeMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FallbackInvokeMember (target As DynamicMetaObject, args As DynamicMetaObject(), errorSuggestion As DynamicMetaObject) As DynamicMetaObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Dynamic::DynamicMetaObject ^ FallbackInvokeMember(System::Dynamic::DynamicMetaObject ^ target, cli::array &lt;System::Dynamic::DynamicMetaObject ^&gt; ^ args, System::Dynamic::DynamicMetaObject ^ errorSuggestion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Dynamic.DynamicMetaObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Dynamic.DynamicMetaObject" />
        <Parameter Name="args" Type="System.Dynamic.DynamicMetaObject[]" />
        <Parameter Name="errorSuggestion" Type="System.Dynamic.DynamicMetaObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="7743c-123">Целевой объект динамической операции вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7743c-123">The target of the dynamic invoke member operation.</span></span></param>
        <param name="args"><span data-ttu-id="7743c-124">Аргументы динамической операции вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7743c-124">The arguments of the dynamic invoke member operation.</span></span></param>
        <param name="errorSuggestion"><span data-ttu-id="7743c-125">Результат привязки для использования при сбое привязки или значение NULL.</span><span class="sxs-lookup"><span data-stu-id="7743c-125">The binding result to use if binding fails, or null.</span></span></param>
        <summary><span data-ttu-id="7743c-126">При переопределении в производном классе выполняет привязку динамической операции вызова члена, если не удается привязать динамический целевой объект.</span><span class="sxs-lookup"><span data-stu-id="7743c-126">When overridden in the derived class, performs the binding of the dynamic invoke member operation if the target dynamic object cannot bind.</span></span></summary>
        <returns><span data-ttu-id="7743c-127">Объект <see cref="T:System.Dynamic.DynamicMetaObject" />, представляющий результат привязки.</span><span class="sxs-lookup"><span data-stu-id="7743c-127">The <see cref="T:System.Dynamic.DynamicMetaObject" /> representing the result of the binding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="public bool IgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCase" />
      <MemberSignature Language="DocId" Value="P:System.Dynamic.InvokeMemberBinder.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreCase { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7743c-128">Получает значение, указывающее, следует ли игнорировать регистр имен членов при сравнении строк.</span><span class="sxs-lookup"><span data-stu-id="7743c-128">Gets the value indicating if the string comparison should ignore the case of the member name.</span></span></summary>
        <value><span data-ttu-id="7743c-129">Значение true, если регистр знаков не учитывается; в противном случае — значение false.</span><span class="sxs-lookup"><span data-stu-id="7743c-129">True if the case is ignored, otherwise false.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Dynamic.InvokeMemberBinder.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7743c-130">Получает имя члена, который требуется вызвать.</span><span class="sxs-lookup"><span data-stu-id="7743c-130">Gets the name of the member to invoke.</span></span></summary>
        <value><span data-ttu-id="7743c-131">Имя вызываемого члена.</span><span class="sxs-lookup"><span data-stu-id="7743c-131">The name of the member to invoke.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public override sealed Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Dynamic.InvokeMemberBinder.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Dynamic.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7743c-132">Тип результата операции.</span><span class="sxs-lookup"><span data-stu-id="7743c-132">The result type of the operation.</span></span></summary>
        <value><span data-ttu-id="7743c-133">Объект <see cref="T:System.Type" />, представляющий тип результата операции.</span><span class="sxs-lookup"><span data-stu-id="7743c-133">The <see cref="T:System.Type" /> object representing the result type of the operation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>