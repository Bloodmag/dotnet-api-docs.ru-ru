<Type Name="ISoapServerVRoot" FullName="System.EnterpriseServices.Internal.ISoapServerVRoot">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="030b4141e98c6b8365d3e7a5f84c6774d91789e6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30409268" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISoapServerVRoot" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISoapServerVRoot" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISoapServerVRoot" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISoapServerVRoot" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("A31B6577-71D2-4344-AEDF-ADC1B0DC5347")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Публикует на серверах зашифрованные виртуальные корни SOAP, прошедшие проверку подлинности.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В разделе <xref:System.EnterpriseServices.Internal.SoapServerVRoot> реализации по умолчанию.  
  
 <xref:System.EnterpriseServices.Internal.ISoapServerVRoot> используется внутренне платформой .NET Framework. Необходимо непосредственно использовать его в коде.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateVirtualRootEx">
      <MemberSignature Language="C#" Value="public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, [out] string&amp; baseUrl, [out] string&amp; virtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, homePage As String, discoFile As String, secureSockets As String, authentication As String, operation As String, ByRef baseUrl As String, ByRef virtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, System::String ^ homePage, System::String ^ discoFile, System::String ^ secureSockets, System::String ^ authentication, System::String ^ operation, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="homePage" Type="System.String" />
        <Parameter Name="discoFile" Type="System.String" />
        <Parameter Name="secureSockets" Type="System.String" />
        <Parameter Name="authentication" Type="System.String" />
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String&amp;" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String&amp;" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Корневой веб-сервер.</param>
        <param name="inBaseUrl">Базовый URL-адрес, содержащий виртуальный корень.</param>
        <param name="inVirtualRoot">Имя виртуального корня.</param>
        <param name="homePage">
          <see langword="true" />, если свойство <see langword="EnableDefaultDoc" /> должно быть установлено, в противном случае — <see langword="false" />.</param>
        <param name="discoFile">
          <see langword="true" />, если должен быть создан используемый по умолчанию файл обнаружения; <see langword="false" />, если файл обнаружения не нужен. Если задано <see langword="false" /> и существует файл Default.disco, этот файл удаляется.</param>
        <param name="secureSockets">
          <see langword="true" />, если требуется SSL-шифрование; в противном случае — <see langword="false" />.</param>
        <param name="authentication">Укажите "anonymous", если не используется проверка подлинности (анонимный пользователь). В противном случае укажите пустую строку.</param>
        <param name="operation">Не используется. Укажите <see langword="null" /> в качестве этого параметра.</param>
        <param name="baseUrl">Когда этот метод возвращает управление, данный параметр содержит базовый URL-адрес.</param>
        <param name="virtualRoot">Когда этот метод возвращает управление, данный параметр содержит имя виртуального корня.</param>
        <param name="physicalPath">Когда этот метод возвращает управление, данный параметр содержит дисковый адрес каталога виртуального корня.</param>
        <summary>Создает виртуальный корень SOAP с параметрами безопасности.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Служебная программа SOAP недоступна.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRootEx">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRootEx (string rootWebServer, string baseUrl, string virtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRootEx(string rootWebServer, string baseUrl, string virtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRootEx (rootWebServer As String, baseUrl As String, virtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteVirtualRootEx(System::String ^ rootWebServer, System::String ^ baseUrl, System::String ^ virtualRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" />
        <Parameter Name="virtualRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Корневой веб-сервер.</param>
        <param name="baseUrl">Базовый URL-адрес, содержащий виртуальный корень.</param>
        <param name="virtualRoot">Имя виртуального корня.</param>
        <summary>Удаляет виртуальный корень. Реализован не полностью.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функции для удаления виртуального корневого каталога в настоящее время недоступен в реализации этого интерфейса. Реализация возвращает без удаления корня.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Служебная программа SOAP недоступна.</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">Вызов для определения системного каталога не выполнен.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRootStatus">
      <MemberSignature Language="C#" Value="public void GetVirtualRootStatus (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string exists, out string secureSockets, out string windowsAuth, out string anonymous, out string homePage, out string discoFile, out string physicalPath, out string baseUrl, out string virtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVirtualRootStatus(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; exists, [out] string&amp; secureSockets, [out] string&amp; windowsAuth, [out] string&amp; anonymous, [out] string&amp; homePage, [out] string&amp; discoFile, [out] string&amp; physicalPath, [out] string&amp; baseUrl, [out] string&amp; virtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVirtualRootStatus (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef exists As String, ByRef secureSockets As String, ByRef windowsAuth As String, ByRef anonymous As String, ByRef homePage As String, ByRef discoFile As String, ByRef physicalPath As String, ByRef baseUrl As String, ByRef virtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetVirtualRootStatus(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % exists, [Runtime::InteropServices::Out] System::String ^ % secureSockets, [Runtime::InteropServices::Out] System::String ^ % windowsAuth, [Runtime::InteropServices::Out] System::String ^ % anonymous, [Runtime::InteropServices::Out] System::String ^ % homePage, [Runtime::InteropServices::Out] System::String ^ % discoFile, [Runtime::InteropServices::Out] System::String ^ % physicalPath, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="exists" Type="System.String&amp;" RefType="out" />
        <Parameter Name="secureSockets" Type="System.String&amp;" RefType="out" />
        <Parameter Name="windowsAuth" Type="System.String&amp;" RefType="out" />
        <Parameter Name="anonymous" Type="System.String&amp;" RefType="out" />
        <Parameter Name="homePage" Type="System.String&amp;" RefType="out" />
        <Parameter Name="discoFile" Type="System.String&amp;" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="baseUrl" Type="System.String&amp;" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Корневой веб-сервер.</param>
        <param name="inBaseUrl">Базовый URL-адрес, содержащий виртуальный корень.</param>
        <param name="inVirtualRoot">Имя виртуального корня.</param>
        <param name="exists">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если виртуальный каталог существует, в противном случае — <see langword="false" />.</param>
        <param name="secureSockets">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если требуется SSL-шифрование, в противном случае — <see langword="false" />.</param>
        <param name="windowsAuth">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если установлена проверка подлинности Windows, в противном случае — <see langword="false" />.</param>
        <param name="anonymous">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если не установлена проверка подлинности (анонимный пользователь), в противном случае — <see langword="false" />.</param>
        <param name="homePage">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если свойство <see langword="EnableDefaultDoc" /> каталога виртуального корня установлено, в противном случае — <see langword="false" />.</param>
        <param name="discoFile">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если файл Default.disco существует, в противном случае — <see langword="false" />.</param>
        <param name="physicalPath">Когда этот метод возвращает управление, данный параметр содержит дисковый адрес каталога виртуального корня.</param>
        <param name="baseUrl">Когда этот метод возвращает управление, данный параметр содержит базовый URL-адрес.</param>
        <param name="virtualRoot">Когда этот метод возвращает управление, данный параметр содержит имя виртуального корня.</param>
        <summary>Возвращает состояние безопасности существующего виртуального корня SOAP.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>