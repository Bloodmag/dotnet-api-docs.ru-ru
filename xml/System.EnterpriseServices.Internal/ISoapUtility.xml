<Type Name="ISoapUtility" FullName="System.EnterpriseServices.Internal.ISoapUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c57972c59c40495374521bf43250c45066f4d2d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30407808" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISoapUtility" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISoapUtility" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISoapUtility" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISoapUtility" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("5AC4CB7E-F89F-429b-926B-C7F940936BF4")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9962a-101">Предоставляет служебные программы поддержки экспорта прокси приложений COM+ с включенным SOAP с помощью сервера, а также импорта прокси клиентом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9962a-101">Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9962a-102">Функции служебных программ, <xref:System.EnterpriseServices.Internal.ISoapUtility> предоставляет вызываются из многочисленных размещений в COM +, однако их основной целью является поддержка экспорта и импорта прокси клиентов.</span><span class="sxs-lookup"><span data-stu-id="9962a-102">The utility functions that <xref:System.EnterpriseServices.Internal.ISoapUtility> provides are called from numerous locations within COM+; however, their primary purpose is to support the export and import of client proxies.</span></span>  
  
 <span data-ttu-id="9962a-103">В разделе <xref:System.EnterpriseServices.Internal.SoapUtility> реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="9962a-103">See <xref:System.EnterpriseServices.Internal.SoapUtility> for the default implementation.</span></span>  
  
 <span data-ttu-id="9962a-104"><xref:System.EnterpriseServices.Internal.ISoapUtility> используется внутренне платформой .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="9962a-104"><xref:System.EnterpriseServices.Internal.ISoapUtility> is used internally by the .NET Framework.</span></span> <span data-ttu-id="9962a-105">Необходимо непосредственно использовать его в коде.</span><span class="sxs-lookup"><span data-stu-id="9962a-105">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetServerBinPath">
      <MemberSignature Language="C#" Value="public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerBinPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; binPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerBinPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef binPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetServerBinPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % binPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="binPath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">
          <span data-ttu-id="9962a-106">Корневой веб-сервер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-106">The root Web server.</span>
          </span>
        </param>
        <param name="inBaseUrl">
          <span data-ttu-id="9962a-107">Базовый URL-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-107">The base URL address.</span>
          </span>
        </param>
        <param name="inVirtualRoot">
          <span data-ttu-id="9962a-108">Имя виртуального корня.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-108">The name of the virtual root.</span>
          </span>
        </param>
        <param name="binPath">
          <span data-ttu-id="9962a-109">Когда этот метод возвращает управление, данный параметр содержит путь к файлу для каталога bin в виртуальном корне SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-109">When this method returns, this parameter contains the file path for the SOAP virtual root bin directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9962a-110">Возвращает путь к каталогу bin в виртуальном корне SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-110">Returns the path for the SOAP virtual root bin directory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9962a-111">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-111">A caller in the call chain does not have permission to access unmanaged code.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="9962a-112">Служебная программа SOAP недоступна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-112">The SOAP utility is not available.</span>
          </span>
        </exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">
          <span data-ttu-id="9962a-113">Вызов для получения системного каталога не выполнен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-113">The call to get the system directory failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerPhysicalPath">
      <MemberSignature Language="C#" Value="public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerPhysicalPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerPhysicalPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetServerPhysicalPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">
          <span data-ttu-id="9962a-114">Корневой веб-сервер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-114">The root Web server.</span>
          </span>
        </param>
        <param name="inBaseUrl">
          <span data-ttu-id="9962a-115">Базовый URL-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-115">The base URL address.</span>
          </span>
        </param>
        <param name="inVirtualRoot">
          <span data-ttu-id="9962a-116">Имя виртуального корня.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-116">The name of the virtual root.</span>
          </span>
        </param>
        <param name="physicalPath">
          <span data-ttu-id="9962a-117">Когда этот метод возвращает управление, данный параметр содержит путь к файлу для виртуального корня SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-117">When this method returns, this parameter contains the file path for the SOAP virtual root.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9962a-118">Возвращает путь к виртуальному корню SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-118">Returns the path for the SOAP virtual root.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9962a-119">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-119">A caller in the call chain does not have permission to access unmanaged code.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="9962a-120">Служебная программа SOAP недоступна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-120">The SOAP utility is not available.</span>
          </span>
        </exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">
          <span data-ttu-id="9962a-121">Вызов для получения системного каталога не выполнен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-121">The call to get the system directory failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public void Present ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Present() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.Present" />
      <MemberSignature Language="VB.NET" Value="Public Sub Present ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Present();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9962a-122">Проверяет наличие зашифрованных интерфейсов SOAP, прошедших проверку подлинности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-122">Determines whether authenticated, encrypted SOAP interfaces are present.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9962a-123">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-123">A caller in the call chain does not have permission to access unmanaged code.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="9962a-124">Служебная программа SOAP недоступна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9962a-124">The SOAP utility is not available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>