<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71de6c95b5ac06ee9ff4c5ad83a05ad3542abd35" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408238" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Поддерживает методы, которые могут быть вызваны при запуске или завершении работы компонента COM.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализуйте <xref:System.EnterpriseServices.IProcessInitializer> методы интерфейса на обслуживаемом компоненте, если требуется выполнить инициализацию или завершение работы кода при серверного процесса (Dllhost.exe) запускается или завершает работу, соответственно.  
  
 COM + предоставляет `Startup` и `Shutdown` события при Dllhost.exe начинается и заканчивается. Эта функция позволяет все компоненты COM +, установленных в серверном приложении COM + (называется серверные компоненты здесь и далее) для выполнения пользовательской инициализации и очистки кода. Экземпляр каждого компонента, реализующего <xref:System.EnterpriseServices.IProcessInitializer> интерфейс будет создана и сохраняется в течение процесса и вызывается для методов интерфейса во время запуска и завершения работы. При реализации на <xref:System.EnterpriseServices.ServicedComponent>, во время регистрации компонента, `InitializesServerApplication` параметр в `COMAdminCatalogObject` в компоненты коллекции задано значение `true`.  
  
 С помощью `Startup` и `Shutdown` события, можно инициализировать ресурсы, создавать соединения "," initialize общих данных, а также выполнить код очистки. Однако не следует подключиться состояний, относящихся к COM +, так как экземпляры компонентов сервера еще не созданы. Кроме того, код в `Startup` и `Shutdown` событий должен возвращать как можно скорее, так как система ожидает только 90 секунд для Dllhost.exe для принятия активаций после запуска процесса системой. Если Dllhost.exe не означает, что она готова в течение 90 секунд, система завершает процесс. Таким образом все требования процесса инициализации должны быть завершены в этот промежуток времени. Каждый серверный компонент, который участвует в инициализации должен поддерживать <xref:System.EnterpriseServices.IProcessInitializer> интерфейса. При запуске DllHost.exe COM + создает все компоненты сервера, запрашиваемые этой службой, вызывает `QueryInterface` для <xref:System.EnterpriseServices.IProcessInitializer> интерфейса, а также вызовы <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> функции. Аналогичным образом, при завершении процесса DllHost.exe он вызывает <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> функции на их ранее сохраненных указателей интерфейса.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет действия для завершения работы. Вызывается при закрытии программы Dllhost.exe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> вызывается при сбое или других событиях аварийного завершения работы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl">В Microsoft Windows XP запускается указатель на интерфейс <see langword="IUnknown" /> компонента COM. В Microsoft Windows 2000 этот аргумент всегда имеет значение <see langword="null" />.</param>
        <summary>Выполняет инициализацию при запуске. Вызывается при запуске Dllhost.exe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект, упоминаемый в `punkProcessControl` реализует <xref:System.EnterpriseServices.IProcessInitControl> интерфейса. <xref:System.EnterpriseServices.IProcessInitControl> поддерживает один метод <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.  
  
 Код инициализации в <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> можно вызвать <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, с указанием времени ожидания, задайте количество секунд, оставшееся до запуска компонента времени ожидания.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>