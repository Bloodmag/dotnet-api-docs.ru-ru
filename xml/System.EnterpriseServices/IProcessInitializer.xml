<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65909f2ec439d52a6e219ae1ac7909475679abd1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36563529" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <TypeSignature Language="F#" Value="type IProcessInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1cde6-101">Поддерживает методы, которые могут быть вызваны при запуске или завершении работы компонента COM.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1cde6-101">Supports methods that can be called when a COM component starts up or shuts down.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cde6-102">Реализуйте <xref:System.EnterpriseServices.IProcessInitializer> методы интерфейса на обслуживаемом компоненте, если требуется выполнить инициализацию или завершение работы кода при серверного процесса (Dllhost.exe) запускается или завершает работу, соответственно.</span><span class="sxs-lookup"><span data-stu-id="1cde6-102">Implement the <xref:System.EnterpriseServices.IProcessInitializer> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</span></span>  
  
 <span data-ttu-id="1cde6-103">COM + предоставляет `Startup` и `Shutdown` события при Dllhost.exe начинается и заканчивается.</span><span class="sxs-lookup"><span data-stu-id="1cde6-103">COM+ provides `Startup` and `Shutdown` events when Dllhost.exe starts and ends.</span></span> <span data-ttu-id="1cde6-104">Эта функция позволяет все компоненты COM +, установленных в серверном приложении COM + (называется серверные компоненты здесь и далее) для выполнения пользовательской инициализации и очистки кода.</span><span class="sxs-lookup"><span data-stu-id="1cde6-104">This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</span></span> <span data-ttu-id="1cde6-105">Экземпляр каждого компонента, реализующего <xref:System.EnterpriseServices.IProcessInitializer> интерфейс будет создана и сохраняется в течение процесса и вызывается для методов интерфейса во время запуска и завершения работы.</span><span class="sxs-lookup"><span data-stu-id="1cde6-105">An instance of each component that implements the <xref:System.EnterpriseServices.IProcessInitializer> interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</span></span> <span data-ttu-id="1cde6-106">При реализации на <xref:System.EnterpriseServices.ServicedComponent>, во время регистрации компонента, `InitializesServerApplication` параметр в `COMAdminCatalogObject` в компоненты коллекции задано значение `true`.</span><span class="sxs-lookup"><span data-stu-id="1cde6-106">When implemented on a <xref:System.EnterpriseServices.ServicedComponent>, during registration of the component, the `InitializesServerApplication` parameter in the `COMAdminCatalogObject` within the Components collection is set to `true`.</span></span>  
  
 <span data-ttu-id="1cde6-107">С помощью `Startup` и `Shutdown` события, можно инициализировать ресурсы, создавать соединения "," initialize общих данных, а также выполнить код очистки.</span><span class="sxs-lookup"><span data-stu-id="1cde6-107">Using the `Startup` and `Shutdown` events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</span></span> <span data-ttu-id="1cde6-108">Однако не следует подключиться состояний, относящихся к COM +, так как экземпляры компонентов сервера еще не созданы.</span><span class="sxs-lookup"><span data-stu-id="1cde6-108">However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</span></span> <span data-ttu-id="1cde6-109">Кроме того, код в `Startup` и `Shutdown` событий должен возвращать как можно скорее, так как система ожидает только 90 секунд для Dllhost.exe для принятия активаций после запуска процесса системой.</span><span class="sxs-lookup"><span data-stu-id="1cde6-109">In addition, the code in the `Startup` and `Shutdown` events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</span></span> <span data-ttu-id="1cde6-110">Если Dllhost.exe не означает, что она готова в течение 90 секунд, система завершает процесс. Таким образом все требования процесса инициализации должны быть завершены в этот промежуток времени.</span><span class="sxs-lookup"><span data-stu-id="1cde6-110">If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</span></span> <span data-ttu-id="1cde6-111">Каждый серверный компонент, который участвует в инициализации должен поддерживать <xref:System.EnterpriseServices.IProcessInitializer> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1cde6-111">Each server component that participates in initialization must support the <xref:System.EnterpriseServices.IProcessInitializer> interface.</span></span> <span data-ttu-id="1cde6-112">При запуске DllHost.exe COM + создает все компоненты сервера, запрашиваемые этой службой, вызывает `QueryInterface` для <xref:System.EnterpriseServices.IProcessInitializer> интерфейса, а также вызовы <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> функции.</span><span class="sxs-lookup"><span data-stu-id="1cde6-112">On DllHost.exe startup, COM+ creates all server components that requested this service, calls `QueryInterface` for the <xref:System.EnterpriseServices.IProcessInitializer> interface, and calls the <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> function.</span></span> <span data-ttu-id="1cde6-113">Аналогичным образом, при завершении процесса DllHost.exe он вызывает <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> функции на их ранее сохраненных указателей интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1cde6-113">Similarly, when the DllHost.exe process is shut down, it calls the <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> function on those previously stored interface pointers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iProcessInitializer.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1cde6-114">Выполняет действия для завершения работы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cde6-114">Performs shutdown actions.</span>
          </span>
          <span data-ttu-id="1cde6-115">Вызывается при закрытии программы Dllhost.exe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cde6-115">Called when Dllhost.exe is shut down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cde6-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> вызывается при сбое или других событиях аварийного завершения работы.</span><span class="sxs-lookup"><span data-stu-id="1cde6-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> is not called during a failfast or other catastrophic shutdown events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberSignature Language="F#" Value="abstract member Startup : obj -&gt; unit" Usage="iProcessInitializer.Startup punkProcessControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl">
          <span data-ttu-id="1cde6-117">В Microsoft Windows XP запускается указатель на интерфейс <see langword="IUnknown" /> компонента COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cde6-117">In Microsoft Windows XP, a pointer to the <see langword="IUnknown" /> interface of the COM component starting up.</span>
          </span>
          <span data-ttu-id="1cde6-118">В Microsoft Windows 2000 этот аргумент всегда имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cde6-118">In Microsoft Windows 2000, this argument is always <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1cde6-119">Выполняет инициализацию при запуске.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cde6-119">Performs initialization at startup.</span>
          </span>
          <span data-ttu-id="1cde6-120">Вызывается при запуске Dllhost.exe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1cde6-120">Called when Dllhost.exe is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cde6-121">Объект, упоминаемый в `punkProcessControl` реализует <xref:System.EnterpriseServices.IProcessInitControl> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="1cde6-121">The object referenced by `punkProcessControl` implements an <xref:System.EnterpriseServices.IProcessInitControl> interface.</span></span> <span data-ttu-id="1cde6-122"><xref:System.EnterpriseServices.IProcessInitControl> поддерживает один метод <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="1cde6-122"><xref:System.EnterpriseServices.IProcessInitControl> supports the single method <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span></span>  
  
 <span data-ttu-id="1cde6-123">Код инициализации в <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> можно вызвать <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, с указанием времени ожидания, задайте количество секунд, оставшееся до запуска компонента времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="1cde6-123">The initialization code in <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> can call the <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>