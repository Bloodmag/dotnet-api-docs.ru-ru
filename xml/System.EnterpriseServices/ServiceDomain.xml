<Type Name="ServiceDomain" FullName="System.EnterpriseServices.ServiceDomain">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5b9fb677db63a2b92f36b41c91ebb70cd4c0c3f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408168" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceDomain" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceDomain extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServiceDomain" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceDomain" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDomain sealed" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Разрешает сегменту кода, определяемому объектами <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> и <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" />, выполняться в собственном контексте и вести себя так, как если бы это были методы, которые вызываются на объекте, созданном в рамках контекста. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> И <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> методы используются парами для ограничения кода, который затем можно использовать службы COM +. Код, заключенный между вызовами <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> и <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> выполняется в его собственном контексте и ведет себя как если бы это был метод, который вызывается для объекта, созданного в контексте. <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> И <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> пары могут быть вложенными. Это пользователь, чтобы убедиться в том, что пары вызовов сбалансированы, чтобы каждый вызов <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> совпадает с предыдущим вызовом <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public static void Enter (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enter(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Enter (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Enter(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">Объект <see cref="T:System.EnterpriseServices.ServiceConfig" />, содержащий сведения о конфигурации служб, которые должны использоваться во вложенном коде.</param>
        <summary>Создает контекст, указанный с помощью объекта <see cref="T:System.EnterpriseServices.ServiceConfig" />, а затем помещает его в стек контекстов, чтобы сделать текущим контекстом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> сначала создает контекст настроен в соответствии с <xref:System.EnterpriseServices.ServiceConfig> объекта, переданного в качестве `cfg` параметра. Политики на сторонах клиента и сервера затем вызываются, как если бы выполнялся вызов метода. Новый контекст помещается в стек контекстов и становится текущим контекстом. Эффективная разработка и так как нет маршалинга потоков, с помощью <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> и <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> включает в себя значительно уменьшить издержки по сравнению с вызовом аналогичных методов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          Объект <see cref="T:System.EnterpriseServices.ServiceConfig" /> не поддерживается текущей платформой.</exception>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionStatus Leave ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.EnterpriseServices.TransactionStatus Leave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Leave () As TransactionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::EnterpriseServices::TransactionStatus Leave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает сервер и политики на стороне клиента так, как если бы возвращался вызов метода. Текущий контекст затем извлекается из стека контекстов и контекст, который был запущен при вызове метода <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />, становится текущим контекстом.</summary>
        <returns>Одно из значений перечисления <see cref="T:System.EnterpriseServices.TransactionStatus" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          Объект <see cref="T:System.EnterpriseServices.ServiceConfig" /> не поддерживается текущей платформой.</exception>
      </Docs>
    </Member>
  </Members>
</Type>