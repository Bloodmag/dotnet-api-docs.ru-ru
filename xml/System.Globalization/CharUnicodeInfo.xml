<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <TypeSignature Language="C#" Value="public static class CharUnicodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CharUnicodeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4881a-101">Retrieves information about a Unicode character.</span><span class="sxs-lookup"><span data-stu-id="4881a-101">Retrieves information about a Unicode character.</span></span> <span data-ttu-id="4881a-102">This class cannot be inherited.</span><span class="sxs-lookup"><span data-stu-id="4881a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4881a-103">[Стандарт Юникод](http://go.microsoft.com/fwlink/?linkid=37123) определяет количество категории символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="4881a-103">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a number of Unicode character categories.</span></span> <span data-ttu-id="4881a-104">Например символ может быть классифицируются как прописной буквы, строчные буквы, десятичным числом, буквы, цифры, разделитель абзацев, математическим символом или символ валюты.</span><span class="sxs-lookup"><span data-stu-id="4881a-104">For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="4881a-105">Приложение может использовать категорию символа для управления строковые операции, например анализ или извлечение подстроки с регулярными выражениями.</span><span class="sxs-lookup"><span data-stu-id="4881a-105">Your application can use the character category to govern string-based operations, such as parsing or extracting substring with regular expressions.</span></span> <span data-ttu-id="4881a-106"><xref:System.Globalization.UnicodeCategory> Перечисление определяет категории возможных символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-106">The <xref:System.Globalization.UnicodeCategory> enumeration defines the possible character categories.</span></span>  
  
 <span data-ttu-id="4881a-107">Вы используете <xref:System.Globalization.CharUnicodeInfo> для получения <xref:System.Globalization.UnicodeCategory> значение для определенных символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-107">You use the <xref:System.Globalization.CharUnicodeInfo> class to obtain the <xref:System.Globalization.UnicodeCategory> value for a specific character.</span></span> <span data-ttu-id="4881a-108"><xref:System.Globalization.CharUnicodeInfo> Класс определяет методы, которые возвращают следующие значения знака Юникода:</span><span class="sxs-lookup"><span data-stu-id="4881a-108">The <xref:System.Globalization.CharUnicodeInfo> class defines methods that return the following Unicode character values:</span></span>  
  
-   <span data-ttu-id="4881a-109">Определенную категорию, к которой принадлежит символ или суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="4881a-109">The specific category to which a character or surrogate pair belongs.</span></span> <span data-ttu-id="4881a-110">Возвращаемое значение является членом <xref:System.Globalization.UnicodeCategory> перечисления.</span><span class="sxs-lookup"><span data-stu-id="4881a-110">The value returned is a member of the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span>  
  
-   <span data-ttu-id="4881a-111">Числовое значение.</span><span class="sxs-lookup"><span data-stu-id="4881a-111">Numeric value.</span></span> <span data-ttu-id="4881a-112">Применяется только к числовым символам, включая дроби, индексы, надстрочный, римские цифры, числители валюты, обведенные числа и цифры конкретного скрипта.</span><span class="sxs-lookup"><span data-stu-id="4881a-112">Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
-   <span data-ttu-id="4881a-113">Цифровое значение.</span><span class="sxs-lookup"><span data-stu-id="4881a-113">Digit value.</span></span> <span data-ttu-id="4881a-114">Применяется к числовым символам, которые могут быть объединены с другими числовыми символами для представления числа в системе нумерации.</span><span class="sxs-lookup"><span data-stu-id="4881a-114">Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system.</span></span>  
  
-   <span data-ttu-id="4881a-115">Значение в десятичное число.</span><span class="sxs-lookup"><span data-stu-id="4881a-115">Decimal digit value.</span></span> <span data-ttu-id="4881a-116">Применяется только к символов, представляющих десятичные цифры в системе десятичным (основание 10).</span><span class="sxs-lookup"><span data-stu-id="4881a-116">Applies only to characters that represent decimal digits in the decimal (base 10) system.</span></span> <span data-ttu-id="4881a-117">Десятичное число может быть одним из десяти цифр от 0 – 9.</span><span class="sxs-lookup"><span data-stu-id="4881a-117">A decimal digit can be one of ten digits, from zero through nine.</span></span> <span data-ttu-id="4881a-118">Эти символы являются членами <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> категории.</span><span class="sxs-lookup"><span data-stu-id="4881a-118">These characters are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="4881a-119">Кроме того <xref:System.Globalization.CharUnicodeInfo> классе используется внутренним образом количество других типов платформы .NET Framework и методы, основанные на классификации символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-119">In addition, the <xref:System.Globalization.CharUnicodeInfo> class is used internally by a number of other .NET Framework types and methods that rely on character classification.</span></span> <span data-ttu-id="4881a-120">Сюда входит следующее.</span><span class="sxs-lookup"><span data-stu-id="4881a-120">These include:</span></span>  
  
-   <span data-ttu-id="4881a-121"><xref:System.Globalization.StringInfo> Класс, который работает с элементами текстовое вместо одного символа в строке.</span><span class="sxs-lookup"><span data-stu-id="4881a-121">The <xref:System.Globalization.StringInfo> class, which works with textual elements instead of single characters in a string.</span></span>  
  
-   <span data-ttu-id="4881a-122">Перегруженные версии <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> метод, который определяют категории, к которой принадлежит символ или суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="4881a-122">The overloads of the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method, which determine the category to which a character or surrogate pair belongs.</span></span>  
  
-   <span data-ttu-id="4881a-123">[Классы символов](~/docs/standard/base-types/character-classes-in-regular-expressions.md) распознаются <xref:System.Text.RegularExpressions.Regex>, обработчик регулярных выражений .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4881a-123">The [character classes](~/docs/standard/base-types/character-classes-in-regular-expressions.md) recognized by <xref:System.Text.RegularExpressions.Regex>, the .NET Framework's regular expression engine.</span></span>  
  
 <span data-ttu-id="4881a-124">При использовании этого класса в приложениях, сохранить в виду следующие замечаниях по программированию с использованием <xref:System.Char> типа.</span><span class="sxs-lookup"><span data-stu-id="4881a-124">When using this class in your applications, keep in mind the following programming considerations for using the <xref:System.Char> type.</span></span> <span data-ttu-id="4881a-125">Тип может быть сложно использовать и рекомендуется для представления лингвистического содержимого не строки.</span><span class="sxs-lookup"><span data-stu-id="4881a-125">The type can be difficult to use, and strings are generally preferable for representing linguistic content.</span></span>  
  
-   <span data-ttu-id="4881a-126">Объект <xref:System.Char> объекта не всегда соответствует один символ.</span><span class="sxs-lookup"><span data-stu-id="4881a-126">A <xref:System.Char> object does not always correspond to a single character.</span></span> <span data-ttu-id="4881a-127">Несмотря на то что <xref:System.Char> тип представляет одно 16-разрядное значение, некоторые символы (например кластерами графем и суррогатные пары) состоят из двух или более частей кода UTF-16.</span><span class="sxs-lookup"><span data-stu-id="4881a-127">Although the <xref:System.Char> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units.</span></span> <span data-ttu-id="4881a-128">Дополнительные сведения см. в разделе «Char объектов и символы Юникода» в <xref:System.String> класса.</span><span class="sxs-lookup"><span data-stu-id="4881a-128">For more information, see "Char Objects and Unicode Characters" in the <xref:System.String> class.</span></span>  
  
-   <span data-ttu-id="4881a-129">Понятие «character» также является гибкой.</span><span class="sxs-lookup"><span data-stu-id="4881a-129">The notion of a "character" is also flexible.</span></span> <span data-ttu-id="4881a-130">Символ часто воспринимается как глиф, но многие глифы требуют нескольких кодовых точек.</span><span class="sxs-lookup"><span data-stu-id="4881a-130">A character is often thought of as a glyph, but many glyphs require multiple code points.</span></span> <span data-ttu-id="4881a-131">Например, может быть ä, представленное на два кодовые точки («a» и U + 0308, являющийся diaeresis объединение), или объект одну кодовую точку («ä» или U + 00A4).</span><span class="sxs-lookup"><span data-stu-id="4881a-131">For example, ä can be represented either by two code points ("a" plus U+0308, which is the combining diaeresis), or by a single code point ("ä" or U+00A4).</span></span> <span data-ttu-id="4881a-132">В некоторых языках есть много букв, символов и глифов, которые требуют нескольких кодовых точек, что может привести к путанице лингвистического представления содержимого.</span><span class="sxs-lookup"><span data-stu-id="4881a-132">Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation.</span></span> <span data-ttu-id="4881a-133">Например имеется ΰ (U + 03B0, греческий строчная буква ипсилон с dialytika и тоносом), но нет без эквивалентные прописные буквы.</span><span class="sxs-lookup"><span data-stu-id="4881a-133">For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter.</span></span> <span data-ttu-id="4881a-134">Нижний такое значение просто возвращает исходное значение.</span><span class="sxs-lookup"><span data-stu-id="4881a-134">Uppercasing such a value simply retrieves the original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4881a-135">В следующем примере кода показаны значения, возвращенные каждым методом для разных типов символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-135">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para><span data-ttu-id="4881a-136">Распознанных символов и конкретные категории, к которым они принадлежат определены в стандарте Юникода и можно перейти с одной версии стандарта Юникод к другому.</span><span class="sxs-lookup"><span data-stu-id="4881a-136">Recognized characters and the specific categories to which they belong are defined by the Unicode standard and can change from one version of the Unicode Standard to another.</span></span> <span data-ttu-id="4881a-137">Классификация символов в соответствующей версии платформы .NET Framework основана на одну версию стандарта Юникод, независимо от базовой операционной системы, на котором работает .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4881a-137">Categorization of characters in a particular version of the  .NET Framework  is based on a single version of the Unicode Standard regardless of the underlying operating system on which the .NET Framework is running.</span></span> <span data-ttu-id="4881a-138">В следующей таблице перечислены версии платформы .NET Framework с момента [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] и версии в стандарте Юникода используется для классификации символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-138">The following table lists versions of the .NET Framework since the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and the versions of the Unicode Standard  used to classify characters.</span></span>  
  
 <span data-ttu-id="4881a-139"><list type="table"><listheader><term> Версии платформы .NET framework</span><span class="sxs-lookup"><span data-stu-id="4881a-139"><list type="table"><listheader><term> .NET Framework version</span></span>  
  
 <span data-ttu-id="4881a-140"></term><description> Версия стандарта Юникод</span><span class="sxs-lookup"><span data-stu-id="4881a-140"></term><description> Version of the Unicode Standard</span></span>  
  
 <span data-ttu-id="4881a-141"></description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4881a-141"></description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span></span>  
  
 <span data-ttu-id="4881a-142"></term><description> [В стандарте Юникода версии 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="4881a-142"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="4881a-143"></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4881a-143"></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span></span>  
  
 <span data-ttu-id="4881a-144"></term><description> [В стандарте Юникода версии 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="4881a-144"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="4881a-145"></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4881a-145"></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
  
 <span data-ttu-id="4881a-146"></term><description> [В стандарте Юникода версии 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="4881a-146"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="4881a-147"></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4881a-147"></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]</span></span>  
  
 <span data-ttu-id="4881a-148"></term><description> [В стандарте Юникода версии 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="4881a-148"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="4881a-149"></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4881a-149"></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]</span></span>  
  
 <span data-ttu-id="4881a-150"></term><description> [В стандарте Юникода версии 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span><span class="sxs-lookup"><span data-stu-id="4881a-150"></term><description> [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span></span>  
  
 <span data-ttu-id="4881a-151"></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4881a-151"></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]</span></span>  
  
 <span data-ttu-id="4881a-152"></term><description> [В стандарте Юникода версии 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span><span class="sxs-lookup"><span data-stu-id="4881a-152"></term><description> [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span></span>  
  
 <span data-ttu-id="4881a-153"></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]</span><span class="sxs-lookup"><span data-stu-id="4881a-153"></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]</span></span>  
  
 <span data-ttu-id="4881a-154"></term><description> [В стандарте Юникода версии 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/)</span><span class="sxs-lookup"><span data-stu-id="4881a-154"></term><description> [The Unicode Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/)</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="4881a-155">Каждая версия стандарта Юникод включает сведения об изменениях в базе данных символов Юникода с момента предыдущей версии.</span><span class="sxs-lookup"><span data-stu-id="4881a-155">Each version of the Unicode standard includes information on changes to the Unicode character database since the previous version.</span></span> <span data-ttu-id="4881a-156">База данных символов Юникода используется <see cref="T:System.Globalization.CharUnicodeInfo" /> класс для классификации символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-156">The Unicode character database is used by the <see cref="T:System.Globalization.CharUnicodeInfo" /> class for categorizing characters.</span></span></para>
    </block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4881a-157">Gets the decimal digit value of a numeric Unicode character.</span><span class="sxs-lookup"><span data-stu-id="4881a-157">Gets the decimal digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="4881a-158">The Unicode character for which to get the decimal digit value.</span><span class="sxs-lookup"><span data-stu-id="4881a-158">The Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="4881a-159">Gets the decimal digit value of the specified numeric character.</span><span class="sxs-lookup"><span data-stu-id="4881a-159">Gets the decimal digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="4881a-160">The decimal digit value of the specified numeric character.</span><span class="sxs-lookup"><span data-stu-id="4881a-160">The decimal digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="4881a-161">-or-</span><span class="sxs-lookup"><span data-stu-id="4881a-161">-or-</span></span>  
  
 <span data-ttu-id="4881a-162">-1, if the specified character is not a decimal digit.</span><span class="sxs-lookup"><span data-stu-id="4881a-162">-1, if the specified character is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4881a-163">Этот метод преобразует символов, представляющих десятичные цифры их эквивалентные целочисленного значения.</span><span class="sxs-lookup"><span data-stu-id="4881a-163">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="4881a-164">Десятичные цифры, символы в <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> категорию, которая может представлять одну из десяти цифр в десятичном формате (основание 10) системы от нуля до девяти нумерации.</span><span class="sxs-lookup"><span data-stu-id="4881a-164">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="4881a-165">Он включает символы, такие как U + 0030 (цифра ноль) до U + 0039 (цифра 9), U + 0660 (ARABIC-INDIC ЦИФРЫ ноль) до U + 0669 (ARABIC-INDIC цифра 9), U + 07 C 0 (ноль NKO ЦИФР) до U + 07C 9 (NKO цифра 9) и 1040 (МЬЯНМА ЦИФРЫ ноль) до U + 1049) МЬЯНМА ЦИФРА 9).</span><span class="sxs-lookup"><span data-stu-id="4881a-165">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="4881a-166">Дополнительные сведения о Юникоде см. в разделе [стандарт Юникод](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="4881a-166">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4881a-167">В следующем примере кода показаны значения, возвращенные каждым методом для разных типов символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-167">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4881a-168">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span><span class="sxs-lookup"><span data-stu-id="4881a-168">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span></span></param>
        <param name="index"><span data-ttu-id="4881a-169">The index of the Unicode character for which to get the decimal digit value.</span><span class="sxs-lookup"><span data-stu-id="4881a-169">The index of the Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="4881a-170">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span><span class="sxs-lookup"><span data-stu-id="4881a-170">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="4881a-171">The decimal digit value of the numeric character at the specified index of the specified string.</span><span class="sxs-lookup"><span data-stu-id="4881a-171">The decimal digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="4881a-172">-or-</span><span class="sxs-lookup"><span data-stu-id="4881a-172">-or-</span></span>  
  
 <span data-ttu-id="4881a-173">-1, if the character at the specified index of the specified string is not a decimal digit.</span><span class="sxs-lookup"><span data-stu-id="4881a-173">-1, if the character at the specified index of the specified string is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4881a-174">Этот метод преобразует символов, представляющих десятичные цифры их эквивалентные целочисленного значения.</span><span class="sxs-lookup"><span data-stu-id="4881a-174">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="4881a-175">Десятичные цифры, символы в <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> категорию, которая может представлять одну из десяти цифр в десятичном формате (основание 10) системы от нуля до девяти нумерации.</span><span class="sxs-lookup"><span data-stu-id="4881a-175">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="4881a-176">Он включает символы, такие как U + 0030 (цифра ноль) до U + 0039 (цифра 9), U + 0660 (ARABIC-INDIC ЦИФРЫ ноль) до U + 0669 (ARABIC-INDIC цифра 9), U + 07 C 0 (ноль NKO ЦИФР) до U + 07C 9 (NKO цифра 9) и 1040 (МЬЯНМА ЦИФРЫ ноль) до U + 1049) МЬЯНМА ЦИФРА 9).</span><span class="sxs-lookup"><span data-stu-id="4881a-176">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="4881a-177">Дополнительные сведения о Юникоде см. в разделе [стандарт Юникод](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="4881a-177">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4881a-178">В следующем примере кода показаны значения, возвращенные каждым методом для разных типов символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-178">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4881a-179"><paramref name="s" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4881a-179"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4881a-180"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="4881a-180"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4881a-181">Gets the digit value of a numeric Unicode character.</span><span class="sxs-lookup"><span data-stu-id="4881a-181">Gets the digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="4881a-182">The Unicode character for which to get the digit value.</span><span class="sxs-lookup"><span data-stu-id="4881a-182">The Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="4881a-183">Gets the digit value of the specified numeric character.</span><span class="sxs-lookup"><span data-stu-id="4881a-183">Gets the digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="4881a-184">The digit value of the specified numeric character.</span><span class="sxs-lookup"><span data-stu-id="4881a-184">The digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="4881a-185">-or-</span><span class="sxs-lookup"><span data-stu-id="4881a-185">-or-</span></span>  
  
 <span data-ttu-id="4881a-186">-1, if the specified character is not a digit.</span><span class="sxs-lookup"><span data-stu-id="4881a-186">-1, if the specified character is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4881a-187">Цифровое значение — это свойство, которое применяется только к числовым символам, которые можно использовать в качестве цифр.</span><span class="sxs-lookup"><span data-stu-id="4881a-187">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="4881a-188">Цифра — числовой символ, который может быть объединен с другими цифрами для представления числа в системе нумерации.</span><span class="sxs-lookup"><span data-stu-id="4881a-188">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="4881a-189">Дополнительные сведения о Юникоде см. в разделе [стандарт Юникод](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="4881a-189">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4881a-190">В следующем примере кода показаны значения, возвращенные каждым методом для разных типов символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-190">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4881a-191">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span><span class="sxs-lookup"><span data-stu-id="4881a-191">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span></span></param>
        <param name="index"><span data-ttu-id="4881a-192">The index of the Unicode character for which to get the digit value.</span><span class="sxs-lookup"><span data-stu-id="4881a-192">The index of the Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="4881a-193">Gets the digit value of the numeric character at the specified index of the specified string.</span><span class="sxs-lookup"><span data-stu-id="4881a-193">Gets the digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="4881a-194">The digit value of the numeric character at the specified index of the specified string.</span><span class="sxs-lookup"><span data-stu-id="4881a-194">The digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="4881a-195">-or-</span><span class="sxs-lookup"><span data-stu-id="4881a-195">-or-</span></span>  
  
 <span data-ttu-id="4881a-196">-1, if the character at the specified index of the specified string is not a digit.</span><span class="sxs-lookup"><span data-stu-id="4881a-196">-1, if the character at the specified index of the specified string is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4881a-197">Цифровое значение — это свойство, которое применяется только к числовым символам, которые можно использовать в качестве цифр.</span><span class="sxs-lookup"><span data-stu-id="4881a-197">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="4881a-198">Цифра — числовой символ, который может быть объединен с другими цифрами для представления числа в системе нумерации.</span><span class="sxs-lookup"><span data-stu-id="4881a-198">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="4881a-199">Дополнительные сведения о Юникоде см. в разделе [стандарт Юникод](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="4881a-199">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4881a-200">В следующем примере кода показаны значения, возвращенные каждым методом для разных типов символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-200">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4881a-201"><paramref name="s" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4881a-201"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4881a-202"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="4881a-202"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4881a-203">Gets the numeric value associated with a Unicode character.</span><span class="sxs-lookup"><span data-stu-id="4881a-203">Gets the numeric value associated with a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="4881a-204">The Unicode character for which to get the numeric value.</span><span class="sxs-lookup"><span data-stu-id="4881a-204">The Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="4881a-205">Gets the numeric value associated with the specified character.</span><span class="sxs-lookup"><span data-stu-id="4881a-205">Gets the numeric value associated with the specified character.</span></span></summary>
        <returns><span data-ttu-id="4881a-206">The numeric value associated with the specified character.</span><span class="sxs-lookup"><span data-stu-id="4881a-206">The numeric value associated with the specified character.</span></span>  
  
 <span data-ttu-id="4881a-207">-or-</span><span class="sxs-lookup"><span data-stu-id="4881a-207">-or-</span></span>  
  
 <span data-ttu-id="4881a-208">-1, if the specified character is not a numeric character.</span><span class="sxs-lookup"><span data-stu-id="4881a-208">-1, if the specified character is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4881a-209">Числовое значение — это свойство символов Юникода, которое применяется только к числовым символам, включая дроби, индексы, надстрочный, римские цифры, числители валюты, обведенные числа и цифры конкретного скрипта.</span><span class="sxs-lookup"><span data-stu-id="4881a-209">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="4881a-210">Дополнительные сведения о Юникоде см. в разделе [стандарт Юникод](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="4881a-210">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="4881a-211"><xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> Метод предполагает, что `ch` соответствует знаку лингвистические и проверяет, можно ли преобразовать этот символ десятичной цифрой.</span><span class="sxs-lookup"><span data-stu-id="4881a-211">The <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method assumes that `ch` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="4881a-212">Тем не менее, некоторые числа в стандарте Юникода представлены двумя <xref:System.Char> объекты, которые суррогатную пару.</span><span class="sxs-lookup"><span data-stu-id="4881a-212">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="4881a-213">Например Aegean системы нумерации состоит кодовых точек U + 10107 до U + 10133.</span><span class="sxs-lookup"><span data-stu-id="4881a-213">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="4881a-214">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая AEGEAN номер один.</span><span class="sxs-lookup"><span data-stu-id="4881a-214">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="4881a-215">Как видно в результатах показано в примере <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> метод возвращает -1, если он передается старшим или младшим символом-заместителем этого символа.</span><span class="sxs-lookup"><span data-stu-id="4881a-215">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="4881a-216">В следующем примере кода показаны значения, возвращенные каждым методом для разных типов символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-216">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4881a-217">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span><span class="sxs-lookup"><span data-stu-id="4881a-217">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span></span></param>
        <param name="index"><span data-ttu-id="4881a-218">The index of the Unicode character for which to get the numeric value.</span><span class="sxs-lookup"><span data-stu-id="4881a-218">The index of the Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="4881a-219">Gets the numeric value associated with the character at the specified index of the specified string.</span><span class="sxs-lookup"><span data-stu-id="4881a-219">Gets the numeric value associated with the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="4881a-220">The numeric value associated with the character at the specified index of the specified string.</span><span class="sxs-lookup"><span data-stu-id="4881a-220">The numeric value associated with the character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="4881a-221">-or-</span><span class="sxs-lookup"><span data-stu-id="4881a-221">-or-</span></span>  
  
 <span data-ttu-id="4881a-222">-1, if the character at the specified index of the specified string is not a numeric character.</span><span class="sxs-lookup"><span data-stu-id="4881a-222">-1, if the character at the specified index of the specified string is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4881a-223">Числовое значение — это свойство символов Юникода, которое применяется только к числовым символам, включая дроби, индексы, надстрочный, римские цифры, числители валюты, обведенные числа и цифры конкретного скрипта.</span><span class="sxs-lookup"><span data-stu-id="4881a-223">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="4881a-224">Дополнительные сведения о Юникоде см. в разделе [стандарт Юникод](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="4881a-224">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="4881a-225">Если <xref:System.Char> объект в позиции `index` является первым символом допустимую суррогатную пару <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> метод определяет ли суррогатная пара форм цифры и, если это так, возвращает его числовое значение.</span><span class="sxs-lookup"><span data-stu-id="4881a-225">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value.</span></span> <span data-ttu-id="4881a-226">Например Aegean системы нумерации состоит кодовых точек U + 10107 до U + 10133.</span><span class="sxs-lookup"><span data-stu-id="4881a-226">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="4881a-227">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая номер каждого Aegean.</span><span class="sxs-lookup"><span data-stu-id="4881a-227">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="4881a-228">Как видно в результатах показано в примере <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> метод возвращает верное числовое значение, если он передается старшим символом-заместителем Aegean номера.</span><span class="sxs-lookup"><span data-stu-id="4881a-228">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="4881a-229">Тем не менее если он передается младшим символом-заместителем, рассматривает только младший заместитель изоляции и возвращает – 1.</span><span class="sxs-lookup"><span data-stu-id="4881a-229">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="4881a-230">В следующем примере кода показаны значения, возвращенные каждым методом для разных типов символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-230">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4881a-231"><paramref name="s" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4881a-231"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4881a-232"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="4881a-232"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4881a-233">Gets the Unicode category of a Unicode character.</span><span class="sxs-lookup"><span data-stu-id="4881a-233">Gets the Unicode category of a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (ch As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="4881a-234">The Unicode character for which to get the Unicode category.</span><span class="sxs-lookup"><span data-stu-id="4881a-234">The Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="4881a-235">Gets the Unicode category of the specified character.</span><span class="sxs-lookup"><span data-stu-id="4881a-235">Gets the Unicode category of the specified character.</span></span></summary>
        <returns><span data-ttu-id="4881a-236">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span><span class="sxs-lookup"><span data-stu-id="4881a-236">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4881a-237">Символы Юникода делятся на категории.</span><span class="sxs-lookup"><span data-stu-id="4881a-237">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="4881a-238">Категория символа является одним из его свойств.</span><span class="sxs-lookup"><span data-stu-id="4881a-238">A character's category is one of its properties.</span></span> <span data-ttu-id="4881a-239">Например символ может быть прописной буквы, строчные буквы, десятичным числом, буквы, цифры, знаком пунктуации соединителя, математическим символом или символ валюты.</span><span class="sxs-lookup"><span data-stu-id="4881a-239">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="4881a-240"><xref:System.Globalization.UnicodeCategory> Класс возвращает диапазон символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="4881a-240">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="4881a-241">Дополнительные сведения о Юникоде см. в разделе [стандарт Юникод](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="4881a-241">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="4881a-242"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> Метод предполагает, что `ch` соответствует знаку лингвистические и возвращает его категория.</span><span class="sxs-lookup"><span data-stu-id="4881a-242">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> method assumes that `ch` corresponds to a single linguistic character and returns its category.</span></span> <span data-ttu-id="4881a-243">Это означает, что для суррогатных пар, она возвращает <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> вместо категории, к которой принадлежит суррогат.</span><span class="sxs-lookup"><span data-stu-id="4881a-243">This means that, for surrogate pairs, it returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> instead of the category to which the surrogate belongs.</span></span> <span data-ttu-id="4881a-244">Например Ugaritic алфавита занимает кодовые точки U + 10380 до U + 1039F.</span><span class="sxs-lookup"><span data-stu-id="4881a-244">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="4881a-245">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая ALPA UGARITIC буквы (U + 10380), что это первая буква алфавита Ugaritic.</span><span class="sxs-lookup"><span data-stu-id="4881a-245">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="4881a-246">Как видно в результатах показано в примере <xref:System.Char.IsNumber%28System.Char%29> возвращает метод `false` при передаче старший или младший символ-заместитель этот символ.</span><span class="sxs-lookup"><span data-stu-id="4881a-246">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either the high surrogate or the low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 <span data-ttu-id="4881a-247">Обратите внимание, что <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> не всегда возвращает такой же <xref:System.Globalization.UnicodeCategory> как <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> метод при передаче конкретного символа в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="4881a-247">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="4881a-248"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> Метод создан в соответствии с текущей версией в стандарте Юникода.</span><span class="sxs-lookup"><span data-stu-id="4881a-248">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="4881a-249">В отличие от этого несмотря на то что <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> метод обычно отражает текущую версию стандарта Юникод, он может возвращать категорию символа, основываясь на предыдущей версии стандарта, или он может возвращать категорию, отличающуюся от текущего стандарта для сохранения обратной совместимости.</span><span class="sxs-lookup"><span data-stu-id="4881a-249">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4881a-250">В следующем примере кода показаны значения, возвращенные каждым методом для разных типов символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-250">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4881a-251">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span><span class="sxs-lookup"><span data-stu-id="4881a-251">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span></span></param>
        <param name="index"><span data-ttu-id="4881a-252">The index of the Unicode character for which to get the Unicode category.</span><span class="sxs-lookup"><span data-stu-id="4881a-252">The index of the Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="4881a-253">Gets the Unicode category of the character at the specified index of the specified string.</span><span class="sxs-lookup"><span data-stu-id="4881a-253">Gets the Unicode category of the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="4881a-254">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span><span class="sxs-lookup"><span data-stu-id="4881a-254">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4881a-255">Символы Юникода делятся на категории.</span><span class="sxs-lookup"><span data-stu-id="4881a-255">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="4881a-256">Категория символа является одним из его свойств.</span><span class="sxs-lookup"><span data-stu-id="4881a-256">A character's category is one of its properties.</span></span> <span data-ttu-id="4881a-257">Например символ может быть прописной буквы, строчные буквы, десятичным числом, буквы, цифры, знаком пунктуации соединителя, математическим символом или символ валюты.</span><span class="sxs-lookup"><span data-stu-id="4881a-257">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="4881a-258"><xref:System.Globalization.UnicodeCategory> Класс возвращает диапазон символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="4881a-258">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="4881a-259">Дополнительные сведения о Юникоде см. в разделе [стандарт Юникод](http://go.microsoft.com/fwlink/?linkid=37123).</span><span class="sxs-lookup"><span data-stu-id="4881a-259">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="4881a-260">Если <xref:System.Char> объект в позиции `index` является первым символом допустимую суррогатную пару <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> метод возвращает категорию Юникода для пары символов-заместителей вместо возвращения <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4881a-260">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns the Unicode category of the surrogate pair instead of returning <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4881a-261">Например Ugaritic алфавита занимает кодовые точки U + 10380 до U + 1039F.</span><span class="sxs-lookup"><span data-stu-id="4881a-261">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="4881a-262">В следующем примере используется <xref:System.Char.ConvertFromUtf32%2A> метод для создания экземпляра строка, представляющая ALPA UGARITIC буквы (U + 10380), что это первая буква алфавита Ugaritic.</span><span class="sxs-lookup"><span data-stu-id="4881a-262">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="4881a-263">Как видно в результатах показано в примере <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> возвращает <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> он передается старший символ-это символ, предполагает суррогатной пары.</span><span class="sxs-lookup"><span data-stu-id="4881a-263">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair.</span></span> <span data-ttu-id="4881a-264">Тем не менее, если он передается младшим символом-заместителем, он считает, что только младший заместитель изоляции и возвращает <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4881a-264">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 <span data-ttu-id="4881a-265">Обратите внимание, что <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> метод не всегда возвращает такой же <xref:System.Globalization.UnicodeCategory> как <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> метод при передаче конкретного символа в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="4881a-265">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="4881a-266"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> Метод создан в соответствии с текущей версией в стандарте Юникода.</span><span class="sxs-lookup"><span data-stu-id="4881a-266">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="4881a-267">В отличие от этого несмотря на то что <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> метод обычно отражает текущую версию стандарта Юникод, он может возвращать категорию символа, основываясь на предыдущей версии стандарта, или он может возвращать категорию, отличающуюся от текущего стандарта для сохранения обратной совместимости.</span><span class="sxs-lookup"><span data-stu-id="4881a-267">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4881a-268">В следующем примере кода показаны значения, возвращенные каждым методом для разных типов символов.</span><span class="sxs-lookup"><span data-stu-id="4881a-268">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4881a-269"><paramref name="s" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4881a-269"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4881a-270"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span><span class="sxs-lookup"><span data-stu-id="4881a-270"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
  </Members>
</Type>