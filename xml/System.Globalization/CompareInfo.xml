<Type Name="CompareInfo" FullName="System.Globalization.CompareInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80d568fc0daf6dcc09ab810c4a143ebeae612716" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30411038" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompareInfo : System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompareInfo extends System.Object implements class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CompareInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareInfo&#xA;Implements IDeserializationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareInfo : System::Runtime::Serialization::IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Реализует ряд методов для сравнения строк с учетом языка и региональных параметров.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Соглашения для сравнения и сортировки данных зависят от языка и региональных параметров для языка и региональных параметров. Например порядок сортировки может быть основана на Фонетическое имя или визуального представления символов. В языках Восточной Азии символы являются сортируется по штриха и корнями идеограмм. Также сортировки зависит от языков порядке и использовать языки и региональные параметры для алфавита. Например датского языка содержит символ «Æ», который в алфавите после «Z». Кроме того может быть сравнений с учетом регистра и без учета регистра и правила определения регистра также могут зависеть от языка и региональных параметров. <xref:System.Globalization.CompareInfo> Класс отвечает за обслуживание этого данные сравнения строк с учетом языка и региональных параметров, а также выполнение строковые операции с учетом языка и региональных параметров.  
  
 Как правило, не придется создавать экземпляр <xref:System.Globalization.CompareInfo> объекта непосредственно, поскольку он используется неявно, все операции сравнения строк без порядковый номер, включая вызовы <xref:System.String.Compare%2A?displayProperty=nameWithType> метод. Тем не менее если вы хотите получить <xref:System.Globalization.CompareInfo> объекта, это можно сделать одним из следующих способов:  
  
-   Путем получения значения из <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> свойство для определенного языка и региональных параметров.  
  
-   Путем вызова статического <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> метод с именем языка и региональных параметров. Разрешает доступ с поздним связыванием для <xref:System.Globalization.CompareInfo> объекта.  
  
## <a name="ignored-search-values"></a>Пропущенные значения поиска  
 Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров. Сравнение методов, таких как <xref:System.Globalization.CompareInfo.IndexOf%2A> и <xref:System.Globalization.CompareInfo.LastIndexOf%2A> не учитывать такие символы при выполнении сравнения с учетом языка и региональных параметров. Следующие символы, которые могут игнорироваться.  
  
-   <xref:System.String.Empty?displayProperty=nameWithType>. Сравнение с учетом языка и региональных параметров методов всегда будет найти пустую строку в начале (нулевой индекс) искомая строка.  
  
-   Символ или строка, состоящая из символов с элементами кода, которые не учитываются при выполнении операции из-за параметров сравнения, в частности, <xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> и <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> производит поиск в символы и непробельные сочетания, которые приводят к символы учитываются.  
  
-   Строка с элементами кода, которые не имеют лингвистического значения. Например мягкий перенос (U + 00AD) никогда не учитывается при сравнении строк с учетом языка и региональных параметров.  
  
## <a name="security-considerations"></a>Замечания по безопасности  
 Если решение безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы убедиться, что поведение согласуется, независимо от настроек языка и региональных параметров операционной системы.  
  
> [!NOTE]
>  Если это возможно, следует использовать методы сравнения строк, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере показан способ <xref:System.Globalization.CompareInfo> объекта, связанного с <xref:System.Globalization.CultureInfo> объект влияет на сравнение строк.  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Сравнивает две строки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <summary>Сравнивает две строки.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Условие  
  
 </description></listheader><item><term> нуль  
  
 </term><description> Эти две строки совпадают.  
  
 </description></item><item><term> меньше нуля  
  
 </term><description><paramref name="string1" /> меньше <paramref name="string2" />.  
  
 </description></item><item><term> больше нуля  
  
 </term><description><paramref name="string1" /> больше <paramref name="string2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию сравнение выполняется с помощью <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>. Если решение безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы убедиться, что поведение согласуется независимо от настроек языка и региональных параметров операционной системы.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере сравниваются две строки с использованием различных частей <xref:System.Globalization.CompareInfo> объектов:  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с языком и региональными параметрами испанский (Испания) с использованием международного порядка сортировки  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с языком и региональными параметрами испанский (Испания) с традиционная сортировка  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с <xref:System.Globalization.CultureInfo.InvariantCulture%2A>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 В следующем примере демонстрируется вызов метода <xref:System.Globalization.CompareInfo.Compare%2A>.  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> Метод не учитывает такие символы при сравнении с учетом языка и региональных параметров. Для экземпляра сравнение с учетом языка и региональных параметров «animal» с «ani почты» (с помощью мягкий перенос или 00AD U +) указывает, что две строки равны, как показано в следующем примере.  
  
 [!code-vb[System.Globalization.CompareInfo.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]  
  
 Для распознавания игнорируемые символы в сравнения строк, вызвать <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> метод и задать значение либо <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <param name="options">Значение, определяющее способ сравнения <c>string1</c> и <c>string2</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> и <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
        <summary>Сравнивает две строки с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Условие  
  
 </description></listheader><item><term> нуль  
  
 </term><description> Эти две строки совпадают.  
  
 </description></item><item><term> меньше нуля  
  
 </term><description><paramref name="string1" /> меньше <paramref name="string2" />.  
  
 </description></item><item><term> больше нуля  
  
 </term><description><paramref name="string1" /> больше <paramref name="string2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если решение безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы убедиться, что поведение согласуется независимо от настроек языка и региональных параметров операционной системы.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере сравниваются две строки с использованием разных <xref:System.Globalization.CompareOptions> параметры.  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CPP/comparestrstropt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CS/comparestrstropt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/VB/comparestrstropt.vb#1)]  
  
 В следующем примере демонстрируется вызов метода <xref:System.Globalization.CompareInfo.Compare%2A>.  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> Метод не учитывает такие символы при сравнении с учетом языка и региональных параметров. Для распознавания игнорируемые символы, в отличие от вашей, укажите в качестве параметра <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</para>
        </block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="offset1">Отсчитываемый от нуля индекс знака в строке <c>string1</c>, с которого начинается сравнение.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <param name="offset2">Отсчитываемый от нуля индекс знака в строке <c>string2</c>, с которого начинается сравнение.</param>
        <summary>Сравнивает конечную часть одной строки с конечной частью другой строки.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Условие  
  
 </description></listheader><item><term> нуль  
  
 </term><description> Эти две строки совпадают.  
  
 </description></item><item><term> меньше нуля  
  
 </term><description> Заданная часть <paramref name="string1" /> меньше заданной части <paramref name="string2" />.  
  
 </description></item><item><term> больше нуля  
  
 </term><description> Заданная часть <paramref name="string1" /> больше заданной части <paramref name="string2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если решение безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы убедиться, что поведение согласуется независимо от настроек языка и региональных параметров операционной системы.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере сравниваются две строки с использованием различных частей <xref:System.Globalization.CompareInfo> объектов:  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с языком и региональными параметрами испанский (Испания) с использованием международного порядка сортировки  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с языком и региональными параметрами испанский (Испания) с традиционная сортировка  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с <xref:System.Globalization.CultureInfo.InvariantCulture%2A>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CPP/comparestrintstrint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CS/comparestrintstrint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/VB/comparestrintstrint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="offset1" /> или <paramref name="offset2" /> меньше нуля.  
  
 - или -  
  
 Значение параметра <paramref name="offset1" /> больше или равно количеству символов в строке <paramref name="string1" />.  
  
 - или -  
  
 Значение параметра <paramref name="offset2" /> больше или равно количеству символов в строке <paramref name="string2" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат символы, которые могут игнорироваться. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> Метод не учитывает эти символы при выполнении лингвистического сравнения или язык и региональные параметры сравнения. Для распознавания игнорируемые символы, в отличие от вашей, вызовите <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> метод и укажите в качестве параметра <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="offset1">Отсчитываемый от нуля индекс знака в строке <c>string1</c>, с которого начинается сравнение.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <param name="offset2">Отсчитываемый от нуля индекс знака в строке <c>string2</c>, с которого начинается сравнение.</param>
        <param name="options">Значение, определяющее способ сравнения <c>string1</c> и <c>string2</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> и <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
        <summary>Сравнивает конечную часть одной строки с конечной частью другой строки с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Условие  
  
 </description></listheader><item><term> нуль  
  
 </term><description> Эти две строки совпадают.  
  
 </description></item><item><term> меньше нуля  
  
 </term><description> Заданная часть <paramref name="string1" /> меньше заданной части <paramref name="string2" />.  
  
 </description></item><item><term> больше нуля  
  
 </term><description> Заданная часть <paramref name="string1" /> больше заданной части <paramref name="string2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если решение безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы убедиться, что поведение согласуется независимо от настроек языка и региональных параметров операционной системы.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере сравниваются две строки с использованием разных частей <xref:System.Globalization.CompareOptions> параметры.  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CPP/comparestrintstrintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CS/comparestrintstrintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/VB/comparestrintstrintopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="offset1" /> или <paramref name="offset2" /> меньше нуля.  
  
 - или -  
  
 Значение параметра <paramref name="offset1" /> больше или равно количеству символов в строке <paramref name="string1" />.  
  
 - или -  
  
 Значение параметра <paramref name="offset2" /> больше или равно количеству символов в строке <paramref name="string2" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического сравнения или сравнения с учетом языка и региональных параметров. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> Метод не учитывает такие символы при выполнении сравнения с учетом языка и региональных параметров. Для распознавания игнорируемые символы, в отличие от вашей, укажите в качестве параметра <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</para>
        </block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="offset1">Отсчитываемый от нуля индекс знака в строке <c>string1</c>, с которого начинается сравнение.</param>
        <param name="length1">Число последовательных знаков в строке <c>string1</c> для сравнения.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <param name="offset2">Отсчитываемый от нуля индекс знака в строке <c>string2</c>, с которого начинается сравнение.</param>
        <param name="length2">Число последовательных знаков в строке <c>string2</c> для сравнения.</param>
        <summary>Сравнивает часть одной строки с частью другой строки.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Условие  
  
 </description></listheader><item><term> нуль  
  
 </term><description> Эти две строки совпадают.  
  
 </description></item><item><term> меньше нуля  
  
 </term><description> Заданная часть <paramref name="string1" /> меньше заданной части <paramref name="string2" />.  
  
 </description></item><item><term> больше нуля  
  
 </term><description> Заданная часть <paramref name="string1" /> больше заданной части <paramref name="string2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если решение безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы убедиться, что поведение согласуется независимо от настроек языка и региональных параметров операционной системы.  
  
> [!NOTE]
>  Если это возможно, следует использовать методы сравнения строк, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере сравниваются две строки с использованием различных частей <xref:System.Globalization.CompareInfo> объектов:  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с языком и региональными параметрами испанский (Испания) с использованием международного порядка сортировки  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с языком и региональными параметрами испанский (Испания) с традиционная сортировка  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с <xref:System.Globalization.CultureInfo.InvariantCulture%2A>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CPP/comparestrintintstrintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CS/comparestrintintstrintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/VB/comparestrintintstrintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметров <paramref name="offset1" /> или <paramref name="length1" />, или <paramref name="offset2" />, или <paramref name="length2" /> меньше нуля.  
  
 - или -  
  
 Значение параметра <paramref name="offset1" /> больше или равно количеству символов в строке <paramref name="string1" />.  
  
 - или -  
  
 Значение параметра <paramref name="offset2" /> больше или равно количеству символов в строке <paramref name="string2" />.  
  
 - или -  
  
 <paramref name="length1" /> больше количества символов от <paramref name="offset1" /> до конца <paramref name="string1" />.  
  
 - или -  
  
 <paramref name="length2" /> больше количества символов от <paramref name="offset2" /> до конца <paramref name="string2" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат символы, которые могут игнорироваться. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> Метод не учитывает эти символы при выполнении лингвистического сравнения или язык и региональные параметры сравнения. Для распознавания игнорируемые символы, в отличие от вашей, вызовите <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод и укажите в качестве параметра <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">Первая сравниваемая строка.</param>
        <param name="offset1">Отсчитываемый от нуля индекс знака в строке <c>string1</c>, с которого начинается сравнение.</param>
        <param name="length1">Число последовательных знаков в строке <c>string1</c> для сравнения.</param>
        <param name="string2">Вторая сравниваемая строка.</param>
        <param name="offset2">Отсчитываемый от нуля индекс знака в строке <c>string2</c>, с которого начинается сравнение.</param>
        <param name="length2">Число последовательных знаков в строке <c>string2</c> для сравнения.</param>
        <param name="options">Значение, определяющее способ сравнения <c>string1</c> и <c>string2</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> и <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
        <summary>Сравнивает часть одной строки с частью другой строки с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>32-разрядное целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Условие  
  
 </description></listheader><item><term> нуль  
  
 </term><description> Эти две строки совпадают.  
  
 </description></item><item><term> меньше нуля  
  
 </term><description> Заданная часть <paramref name="string1" /> меньше заданной части <paramref name="string2" />.  
  
 </description></item><item><term> больше нуля  
  
 </term><description> Заданная часть <paramref name="string1" /> больше заданной части <paramref name="string2" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если решение безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы убедиться, что поведение согласуется независимо от настроек языка и региональных параметров операционной системы.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере сравниваются две строки с использованием разных частей <xref:System.Globalization.CompareOptions> параметры.  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CPP/comparestrintintstrintintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CS/comparestrintintstrintintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/VB/comparestrintintstrintintopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметров <paramref name="offset1" /> или <paramref name="length1" />, или <paramref name="offset2" />, или <paramref name="length2" /> меньше нуля.  
  
 - или -  
  
 Значение параметра <paramref name="offset1" /> больше или равно количеству символов в строке <paramref name="string1" />.  
  
 - или -  
  
 Значение параметра <paramref name="offset2" /> больше или равно количеству символов в строке <paramref name="string2" />.  
  
 - или -  
  
 <paramref name="length1" /> больше количества символов от <paramref name="offset1" /> до конца <paramref name="string1" />.  
  
 - или -  
  
 <paramref name="length2" /> больше количества символов от <paramref name="offset2" /> до конца <paramref name="string2" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат символы, которые могут игнорироваться. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> Метод не учитывает эти символы при сравнении с учетом языка и региональных параметров. Для распознавания игнорируемые символы, в отличие от вашей, укажите в качестве параметра <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> для <paramref name="options" /> параметра.</para>
        </block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Globalization.CompareInfo" />.</param>
        <summary>Определяет, равен ли заданный объект текущему объекту <see cref="T:System.Globalization.CompareInfo" />.</summary>
        <returns>
          Значение <see langword="true" />, если заданный объект равен текущему объекту <see cref="T:System.Globalization.CompareInfo" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Два <xref:System.Globalization.CompareInfo> равны объекта, если их <xref:System.Globalization.CompareInfo.LCID%2A> и <xref:System.Globalization.CompareInfo.Name%2A> свойства равны.  
  
 Этот метод переопределяет метод <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
 Если решение безопасности зависит от сравнения строк или изменения регистра, следует использовать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство, чтобы убедиться, что поведение согласуется независимо от настроек языка и региональных параметров операционной системы.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCompareInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый объект <see cref="T:System.Globalization.CompareInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (culture As Integer) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">Целое число, представляющее идентификатор языка и региональных параметров.</param>
        <summary>Инициализирует новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным идентификатором.</summary>
        <returns>Новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным идентификатором и использующий методы сравнения строк в текущем объекте <see cref="T:System.Reflection.Assembly" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере сравниваются две строки с использованием различных частей <xref:System.Globalization.CompareInfo> объектов:  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с языком и региональными параметрами испанский (Испания) с использованием международного порядка сортировки  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с языком и региональными параметрами испанский (Испания) с традиционная сортировка  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с <xref:System.Globalization.CultureInfo.InvariantCulture%2A>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (name As String) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Строка, представляющая имя языка и региональных параметров.</param>
        <summary>Инициализирует новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным именем.</summary>
        <returns>Новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным идентификатором и использующий методы сравнения строк в текущем объекте <see cref="T:System.Reflection.Assembly" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере сравниваются две строки с использованием различных частей <xref:System.Globalization.CompareInfo> объектов:  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с языком и региональными параметрами испанский (Испания) с использованием международного порядка сортировки  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с языком и региональными параметрами испанский (Испания) с традиционная сортировка  
  
-   <xref:System.Globalization.CompareInfo> Объект, связанный с <xref:System.Globalization.CultureInfo.InvariantCulture%2A>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="name" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Значение параметра <paramref name="name" /> не является допустимым именем языка и региональных параметров.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture, System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="culture">Целое число, представляющее идентификатор языка и региональных параметров.</param>
        <param name="assembly">Класс <see cref="T:System.Reflection.Assembly" />, содержащий используемые методы сравнения строк.</param>
        <summary>Инициализирует новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с указанным языком и региональными параметрами и использующий методы сравнения строк в указанном объекте <see cref="T:System.Reflection.Assembly" />.</summary>
        <returns>Новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным идентификатором и использующий методы сравнения строк в текущем объекте <see cref="T:System.Reflection.Assembly" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Поведение этого метода будет непредсказуемым. Рекомендуется использовать версию этого метода, который не принимает входную сборку приложения.  
  
 `assembly` Параметр должен быть того же типа, что <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="assembly" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="assembly" /> относится к недопустимому типу.</exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name, System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="name">Строка, представляющая имя языка и региональных параметров.</param>
        <param name="assembly">Класс <see cref="T:System.Reflection.Assembly" />, содержащий используемые методы сравнения строк.</param>
        <summary>Инициализирует новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с указанным языком и региональными параметрами и использующий методы сравнения строк в указанном объекте <see cref="T:System.Reflection.Assembly" />.</summary>
        <returns>Новый объект <see cref="T:System.Globalization.CompareInfo" />, связанный с языком и региональными параметрами с заданным идентификатором и использующий методы сравнения строк в текущем объекте <see cref="T:System.Reflection.Assembly" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Поведение этого метода будет непредсказуемым. Рекомендуется использовать версию этого метода, который не принимает входную сборку.  
  
 `assembly` Параметр должен быть того же типа, что <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="name" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="assembly" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Значение параметра <paramref name="name" /> не является допустимым именем языка и региональных параметров.  
  
 - или -  
  
 Параметр <paramref name="assembly" /> относится к недопустимому типу.</exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает хэш-код для этого экземпляра <see cref="T:System.Globalization.CompareInfo" /> или для определенной строки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Служит хэш-функцией текущего класса <see cref="T:System.Globalization.CompareInfo" /> для алгоритмов хэширования и структур данных, например в хэш-таблице.</summary>
        <returns>Хэш-код для текущего объекта <see cref="T:System.Globalization.CompareInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 Этот метод создает один и тот же хэш-код для двух объектов, которые равны в соответствии с методом <xref:System.Globalization.CompareInfo.Equals%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetHashCode (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashCode (source As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка, для которой нужно вернуть хэш-код.</param>
        <param name="options">Значение, определяющее способ сравнения строк.</param>
        <summary>Возвращает хэш-код для строки на основе указанных параметров сравнения.</summary>
        <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поведение <xref:System.Globalization.CompareInfo.GetHashCode%2A> зависит от его реализации, которая может измениться из одной версии общеязыковой среды выполнения в другой или с одной платформы .NET Framework в другой.  
  
> [!IMPORTANT]
>  Если два строковых объекта равны, <xref:System.Globalization.CompareInfo.GetHashCode%2A> метод возвращает одинаковые значения. Тем не менее не уникальный хэш-кодом для каждого уникального строкового значения. Различные строки могут возвращать тот же хэш-код.  
>   
>  Хэш-код, сам не обязательно быть нестабильным. Хэш-коды для одинаковых строк может отличаться в разных версий платформы .NET Framework и платформ (таких как 32-разрядные и 64-разрядных) для одной версии платформы .NET Framework. В некоторых случаях можно даже зависят от домена приложения.  
>   
>  В результате хэш кодов никогда не должно использоваться за пределами домена приложения, в котором они были созданы, они никогда не должны использоваться в качестве ключевых полей в коллекции и они никогда не должен быть сохранен.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSortKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает объект <see cref="T:System.Globalization.SortKey" /> для строки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Строка, для которой получен объект <see cref="T:System.Globalization.SortKey" />.</param>
        <summary>Получает ключ сортировки для указанной строки.</summary>
        <returns>Объект <see cref="T:System.Globalization.SortKey" />, который содержит ключ сортировки для указанной строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый символ в строке присваивается несколько категорий весовых коэффициентов для сортировки, включая скрипта, алфавитные, регистра и диакритические. Ключ сортировки служит хранилищем этих весовых коэффициентов для конкретной строки. Например ключ сортировки может содержать строку алфавитных весовых коэффициентов, за которым следует строка весовых коэффициентов для вариантов и т. д. <xref:System.Globalization.CompareInfo.GetSortKey%2A> Метод эквивалентен методу Windows API `LCMapString` с флагом LCMAP_SORTKEY.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortKey" />
      </Docs>
    </Member>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String, options As CompareOptions) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка, для которой получен объект <see cref="T:System.Globalization.SortKey" />.</param>
        <param name="options">Битовая комбинация одного или нескольких из следующих значений перечисления, указывающих, как вычисляется ключ сортировки: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> и <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
        <summary>Получает объект <see cref="T:System.Globalization.SortKey" /> для указанной строки с использованием указанного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Объект <see cref="T:System.Globalization.SortKey" />, который содержит ключ сортировки для указанной строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый символ в строке присваивается несколько категорий весовых коэффициентов для сортировки, включая скрипта, алфавитные, регистра и диакритические. Ключ сортировки служит хранилищем этих весовых коэффициентов для конкретной строки. Например ключ сортировки может содержать строку алфавитных весовых коэффициентов, за которым следует строка весовых коэффициентов для вариантов и т. д. <xref:System.Globalization.CompareInfo.GetSortKey%2A> Метод эквивалентен методу Windows API `LCMapString` с флагом LCMAP_SORTKEY.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <altmember cref="T:System.Globalization.SortKey" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает отсчитываемый с нуля индекс первого экземпляра значения в строке или в ее части.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс первого найденного экземпляра во всей строке источника.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" />; если не найден — значение -1. Возвращает значение 0 (ноль), если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод выполняет поиск строки источника от начала строки до конца строки.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если `value` представляет составной символ Юникода, например лигатуры «Æ» (U + 00 C 6), он может рассматриваться как эквивалент любого вхождения его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), где два знака считаются эквивалентными, только если их кодовых точек Юникода совпадают, необходимо вызвать перегрузку, имеет параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> значение. В отличие от <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, который выполняет сравнение с учетом языка и региональных параметров, перегрузки <xref:System.String.IndexOf%2A?displayProperty=nameWithType> метод, который поиск символа выполняют порядковое сравнение и перегрузок, которые выполняют поиск строки выполнить сравнение с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует использовать методы сравнения строк, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в строке.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> метод всегда возвращает 0 (ноль), чтобы указать, что совпадения в начале <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> метод используется для поиска мягкий перенос (U + 00AD) в двух строк. Только одна из строк содержит мягкий перенос. В обоих случаях поскольку мягкий перенос является игнорируемый символ, метод возвращает 0 (ноль), чтобы указать, что обнаружено совпадение в начале строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</para>
        </block>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс первого найденного экземпляра во всей строке источника.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" />; если не найден — значение -1. Возвращает значение 0 (ноль), если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка выполняется поиск вперед от начала строки и заканчивается в конце строки.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует использовать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal> значение.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в строке.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> метод всегда возвращает 0 (ноль), чтобы указать, что совпадения в начале <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> метод используется для поиска три подстроки (мягкий перенос (U + 00AD) мягкого переноса, а затем «n» и мягкий перенос буквой «m») в двух строк. Только одна из строк содержит мягкий перенос. В каждом случае, поскольку мягкий перенос является игнорируемый символ, результат равен как если бы мягкий перенос не были включены в <paramref name="value" />. При поиске мягкий перенос, метод возвращает 0 (ноль), чтобы указать, что обнаружено совпадение в начале строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <param name="options">Значение, определяющее способ сравнения строк. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс первого найденного экземпляра во всей строке источника с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" /> с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает значение 0 (ноль), если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка выполняется поиск вперед от начала строки и заканчивается в конце строки.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров). Два знака считаются эквивалентными только в том случае, если совпадают со значениями Юникода. Перегруженные версии <xref:System.String.IndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует использовать методы сравнения строк, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в строке.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> метод всегда возвращает 0 (ноль), чтобы указать, что совпадения в начале <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> метод используется для поиска мягкий перенос (U + 00AD) в двух строк. Только одна из строк содержит мягкий перенос. Поскольку мягкий перенос является игнорируемый символ, поиск с учетом языка и региональных параметров в обоих случаях возвращает 0 (ноль), чтобы указать, что обнаружено совпадение в начале строки. Поиск по порядковым номерам, однако успешно находит мягкого переноса в одной строке и сообщает, что он не существует из второй строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс первого экземпляра в части строки источника от указанного индекса до конца строки.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="startIndex" /> и заканчивая <paramref name="source" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выполняется поиск строки источника от `startIndex` и заканчивается в конце строки.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают со значениями Юникода, следует вызывать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal> значение. Перегруженные версии <xref:System.String.IndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки. Обратите внимание, что <xref:System.Globalization.CompareInfo.IndexOf%2A> и <xref:System.Globalization.CompareInfo.LastIndexOf%2A> поиск в различных частей строки, даже с одинаковыми `startIndex` параметра.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> метод используется для поиска мягкий перенос (U + 00AD) после «n» в двух строк. Только одна из строк содержит мягкий перенос. В обоих случаях поскольку мягкий перенос является игнорируемый символ, метод возвращает 1, чтобы указать, что обнаружено совпадение в позиции «n».  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс первого найденного экземпляра во всей строке источника с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" /> с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает значение 0 (ноль), если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка выполняется поиск вперед от начала строки и заканчивается в конце строки.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где сравниваются значения Юникода.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в строке.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> метод всегда возвращает 0 (ноль), чтобы указать, что совпадения в начале <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> метод используется для поиска три подстроки (мягкий перенос (U + 00AD) мягкого переноса, а затем «n» и мягкий перенос буквой «m») в двух строк. Только одна из строк содержит мягкий перенос. Поскольку мягкий перенос является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает то же значение, то будет возвращено, если мягкий перенос не были включены в строку поиска. Поиск по порядковым номерам, однако успешно находит мягкого переноса в одной строке и сообщает, что он не существует из второй строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс первого экземпляра в части строки источника от указанного индекса до конца строки.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="startIndex" /> и заканчивая <paramref name="source" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выполняется поиск строки источника от `startIndex` и заканчивается в конце строки.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует вызывать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal> значение.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки. Обратите внимание, что <xref:System.Globalization.CompareInfo.IndexOf%2A> и <xref:System.Globalization.CompareInfo.LastIndexOf%2A> поиск в различных частей строки, даже с одинаковыми `startIndex` параметра.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск.  
  
 В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> метод позволяет определить позицию мягкий перенос (U + 00AD) буквой «m» в двух строк. Только одна из строк содержит требуемую подстроку. В обоих случаях поскольку мягкий перенос является игнорируемый символ, метод возвращает индекс «m» в строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск заданного знака и возвращает отсчитываемый от нуля индекс первого экземпляра в разделе исходной строки от заданного индекса до конца строки с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="startIndex" /> и заканчивая <paramref name="source" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выполняется поиск строки источника от `startIndex` и заканчивается в конце строки.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров). Два знака считаются эквивалентными только в том случае, если совпадают со значениями Юникода. Перегруженные версии <xref:System.String.IndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки. Обратите внимание, что <xref:System.Globalization.CompareInfo.IndexOf%2A> и <xref:System.Globalization.CompareInfo.LastIndexOf%2A> поиск в различных частей строки, даже с одинаковыми `startIndex` параметра.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />, позиция символа, сначала начала поиска. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска мягкий перенос (U + 00AD) после «n» в двух строк. Только одна из строк содержит мягкий перенос. Поскольку мягкий перенос является игнорируемый символ, поиск с учетом языка и региональных параметров в обоих случаях возвращает 1, чтобы указать, что обнаружено совпадение в позиции «n». Поиск по порядковым номерам, однако успешно находит мягкого переноса в одной строке и сообщает, что он не существует из второй строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс первого экземпляра в части строки источника, который начинается с указанного индекса и содержит указанное количество элементов.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="startIndex" /> и содержит количество элементов, определяемое параметром <paramref name="count" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выполняется поиск строки источника от `startIndex` и заканчивая `startIndex`  +  `count` - 1.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают со значениями Юникода, следует вызывать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal> значение. Перегруженные версии <xref:System.String.IndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.  
  
 - или -  
  
 Значение параметра <paramref name="count" /> меньше нуля.  
  
 - или -  
  
 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, сначала начала поиска. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> метод используется для поиска мягкий перенос (U + 00AD) после «n» в двух строк. Только одна из строк содержит мягкий перенос. В обоих случаях поскольку мягкий перенос является игнорируемый символ, метод возвращает 1, чтобы указать, что обнаружено совпадение в позиции «n».  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск заданной подстроки и возвращает отсчитываемый от нуля индекс первого экземпляра в разделе исходной строки от заданного индекса до конца строки с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="startIndex" /> и заканчивая <paramref name="source" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выполняется поиск строки источника от `startIndex` и заканчивается в конце строки.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где сравниваются значения Юникода.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки. Обратите внимание, что <xref:System.Globalization.CompareInfo.IndexOf%2A> и <xref:System.Globalization.CompareInfo.LastIndexOf%2A> поиск в различных частей строки, даже с одинаковыми `startIndex` параметра.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск.  
  
 В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> метод позволяет определить позицию мягкий перенос (U + 00AD) буквой «m», начиная с третьего положение символа в двух строк. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m". Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс первого экземпляра в части строки источника, которая начинается с указанного индекса и содержит указанное число элементов.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="startIndex" /> и содержит количество элементов, определяемое параметром <paramref name="count" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выполняется поиск строки источника от `startIndex` и заканчивая `startIndex`  +  `count` - 1.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует вызывать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal> значение.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.  
  
 - или -  
  
 Значение параметра <paramref name="count" /> меньше нуля.  
  
 - или -  
  
 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск.  
  
 В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> метод позволяет найти позицию (U + 00AD) мягкий перенос перед буквой «m», начиная с третьего по шестой позиции символов в двух строк. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс первого экземпляра в разделе строки источника, который начинается с указанного индекса и содержит указанное количество элементов, с использованием указанного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="startIndex" /> и содержит количество элементов, определяемое параметром <paramref name="count" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выполняется поиск строки источника от `startIndex` и заканчивая `startIndex`  +  `count` - 1.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров). Два знака считаются эквивалентными только в том случае, если совпадают со значениями Юникода. Перегруженные версии <xref:System.String.IndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.  
  
 - или -  
  
 Значение параметра <paramref name="count" /> меньше нуля.  
  
 - или -  
  
 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, сначала начала поиска. В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска мягкий перенос (U + 00AD) после «n» в двух строк. Только одна из строк содержит мягкий перенос. Поскольку мягкий перенос является игнорируемый символ, поиск с учетом языка и региональных параметров в обоих случаях возвращает 1, чтобы указать, что обнаружено совпадение в позиции «n». Поиск по порядковым номерам, однако успешно находит мягкого переноса в одной строке и сообщает, что он не существует из второй строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс первого экземпляра в разделе строки источника, который начинается с указанного индекса и содержит указанное количество элементов, с использованием указанного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="startIndex" /> и содержит количество элементов, определяемое параметром <paramref name="count" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выполняется поиск строки источника от `startIndex` и заканчивая `startIndex`  +  `count` - 1.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где сравниваются значения Юникода.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.  
  
 - или -  
  
 Значение параметра <paramref name="count" /> меньше нуля.  
  
 - или -  
  
 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск.  
  
 В следующем примере <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод позволяет найти позицию (U + 00AD) мягкий перенос перед буквой «m», начиная с третьего по шестой позиции символов в двух строк. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Когда он выполняет порядковое сравнение, однако она находит подстроку только в первой строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой «m», метод не возвращает индекс мягкого переноса, а вместо этого возвращает индекс символа «m», при сравнении с учетом языка и региональных параметров. Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPrefix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, начинается ли строка с указанного префикса.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Строка, в которой выполняется поиск.</param>
        <param name="prefix">Строка, сравниваемая с началом <c>source</c>.</param>
        <summary>Определяет, начинается ли указанная строка источника с указанного префикса.</summary>
        <returns>
          <see langword="true" />, если длина <paramref name="prefix" /> меньше или равна длине <paramref name="source" /> и <paramref name="source" /> начинается с <paramref name="prefix" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждая строка начинается и заканчивается пустой подстрокой (»»); Таким образом Если `prefix` является пустой строкой, этот метод возвращает `true`.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется, является ли строка префикса или суффикса другой строки.  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="prefix" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка, в которой выполняется поиск.</param>
        <param name="prefix">Строка, сравниваемая с началом <c>source</c>.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>prefix</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Определяет, начинается ли указанная строка источника с указанного префикса, с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>
          <see langword="true" />, если длина <paramref name="prefix" /> меньше или равна длине <paramref name="source" /> и <paramref name="source" /> начинается с <paramref name="prefix" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждая строка начинается и заканчивается пустой подстрокой (»»); Таким образом Если `prefix` является пустой строкой, этот метод возвращает `true`.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется, является ли строка префикса или суффикса другой строки с помощью <xref:System.Globalization.CompareOptions>.  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="prefix" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSortable">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Показывает, подлежит ли указанный знак или строка Юникода сортировке.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">Знак Юникода.</param>
        <summary>Показывает, подлежит ли указанный знак Юникода сортировке.</summary>
        <returns>
          Значение <see langword="true" />, если параметр  <paramref name="ch" /> подлежит сортировке; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ch` Параметров сортировки, если это знак Юникода, который определен в внутреннего <xref:System.Globalization.CompareInfo> класса таблицы сортировки, и не является частным или символ непарные большими или очень маленькими.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Строка длиной от нуля и более знаков Юникода.</param>
        <summary>Показывает, подлежит ли указанная строка Юникода сортировке.</summary>
        <returns>
          <see langword="true" />, если параметр <paramref name="str" /> не является пустой строкой (""), а все знаки Юникода в параметре <paramref name="str" /> подлежат сортировке; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый символ Юникода в `str` параметр представляет собой один или несколько UTF-16 в кодировке <xref:System.Char> объектов. `str` Параметров сортировки, если определено каждый символ Юникода в внутреннего <xref:System.Globalization.CompareInfo> класса таблицы сортировки, и не является частным или символ непарные большими или очень маленькими.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="str" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSuffix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, заканчивается ли строка указанным суффиксом.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Строка, в которой выполняется поиск.</param>
        <param name="suffix">Строка, сравниваемая с концом <c>source</c>.</param>
        <summary>Определяет, заканчивается ли указанная строка источника указанным суффиксом.</summary>
        <returns>
          <see langword="true" />, если длина <paramref name="suffix" /> меньше или равна длине <paramref name="source" /> и <paramref name="source" /> заканчивается  <paramref name="suffix" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждая строка начинается и заканчивается пустой подстрокой (»»); Таким образом Если `suffix` является пустой строкой, этот метод возвращает `true`.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется, является ли строка префикса или суффикса другой строки.  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="suffix" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка, в которой выполняется поиск.</param>
        <param name="suffix">Строка, сравниваемая с концом <c>source</c>.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>suffix</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" />, используемым самостоятельно, или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Определяет, заканчивается ли указанная строка источника указанным суффиксом, с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>
          <see langword="true" />, если длина <paramref name="suffix" /> меньше или равна длине <paramref name="source" /> и <paramref name="source" /> заканчивается  <paramref name="suffix" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждая строка начинается и заканчивается пустой подстрокой (»»); Таким образом Если `suffix` является пустой строкой, этот метод возвращает `true`.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется, является ли строка префикса или суффикса другой строки с помощью <xref:System.Globalization.CompareOptions>.  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="suffix" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает отсчитываемый с нуля индекс последнего экземпляра значения в строке или в ее части.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс последнего найденного экземпляра во всей строке источника.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" />; если не найден — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка осуществляется в обратном направлении, начиная с конца проверяемой строки и заканчивается в начале строки.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают со значениями Юникода, следует вызывать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal> значение. Перегруженные версии <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в строке.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> метод всегда возвращает последняя позиция в индексе <paramref name="source" /> для указания совпадения в конце <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> метод используется для поиска мягкий перенос (U + 00AD) в двух строк. Только одна из строк содержит мягкий перенос. В обоих случаях поскольку мягкий перенос является игнорируемый символ, метод возвращает последнего значения индекса в строку, чтобы указать, что он найдено совпадение в конце строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <summary>Выполняет поиск указанной подстроки и возвращает начинающийся с нуля индекс последнего экземпляра в рамках всей исходной строки.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" />; если не найден — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка осуществляется в обратном направлении, начиная с конца проверяемой строки и заканчивается в начале строки.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует вызывать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> значение.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в строке.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> метод всегда возвращает <paramref name="source" />.<see cref="P:System.String.Length" /> – 1, которое представляет последняя позиция в индексе <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> метод используется для поиска три подстроки (мягкий перенос (U + 00AD) мягкого переноса, а затем «n» и мягкий перенос буквой «m») в двух строк. Только одна из строк содержит мягкий перенос. В каждом случае, поскольку мягкий перенос является игнорируемый символ, результат равен как если бы мягкий перенос не были включены в <paramref name="value" />. При поиске мягкий перенос, метод возвращает 6 и 5. Эти значения соответствуют индекс последнего символа в двух строк.  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс последнего найденного экземпляра во всей строке источника с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" /> с использованием указанных параметров сравнения; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка осуществляется в обратном направлении, начиная с конца проверяемой строки и заканчивается в начале строки.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров). Два знака считаются эквивалентными только в том случае, если совпадают со значениями Юникода. Перегруженные версии <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в строке.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> метод всегда возвращает позицию последнего символа в <paramref name="source" /> для указания совпадения в конце <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> метод используется для поиска мягкий перенос (U + 00AD) в двух строк. Только одна из строк содержит мягкий перенос. Поскольку мягкий перенос является игнорируемый символ, поиск с учетом языка и региональных параметров в обоих случаях возвращает последнего значения индекса в исходной строки. Напротив, поиск по порядковым номерам успешно находит мягкого переноса в одной строке и сообщает, что он не существует из второй строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс последнего экземпляра в разделе строки источника от начала строки до указанного индекса.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="source" /> и заканчивается на <paramref name="startIndex" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка является выполняется в обратном направлении в `startIndex` и заканчивается в начале строки.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают со значениями Юникода, следует вызывать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal> значение. Перегруженные версии <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки. Обратите внимание, что <xref:System.Globalization.CompareInfo.IndexOf%2A> и <xref:System.Globalization.CompareInfo.LastIndexOf%2A> поиск в различных частей строки, даже с одинаковыми `startIndex` параметра.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> метод используется для поиска мягкий перенос (U + 00AD) перед последней точкой «m» в двух строк. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий перенос является игнорируемый символ, метод возвращает индекс позиции символа «m», которое является значением из <paramref name="startIndex" />.  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс последнего найденного экземпляра во всей строке источника с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в <paramref name="source" /> с использованием указанных параметров сравнения; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка осуществляется в обратном направлении, начиная с конца проверяемой строки и заканчивается в начале строки.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где сравниваются значения Юникода.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в строке.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="source" />.<see cref="P:System.String.Length" /> – 1, которое представляет последняя позиция в индексе <paramref name="source" />. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> метод используется для поиска три подстроки (мягкий перенос (U + 00AD) мягкого переноса, а затем «n» и мягкий перенос буквой «m») в двух строк. Только одна из строк содержит мягкий перенос. Поскольку мягкий перенос является игнорируемым символом, поиск с учетом языка и региональных параметров возвращает то же значение, то будет возвращено, если мягкий перенос не были включены в строку поиска. Поиск по порядковым номерам, однако успешно находит мягкого переноса в одной строке и сообщает, что он не существует из второй строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс последнего экземпляра в части строки источника от начала строки до указанного индекса.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который начинается с <paramref name="source" /> и заканчивается на <paramref name="startIndex" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка является выполняется в обратном направлении в `startIndex` и заканчивается в начале строки.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует вызывать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> значение.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки. Обратите внимание, что <xref:System.Globalization.CompareInfo.IndexOf%2A> и <xref:System.Globalization.CompareInfo.LastIndexOf%2A> поиск в различных частей строки, даже с одинаковыми `startIndex` параметра.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> метод используется для поиска подстроки, включающего мягкий перенос (U + 00AD) и предшествует или описатель конечного символа «m» используется в строке. Поскольку мягкий перенос в строке поиска учитывается, вызов метода подстроке, которая состоит из мягкий перенос и «m» возвращает позицию символа «m» в строке, в то время как вызов его для поиска подстроке, которая состоит из мягкого переноса, а «n»  положение «n». Если строка поиска, которая содержит только мягкого переноса, метод возвращает индекс символа «m», который представляет значение <paramref name="startIndex" />.  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск заданного знака и возвращает отсчитываемый от нуля индекс последнего экземпляра в разделе исходной строки от начала строки до заданного индекса с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="source" /> и заканчивая <paramref name="startIndex" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка является выполняется в обратном направлении в `startIndex` и заканчивается в начале строки.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров). Два знака считаются эквивалентными только в том случае, если совпадают со значениями Юникода. Перегруженные версии <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки. Обратите внимание, что <xref:System.Globalization.CompareInfo.IndexOf%2A> и <xref:System.Globalization.CompareInfo.LastIndexOf%2A> поиск в различных частей строки, даже с одинаковыми `startIndex` параметра.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска мягкий перенос (U + 00AD) перед последней точкой «m» в двух строк. Только одна из строк содержит мягкий перенос. Поскольку мягкий перенос является игнорируемый символ, поиск с учетом языка и региональных параметров в обоих случаях возвращает индекс позиции «m». Поиск по порядковым номерам, однако успешно находит мягкого переноса в одной строке и сообщает, что он не существует из второй строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс последнего экземпляра в части строки источника, которая содержит указанное количество элементов и заканчивается на указанном индексе.</summary>
        <returns>Отсчитываемый от нуля индекс последнего экземпляра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который содержит количество элементов, определяемое параметром <paramref name="count" /> заканчивается на <paramref name="startIndex" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка является выполняется в обратном направлении в `startIndex` и заканчивая `startIndex`  -  `count` + 1.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), где символ считаются эквивалентными, только в том случае, если совпадают со значениями Юникода, следует вызывать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal> значение. Перегруженные версии <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.  
  
 - или -  
  
 Значение параметра <paramref name="count" /> меньше нуля.  
  
 - или -  
  
 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> метод используется для поиска мягкий перенос (U + 00AD) перед последней точкой «m» в двух строк. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий перенос является игнорируемый символ, метод возвращает индекс позиции символа «m», которое является значением из <paramref name="startIndex" />.  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск заданной подстроки и возвращает отсчитываемый от нуля индекс последнего экземпляра в разделе исходной строки от начала строки до заданного индекса с использованием заданного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, начиная с <paramref name="source" /> и заканчивая <paramref name="startIndex" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка является выполняется в обратном направлении в `startIndex` и заканчивается в начале строки.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где сравниваются значения Юникода.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки. Обратите внимание, что <xref:System.Globalization.CompareInfo.IndexOf%2A> и <xref:System.Globalization.CompareInfo.LastIndexOf%2A> поиск в различных частей строки, даже с одинаковыми `startIndex` параметра.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск.  
  
 В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> метод позволяет определить позицию мягкий перенос (U + 00AD) буквой «m», начиная с последней «m» в двух строк. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m". Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс последнего экземпляра в части строки источника, который содержит указанное количество элементов и заканчивается на указанном индексе.</summary>
        <returns>Отсчитываемый от нуля индекс последнего экземпляра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который содержит количество элементов, определяемое параметром <paramref name="count" /> заканчивается на <paramref name="startIndex" />; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка является выполняется в обратном направлении в `startIndex` и заканчивая `startIndex`  -  `count` + 1.  
  
 Эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Чтобы выполнить поиск по порядковым номерам (без учета языка и региональных параметров), в котором сравниваются значения Юникода, следует вызывать одну из перегрузок, которые содержат параметр типа <xref:System.Globalization.CompareOptions> и использовать <xref:System.Globalization.CompareOptions.Ordinal> значение.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.  
  
 - или -  
  
 Значение параметра <paramref name="count" /> меньше нуля.  
  
 - или -  
  
 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск.  
  
 В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> метод позволяет найти позицию (U + 00AD) мягкий перенос перед буквой «m» в три символа, предшествующие конечный «m» двух строк. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой "m", этот метод возвращает не индекс мягкого переноса, а индекс буквы "m".  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Знак, который нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанного знака и возвращает отсчитываемый с нуля индекс последнего экземпляра в разделе строки источника, который содержит указанное количество элементов и заканчивается на указанном индексе, с использованием указанного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который содержит количество элементов, определяемое параметром <paramref name="count" /> и заканчивается на <paramref name="startIndex" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка является выполняется в обратном направлении в `startIndex` и заканчивая `startIndex`  -  `count` + 1.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Если символ Юникода, представляющее составной знак, например лигатуры «Æ» (U + 00 C 6), он может считаться равным любому вхождению его компонентов в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров). Два знака считаются эквивалентными только в том случае, если совпадают со значениями Юникода. Перегруженные версии <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> , поиск символа выполнять поиск по порядковым номерам, тогда как выполняющие поиск строки выполнения поиска с учетом языка и региональных параметров.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.  
  
 - или -  
  
 Значение параметра <paramref name="count" /> меньше нуля.  
  
 - или -  
  
 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. В поле поиска с учетом языка и региональных параметров Если <paramref name="value" /> является игнорируемый символ, результат аналогичен поиску с удаленным этим символом. В этом случае <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск. В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска мягкий перенос (U + 00AD) перед последней точкой «m» в двух строк. Только одна из строк содержит мягкий перенос. В обоих случаях, поскольку мягкий перенос является игнорируемый символ, поиск с учетом языка и региональных параметров возвращает позицию индекса с буквы «m», которое является значением из <paramref name="startIndex" />. Поиск по порядковым номерам, однако успешно находит мягкого переноса в одной строке и сообщает, что он не существует из второй строки.  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">Строка для поиска.</param>
        <param name="value">Строка, которую нужно найти в <c>source</c>.</param>
        <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
        <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
        <param name="options">Значение, определяющее способ сравнения <c>source</c> и <c>value</c>. Параметр <c>options</c> является значением перечисления <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или побитовой комбинацией одного или нескольких следующих значений: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> и <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</param>
        <summary>Осуществляет поиск указанной подстроки и возвращает отсчитываемый с нуля индекс последнего экземпляра в разделе строки источника, который содержит указанное количество элементов и заканчивается на указанном индексе, с использованием указанного значения <see cref="T:System.Globalization.CompareOptions" />.</summary>
        <returns>Отсчитываемый от нуля индекс последнего вхождения параметра <paramref name="value" />, если есть, в разделе <paramref name="source" />, который содержит количество элементов, определяемое параметром <paramref name="count" /> и заканчивается на <paramref name="startIndex" />, с использованием указанных параметров сравнения; в противном случае — значение -1. Возвращает <paramref name="startIndex" />, если <paramref name="value" /> — игнорируемый символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исходная строка является выполняется в обратном направлении в `startIndex` и заканчивая `startIndex`  -  `count` + 1.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> Значение недопустимо для этого метода.  
  
 Если `options` не включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск с учетом языка и региональных параметров. Значение Unicode, представляющее составной знак, таких как лигатуры «Æ» (U + 00 C 6), может рассматриваться как эквивалент любого вхождения компонентов символа в правильной последовательности, например «AE» (U + 0041, U + 0045), в зависимости от языка и региональных параметров. Если `options` включает <xref:System.Globalization.CompareOptions.Ordinal> значение, эта перегрузка выполняет поиск по порядковым номерам (без учета языка и региональных параметров), где сравниваются значения Юникода.  
  
> [!NOTE]
>  Если это возможно, следует вызывать строка методы сравнения, которые имеют параметр типа <xref:System.Globalization.CompareOptions> для указания ожидаемого вида сравнения. Как правило, используется для сравнения строк, отображаемых в пользовательском интерфейсе лингвистических параметров (с использованием текущего языка и региональных параметров) и укажите <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> или <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> для сравнения безопасности.  
  
   
  
## Examples  
 В следующем примере определяется индексы первого и последнего вхождений символа или подстроки в части строки.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="source" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> находится вне диапазона допустимых индексов для <paramref name="source" />.  
  
 - или -  
  
 Значение параметра <paramref name="count" /> меньше нуля.  
  
 - или -  
  
 <paramref name="startIndex" /> и <paramref name="count" /> не указывают допустимый раздел в <paramref name="source" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> содержит недопустимое значение <see cref="T:System.Globalization.CompareOptions" />.</exception>
        <block subset="none" type="usage">
          <para>Наборы символов содержат игнорируемые символы, то есть символы, которые не учитываются при выполнении лингвистического или язык и региональные параметры сортировки. Если при поиске с учетом языка и региональных параметров (то есть, если параметр <paramref name="options" /> не имеет значение <see cref="F:System.Globalization.CompareOptions.Ordinal" /> или <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) параметр <paramref name="value" /> содержит игнорируемый символ, результат аналогичен поиску с удаленным этим символом. Если <paramref name="value" /> состоит только из одного или нескольких игнорируемые символы, <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод всегда возвращает <paramref name="startIndex" />, являющееся позицию символа, с которого начинается поиск.  
  
 В следующем примере <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> метод используется для поиска положение мягкий перенос (U + 00AD) буквой «m» во всех но позиции первого символа окончательной «m» в двух строк. Только одна из строк содержит требуемую подстроку. Поскольку мягкий перенос является игнорируемым символом, в обоих случаях при сравнении с учетом языка и региональных параметров метод возвращает индекс символа "m" в строке. Когда он выполняет порядковое сравнение, однако она находит подстроку только в первой строке. Обратите внимание, что в случае первой строки, содержащей мягкий перенос перед буквой «m», метод не возвращает индекс мягкого переноса, а вместо этого возвращает индекс символа «m», при сравнении с учетом языка и региональных параметров. Этот метод возвращает индекс мягкого переноса в первой строке только при выполнении порядкового сравнения.  
  
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает идентификатор языка и региональных параметров, соответствующий текущему классу <see cref="T:System.Globalization.CompareInfo" />.</summary>
        <value>Идентификатор языка и региональных параметров, соответствующий текущему классу <see cref="T:System.Globalization.CompareInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере демонстрируется <xref:System.Globalization.CompareInfo.LCID%2A> свойство.  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя используемого языка и региональных параметров для операций сортировки по данному объекту <see cref="T:System.Globalization.CompareInfo" />.</summary>
        <value>Имя языка и региональных параметров.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CompareInfo.Name%2A> И <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> свойства могут иметь разные значения. Например <xref:System.Globalization.CompareInfo.LCID%2A> 0x10407 шестнадцатеричное значение свойства определяет сортировки альтернативный язык и региональные параметры, как они отображаются в немецкой телефонной книге. <xref:System.Globalization.CompareInfo.Name%2A> Свойство имеет значение «de-de_phoneb», тогда как <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> свойство связанного языка и региональных параметров немецкий (Германия) имеет значение «de-de».  
  
   
  
## Examples  
 В следующем примере сравниваются три строки с использованием языков и региональных параметров fr-FR и ja-JP. <xref:System.Globalization.CultureInfo.Name%2A> Свойство используется для отображения имени каждого языка и региональных параметров.  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">Объект, который инициализирует обратный вызов.</param>
        <summary>Выполняется, когда полностью десериализован граф объектов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет явную реализацию члена интерфейса, можно использовать только если текущий <xref:System.Globalization.CompareInfo> объект приведен <xref:System.Runtime.Serialization.IDeserializationCallback> интерфейса. Дополнительные сведения см. в описании метода <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, представляющую текущий объект <see cref="T:System.Globalization.CompareInfo" />.</summary>
        <returns>Строка, представляющая текущий объект <see cref="T:System.Globalization.CompareInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет <xref:System.Object.ToString%2A?displayProperty=nameWithType> метод. Возвращает строку, состоящую из имени класса и значение экземпляра <xref:System.Globalization.CompareInfo.Name%2A> свойств, разделенных дефисом.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Начиная с .NET Framework 4 <see cref="M:System.Globalization.CompareInfo.ToString" /> метод возвращает имя класса, а затем пробел, дефис, пробел и значение <see cref="P:System.Globalization.CompareInfo.Name" /> свойства. Например, для <see cref="T:System.Globalization.CompareInfo" /> объекта, представляющего региональные параметры en US, <see cref="M:System.Globalization.CompareInfo.ToString" /> метод возвращает «CompareInfo - en US». В предыдущих версиях платформы .NET Framework, она возвращает имя класса, а затем пробел, дефис, пробел и значение <see cref="P:System.Globalization.CompareInfo.LCID" /> свойства. Например, для <see cref="T:System.Globalization.CompareInfo" /> объекта, представляющего региональные параметры en US, <see cref="M:System.Globalization.CompareInfo.ToString" /> метод возвращает «CompareInfo - 1033».</para>
        </block>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public System.Globalization.SortVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.SortVersion Version" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As SortVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::SortVersion ^ Version { System::Globalization::SortVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.SortVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сведения о версии Юникода, используемой для сравнения и сортировки строк.</summary>
        <value>Объект, содержащий сведения о версии Юникода, используемой для сравнения и сортировки строк.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вес отдельных символов и способ в котором определенной строки сравнивается или упорядочены, зависит от версии спецификации Юникода, которая реализует конкретной версии платформы .NET Framework. В [!INCLUDE[net_v45](~/includes/net-v45-md.md)], это также зависит от операционной системы, как показано в следующей таблице. Обратите внимание, что этот список поддерживаемых версий Юникода применяется только к сравнению и сортировке символов. Он не применяется для классификации символов Юникода по категориям.  
  
|Версия платформы .NET Framework|Операционная система|Версия Юникода|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|Все операционные системы|Юникод 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] и более поздних версий|[!INCLUDE[win7](~/includes/win7-md.md)]|Юникод 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] и более поздних версий|[!INCLUDE[win8](~/includes/win8-md.md)] и более поздних версиях операционной системы Windows|6.3 Юникода|  
  
 <xref:System.Globalization.SortVersion> Объект, возвращаемый <xref:System.Globalization.CompareInfo.Version%2A> свойство идентифицирует точные версии Юникода, используемой для сравнения строк. Это полезно только в том случае, при сравнении двух <xref:System.Globalization.SortVersion> объектами, чтобы определить, является ли они используют ту же версию Юникода и язык и региональные параметры для сравнения строк. Дополнительные сведения и пример см. в разделе <xref:System.Globalization.SortVersion> справочной странице.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortVersion" />
      </Docs>
    </Member>
  </Members>
</Type>