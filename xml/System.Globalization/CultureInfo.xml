<Type Name="CultureInfo" FullName="System.Globalization.CultureInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="def27fc8960e34162ed6faf152d89b8f64a9e167" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34174409" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit CultureInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CultureInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureInfo : ICloneable, IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет сведения об определенном языке и региональных параметрах (которые в совокупности называются *языковым стандартом* для разработки неуправляемого кода). Эти сведения включают имена языков и региональных параметров, систему письма, используемый календарь, порядок сортировки строк и форматы дат и чисел.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo> Класс предоставляет сведения культуре, такие как язык, варианта языка, страны или региона, календаря и соглашения, связанные с определенной культуры. Этот класс также предоставляет доступ к экземплярам региональных <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, и <xref:System.Globalization.TextInfo> объектов. Эти объекты содержат сведения, необходимые для операций конкретного языка и региональных параметров, например регистр, форматирование дат и чисел и сравнения строк. <xref:System.Globalization.CultureInfo> Класс используется прямо или косвенно с помощью классов, форматирования и синтаксического анализа управления данные, зависящие от языка и региональных параметров, таких как <xref:System.String>, <xref:System.DateTime>, <xref:System.DateTimeOffset>и числовых типов.  
  
 Содержание  
  
 [Язык и региональные параметры имена и идентификаторы](#CultureNames)   
 [Неизменяемое, нейтральные и конкретные языки и региональные параметры](#Invariant)   
 [Пользовательские языки и региональные параметры](#Custom)   
 [Данные динамического языка и региональных параметров](#Dynamic)   
 [Текущий язык и региональные параметры текущего пользовательского интерфейса](#Current)   
 [Получение всех языков и региональных параметров](#GetAll)   
 [Язык и региональные параметры и потоков](#Threads)   
 [Язык и региональные параметры и приложения доменов](#AppDomain)   
 [Язык и региональные параметры и асинхронные операции на основе задач](#Async)   
 [Сериализация объекта CultureInfo](#Serialization)   
 [Переопределяет панели управления](#CPanel)   
 [Альтернативный порядок сортировки](#AlternateSort)   
 [Приложения Windows язык и региональные параметры](#Windows)  
  
<a name="CultureNames"></a>   
## <a name="culture-names-and-identifiers"></a>Язык и региональные параметры имена и идентификаторы  
 <xref:System.Globalization.CultureInfo> Класс задает уникальное имя для каждого языка и региональных параметров, в зависимости от RFC 4646. Имя представляет собой сочетание код ISO 639 двух букв нижнего регистра, языка и региональных параметров, связанных с языком и ISO 3166 прописные региона двухбуквенный код страны или региона. Кроме того, для приложений, предназначенных для [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] или более поздней версии и выполняются в Windows 10 или более поздней версии, языка и региональных параметров имена, которые соответствуют допустимым языка BCP-47 теги поддерживаются.  
  
> [!NOTE]
>  Имя языка и региональных параметров — при передаче в конструкторе класса или метода например <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> или <xref:System.Globalization.CultureInfo>, его регистр не имеет значения.  
  
 Недопустимый формат для языка и региональных параметров, именование по стандарту RFC 4646 *languagecode2*>-*код_страны_или_региона2*, где *languagecode2* языка двухбуквенный код и *код_страны_или_региона2* региона двухбуквенный код. Например, ja-JP японский (Япония) "и" en US для английского языка (США). В случаях, когда язык двухбуквенный код недоступен используется трехбуквенный код, производный от ISO 639-2.  
  
 Обратите внимание, что некоторые имена языка и региональных параметров также стандарту ISO 15924. Например Cyrl означает кириллицу и Latn указывает латинского алфавита. Имя языка и региональных параметров, которое содержит сценарий использует шаблон *languagecode2*-*scripttag*-*код_страны_или_региона2*. Примером этого типа имени языка и региональных параметров является uz-Cyrl-UZ для Узбекский (кириллица, Узбекистан). В операционных системах Windows до Windows Vista, имя языка и региональных параметров, которое содержит сценарий использует шаблон *languagecode2*-*код_страны_или_региона2* - * scripttag*, например uz-UZ-Cyrl для Узбекский (кириллица, Узбекистан).  
  
 Только двух букв нижнего регистра кодировку заданным нейтрального языка и региональных параметров. Например fr определяет нейтральный язык и региональные параметры для французского языка, а de определяет нейтральный язык и региональные параметры для немецкого языка.  
  
> [!NOTE]
>  Существуют два имени языка и региональных параметров, которые соответствуют этому правилу. Языки и региональные параметры с именем zh-Hans, китайский (упрощенное письмо) и китайский (традиционный), с именем zh-Hant, являются нейтральными. Имя языка и региональных параметров представляют текущий стандарт и должны использоваться, если у вас нет причин для использования более старые имена zh-CHS и zh-CHT.  
  
 Идентификатор языка и региональных параметров имеет стандартное международное числовое обозначение и компоненты, необходимые для уникальной идентификации одного из установленных языков и региональных параметров. Приложения можно использовать стандартные идентификаторы культуры или определить пользовательские идентификаторы.  
  
 Определенные стандартные имена языка и региональных параметров, и идентификаторы используются в этом и других классах <xref:System.Globalization?displayProperty=nameWithType> пространства имен. Язык и региональные параметры подробные сведения отображаются в [Справочник по API многоязыковой поддержки (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global.  
  
 Помните, что имена языка и региональных параметров и идентификаторы представляют только подмножества языков и региональных параметров, которые могут находиться на отдельном компьютере. Версии Windows или пакетах обновления можно изменить доступные языки и региональные параметры. Пользовательские языки и региональные параметры с помощью добавления приложений <xref:System.Globalization.CultureAndRegionInfoBuilder> класса. Пользователи добавлять свои собственные пользовательские языки и региональные параметры с помощью средства Microsoft Locale Builder. Microsoft Locale Builder записывается в управляемом коде с помощью `CultureAndRegionInfoBuilder` класса.  
  
 Некоторые особые имена тесно связаны с региональными параметрами, особенно имена, связанные со следующими членами класса:  
  
-   <xref:System.Globalization.CultureInfo.ToString%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CompareInfo.Name%2A?displayProperty=nameWithType>  
  
<a name="Invariant"></a>   
## <a name="invariant-neutral-and-specific-cultures"></a>Неизменяемое, нейтральные и конкретные языки и региональные параметры  
 Языки и региональные параметры делятся на группы по три набора: инвариантные, нейтральные и определенные языки и региональные параметры.  
  
 Инвариантный язык и региональные параметры без учета языка и региональных параметров. Приложение указывает инвариантный язык и региональные параметры по имени, используя пустую строку ("») или по его идентификатору. <xref:System.Globalization.CultureInfo.InvariantCulture%2A> Определяет экземпляр инвариантного языка и региональных параметров. Он связан с английским языком, но не с любой страны или региона. Он используется в практически любой метод `Globalization` пространство имен, которое требуется языка и региональных параметров.  
  
 Нейтральный язык и региональные параметры — это культура, связанный с языком, но не с страны или региона. Конкретная культура — язык и региональные параметры, связанные с языком и страны или региона. Например fr определяет нейтральное имя для французского языка и региональных параметров, а fr-FR это имя определенного языка и региональных параметров французский (Франция). Обратите внимание, что китайский (упрощенное письмо) и китайский (традиционный) также считаются нейтральные языки и региональные параметры.  
  
 Создание экземпляра <xref:System.Globalization.CompareInfo> класс для нейтрального языка и региональных параметров не рекомендуется из-за произвольных данных он содержит. Для отображения и сортировки данных, укажите язык и регион. Кроме того <xref:System.Globalization.CompareInfo.Name%2A> свойство <xref:System.Globalization.CompareInfo> объекта, созданного для нейтрального языка и региональных параметров, возвращает только «Страна» и не включает область.  
  
 Определенные языки и региональные параметры имеют иерархию, в котором нейтрального языка и региональных параметров является родительским для определенного языка и региональных параметров и инвариантный язык и региональные параметры является родительским для нейтрального языка и региональных параметров. <xref:System.Globalization.CultureInfo.Parent%2A> Свойство содержит нейтральный язык и региональные параметры, связанные с определенной культуры. Пользовательские языки и региональные параметры следует определить <xref:System.Globalization.CultureInfo.Parent%2A> свойства в соответствии с этим шаблоном.  
  
 Если ресурсы для конкретного языка и региональных параметров не доступны в операционной системе, используются ресурсы для связанного нейтрального языка и региональных параметров. Если недоступны ресурсы для нейтрального языка и региональных параметров, используются ресурсы, встроенные в основную сборку. Дополнительные сведения о процесс использования резервных ресурсов см. в разделе [упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
 Список языковых стандартов, в формате Windows API немного отличается от списка языков и региональных параметров, поддерживаемых платформой .NET Framework. Если требуется взаимодействие с Windows, например, через механизм p/invoke, приложение должно использовать конкретную культуру, которая определена для операционной системы. Использование определенного языка и региональных параметров обеспечивает согласование с эквивалентным языком Windows, который определяется идентификатором языкового стандарта, который совпадает со значением <xref:System.Globalization.CultureInfo.LCID%2A>.  
  
 Объект <xref:System.Globalization.DateTimeFormatInfo> или <xref:System.Globalization.NumberFormatInfo> можно создать только для инвариантного языка и региональных параметров или для конкретных языков и региональных параметров, но не для нейтральной культуры.  
  
 Если <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> — <xref:System.Globalization.TaiwanCalendar> , но <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> не равно zh-TW, затем <xref:System.Globalization.DateTimeFormatInfo.NativeCalendarName%2A?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A?displayProperty=nameWithType>, и <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A?displayProperty=nameWithType> возвращается пустая строка (»»).  
  
<a name="Custom"></a>   
## <a name="custom-cultures"></a>Пользовательские языки и региональные параметры  
 Помимо стандартных языков и региональных параметров, поддерживаемых операционной системы Windows и .NET Framework платформа .NET Framework поддерживает три типа пользовательские языки и региональные параметры:  
  
-   Новые языки и региональные параметры иллюстрируются культуры в Windows или .NET Framework. Например, приложение может установить <xref:System.Globalization.CultureInfo> объект, представляющий fj-FJ (или Fijan (Камчатка)) язык и региональные параметры в системе.  
  
-   Языки и региональные параметры замены, свойства которого отличаются от свойств стандартных языков и региональных параметров, поддерживаемых Windows и .NET Framework.  
  
-   Переопределяет стандартные языки и региональные параметры с пользователем. Пользователь может использовать **язык и региональные стандарты** в **панели управления** для настройки значений свойств существующего языка и региональных параметров.  
  
> [!NOTE]
>  Можно использовать <xref:System.Globalization.CultureAndRegionInfoBuilder> класса для определения, сохранить и зарегистрировать пользовательские языки и региональные параметры, либо дополнить или заменить существующие языков и региональных параметров. <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A?displayProperty=nameWithType> Метод создает файл языка разметки данных языкового стандарта (LDML), который можно использовать для установки пользовательского языка и региональных параметров на целевых системах. Шаг с шага сведения об использовании <xref:System.Globalization.CultureAndRegionInfoBuilder> класса для создания нового или замены языка и региональных параметров, в разделе <xref:System.Globalization.CultureAndRegionInfoBuilder> разделе, посвященном классу.  
  
 Так как платформа .NET Framework поддерживает пользовательские языки и региональные параметры, при работе с данными для определенного языка и региональных параметров необходимо учитывать следующее:  
  
-   Пользовательские языки и региональные параметры могут иметь значения, выходить за границы стандартных языков и региональных параметров. Например некоторые языки и региональные параметры имеют слишком длинные названия месяцев, неправильные даты или форматов времени или другие нестандартные данные.  
  
-   При просмотре данных, зависящего от языка и региональных параметров пользовательского интерфейса должны учитывать настройки пользователя; например пользователь может потребоваться 24-часовом формате или в формате ГГГГММДД даты.  
  
-   Помните, что пользовательские языки и региональные параметры переопределяют значения по умолчанию. Таким образом нельзя считать данные языка и региональных параметров для stable. Названия стран, форматы чисел и дат и написание может измениться в будущем. Если необходимо сериализовать данные, зависящие от языка и региональных параметров как строки даты и времени должны быть переданы даты и времени, синтаксический анализ функции, следует использовать инвариантный язык и региональные параметры или конкретного.  
  
 <xref:System.Globalization.CultureInfo.CultureTypes%2A> Включает значение свойства пользовательских языков и региональных параметров, установленную в системе <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> назначаются флаг и пользовательские языки и региональные параметры <xref:System.Globalization.CultureInfo.LCID%2A> значение свойства `LOCALE_CUSTOM_UNSPECIFIED` (0x1000 или 4096). Обратите внимание, что, начиная с Windows 10, это значение также назначается системные языков, в которых отсутствуют полные данные, культуры.  
  
<a name="Dynamic"></a>   
## <a name="dynamic-culture-data"></a>Данные динамического языка и региональных параметров  
 За исключением инвариантного языка и региональных параметров язык и региональные параметры данных является динамическим. Это справедливо даже для предварительно определенных языков и региональных параметров. Например стран или регионов ввести новые валюты, изменить написание слов или изменить свой основной календарь и изменять определения языка и региональных параметров для отслеживания этого.  Пользовательские языки и региональные параметры могут быть изменены без предварительного уведомления и любого конкретного языка и региональных параметров может быть переопределено пользовательских замещающая культура. Кроме того как описано ниже, отдельный пользователь может изменить региональные параметры. Приложения всегда должны получать данные с языком и региональными параметрами, во время выполнения.  
  
> [!CAUTION]
>  При сохранении данных, приложение должно использовать инвариантный язык и региональные параметры, двоичный формат или определенный формат зависящий от языка и региональных параметров. Данные, сохраненные в соответствии с текущими значениями, связанными с определенного языка и региональных параметров, отличающихся от инвариантных, могут стать нечитаемыми или приобрести другой смысл при изменении этого языка и региональных параметров.  
  
<a name="Current"></a>   
## <a name="the-current-culture-and-current-ui-culture"></a>Текущий язык и региональные параметры текущего пользовательского интерфейса  
 Каждый поток в приложении .NET Framework имеет текущего языка и региональных параметров и текущий язык и региональные параметры пользовательского интерфейса. Текущий язык и региональные параметры определяет правила форматирования для дат, времени, числа и значения валюты, порядок сортировки текста, правила регистра и способы сравнения строк. Текущий язык и региональные параметры пользовательского интерфейса используется для извлечения ресурсов во время выполнения, связанных с языком и региональными параметрами.  
  
> [!NOTE]
>  Сведения об определении текущей и текущей культуры пользовательского интерфейса отдельно для каждого потока см. в разделе [языка и региональных параметров и потоки](#Threads) раздела. Сведения об определении текущей и текущей культуры пользовательского интерфейса в потоках, выполняемых в новый домен приложения и в потоках, пересекающих границы домена приложения, см. [языка и региональных параметров и домены приложений](#AppDomain) раздела. Сведения об определении текущей и текущего в потоках выполнения асинхронных операций на основе задач см. в разделе [язык и региональные параметры и асинхронные операции на основе задач](#Async) раздела.  
  
 Более подробные сведения о текущих региональных параметров см. в разделе <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойства раздела. Более подробные сведения о текущих региональных параметров пользовательского интерфейса см. в разделе <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойства раздела.  
  
### <a name="retrieving-the-current-and-current-ui-cultures"></a>Получение региональных параметров пользовательского интерфейса текущего и текущей  
 Вы можете получить <xref:System.Globalization.CultureInfo> , представляющий текущий язык и региональные параметры одним из двух способов:  
  
-   Путем получения значения из <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство.  
  
-   Путем получения значения из [Thread.CurrentThread.CurrentCulture](<xref:System.Threading.Thread.CurrentCulture>) свойство.  
  
 Следующий пример извлекает оба значения свойств, сравниваются, чтобы показать, что они равны и отображает имя текущего языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Current1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Current1.vb#1)]  
  
 Вы можете получить <xref:System.Globalization.CultureInfo> , представляющий текущий язык и региональные параметры пользовательского интерфейса в одним из двух способов:  
  
-   Путем получения значения из <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство.  
  
-   Путем получения значения из [Thread.CurrentThread.CurrentUICulture](<xref:System.Threading.Thread.CurrentUICulture>) свойство.  
  
 Следующий пример извлекает оба значения свойств, сравниваются, чтобы показать, что они равны и отображает имя текущего языка и региональных параметров пользовательского интерфейса.  
  
 [!code-csharp[System.Globalization.CultureInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/CurrentUI1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/CurrentUI1.vb#2)]  
  
### <a name="setting-the-current-and-current-ui-cultures"></a>Настройка региональных параметров пользовательского интерфейса текущего и текущей  
 Чтобы изменить язык и региональные параметры пользовательского интерфейса потока, выполните следующие действия.  
  
1.  Создать экземпляр <xref:System.Globalization.CultureInfo> объект, представляющий этот язык, вызвав <xref:System.Globalization.CultureInfo> класса конструктор и передает имя языка и региональных параметров. <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> Конструктор создает <xref:System.Globalization.CultureInfo> , отражающий пользователя переопределяет при нового языка и региональных параметров совпадает со значением текущего языка и региональных параметров Windows.   <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> Конструктор позволяет указать, является ли вновь созданный экземпляр <xref:System.Globalization.CultureInfo> отражает объект пользователя переопределяет при нового языка и региональных параметров совпадает со значением текущего языка и региональных параметров Windows.  
  
2.  Назначьте <xref:System.Globalization.CultureInfo> объект <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> или <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойства. Кроме того, для приложений, работающих в версии 4.6 или более поздней версии рабочего стола .NET Framework, можно также назначить <xref:System.Globalization.CultureInfo> объект <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> или <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойства.  
  
 В следующем примере извлекается текущего языка и региональных параметров. Если ничего, кроме французский (Франция) языка и региональных параметров, он изменяет текущий язык и региональные параметры на французский (Франция). В противном случае он изменяет текущий язык и региональные параметры на французский (Люксембург).  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 В следующем примере извлекается текущего языка и региональных параметров. Если что-либо других словенский (Словения) язык и региональные параметры, она примет словенский (Словения) текущего языка и региональных параметров. В противном случае он изменяет на Хорватский (Хорватия) текущего языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/ChangeUI1.cs#4)]
 [!code-vb[System.Globalization.CultureInfo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/ChangeUI1.vb#4)]  
  
<a name="GetAll"></a>   
## <a name="getting-all-cultures"></a>Получение всех языков и региональных параметров  
 Массив определенных языков и региональных параметров или для всех языков, доступных на локальном компьютере можно получить, вызвав <xref:System.Globalization.CultureInfo.GetCultures%2A> метод. Например можно получить пользовательские языки и региональные параметры, определенные культуры или нейтральные отдельно или в сочетании.  
  
 В следующем примере вызывается <xref:System.Globalization.CultureInfo.GetCultures%2A> метод дважды, один со <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> член перечисления, чтобы получить все пользовательские языки и региональные параметры, а затем и в <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> член перечисления для получения всех языков и региональных параметров замены.  
  
 [!code-csharp[System.Globalization.CultureInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/GetCultures1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/GetCultures1.vb#5)]  
  
<a name="Threads"></a>   
## <a name="culture-and-threads"></a>Язык и региональные параметры и потоков  
 При запуске нового потока приложения, его текущего языка и региональных параметров и текущий язык и региональные параметры пользовательского интерфейса определяются с текущей культурой, а не языка и региональных параметров текущего потока. В следующем примере демонстрируется это различие. Французский (Франция), язык и региональные параметры (fr-FR) устанавливается текущий язык и региональные параметры текущего пользовательского интерфейса потока приложения. Если текущий язык и региональные параметры fr-FR, в примере задается английский (США), язык и региональные параметры (en US). Он отображает три случайных чисел как денежных значений, а затем создает новый поток, который в свою очередь, отображает три более случайных чисел как денежных значений. Но в качестве выходных данных в примере значения валюты, отображаемые в новом потоке не отражают соглашения о форматировании французский (Франция) языка и региональных параметров, в отличие от выходные данные из основного потока приложения.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/defaultthread1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/defaultthread1.vb#1)]  
  
 В версиях .NET Framework перед [!INCLUDE[net_v45](~/includes/net-v45-md.md)], наиболее распространенный способ убедитесь в совпадении того же языка и региональных параметров для основного потока приложения с все рабочие потоки — для передачи имени языка и региональных параметров приложения. или <xref:System.Globalization.CultureInfo> объекта, представляет язык и региональные параметры приложения. Чтобы <xref:System.Threading.ParameterizedThreadStart?displayProperty=nameWithType> делегата. Следующий пример использует этот подход, чтобы убедиться, что значения валюты с двумя потоками отражают соглашения о форматировании того же языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/perthread1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/perthread1.vb#2)]  
  
 Можно установить язык и региональные параметры пользовательского интерфейса потока из пула потоков так же, как путем вызова <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> метод.  
  
 Начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)], можно задать язык и региональные параметры пользовательского интерфейса всех потоков в домене приложения напрямую путем назначения <xref:System.Globalization.CultureInfo> объект, представляющий этот язык для <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства. В следующем примере эти свойства убедитесь, что все потоки в домене приложения по умолчанию общих же языком и региональными параметрами.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/setthreads1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/setthreads1.vb#3)]  
  
> [!WARNING]
>  Несмотря на то что <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства являются статическими членами, они определяют по умолчанию язык и региональные параметры по умолчанию пользовательского интерфейса только для домена приложения, которая является текущей во время этих свойств устанавливаются значения. Дополнительные сведения см. следующий раздел, [языка и региональных параметров и домены приложений](#AppDomain).  
  
 При назначении значения для <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства, язык и региональные параметры пользовательского интерфейса потоков в домене приложения также изменить, если они не явно назначены языка и региональных параметров. Однако эти потоки отражают новые параметры языка и региональных параметров, пока они выполняются в текущем домене приложения. Если эти потоки выполняются в другом домене приложения, их язык и региональные параметры становится по умолчанию язык и региональные параметры, определенные для этого домена приложения. Поэтому мы рекомендуем всегда значение языка и региональных параметров из основного потока приложения и не полагаться на <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства, чтобы изменить его.  
  
<a name="AppDomain"></a>   
## <a name="culture-and-application-domains"></a>Язык и региональные параметры и приложения доменов  
 <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> являются статические свойства, которые явно определить язык и региональные параметры по умолчанию только для домена приложения, которая является текущей, при установке или получить значение свойства. Следующий пример задает по умолчанию язык и региональные параметры по умолчанию пользовательского интерфейса в домене приложения по умолчанию на французский (Франция), а затем использует <xref:System.AppDomainSetup> класса и <xref:System.AppDomainInitializer> делегат для установки по умолчанию язык и региональные параметры пользовательского интерфейса в новый домен приложения для Русский (Россия). Затем один поток выполняет два метода в каждом домене приложения. Обратите внимание, что язык и региональные параметры и язык и региональные параметры пользовательского интерфейса потока не заданы явным образом; они являются производными от языка и региональных параметров по умолчанию и языка и региональных параметров пользовательского интерфейса, домена приложения, в котором выполняется поток. Обратите внимание, что <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства возвращают значение по умолчанию <xref:System.Globalization.CultureInfo> значения домена приложения, которая является текущей, при вызове метода.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/cs/appdomainex1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/vb/appdomainex1.vb#1)]  
  
 Дополнительные сведения о языках и региональных параметрах и доменах приложений см. в разделе «Домены приложения и потоки» в разделе.  
  
<a name="Async"></a>   
## <a name="culture-and-task-based-asynchronous-operations"></a>Язык и региональные параметры и асинхронные операции на основе задач  
 [Асинхронного программирования модель на основе задач](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md) использует <xref:System.Threading.Tasks.Task> и <xref:System.Threading.Tasks.Task%601> объекты для асинхронного выполнения делегаты на поток из пула потоков. Определенного потока, на котором выполняется конкретной задачи не известна заранее, но определяется только во время выполнения.  
  
 Для приложений, предназначенных для [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздние версии, языка и региональных параметров является частью контекста асинхронной операции. Другими словами, начиная с приложений, ориентированных на [!INCLUDE[net_v46](~/includes/net-v46-md.md)], асинхронные операции по умолчанию наследует значения <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства потока, откуда они запускаются. Если для текущего языка и региональных параметров или текущего языка и региональных параметров пользовательского интерфейса, отличается от языка и региональных параметров системы, текущего языка и региональных параметров пересекает границы потоков и становится текущий язык и региональные параметры пула потоков, которая выполняет асинхронную операцию.  
  
 Следующий пример иллюстрирует это. Она использует <xref:System.Runtime.Versioning.TargetFrameworkAttribute> атрибута целевой объект [!INCLUDE[net_v46](~/includes/net-v46-md.md)]. В примере определяется <xref:System.Func%601> делегировать, `formatDelegate`, который возвращает некоторые числа в виде значения валюты. В примере изменяется текущий язык и региональные параметры системы на французский (Франция) или, если французский (Франция) уже текущими региональными параметрами, а английский (США). И она затем:  
  
-   Напрямую вызывает делегат, выполняется синхронно в потоке основным приложением.  
  
-   Создает задачу, которая выполняет делегат асинхронно в потоке пула потоков.  
  
-   Создает задачу, которая синхронно выполняет делегат в потоке основным приложением путем вызова <xref:System.Threading.Tasks.Task.RunSynchronously%2A?displayProperty=nameWithType> метод.  
  
 Как показывают выходные данные примера, при изменении текущего языка и региональных параметров на французский (Франция), текущий язык и региональные параметры потока, из которого асинхронно вызываются задачи становится текущий язык и региональные параметры для этой асинхронной операции.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture1.vb#1)]  
  
 Для приложений, предназначенных для версий платформы .NET Framework до версии [!INCLUDE[net_v46](~/includes/net-v46-md.md)], или для приложений, не предназначенных для конкретной версии платформы .NET Framework, язык и региональные параметры вызывающего потока не является частью контекста задачи. Вместо этого если он задан явно, язык и региональные параметры новых потоков по умолчанию является культуру системы. В следующем примере идентичен предыдущему примеру, за исключением того, что он не имеет <xref:System.Runtime.Versioning.TargetFrameworkAttribute> атрибут, это показано. Язык и региональные параметры системы системы, на котором выполняется пример использовался английский (США), язык и региональные параметры задачи, которая выполняется асинхронно в потоке пула потоков является en US, а не fr-FR.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture2.vb#2)]  
  
 Для приложений, предназначенных для версий платформы .NET Framework из [!INCLUDE[net_v45](~/includes/net-v45-md.md)] и более поздней версии, но до появления [!INCLUDE[net_v46](~/includes/net-v46-md.md)], можно использовать <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства и убедитесь, что язык и региональные параметры вызывающего потока используется в асинхронной задачи, выполните в потоках из пула потоков. Следующий пример идентичен предыдущему примеру, за исключением того, что он использует <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> языка и региональных параметров, как основного потока приложения имеют свойства, чтобы этот поток из пула потоков.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture3.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture3.vb#3)]  
  
 <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> на приложения, являются свойствами домена; то есть, они определяют культуру по умолчанию для всех потоков не были явно назначить культуру в конкретном домене приложения. Однако для приложений, предназначенных для [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздней версии, языка и региональных параметров вызывающего потока остается частью контекста асинхронной задачи, даже если задача пересекает границы домена приложения.  
  
 В следующем примере показано, что язык и региональные параметры вызывающего потока остается текущего языка и региональных параметров асинхронной операции на основе задач, даже если метод, который выполняется задача пересекает границы домена приложения. Определяет класс, `DataRetriever`, с одним методом `GetFormattedNumber`, который возвращает случайное число с плавающей запятой двойной точности от 1 до 1000, в формате денежной суммы. Первая задача выполняется, просто создает экземпляр `DataRetriever` экземпляра и вызывает его `GetFormattedNumber` метод. Вторая задача сообщает свой текущий домен приложения, создает новый домен приложения, создает `DataRetriever` экземпляра в новый домен приложения и вызывает его `GetFormattedNumber` метод. Как показывают выходные данные примера, текущий язык и региональные параметры осталась в вызывающий поток, первая задача и вторая задача обоих совпадают, при его выполнении в домене основного приложения и второй домен приложения.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture4.cs#4)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture4.vb#4)]  
  
<a name="Serialization"></a>   
## <a name="cultureinfo-object-serialization"></a>Сериализация объекта CultureInfo  
 Когда <xref:System.Globalization.CultureInfo> сериализации объекта, все, что фактически хранятся — <xref:System.Globalization.CultureInfo.Name%2A> и <xref:System.Globalization.CultureInfo.UseUserOverride%2A>. Это успешно отменяется сериализованный только в среде которой, <xref:System.Globalization.CultureInfo.Name%2A> имеет такое же значение. В следующих трех примерах показано, почему это не всегда так:  
  
-   Если <xref:System.Globalization.CultureInfo.CultureTypes%2A> значение свойства <xref:System.Globalization.CultureTypes?displayProperty=nameWithType>, и если этот язык и региональные параметры впервые появилась в Windows Vista или более поздней версии операционной системы Windows, это невозможно выполнить десериализацию его в Windows XP. Аналогично Если язык и региональные параметры, появившийся в Windows XP с пакетом обновления 2, не невозможно десериализовать его для системы Windows XP, на котором не установлен язык и региональные параметры.  
  
-   Если <xref:System.Globalization.CultureInfo.CultureTypes%2A> значение <xref:System.Globalization.CultureTypes?displayProperty=nameWithType>и компьютер, на котором десериализацию не имеет этого пользователя пользовательский язык и региональные параметры установлены, невозможно выполнить десериализацию его.  
  
-   Если <xref:System.Globalization.CultureInfo.CultureTypes%2A> значение <xref:System.Globalization.CultureTypes?displayProperty=nameWithType>и компьютер, на котором десериализацию имеет это замещающая культура, десериализуются тем же именем, но не все те же характеристики. Например если замещающая культура на компьютере A, но не на компьютере B en US, а <xref:System.Globalization.CultureInfo> объект ссылается на этот язык и региональные параметры на компьютере A и на компьютере B, а затем нет пользовательские характеристики языка и региональных параметров передачи. Культура десериализуются успешно, но с другим значением.  
  
<a name="CPanel"></a>   
## <a name="control-panel-overrides"></a>Переопределяет панели управления  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем язык и региональные параметры в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, используемый по умолчанию для региональных параметров. Как правило в приложениях должны учитываться эти переопределенные пользователем параметры.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущей культурой Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
<a name="AlternateSort"></a>   
## <a name="alternate-sort-orders"></a>Альтернативный порядок сортировки  
 Некоторые культуры поддерживают несколько порядков сортировки. Пример:  
  
-   Испанский (Испания) языка и региональных параметров есть два порядка сортировки: по умолчанию международный порядок сортировки и традиционный порядок сортировки. При создании экземпляра <xref:System.Globalization.CultureInfo> объекта с именем язык и региональные параметры es-ES, используется международный порядок сортировки. При создании экземпляра <xref:System.Globalization.CultureInfo> объекта с именем язык и региональные параметры es-ES-tradnl используется традиционный порядок сортировки.  
  
-   Языка и региональных параметров zh-CN (китайский (упрощенное письмо, КНР)) поддерживает два порядка сортировки: по произношению (по умолчанию) и по числу штрихов. При создании экземпляра <xref:System.Globalization.CultureInfo> объекта с именем языка и региональных параметров zh-CN, используется порядок сортировки по умолчанию. При создании экземпляра <xref:System.Globalization.CultureInfo> объекта с локальным идентификатором 0x00020804, строки сортируются по числу штрихов.  
  
 В следующей таблице перечислены языки и региональные параметры, которые поддерживают альтернативный порядок сортировки и идентификаторы для по умолчанию и альтернативные порядки сортировки.  
  
|Имя языка и региональных параметров|culture|Имя сортировки по умолчанию и идентификатор|Альтернативного имени сортировки и идентификатор|  
|------------------|-------------|--------------------------------------|----------------------------------------|  
|es-ES|Испанский (Испания)|Международная: 0x00000C0A|Традиционные: 0x0000040A|  
|zh-TW|Китайский (Тайвань)|Количество штрихов: 0x00000404|Bopomofo: 0x00030404|  
|zh-CN|Китайский (КНР)|Произношение: 0x00000804|Количество штрихов: 0x00020804|  
|zh-HK|Китайский (Гонконг)|Количество штрихов: 0x00000c04|Количество штрихов: 0x00020c04|  
|zh-SG|Китайский (Сингапур)|Произношение: 0x00001004|Количество штрихов: 0x00021004|  
|zh-MO|Китайский (МАКАО)|Произношение: 0x00001404|Количество штрихов: 0x00021404|  
|ja-JP|Японский (Япония)|По умолчанию: 0x00000411|Юникод: 0x00010411|  
|ko-KR|Корейский (Корея)|По умолчанию: 0x00000412|Корейский Xwansung - Юникод: 0x00010412|  
|de-DE|Немецкий (Германия)|Словарь: 0x00000407|Сортировка телефонной книги ТЕЛЕФОННОЙ: 0x00010407|  
|hu-HU|Венгерский (Венгрия)|По умолчанию: 0x0000040e|Техническая сортировка: 0x0001040e|  
|Ka GE|Грузинский (Грузия)|Традиционные: 0x00000437|Современная сортировка: 0x00010437|  
  
<a name="Windows"></a>   
## <a name="the-current-culture-and-uwp-apps"></a>Текущий язык и региональные параметры и приложений UWP  
 В приложениях универсальной платформы Windows (UWP) <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства доступны для чтения записи, так же как в приложениях .NET Framework и .NET Core. Однако приложения UWP распознать одного языка и региональных параметров. <xref:System.Globalization.CultureInfo.CurrentCulture%2A> И <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства карты первое значение в [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) коллекции.  

В приложениях .NET Framework и .NET Core текущего языка и региональных параметров является параметром по потокам и <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства отражают язык и региональные параметры пользовательского интерфейса только для текущего потока. В приложениях UWP текущего языка и региональных параметров сопоставляется [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) коллекции, который является глобальным параметром. Установка <xref:System.Globalization.CultureInfo.CurrentCulture%2A> или <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство изменяет язык и региональные параметры для всего приложения; язык и региональные параметры нельзя задать для каждого потока.
  
## Examples  
 В следующем примере показано, как создать <xref:System.Globalization.CultureInfo> объекта испанский (Испания) с международным порядком сортировки, а вторая <xref:System.Globalization.CultureInfo> объект с традиционным порядком сортировки.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
    <altmember cref="T:System.Globalization.RegionInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">Предварительно определенный идентификатор <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.LCID" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или идентификатор языка и региональных параметров, свойственных только Windows.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных идентификатором.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Стандартные идентификаторы культуры перечислены в [Справочник по API многоязыковой поддержки (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global.  
  
 В большинстве случаев `culture` параметр сопоставляется соответствующий идентификатор языка многоязыковой поддержки (NLS). Значение `culture` параметр становится значением <xref:System.Globalization.CultureInfo.LCID%2A> нового <xref:System.Globalization.CultureInfo>.  
  
 Рекомендуется вызывать конструктор имя языкового стандарта <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, так как имени языкового стандарта предпочтительнее LCID. Пользовательские языковые стандарты имя языкового стандарта не требуется.  
  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем язык и региональные параметры в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, используемый по умолчанию для региональных параметров. Если заданный идентификатор культуры совпадает с идентификатором текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий такие переопределения, включая пользовательские параметры для свойств <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo> (например, в том случае, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>) результаты методов и значения свойств не определены.  
  
 Если заданный идентификатор культуры не совпадает с идентификатором текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий значения по умолчанию для указанного языка и региональных параметров.  
  
 <xref:System.Globalization.CultureInfo.UseUserOverride%2A> Свойство всегда имеет значение `true`.  
  
 Например предположим, что текущего языка и региональных параметров Windows — Арабский (Саудовская Аравия) и пользователь заменил исламский календарь для григорианского календаря.  
  
-   С `CultureInfo("0x0401")` (язык и региональные параметры имя ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.GregorianCalendar> (что является параметром пользователя) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `true`.  
  
-   С `CultureInfo("0x041E")` (язык и региональные параметры имя th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th й) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `true`.  
  
 Для языков и региональных параметров с использованием евро, .NET Framework и Windows XP валюты по умолчанию устанавливается как евро. Тем не менее — нет более ранних версий Windows. Таким образом Если пользователь более старой версии Windows не изменилось на валюту путем язык и региональные параметры в панели управления, валюта могут оказаться неверными. Чтобы использовать значение по умолчанию .NET Framework для валюты, приложение должно использовать <xref:System.Globalization.CultureInfo> перегрузку конструктора, который принимает `useUserOverride` параметр и присвойте ему значение `false`.  
  
> [!NOTE]
>  Для обратной совместимости, язык и региональные параметры создаются с использованием `culture` параметр идентификаторами 0x0004 и 0x7c04 будет иметь <xref:System.Globalization.CultureInfo.Name%2A> свойство zh-CHS и zh-CHT, соответственно. Вместо этого лучше создать язык и региональные параметры, используя текущие имена стандартных языка и региональных параметров zh-Hans и zh-Hant, если нет причин для использования прежних имен.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="culture" /> меньше нуля.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="culture" /> не является допустимым идентификатором языка и региональных параметров. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage">
          <para>[! INCLUDE[net_v35_long](~/includes/NET-v35-Long-MD.MD)] и более ранних версиях исключение <see cref="T:System.ArgumentException" /> Если <paramref name="culture" /> не является допустимым идентификатором культуры. Начиная с [! Этот конструктор создает include[net_v40_long](~/includes/NET-v40-Long-MD.MD)] <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые работают под [! INCLUDE[net_v40_long](~/includes/NET-v40-Long-MD.MD)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="culture" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры , метод создает <see cref="T:System.Globalization.CultureNotFoundException" /> исключение.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Предварительно определенное имя <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.Name" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или имя языка и региональных параметров, свойственных только Windows. <c>name</c> обрабатывается без учета регистра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных именем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных названий языков см. в разделе [Справочник по API многоязыковой поддержки (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10 `name` может быть любой допустимый тега языка BCP-47.  
  
 Если `name` — <xref:System.String.Empty?displayProperty=nameWithType>, конструктор создает экземпляр инвариантного языка и региональных параметров; это значение эквивалентно значению получение значения <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство.  
  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем язык и региональные параметры в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, используемый по умолчанию для региональных параметров. Если идентификатор языка и региональных параметров, связанные с `name` совпадений, идентификатор языка и региональных параметров текущего языка и региональных параметров Windows, то этот конструктор создает <xref:System.Globalization.CultureInfo> объект, который использует эти переопределения, включая пользовательские параметры для свойств <xref:System.Globalization.DateTimeFormatInfo>экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 Если идентификатор языка и региональных параметров, связанные с `name` не соответствует идентификатор языка и региональных параметров текущего языка и региональных параметров Windows, то этот конструктор создает <xref:System.Globalization.CultureInfo> объект, который использует значения по умолчанию для указанной культуры.  
  
 <xref:System.Globalization.CultureInfo.UseUserOverride%2A> Свойство всегда имеет значение `true`.  
  
 Например предположим, что арабский (Саудовская Аравия) текущего языка и региональных параметров Windows и пользователь заменяли календарь хиджра для григорианского календаря.  
  
-   С `CultureInfo("ar-SA")`, <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.GregorianCalendar> (что является параметром пользователя) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `true`.  
  
-   С `CultureInfo("th-TH")`, <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th й) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `true`.  
  
 <xref:System.Globalization.CultureInfo.LCID%2A> Нового <xref:System.Globalization.CultureInfo> присваивается идентификатор языка и региональных параметров, связанный с указанным именем.  
  
 Для языков и региональных параметров с использованием евро, .NET Framework и Windows XP валюты по умолчанию устанавливается как евро. Однако старые версии Windows не будет. Таким образом Если пользователь более старой версии Windows не изменилось на валюту путем язык и региональные параметры в панели управления, валюта могут оказаться неверными. Чтобы использовать значение по умолчанию .NET Framework для валюты, приложение должно использовать <xref:System.Globalization.CultureInfo> перегрузку конструктора, который принимает `useUserOverride` параметр и присвойте ему значение `false`.  
  
   
  
## Examples  
 В следующем примере извлекается текущего языка и региональных параметров. Если это отличное от французский (Франция) языка и региональных параметров, он вызывает <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> конструктора для создания <xref:System.Globalization.CultureInfo> объекта, который представляет французский (Франция) языка и региональных параметров и делает ее текущей культурой потока. В противном случае он создает <xref:System.Globalization.CultureInfo> объект, представляющий региональные параметры, французский (Люксембург) и делает его текущего языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="name" /> не является допустимым именем культуры. Дополнительные сведения см. в разделе "Примечания к вызывающим объектам".</exception>
        <block subset="none" type="usage">
          <para>[! INCLUDE[net_v35_long](~/includes/NET-v35-Long-MD.MD)] и более ранних версиях исключение <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> не является допустимым именем культуры. Начиная с [! Этот конструктор создает include[net_v40_long](~/includes/NET-v40-Long-MD.MD)] <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые работают под [! INCLUDE[net_v40_long](~/includes/NET-v40-Long-MD.MD)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="name" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры Если <paramref name="name" /> не является именем дополнительных или замены языка и региональных параметров, то метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" /> исключение.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture, bool useUserOverride);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
        <Parameter Name="useUserOverride" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="culture">Предварительно определенный идентификатор <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.LCID" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или идентификатор языка и региональных параметров, свойственных только Windows.</param>
        <param name="useUserOverride">Логическое значение, определяющее применение параметров языка и региональных параметров, заданных пользователем (<see langword="true" />) или используемых по умолчанию (<see langword="false" />).</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных идентификатором, и логического значения, указывающего, нужно ли использовать выбранные пользователем параметры языка и региональных параметров в операционной системе.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Стандартные идентификаторы культуры перечислены в [Справочник по API многоязыковой поддержки (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global.  
  
 В большинстве случаев `culture` параметр сопоставляется соответствующий идентификатор языка многоязыковой поддержки (NLS). Значение `culture` параметр становится значением <xref:System.Globalization.CultureInfo.LCID%2A> нового <xref:System.Globalization.CultureInfo>.  
  
 Рекомендуется вызывать конструктор имя языкового стандарта <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, так как имени языкового стандарта предпочтительнее LCID. Пользовательские языковые стандарты имя языкового стандарта не требуется.  
  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем язык и региональные параметры в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, используемый по умолчанию для региональных параметров.  
  
 Приложения обычно должны разрешать переопределение пользователем. Обратите внимание, что запрещение переопределения не гарантирует стабильность данных; см. в записи блога [данных языка и региональных параметров не следует считать устойчивым (за исключением инвариантный)](http://go.microsoft.com/fwlink/?LinkId=156850).  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> свойству `true` и идентификатор указанного языка и региональных параметров совпадает с идентификатором текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий такие переопределения, включая пользовательские параметры для свойств из <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 В противном случае этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий значения по умолчанию для указанного языка и региональных параметров.  
  
 Значение `useUserOverride` параметр принимает значение <xref:System.Globalization.CultureInfo.UseUserOverride%2A> свойства.  
  
 Например предположим, что арабский (Саудовская Аравия) — текущего языка и региональных параметров Windows и пользователь заменил исламский календарь для григорианского календаря.  
  
-   С `CultureInfo("0x0401", true)` (язык и региональные параметры имя ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.GregorianCalendar> (что является параметром пользователя) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `true`.  
  
-   С `CultureInfo("0x0401", false)` (язык и региональные параметры имя ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.HijriCalendar> (то есть календарь по умолчанию для ar-SA) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `false`.  
  
-   С `CultureInfo("0x041E", true)` (язык и региональные параметры имя th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th й) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `true`.  
  
-   С `CultureInfo("0x041E", false)` (язык и региональные параметры имя th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th й) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `false`.  
  
 Для языков и региональных параметров с использованием евро, .NET Framework и Windows XP валюты по умолчанию устанавливается как евро. Тем не менее — нет более ранних версий Windows. Таким образом Если пользователь более старой версии Windows не изменилось на валюту путем язык и региональные параметры в панели управления, валюта могут оказаться неверными. Чтобы использовать значение по умолчанию .NET Framework для валюты, приложение должно задать `useUserOverride` параметр `false`.  
  
> [!NOTE]
>  Для обратной совместимости, язык и региональные параметры создаются с использованием `culture` параметр идентификаторами 0x0004 и 0x7c04 будет иметь <xref:System.Globalization.CultureInfo.Name%2A> свойство zh-CHS и zh-CHT, соответственно. Вместо этого лучше создать язык и региональные параметры, используя текущие имена стандартных языка и региональных параметров zh-Hans и zh-Hant, если нет причин для использования прежних имен.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="culture" /> меньше нуля.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="culture" /> не является допустимым идентификатором языка и региональных параметров. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage">
          <para>[! INCLUDE[net_v35_long](~/includes/NET-v35-Long-MD.MD)] и более ранних версиях исключение <see cref="T:System.ArgumentException" /> Если <paramref name="culture" /> не является допустимым идентификатором культуры. Начиная с [! Этот конструктор создает include[net_v40_long](~/includes/NET-v40-Long-MD.MD)] <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые работают под [! INCLUDE[net_v40_long](~/includes/NET-v40-Long-MD.MD)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="culture" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры , метод создает <see cref="T:System.Globalization.CultureNotFoundException" /> исключение.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name, bool useUserOverride);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="useUserOverride" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Предварительно определенное имя <see cref="T:System.Globalization.CultureInfo" />, свойство <see cref="P:System.Globalization.CultureInfo.Name" /> существующего объекта <see cref="T:System.Globalization.CultureInfo" /> или имя языка и региональных параметров, свойственных только Windows. <c>name</c> обрабатывается без учета регистра.</param>
        <param name="useUserOverride">Логическое значение, определяющее применение параметров языка и региональных параметров, заданных пользователем (<see langword="true" />) или используемых по умолчанию (<see langword="false" />).</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Globalization.CultureInfo" /> на основе языка и региональных параметров, заданных именем, и логического значения, указывающего, нужно ли использовать выбранные пользователем параметры языка и региональных параметров в операционной системе.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных названий языков см. в разделе [Справочник по API многоязыковой поддержки (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10 `name` может быть любой допустимый тега языка BCP-47.  
  
 Если `name` — <xref:System.String.Empty?displayProperty=nameWithType>, конструктор создает экземпляр инвариантного языка и региональных параметров; это значение эквивалентно значению получение значения <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство.  
  
 Пользователю можно переопределить некоторые значения, связанные с текущей культурой Windows путем язык и региональные параметры в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, используемый по умолчанию для региональных параметров.  
  
 Приложения обычно должны разрешать переопределение пользователем. Обратите внимание, что запрещение переопределения не гарантирует стабильность данных; см. в записи блога [данных языка и региональных параметров не следует считать устойчивым (за исключением инвариантный)](http://go.microsoft.com/fwlink/?LinkId=156850).  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> свойству `true` и идентификатор языка и региональных параметров, связанный с заданным именем культуры совпадает с идентификатором текущего языка и региональных параметров Windows, этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий эти переопределения включая пользовательские параметры для свойств <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 В противном случае этот конструктор создает <xref:System.Globalization.CultureInfo> , использующий значения по умолчанию для указанного языка и региональных параметров.  
  
 Значение `useUserOverride` параметр принимает значение <xref:System.Globalization.CultureInfo.UseUserOverride%2A> свойства.  
  
 Например предположим, что арабский (Саудовская Аравия) текущего языка и региональных параметров Windows и пользователь заменяли календарь хиджра для григорианского календаря.  
  
-   С `CultureInfo("ar-SA", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.GregorianCalendar> (что является параметром пользователя) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `true`.  
  
-   С `CultureInfo("ar-SA", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.HijriCalendar> (то есть календарь по умолчанию для ar-SA) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `false`.  
  
-   С `CultureInfo("th-TH", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th й) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `true`.  
  
-   С `CultureInfo("th-TH", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> равно <xref:System.Globalization.ThaiBuddhistCalendar> (то есть календарь по умолчанию для th й) и <xref:System.Globalization.CultureInfo.UseUserOverride%2A> равно `false`.  
  
 <xref:System.Globalization.CultureInfo.LCID%2A> Нового <xref:System.Globalization.CultureInfo> присваивается идентификатор языка и региональных параметров, связанный с указанным именем.  
  
 Для языков и региональных параметров с использованием евро, .NET Framework и Windows XP валюты по умолчанию устанавливается как евро. Однако старые версии Windows не будет. Таким образом Если пользователь более старой версии Windows не изменилось на валюту путем язык и региональные параметры в панели управления, валюта могут оказаться неверными. Чтобы использовать значение по умолчанию .NET Framework для валюты, приложение должно задать `useUserOverride` параметр `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="name" /> не является допустимым именем культуры. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage">
          <para>[! INCLUDE[net_v35_long](~/includes/NET-v35-Long-MD.MD)] и более ранних версиях исключение <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> не является допустимым именем культуры. Начиная с [! Этот конструктор создает include[net_v40_long](~/includes/NET-v40-Long-MD.MD)] <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые работают под [! INCLUDE[net_v40_long](~/includes/NET-v40-Long-MD.MD)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="name" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры Если <paramref name="name" /> не является именем дополнительных или замены языка и региональных параметров, то метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" /> исключение.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar Calendar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает календарь, используемый по умолчанию для языка и региональных параметров.</summary>
        <value>Объект <see cref="T:System.Globalization.Calendar" />, представляющий календарь, используемый по умолчанию в языке и региональных параметрах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем язык и региональные параметры в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, используемый по умолчанию для региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущей культурой Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 Таким образом Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true`, значение этого свойства может отличаться от календаря по умолчанию, языка и региональных параметров.  
  
 Приложения изменяется календарь, используемый текущим <xref:System.Globalization.CultureInfo> , установив <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, который является экземпляром класса <xref:System.Globalization.DateTimeFormatInfo> класса. Новый календарь должен быть одним из календарей, перечисленных в <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> также включает другие свойства, регулирующие форматирование даты и времени, связанные с <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCachedData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет кешированные данные, связанные с языком и региональными параметрами.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сведения, такие как шаблоны язык и формат по умолчанию, кэшируется в первый раз, когда он запрашивается. Что данные могут измениться в течение жизни <xref:System.AppDomain>, например, в том случае, если пользователь изменяет язык и региональные параметры часть панели управления. Однако <xref:System.Globalization.CultureInfo> класса автоматически не обнаружить изменения параметров системы.  
  
 <xref:System.Globalization.CultureInfo.ClearCachedData%2A> Метод очищает кэш <xref:System.Globalization.CultureInfo> объектов, созданных <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> и обновляет данные в <xref:System.Globalization.CultureInfo.CurrentCulture%2A>, <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>, и <xref:System.Globalization.RegionInfo.CurrentRegion%2A> свойства, в зависимости от текущих параметров системы.  
  
 <xref:System.Globalization.CultureInfo.ClearCachedData%2A> Метод не обновлять данные в <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> свойства для существующего потоков. Однако последующие потоки будут иметь все новые <xref:System.Globalization.CultureInfo> значений свойств.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает копию текущего поставщика <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Копия текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Копия класса доступна для записи даже в том случае, если исходный <xref:System.Globalization.CultureInfo> доступно только для чтения. Таким образом можно изменить свойства копии.  
  
 Неполная копия объекта является копией только данного объекта. Если в объекте содержатся ссылки на другие объекты, создаются в неполной копии не объектов, который ссылается. Он ссылается на исходные объекты вместо него. Напротив глубокую копию объекта создает копию объекта и копию всего содержимого, прямо или косвенно ссылается этот объект.  
  
 <xref:System.Globalization.CultureInfo.Clone%2A> Метод создает расширенные неполную копию. Объекты, возвращаемые <xref:System.Globalization.CultureInfo.NumberFormat%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.TextInfo%2A>, и <xref:System.Globalization.CultureInfo.Calendar%2A> свойства также копируются. Следовательно, клонированный <xref:System.Globalization.CultureInfo> объекта можно изменить его свойства копируются, не влияя <xref:System.Globalization.CultureInfo> объекта.  
  
   
  
## Examples  
 В следующем примере кода показано, что CultureInfo.Clone копирует также <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo> экземпляры, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CompareInfo CompareInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.CompareInfo" />, который определяет способ сравнения строк в данном языке и региональных параметрах.</summary>
        <value>
          <see cref="T:System.Globalization.CompareInfo" /> для определения способа сравнения строк в данном языке и региональных параметрах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo.CompareInfo%2A> Возвращает <xref:System.Globalization.CompareInfo> объект, предоставляющий сведения о культуре, используемых в операциях сравнения язык и региональные параметры сортировки и строки.  
  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем язык и региональные параметры в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, используемый по умолчанию для региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущей культурой Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Globalization.CultureInfo> испанский (Испания) с международным порядком сортировки, а вторая <xref:System.Globalization.CultureInfo> с традиционным порядком сортировки.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateSpecificCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CreateSpecificCulture (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo CreateSpecificCulture(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSpecificCulture (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ CreateSpecificCulture(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Предварительно определенное имя <see cref="T:System.Globalization.CultureInfo" /> или имя существующего объекта <see cref="T:System.Globalization.CultureInfo" />. <c>name</c> обрабатывается без учета регистра.</param>
        <summary>Создает объект <see cref="T:System.Globalization.CultureInfo" />, который представляет определенный язык и региональные параметры, соответствующие заданному имени.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, который представляет: инвариантные язык и региональные параметры, если <paramref name="name" /> является пустой строкой ("").  -или- Определенный язык и региональные параметры, связанные с <paramref name="name" />, если <paramref name="name" /> относится к нейтральному языку и региональным параметрам.  -или- Язык и региональные параметры, указанные в параметре <paramref name="name" />, если <paramref name="name" /> уже относится к определенному языку и региональным параметрам.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> Метод создает оболочку для вызова <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> конструктор.  
  
> [!NOTE]
>  Список предварительно определенных названий языков см. в разделе [Справочник по API многоязыковой поддержки (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10 `name` может быть любой допустимый тега языка BCP-47.  
  
 Языки и региональные параметры, сгруппированных в три набора: инвариантного языка и региональных параметров, нейтральные и определенные языки и региональные параметры. Дополнительные сведения см. в описании <xref:System.Globalization.CultureInfo> класса.  
  
 Если идентификатор языка и региональных параметров определенного языка и региональных параметров, возвращаемый этим методом совпадает с идентификатором текущего языка и региональных параметров Windows, этот метод создает <xref:System.Globalization.CultureInfo> переопределяет объект, который использует Windows язык и региональные параметры. Переопределения включить пользовательские параметры для свойств <xref:System.Globalization.DateTimeFormatInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство и <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Для создания экземпляра <xref:System.Globalization.CultureInfo> , по умолчанию параметры языка и региональных параметров, а не переопределяет пользователя, вызвать <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> конструктор со значением `false` для `useUserOverride` аргумент.  
  
 Несмотря на то что <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> метод имя содержит термин «Определенного», помните, что язык и региональные параметры могут измениться между версиями, или из-за пользовательские языки и региональные параметры или из-за переопределения пользователем. Используйте инвариантный язык и региональные параметры или двоичный или основных форм для сохранения данных.  
  
   
  
## Examples  
 В следующем примере извлекается массив <xref:System.Globalization.CultureInfo> объекты, представляющие нейтрального языка и региональных параметров <xref:System.Globalization.CultureInfo.GetCultures%2A> метод и сортирует массив. Если в нем производится итерация элементов в массиве, он передает имя каждого нейтральный язык и региональные параметры <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> метод и отображает имя определенного языка и региональных параметров, возвращаемых методом.  
  
> [!NOTE]
>  В примере используется имя языка и региональных параметров zh-CHS и zh-CHT. Тем не менее приложения, предназначенные для Windows Vista, более поздней версии необходимо использовать zh-Hans вместо zh-CHS и zh-Hant вместо zh-CHT. zh-Hans и zh-Hant представляют текущий стандарт и должны использоваться, если у вас нет причин для использования прежних имен.  
>   
>  Обратите внимание, что результаты выполнения примера может отличаться на установку Тайваня Windows, где ввод китайского (традиционного) нейтрального языка и региональных параметров (zh, zh-CHT или zh-Hant) вернет zh-TW.  
  
 [!code-csharp[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/CS/createspecificculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/VB/createspecificculture2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Globalization.CultureNotFoundException">
          <paramref name="name" /> не является допустимым именем культуры.  -или- Язык и региональные параметры, заданные <paramref name="name" />, не имеют определенных, связанных с ними языков и региональных параметров.</exception>
        <exception cref="T:System.NullReferenceException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <block subset="none" type="usage">
          <para>[! INCLUDE[net_v35_long](~/includes/NET-v35-Long-MD.MD)] и более ранних версиях исключение <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> не является допустимым именем культуры. Начиная с [! Этот метод вызывает include[net_v40_long](~/includes/NET-v40-Long-MD.MD)] <see cref="T:System.Globalization.CultureNotFoundException" />.</para>
        </block>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает типы языков и региональных параметров, относящихся к текущему объекту <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Побитовая комбинация одного или нескольких значений <see cref="T:System.Globalization.CultureTypes" />. Значение по умолчанию отсутствует.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано <xref:System.Globalization.CultureTypes> перечисления и <xref:System.Globalization.CultureInfo.CultureTypes%2A> свойства.  
  
 [!code-cpp[system.globalization.cultureTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cpp/ct.cpp#1)]
 [!code-csharp[system.globalization.cultureTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cs/ct.cs#1)]
 [!code-vb[system.globalization.cultureTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureTypes/vb/ct.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Globalization.CultureInfo" />, представляющий язык и региональные параметры, используемые текущим потоком.</summary>
        <value>Объект, представляющий язык и региональные параметры, используемые текущим потоком.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo> Объект, возвращаемый этим свойством и связанных с ним объектов определяют форматом по умолчанию для дат, времени, чисел, денежных значений, текст порядка сортировки, регистр соглашения и операции сравнения строк.  
  
 Текущего языка и региональных параметров является свойством выполняющегося потока, возвращаемый статическим <xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType> свойство. Значение <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство соответствует значению <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> свойство. Получение значения <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство эквивалентно получение <xref:System.Globalization.CultureInfo> объект, возвращаемый `Thread.CurrentThread.CurrentCulture` свойство. Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], если значением <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> также изменяется текущий язык и региональные параметры потока.  
  
> [!NOTE]
>  В .NET Framework 4.5.2 и более ранних версиях <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство доступно только для чтения;  то есть можно получить значение свойства, но нельзя задать его. Чтобы изменить текущий язык и региональные параметры, присвойте этим полям <xref:System.Globalization.CultureInfo> , представляющий новый язык и региональные параметры для `Thread.CurrentThread.CurrentCulture` свойства. Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство доступно для чтения записи, можно задать и получить значение свойства. Если задано значение свойства <xref:System.Globalization.CultureInfo> , представляющий новый язык, значение `Thread.CurrentThread.CurrentCulture` также изменяется.  
  
 Содержание  
  
 [Как определяется язык и региональные параметры](#ThreadCulture)   
 [Получение текущего языка и региональных параметров](#Getting)   
 [После явного задания свойства CurrentCulture](#ExplicitSetting)   
 [Текущий язык и региональные параметры и переопределяет пользователя](#Overrides)   
 [Язык и региональные параметры приложения для Windows](#WindowsAndCurr)  
  
<a name="ThreadCulture"></a>   
## <a name="how-a-threads-culture-is-determined"></a>Как определяется язык и региональные параметры  
 При запуске потока его культура сначала определяется следующим образом:  
  
-   Путем получения языка и региональных параметров, который задается параметром <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство в домене приложения, в котором выполняется поток, если значение свойства не `null`.  
  
-   Если поток является потоком из пула потоков, выполнения асинхронной операции, на основе задач и целевых объектов приложения [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздней версии .NET Framework, его культура определяется язык и региональные параметры вызывающего потока.  В следующем примере изменяется текущий язык и региональные параметры для португальского языка (Бразилия) и запускает шести задач, каждая из которых отображает Идентификатором потока, его идентификатор задачи и его текущего языка и региональных параметров. Каждая из задач (и потоки) унаследовали языка и региональных параметров вызывающего потока.  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Async1.vb#14)]  
  
     Дополнительные сведения см. в разделе «Язык и региональные параметры и асинхронные операции на основе задач» <xref:System.Globalization.CultureInfo> раздела.  
  
-   Путем вызова Windows `GetUserDefaultLocaleName` функции.  
  
 Следует заметить, что если вы устанавливаете определенного языка и региональных параметров, отличный от языка и региональных параметров системы установлена или языка и региональных параметров пользователя, и приложение запускает несколько потоков, текущий язык и региональные параметры из этих потоков языка и региональных параметров, который возвращается `GetUserDefaultLocaleName` работать, если не назначить язык и региональные параметры <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство в домене приложения, в котором выполняется поток.  
  
 Дополнительные сведения о том, как определяется языком и региональными параметрами потока, см. в разделе «Язык и региональные параметры и потоки» <xref:System.Globalization.CultureInfo> справочной странице.  
  
<a name="Getting"></a>   
## <a name="getting-the-current-culture"></a>Получение текущего языка и региональных параметров  
 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> Свойство — это параметр отдельного потока; то есть каждый поток может иметь свой собственный язык и региональные параметры. Получить язык и региональные параметры текущего потока, получая значение <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойства, как приведенный ниже пример иллюстрирует.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Get1.vb#5)]  
  
 Также можно извлечь значение языка и региональных параметров текущего потока, из <xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType> свойство.  
  
<a name="ExplicitSetting"></a>   
## <a name="explicitly-setting-the-currentculture-property"></a>После явного задания свойства CurrentCulture  
 Начать с раздела [!INCLUDE[net_v46](~/includes/net-v46-md.md)], чтобы изменить язык и региональные параметры, используемые существующего потока, можно задать <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойства для нового языка и региональных параметров. Если явно изменить язык и региональные параметры потока, таким образом, что изменение не будет устранена, если поток пересекает границы домена приложения. В следующем примере изменяется текущий язык и региональные параметры потока Голландский (Нидерланды). Он также показывает, что, если текущий поток пересекает границы домена приложения, его текущего языка и региональных параметров остается измененные.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/changeculture11.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/changeculture11.vb#11)]  
  
> [!NOTE]
>  Изменение языка и региональных параметров с помощью <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойства требуется <xref:System.Security.Permissions.SecurityPermission> разрешения с <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> заданным значением. Управление потоками представляет опасность, поскольку состояние безопасности, связанные с потоками. Таким образом это разрешение должно предоставляться только надежному коду и только в случае необходимости. Невозможно изменить язык и региональные параметры потока, в коде с частичным доверием.  
  
 Начиная с [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], явно изменить текущий язык потока для определенного языка и региональных параметров (например, «французский (Канада)) или нейтрального языка и региональных параметров (например, на французском языке). При <xref:System.Globalization.CultureInfo> представляет нейтральной культуре значения <xref:System.Globalization.CultureInfo> свойств, таких как <xref:System.Globalization.CultureInfo.Calendar%2A>, <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.NumberFormat%2A>, и <xref:System.Globalization.CultureInfo.TextInfo%2A> отражают определенного языка и региональных параметров, с которым связан нейтральный язык и региональные параметры. Например доминирующего языка для английского языка — русский (Россия); главный язык и региональные параметры для немецкого языка и региональных параметров является немецкий (Германия). В следующем примере показано различие в форматирование текущего языка и региональных параметров задано для определенного языка и региональных параметров, французский (Канада) и нейтрального языка и региональных параметров французский.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/specific12.cs#12)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/specific12.vb#12)]  
  
 Можно также использовать <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство вместе с <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> задаваемого свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойства приложения ASP.NET для пользователя такой же предпочитаемый язык и региональные параметры, как показано в следующем примере.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/aspculture13.cs#13)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/aspculture13.vb#13)]  
  
<a name="Overrides"></a>   
## <a name="the-current-culture-and-user-overrides"></a>Текущий язык и региональные параметры и переопределяет пользователя  
 Windows пользователи могут переопределить стандартные значения свойств из <xref:System.Globalization.CultureInfo> объекта и связанных с ним объектов с помощью **язык и региональные стандарты** панели управления. <xref:System.Globalization.CultureInfo> Объект, возвращаемый <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство отражает переопределяет эти пользователя в следующих случаях:  
  
-   Если Windows неявно определяется текущими региональными параметрами потока `GetUserDefaultLocaleName` функции.  
  
-   Если текущий язык и региональные параметры потока, определяемый параметрами <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство соответствует свойству текущую культуру системы Windows.  
  
-   Если язык и региональные параметры текущего потока задано явно для языка и региональных параметров, возвращаемых <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> метод и языка и региональных параметров соответствует текущую культуру системы Windows.  
  
-   Если язык и региональные параметры текущего потока задано явно для языка и региональных параметров, создавать экземпляры, <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> конструктор и языка и региональных параметров соответствует текущую культуру системы Windows.  
  
 В некоторых случаях, особенно для серверных приложений, установка текущего языка и региональных параметров <xref:System.Globalization.CultureInfo> , отражающий переопределения пользователя может быть нежелательно. Вместо этого можно задать язык и региональные параметры текущего потока <xref:System.Globalization.CultureInfo> переопределяет объект, который не отражает пользователя одним из следующих способов:  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> конструктор со значением `false` для `useUserOverride` аргумент.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> метод, который возвращает кэшированные, только для чтения <xref:System.Globalization.CultureInfo> объекта.  
  
<a name="WindowsAndCurr"></a>   
## <a name="the-current-culture-and-uwp-apps"></a>Текущий язык и региональные параметры и приложений UWP  
 В приложениях универсальной платформы Windows (UWP) <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойства чтения и записи, как происходит в приложениях .NET Framework и .NET Core; его можно использовать для получения и для задания текущего языка и региональных параметров. Тем не менее приложения UWP не различает текущего языка и региональных параметров текущего языка и региональных параметров пользовательского интерфейса. <xref:System.Globalization.CultureInfo.CurrentCulture%2A> И <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства карты первое значение в [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) коллекции.  

В приложениях .NET Framework и .NET Core текущего языка и региональных параметров является параметром по потокам и <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство отражает язык и региональные параметры только для текущего потока. В приложениях UWP текущего языка и региональных параметров сопоставляется [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) свойство, которое является глобальным параметром. Параметр <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство изменяет язык и региональные параметры для всего приложения; язык и региональные параметры нельзя задать для каждого потока.
  
## Examples  
 В следующем примере показано, как изменить <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> текущего потока.  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для установки текущего языка и региональных параметров. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></permission>
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
        <altmember cref="T:System.Security.Permissions.SecurityPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Globalization.CultureInfo" />, представляющий текущий язык и региональные параметры пользовательского интерфейса, используемые диспетчером ресурсов для поиска ресурсов, связанных с конкретным языком и региональными параметрами, во время выполнения.</summary>
        <value>Язык и региональные параметры, используемые диспетчером ресурсов для поиска ресурсов, связанных с языком и региональными параметрами, во время выполнения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текущий язык и региональные параметры пользовательского интерфейса — это свойство для каждого потока. То есть каждый поток имеет свой собственный текущий язык и региональные параметры пользовательского интерфейса. Это свойство эквивалентно извлечение или, начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], параметр <xref:System.Globalization.CultureInfo> объект, присвоенный `System.Threading.Thread.CurrentThread.CurrentUICulture` свойство. При запуске потока региональные параметры пользовательского интерфейса сначала определяется следующим образом:  
  
-   Путем получения языка и региональных параметров, который задается параметром <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойство в домене приложения, в котором выполняется поток, если значение свойства не `null`.  
  
-   Если поток является потоком из пула потоков, выполнения асинхронной операции, на основе задач и целевых объектов приложения [!INCLUDE[net_v46](~/includes/net-v46-md.md)] или более поздней версии .NET Framework, региональные параметры пользовательского интерфейса определяется язык и региональные параметры интерфейса пользователя вызывающего потока.  В следующем примере изменяется текущий язык и региональные параметры пользовательского интерфейса для португальского языка (Бразилия) и запускает шести задач, каждая из которых отображает Идентификатором потока, его идентификатор задачи и ее текущий язык и региональные параметры пользовательского интерфейса. Каждая из задач (и потоки) унаследованы язык и региональные параметры интерфейса пользователя вызывающего потока.  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Async1.vb#14)]  
  
     Дополнительные сведения см. в разделе «Язык и региональные параметры и асинхронные операции на основе задач» <xref:System.Globalization.CultureInfo> раздела.  
  
-   Путем вызова Windows `GetUserDefaultUILanguage` функции.  
  
> [!NOTE]
>  В [!INCLUDE[Compact](~/includes/compact-md.md)], <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство доступно только для чтения. Текущий язык и региональные параметры пользовательского интерфейса определяется региональными параметрами системы и не может изменяться программно.  
  
 Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], чтобы изменить язык и региональные параметры пользовательского интерфейса, используемой потоком, задайте <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойства для нового языка и региональных параметров. Если явно изменить культуру потока пользовательского интерфейса таким образом, что изменение не будет устранена, если поток пересекает границы домена приложения.  
  
> [!NOTE]
>  В .NET Framework 4.5.2 и более ранних версиях <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство доступно только для чтения;  то есть можно получить значение свойства, но нельзя задать его. Чтобы изменить текущий язык и региональные параметры пользовательского интерфейса, присвойте этим полям <xref:System.Globalization.CultureInfo> , представляющий новый язык и региональные параметры пользовательского интерфейса для `Thread.CurrentThread.CurrentUICulture` свойства. Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство доступно для чтения записи, можно задать и получить значение свойства. Если задано значение свойства <xref:System.Globalization.CultureInfo> , представляющий новый язык, значение `Thread.CurrentThread.CurrentCulture` также изменяется.  
  
 Содержание  
  
 [Получение текущего языка и региональных параметров пользовательского интерфейса](#Getting)   
 [Явное задание текущего языка и региональных параметров пользовательского интерфейса](#Explicit)   
 [Неявное задание текущего языка и региональных параметров пользовательского интерфейса](#Implicit)   
 [Вопросы безопасности](#Security)   
 [Текущие язык и региональные параметры пользовательского интерфейса и Windows приложения](#WindowsAndCurrUI)  
  
<a name="Getting"></a>   
## <a name="getting-the-current-ui-culture"></a>Получение текущего языка и региональных параметров пользовательского интерфейса  
 <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> Свойство — это параметр отдельного потока; то есть каждый поток может иметь свой собственный пользовательский Интерфейс, язык и региональные параметры. Получить язык и региональные параметры пользовательского интерфейса текущего потока, получая значение <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойства, как приведенный ниже пример иллюстрирует.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Get1.vb#5)]  
  
 Также можно извлечь значение культуры текущего потока пользовательского интерфейса из <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойство.  
  
<a name="Explicit"></a>   
## <a name="explicitly-setting-the-current-ui-culture"></a>Явное задание текущего языка и региональных параметров пользовательского интерфейса  
 Начиная с [!INCLUDE[net_v46](~/includes/net-v46-md.md)], можно изменить текущий язык и региональные параметры пользовательского интерфейса, присваивая <xref:System.Globalization.CultureInfo> , представляющий новый язык и региональные параметры для <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойства. Текущий язык и региональные параметры пользовательского интерфейса можно задать для конкретной культуры (например, en US и de-DE) или для нейтрального языка и региональных параметров (например, en или de). В следующем примере текущий язык и региональные параметры пользовательского интерфейса для fr-FR или французский (Франция).  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/currentuiculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/currentuiculture1.vb#1)]  
  
 В многопоточном приложении можно явно задать язык и региональные параметры пользовательского интерфейса из любого потока, назначив <xref:System.Globalization.CultureInfo> объект, представляющий этот язык в поток <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> свойство. Если поток языком и региональными параметрами, нужно задать текущий поток, можно назначить новый язык и региональные параметры для <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойства. Если язык и региональные параметры пользовательского интерфейса потока задано явно, что поток сохраняет того же языка и региональных параметров, даже в том случае, если оно пересекает границы домена приложения и выполняет код в другом домене приложения.  
  
<a name="Implicit"></a>   
## <a name="implicitly-setting-the-current-ui-culture"></a>Неявное задание текущего языка и региональных параметров пользовательского интерфейса  
 Когда потока, включая основного потока приложения, первый, по умолчанию создается его текущего языка и региональных параметров пользовательского интерфейса, задается следующим образом:  
  
-   С помощью языка и региональных параметров, определяемые <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойств для текущего домена приложения, если значение свойства не `null`.  
  
-   С помощью языка и региональных параметров системы по умолчанию. В системах, использующих операционной системы Windows, общеязыковая среда выполнения вызывает Windows `GetUserDefaultUILanguage` функцию для задания текущего языка и региональных параметров пользовательского интерфейса. `GetUserDefaultUILanguage` Возвращает культуру пользовательского интерфейса по умолчанию, установленные пользователем. Если пользователь не задал язык пользовательского интерфейса по умолчанию, он возвращает язык и региональные параметры, первоначально установленных в системе.  
  
 Если поток пересекает границы приложения и выполняет код в другом домене приложения, его культура определяется таким же образом, как и для только что созданного потока.  
  
 Следует заметить, что если задать заданных региональных параметров пользовательского интерфейса, отличный от культуры пользовательского интерфейса установлена система или пользователь предпочитаемый язык и региональные параметры пользовательского интерфейса и приложение запускает несколько потоков, текущий язык и региональные параметры пользовательского интерфейса из этих потоков языка и региональных параметров, возвращаемых `GetUserDefaultUILanguage`работать, если не назначить язык и региональные параметры <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойство в домене приложения, в котором выполняется поток.  
  
<a name="Security"></a>   
## <a name="security-considerations"></a>Вопросы безопасности  
 Изменение языка и региональных параметров текущего потока требует <xref:System.Security.Permissions.SecurityPermission> разрешения с <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> заданным значением.  
  
> [!CAUTION]
>  Управление потоками представляет опасность, поскольку состояние безопасности, связанные с потоками. Таким образом это разрешение должно предоставляться только надежному коду и только в случае необходимости. Невозможно изменить язык и региональные параметры потока, в коде с частичным доверием.  
  
<a name="WindowsAndCurrUI"></a>   
## <a name="the-current-ui-culture-and-uwp-apps"></a>Текущий язык и региональные параметры пользовательского интерфейса и приложений UWP  
 
В приложениях универсальной платформы Windows (UWP) <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства чтения и записи, как происходит в приложениях .NET Framework и .NET Core; его можно использовать для получения и для задания текущего языка и региональных параметров. Тем не менее приложения UWP не различает текущего языка и региональных параметров текущего языка и региональных параметров пользовательского интерфейса. <xref:System.Globalization.CultureInfo.CurrentCulture%2A> И <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойства карты первое значение в [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) коллекции.

В приложениях .NET Framework и .NET Core текущего языка и региональных параметров пользовательского интерфейса является параметром по потокам и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство отражает язык и региональные параметры пользовательского интерфейса только для текущего потока. В приложениях UWP текущего языка и региональных параметров сопоставляется [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/en-us/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) свойство, которое является глобальным параметром. Параметр <xref:System.Globalization.CultureInfo.CurrentCulture%2A> свойство изменяет язык и региональные параметры для всего приложения; язык и региональные параметры нельзя задать для каждого потока.    
  
## Examples  
 В следующем примере кода показано, как изменить <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> текущего потока.  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойству присвоено имя языка и региональных параметров, которое не может использоваться для нахождения файла ресурсов. Имена файлов ресурсов могут содержать только буквы, цифры, дефисы или символы подчеркивания.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для установки текущего языка и региональных параметров пользовательского интерфейса. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></permission>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.DateTimeFormatInfo DateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo DateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::DateTimeFormatInfo ^ DateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, определяющий формат отображения даты и времени, соответствующий языку и региональным параметрам.</summary>
        <value>Объект <see cref="T:System.Globalization.DateTimeFormatInfo" />, определяющий формат отображения даты и времени, соответствующий языку и региональным параметрам.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a>Overrides  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем язык и региональные параметры в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, используемый по умолчанию для региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущей культурой Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 Значение <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство и <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства не вычисляются, пока приложение обращается к свойству. Если пользователь может изменить текущий язык и региональные параметры для нового языка и региональных параметров, во время выполнения приложения и приложение обращается к <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> или <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства, приложение получает значения по умолчанию для нового языка и региональных параметров вместо переопределения исходный язык и региональные параметры. Для сохранения переопределений для исходного текущего языка и региональных параметров, приложение следует обратиться к <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства перед изменением текущего языка и региональных параметров.  
  
   
  
## Examples  
 В следующем примере кода показано, что CultureInfo.Clone копирует также <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo> экземпляры, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> или любого из свойств <see cref="T:System.Globalization.DateTimeFormatInfo" /> заданы значения, а <see cref="T:System.Globalization.CultureInfo" /> доступен только для чтения.</exception>
        <block subset="none" type="usage">
          <para>Если <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> — <see cref="T:System.Globalization.TaiwanCalendar" /> , но <see cref="P:System.Threading.Thread.CurrentCulture" /> равно китайский (Тайвань), затем с именем zh-TW <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращается пустая строка (»»).</para>
        </block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает язык и региональные параметры, используемые по умолчанию для потоков в текущем домене приложения.</summary>
        <value>Язык и региональные параметры по умолчанию для потоков в текущем домене приложения или значение <see langword="null" />, если текущий язык и региональные параметры системы являются заданными по умолчанию для потока в домене приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] и предыдущие версии по умолчанию, все потоки набора системы Windows язык и региональные параметры. Для приложений с региональными отличается от языка и региональных параметров по умолчанию системы такое поведение часто нежелательно. В [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство позволяет приложению определить язык и региональные параметры по умолчанию все потоки в домене приложения.  
  
> [!IMPORTANT]
>  Если не заданы явным образом культура любые существующие потоков, выполняющихся в домене приложения, установка <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> также изменяется язык и региональные параметры из этих потоков. Тем не менее, если эти потоки выполняются в другом домене приложения, их язык и региональные параметры определяются <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойства в этом домене приложения или, если нет значения по умолчанию определяется языком и региональными параметрами системы по умолчанию. По этой причине рекомендуется всегда явно задавать язык и региональные параметры главный поток приложения и не полагаться на <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство, чтобы определить язык и региональные параметры основного потока приложения.  
  
 Если оно не задано явно, значение <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> свойство `null`, и культуру системы Windows по умолчанию определяется язык и региональные параметры потоков в домене приложения, которые не были назначены явного языка и региональных параметров.  
  
 Дополнительные сведения о языках и региональных параметрах, потоков и доменов приложений см. в разделе «Язык и региональные параметры и потоки» и «язык и региональные параметры и домены приложений» в разделах <xref:System.Globalization.CultureInfo> справочной странице.  
  
   
  
## Examples  
 В следующем примере показано поведение по умолчанию платформы .NET Framework при определении текущего языка и региональных параметров нового потока. Во время запуска в примере текущий язык и региональные параметры и текущий язык и региональные параметры пользовательского интерфейса на французский (Франция) во всех системах, за исключением тех, на которых язык и региональные параметры по умолчанию системы уже французский (Франция). Если язык и региональные параметры по умолчанию системы уже французский (Франция), код задает текущий язык и региональные параметры текущего языка и региональных параметров пользовательского интерфейса на английский (США). Затем он вызывает `DisplayRandomNumbers` подпрограммы, который создает три случайных числа и отображает их в виде денежных сумм. Затем он создает новый поток, который также выполняет `DisplayRandomNumbers` подпрограммы.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture1.vb#1)]  
  
 Как показывают выходные данные примера, если пример выполняется на компьютере, языком и региональными параметрами системы является английский (США), основной поток отображает его значения валюты с использованием соглашений о форматировании французский (Франция) языка и региональных параметров. Тем не менее поскольку рабочий поток языка и региональных параметров является производным от текущую культуру системы Windows, а не текущего языка и региональных параметров приложения, рабочий поток отображает его значения валюты с использованием соглашений о форматировании для английского языка (США).  
  
 В следующем примере используется <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойств, чтобы определить текущий язык и региональные параметры текущего пользовательского интерфейса нового потока приложения. Во время запуска в примере текущий язык и региональные параметры и текущий язык и региональные параметры пользовательского интерфейса на французский (Франция) во всех системах, за исключением тех, на которых язык и региональные параметры по умолчанию системы уже французский (Франция). Если язык и региональные параметры по умолчанию системы уже французский (Франция), задает текущий язык и региональные параметры и текущий язык и региональные параметры пользовательского интерфейса на английский (США). Затем он вызывает `DisplayRandomNumbers` подпрограммы, который создает три случайных числа и отображает их в виде денежных сумм. Затем он создает новый поток, который также выполняет `DisplayRandomNumbers` подпрограммы.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture2.vb#2)]  
  
 Как показывают выходные данные примера, если пример выполняется на компьютере, языком и региональными параметрами системы является английский (США), основной поток и рабочим потоком отображать их значения валюты с использованием соглашений о форматировании французский (Франция) языка и региональных параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает язык и региональные параметры пользовательского интерфейса, используемые по умолчанию для потоков в текущем домене приложения.</summary>
        <value>Язык и региональные параметры по умолчанию пользовательского интерфейса для потоков в текущем домене приложения или значение <see langword="null" />, если текущий язык и региональные параметры пользовательского интерфейса системы являются заданными по умолчанию для потока пользовательского интерфейса в домене приложения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] и предыдущих версий по умолчанию язык и региональные параметры пользовательского интерфейса всех потоков устанавливается система Windows язык и региональные параметры. Для приложений, чьи текущего языка и региональных параметров пользовательского интерфейса отличается от языка и региональных параметров по умолчанию системы такое поведение часто нежелательно. В [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойство позволяет определить язык по умолчанию, все потоки в домене приложения.  
  
> [!IMPORTANT]
>  Если вы не задали явным образом языка и региональных параметров пользовательского интерфейса из любой существующий потоков, выполняющихся в домене приложения, установка <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> также изменяется язык и региональные параметры из этих потоков. Тем не менее, если эти потоки выполняются в другом домене приложения, их язык и региональные параметры определяются <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойства в этом домене приложения или, если нет значения по умолчанию определяется языком и региональными параметрами системы по умолчанию. По этой причине рекомендуется всегда явно задать язык и региональные параметры потока основного приложения и не следует полагаться на <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойство, чтобы определить язык и региональные параметры основного потока приложения.  
  
 Если оно не задано явно, значение <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойство `null`, и текущий язык и региональные параметры всех потоков в домене приложения, которые не были назначены явного языка и региональных параметров задается культура по умолчанию для системы Windows.  
  
 Дополнительные сведения о языках и региональных параметрах, потоков и доменов приложений см. в разделе «Язык и региональные параметры и потоки» и «язык и региональные параметры и домены приложений» в разделах <xref:System.Globalization.CultureInfo> справочной странице.  
  
   
  
## Examples  
 В следующем примере показано поведение по умолчанию платформы .NET Framework при определении текущего языка и региональных параметров нового потока. Этот процесс использует ресурсы на английском и русском языках. Следующий текстовый файл с именем GreetingStrings.txt содержит ресурсы английского языка:  
  
```  
greeting =Hello again!  
newGreeting=Hello!  
```  
  
 Он компилируется в двоичный RESOURCES-файл с именем GreetingStrings.resources с помощью [генератор файлов ресурсов](~/docs/framework/tools/resgen-exe-resource-file-generator.md) с помощью следующей команды.  
  
```console  
resgen greetingstrings.txt  
```  
  
 Следующий текстовый файл с именем GreetingStrings.ru RU.txt содержит ресурсы русского языка:  
  
```  
greeting=Еще раз привет!  
newGreeting=Привет!  
```  
  
 Он компилируется в двоичный RESOURCES-файл с именем GreetingStrings.ru RU.resources с помощью [генератор файлов ресурсов](~/docs/framework/tools/resgen-exe-resource-file-generator.md) с помощью следующей команды.  
  
```console  
resgen greetingstrings.ru-RU.txt  
```  
  
 Код приложения, как показано ниже, находится в файле с именем Example1.vb или Example1.cs. Она компилируется в исполняемый файл с помощью следующей команды для компилятора Visual Basic:  
  
```console  
vbc Example1.vb /resource:GreetingStrings.resources  
```  
  
 Для компилятора C# аналогично команде:  
  
```console  
csc /resource:GreetingStrings.resources Example1.cs  
```  
  
 Это создает сборку, которая включает в себя исполняемый код в примере вместе с ресурсами для его резервного языка и региональных параметров. Можно также использовать [компоновщик сборок](~/docs/framework/tools/al-exe-assembly-linker.md) для создания файла ресурсов для культуры русский (Россия) с помощью следующей команды:  
  
```console  
>al /embed:greetingstrings.ru-RU.resources /c:ru-RU /template:example1.exe /out:ru-RU\Example1.resources.dll  
```  
  
 Во время запуска, в примере задаются текущего языка и региональных параметров и текущий язык и региональные параметры пользовательского интерфейса для русского языка (Россия) во всех системах, за исключением тех, на которых язык и региональные параметры по умолчанию системы уже русский (Россия). Если язык и региональные параметры по умолчанию системы уже русский (Россия), в коде устанавливается текущего языка и региональных параметров и пользовательского интерфейса текущего языка и региональных параметров на английском (США). Затем он вызывает `ShowGreeting` действия, который отображает простую строку при первом вызове и немного другую строку на последующие вызовы методов. Затем он создает новый поток, который также выполняет `ShowGreeting` подпрограммы.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example1.vb#1)]  
  
 Как показывают выходные данные примера, если пример выполняется на компьютере, языком и региональными параметрами системы является английский (США), основной поток отображает его начальной строки на русском языке. Тем не менее поскольку рабочий поток языка и региональных параметров является производным от текущую культуру системы Windows, а не текущего языка и региональных параметров приложения, рабочий поток отображает его строку на английском языке.  
  
 В следующем примере используется <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> и <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> свойств, чтобы определить текущий язык и региональные параметры текущего пользовательского интерфейса нового потока приложения.  
  
 В примере те же файлы ресурсов в предыдущем примере. Команды для компиляции и чтобы встроить ресурсы локализованные русский язык во вспомогательную сборку также идентичны, за исключением того, что изменяет имя исполняемой сборки.  
  
 Во время запуска, в примере задаются текущего языка и региональных параметров и текущий язык и региональные параметры пользовательского интерфейса для русского языка (Россия) во всех системах, за исключением тех, на которых язык и региональные параметры по умолчанию системы уже русский (Россия). Если язык и региональные параметры по умолчанию системы уже русский (Россия), он задает текущего языка и региональных параметров и текущий язык и региональные параметры пользовательского интерфейса на английский (США). Затем он вызывает `ShowGreeting` действия, который отображает простую строку при первом вызове и немного другую строку на последующие вызовы методов. Затем он создает новый поток, который также выполняет `ShowGreeting` подпрограммы.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example2.vb#2)]  
  
 Как показывают выходные данные примера, если пример выполняется на компьютере, языком и региональными параметрами системы является английский (США), основной поток и рабочий поток для отображения их строк на русском языке.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">В операции задания значение свойства <see cref="P:System.Globalization.CultureInfo.Name" /> является недопустимым.</exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает полное локализованное имя языка и региональных параметров.</summary>
        <value>Имя полного локализованного языка и региональных параметров в формате * languagefull * [* country / regionfull *], где * languagefull * — полное имя языка и * country / regionfull * — полное имя страны или региона.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство представляет локализованное имя <xref:System.Globalization.CultureInfo> объекта.  
  
 Имена языка и региональных параметров может различаться для создания скрипта или соглашения о форматировании. Следует использовать возвращаемое имя для отображения и не выполнять его синтаксический анализ.  
  
 Если создается пользовательский язык и региональные параметры, с помощью параметра <xref:System.Globalization.CultureAndRegionInfoBuilder> класса, <xref:System.Globalization.CultureInfo.DisplayName%2A> значение инициализируется свойство <xref:System.Globalization.CultureInfo.NativeName%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода отображаются несколько свойств нейтральные языки и региональные параметры.  
  
> [!NOTE]
>  В примере отображаются культуры zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 идентификаторы языка и региональных параметров, соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant представляют текущий стандарт имена и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.EnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnglishName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя языка и региональных параметров в формате *languagefull* [*country/regionfull*] на английском языке.</summary>
        <value>Имя языка и региональных параметров в формате * languagefull * [* country / regionfull *] на английском языке, где * languagefull * — полное имя языка и * country / regionfull * — полное имя страны или региона.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Например <xref:System.Globalization.CultureInfo.EnglishName%2A> для определенного языка и региональных параметров имя en US является «Английский (США)».  
  
 Значение этого свойства одинаково, независимо от языковой версии платформы .NET Framework.  
  
   
  
## Examples  
 В следующем примере кода отображаются несколько свойств нейтральные языки и региональные параметры.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant представляют текущий стандарт имена и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Globalization.CultureInfo" />.</param>
        <summary>Определяет, является ли заданный объект тем же языком и региональными параметрами, что и <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Значение <see langword="true" />, если параметр <paramref name="value" /> относится к тому же языку и региональным параметрам, что и текущий объект <see cref="T:System.Globalization.CultureInfo" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
 Два <xref:System.Globalization.CultureInfo> объекты считаются равными, если их <xref:System.Globalization.CultureInfo.Name%2A> и <xref:System.Globalization.CultureInfo.CompareInfo%2A> свойства равны.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetConsoleFallbackUICulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetConsoleFallbackUICulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsoleFallbackUICulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetConsoleFallbackUICulture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает язык и региональные стандарты интерфейса пользователя, подходящие для приложений консоли, если при этом неприменим язык и региональные стандарты графического пользовательского интерфейса по умолчанию.</summary>
        <returns>Альтернативный язык и региональные параметры, используемые для чтения и отображения текста на консоли.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Языки, такие как арабский, иврит, урду и сирийский основаны на двунаправленный текст. Приложения Windows, имеющие графический пользовательский интерфейс, поддерживают двунаправленные языки. Консольные приложения, использующие текстовый пользовательский интерфейс консоли операционной системы не предоставляют двусторонний обмен данными. Таким образом при локализации консольного приложения для арабского или иврита приложение выводить на экран консоли нечитаемый текст.  
  
 Язык и региональные параметры пользовательского интерфейса указывает ресурсы, приложение должно поддерживать пользовательского ввода и вывода и по умолчанию является таким же, как язык и региональные параметры операционной системы. Например <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> свойство возвращает арабский язык и региональные параметры для арабского языка операционной системы. Используйте <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> метод для извлечения региональные параметры, подходящие для пользовательского интерфейса приложения консоли. Приложение получает язык и региональные параметры пользовательского интерфейса, его следует назначить язык и региональные параметры текущего языка и региональных параметров пользовательского интерфейса текущего потока. Дополнительные сведения см. раздел «Явно параметр текущая культура пользовательского интерфейса» <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> свойство.  
  
 Ниже приведены стандартные языков и региональных параметров с именем языка и региональных параметров различных базового пользовательского интерфейса из предварительно определенного.  
  
|Предопределенные языка и региональных параметров|Имя языка и региональных параметров|Имя языка и региональных параметров пользовательского интерфейса|  
|------------------------|------------------|------------------------------------------|  
|Амхарик|AM|ru-RU|  
|Амхарик (Эфиопия)|AM-ET|ru-RU|  
|(нейтральный арабский)|ar|ru-RU|  
|Арабский (ОАЭ)|ar AE|ru-RU|  
|Арабский (Бахрейн)|ar BH|ru-RU|  
|Арабский (Алжир)|Ar-DZ|fr-FR|  
|Арабский (Египет)|ar-EG|ru-RU|  
|Арабский (Ирак)|ar IQ|ru-RU|  
|Арабский (Иордания)|ПЕТР ar|ru-RU|  
|Арабский (Кувейт)|ar КВТ|ru-RU|  
|Арабский (Ливан)|ar-балансировки Нагрузки|ru-RU|  
|Арабский (Ливия)|Чтение ar|ru-RU|  
|Арабский (Марокко)|ar MA|fr-FR|  
|Арабский (Оман)|ar OM|ru-RU|  
|Арабский (Катар)|ar QA|ru-RU|  
|Арабский (Саудовская Аравия)|ar-SA|ru-RU|  
|Арабский (Сирия)|ar-SY|ru-RU|  
|Арабский (Тунис)|ar-TN|fr-FR|  
|Арабский (Йемен)|ar-д|ru-RU|  
|Ассамского|as|ru-RU|  
|Ассамский (Индия)|в качестве|ru-RU|  
|бенгальский|Бенгальский (Индия)|ru-RU|  
|Бенгальский (Бангладеш)|BD Бенгальский (Индия)|ru-RU|  
|Бенгальский (Индия)|Бенгальский (Индия) в|ru-RU|  
|Тибетский|BO|ru-RU|  
|Тибетский (КНР)|BO CN|ru-RU|  
|Дивейский|DV|ru-RU|  
|Дивейский (Индия)|DV-MV|ru-RU|  
|персидский|ОС|ru-RU|  
|Персидский (Иран)|FA-IR|ru-RU|  
|Гуджарати|gu|ru-RU|  
|Гуджарати (Индия)|в gu|ru-RU|  
|Иврит|he|ru-RU|  
|Иврит (Израиль)|he-IL|ru-RU|  
|Хинди|Привет|ru-RU|  
|Хинди (Индия)|IN|ru-RU|  
|Ий|II|ru-RU|  
|Ий (КНР)|II CN|ru-RU|  
|Слоговое письмо|IU банок|ru-RU|  
|Слоговое письмо (Канада)|IU банок центра сертификации.|ru-RU|  
|Кхмерский|км|ru-RU|  
|Кхмерский (Камбоджа)|KH км|ru-RU|  
|Каннада|KN|ru-RU|  
|Каннада (Индия)|в KN|ru-RU|  
|Конкани|kok|ru-RU|  
|Конкани (Индия)|в kok|ru-RU|  
|Лаосский|Lo|ru-RU|  
|Лаосский (Лаосская P.D.R.)|LO LA|ru-RU|  
|Малаялам|ml|ru-RU|  
|Малайялам (Индия)|ML-IN|ru-RU|  
|Могавк|moh|ru-RU|  
|Могавк (Канада)|moh ЦС|ru-RU|  
|маратхи|MR|ru-RU|  
|Маратхи (Индия)|MR IN|ru-RU|  
|Непальский|NE|ru-RU|  
|Непальский (Непал)|именованные каналы NE|ru-RU|  
|Норвежский|Нет|nb-NO|  
|Ория|или|ru-RU|  
|Ория (Индия)|или в|ru-RU|  
|панджаби|АП|ru-RU|  
|Панджаби (Индия)|в PA|ru-RU|  
|Dari|prs|ru-RU|  
|Дари (Афганистан)|prs AF|ru-RU|  
|Пушту|PS|ru-RU|  
|Пушту (Афганистан)|ps-AF|ru-RU|  
|санскрит|SA|ru-RU|  
|Санскрит (Индия)|в учетной записи SA|ru-RU|  
|Сингальский|удостоверения службы|ru-RU|  
|Синхала (Шри-Ланка)|SI LK|ru-RU|  
|Сирийский|syr|ru-RU|  
|Сирийский (Сирия)|syr SY|ru-RU|  
|Тамильский|TA|ru-RU|  
|Тамильский (Индия)|TA IN|ru-RU|  
|Телугу|TE|ru-RU|  
|Телугу (Индия)|в TE|ru-RU|  
|Тайский|th|ru-RU|  
|Тайский (Таиланд)|th й|ru-RU|  
|Уйгурский|ug|ru-RU|  
|Уйгурский (КНР)|ug-CN|ru-RU|  
|Урду|ваш|ru-RU|  
|Урду (Пакистан)|Ваш ПК|ru-RU|  
|Вьетнамский|vi|ru-RU|  
|Вьетнамский (Вьетнам)|vi VN|ru-RU|  
  
 Приложение может использовать <xref:System.Globalization.CultureAndRegionInfoBuilder> для создания замены для, язык и региональные параметры, можно иметь резервный язык и региональные по своему выбору.  
  
   
  
## Examples  
 В следующем примере кода отображаются язык и региональные базового пользовательского интерфейса, связанного с объектом языка и региональных параметров.  
  
 [!code-cpp[sys.glob.ci.getCFUIC#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/cpp/cfuic.cpp#1)]
 [!code-csharp[sys.glob.ci.getCFUIC#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/CS/cfuic.cs#1)]
 [!code-vb[sys.glob.ci.getCFUIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.ci.getCFUIC/VB/cfuic.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCultureInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Служит для получения кешированного экземпляра языка и региональных параметров, доступного только для чтения.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (culture As Integer) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(int culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">Идентификатор языка (LCID).</param>
        <summary>Служит для получения кешированного доступного только для чтения экземпляра языка и региональных параметров с помощью указанного идентификатора языка и региональных параметров.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Рекомендуется использовать перегрузку этого метода строки (<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>), поскольку вместо кодов LCID должен использоваться имени языкового стандарта. Пользовательские языковые стандарты имя языкового стандарта не требуется.  
  
 Если `culture` — идентификатор языка текущего языка и региональных параметров, возвращенный <xref:System.Globalization.CultureInfo> объекта не отражает все переопределения пользователем.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="culture" /> меньше нуля.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">Параметр <paramref name="culture" /> указывает не поддерживаемый язык и региональные параметры. Дополнительные сведения см. в разделе "Примечания к вызывающим объектам".</exception>
        <block subset="none" type="usage">
          <para>[! INCLUDE[net_v35_long](~/includes/NET-v35-Long-MD.MD)] и более ранних версиях исключение <see cref="T:System.ArgumentException" /> Если <paramref name="culture" /> не является допустимым идентификатором культуры. Начиная с [! Этот метод вызывает include[net_v40_long](~/includes/NET-v40-Long-MD.MD)] <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые работают под [! INCLUDE[net_v40_long](~/includes/NET-v40-Long-MD.MD)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="culture" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры , метод создает <see cref="T:System.Globalization.CultureNotFoundException" />.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя языка и региональных параметров. <c>name</c> обрабатывается без учета регистра.</param>
        <summary>Возвращает кешированный экземпляр языка и региональных параметров с помощью указанного имени.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных названий языков см. в разделе [Справочник по API многоязыковой поддержки (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10 `name` может быть любой допустимый тега языка BCP-47.  
  
 <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> Метод извлекает кэширования, доступным только для чтения <xref:System.Globalization.CultureInfo> объекта. Он обеспечивает лучшую производительность, чем соответствующий вызов <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> конструктор.  
  
 Если `name` имя текущего языка и региональных параметров, возвращенный <xref:System.Globalization.CultureInfo> объекта не отражает все переопределения пользователем. Это делает метод подходит для серверных приложений или средства, не имеющие учетной записи реального пользователя в системе, а также для эффективной загрузки нескольких языков и региональных параметров, которые требуют.  
  
 Если `name` — <xref:System.String.Empty?displayProperty=nameWithType>, метод возвращает инвариантного языка и региональных параметров. Это эквивалентно получение значения <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">Параметр <paramref name="name" /> указывает не поддерживаемый язык и региональные параметры. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage">
          <para>[! INCLUDE[net_v35_long](~/includes/NET-v35-Long-MD.MD)] и более ранних версиях исключение <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> не является допустимым именем культуры. Начиная с [! Этот метод вызывает include[net_v40_long](~/includes/NET-v40-Long-MD.MD)] <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые работают под [! INCLUDE[net_v40_long](~/includes/NET-v40-Long-MD.MD)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="name" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры Если <paramref name="name" /> не является именем дополнительных или замены языка и региональных параметров, то метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" />.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name, string altName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name, string altName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String, altName As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name, System::String ^ altName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="altName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя языка и региональных параметров. <c>name</c> обрабатывается без учета регистра.</param>
        <param name="altName">Имя языка и региональных параметров, предоставляющих объекты <see cref="T:System.Globalization.TextInfo" /> и <see cref="T:System.Globalization.CompareInfo" /> для инициализации параметра <c>name</c>. <c>altName</c> обрабатывается без учета регистра.</param>
        <summary>Служит для получения кешированного экземпляра языка и региональных параметров, доступного только для чтения. В параметрах определяется язык и региональные параметры, которые инициализируются вместе с объектами <see cref="T:System.Globalization.TextInfo" /> и <see cref="T:System.Globalization.CompareInfo" />, заданными другим языком и региональными параметрами.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных названий языков см. в разделе [Справочник по API многоязыковой поддержки (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10 `name` может быть любой допустимый тега языка BCP-47.  
  
 <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> Метод получает кэшированный, только для чтения <xref:System.Globalization.CultureInfo> объекта. Он обеспечивает лучшую производительность, чем соответствующий вызов <xref:System.Globalization.CultureInfo.%23ctor%2A> конструктор. Метод используется для создания языка и региональных параметров, аналогичную значению, указанному `name` параметра, но с другой сортировки и преобразования регистров правила.  
  
 Если `name` или `altName` имя текущего языка и региональных параметров, возвращаемых объектов не отражают все переопределения пользователем. Если `name` — <xref:System.String.Empty?displayProperty=nameWithType>, метод возвращает инвариантного языка и региональных параметров. Это эквивалентно получение значения <xref:System.Globalization.CultureInfo.InvariantCulture%2A> свойство. Если `altName` — <xref:System.String.Empty?displayProperty=nameWithType>, метод использует систему письма и сравнения правил, заданных инвариантного языка и региональных параметров.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> или <paramref name="altName" /> равно null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">Параметры <paramref name="name" /> или <paramref name="altName" /> указывает не поддерживаемый язык и региональные параметры. Дополнительные сведения см. в разделе "Примечания для вызывающей стороны".</exception>
        <block subset="none" type="usage">
          <para>[! INCLUDE[net_v35_long](~/includes/NET-v35-Long-MD.MD)] и более ранних версиях исключение <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> или <paramref name="altName" /> не является допустимым именем культуры. Начиная с [! Этот метод вызывает include[net_v40_long](~/includes/NET-v40-Long-MD.MD)] <see cref="T:System.Globalization.CultureNotFoundException" />. Начиная с приложений, которые работают под [! INCLUDE[net_v40_long](~/includes/NET-v40-Long-MD.MD)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="name" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры Если <paramref name="name" /> не является именем дополнительных или замены языка и региональных параметров, то метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" /> исключение. Начиная с приложений, которые работают под [! INCLUDE[net_v40_long](~/includes/NET-v40-Long-MD.MD)] или более поздней версии в Windows 7 или более поздней версии, метод пытается получить <see cref="T:System.Globalization.CultureInfo" /> объекта, идентификатор которого равен <paramref name="name" /> из операционной системы; Если операционная система не поддерживает этот язык и региональные параметры Если <paramref name="name" /> не является именем дополнительных или замены языка и региональных параметров, то метод создает исключение <see cref="T:System.Globalization.CultureNotFoundException" /> исключение.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfoByIetfLanguageTag">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfoByIetfLanguageTag (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfoByIetfLanguageTag(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя языка по стандарту RFC 4646.</param>
        <summary>Не рекомендуется. Служит для получения объекта <see cref="T:System.Globalization.CultureInfo" />, доступного только для чтения, который имеет языковые характеристики, указываемые определенным языковым тегом RFC 4646.</summary>
        <returns>Объект <see cref="T:System.Globalization.CultureInfo" />, доступный только для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Этот метод и <xref:System.Globalization.CultureInfo.IetfLanguageTag%2A> свойства являются устаревшими. Вместо того чтобы использовать эти элементы, приложение должно использовать новый <xref:System.Globalization.CultureInfo> объекта и вызовы <xref:System.Globalization.CultureInfo.Name%2A> свойство. Теги IETF и имена идентичны.  
  
 Стандарту RFC 4646, в который ведется по Internet Engineering Task Force (IETF) определяет тег языка IETF, который представляет собой универсальное средство идентификации языка. Формат тега языка IETF совпадает с именем языка и региональных параметров, возвращаемых <xref:System.Globalization.CultureInfo.Name%2A> свойства, но не определяет язык и региональные параметры. Различные языки и региональные параметры совместно используют один и тот же тег языка IETF, если эти языки и региональные параметры имеют идентичные языковые характеристики. Языковые характеристики языка и региональных параметров содержащихся в <xref:System.Globalization.TextInfo> объекта, связанного с <xref:System.Globalization.CultureInfo> объекта.  
  
 Тег языка IETF состоит из обязательного идентификатора языка, необязательного идентификатора набора символов и необязательного идентификатора региона.  
  
 Приложения должны использовать полученный язык и региональные параметры для управления задачи, зависящие от языка, например управление правописания. Приложения не должны использовать полученный язык и региональные параметры для управления задачами конкретного языка и региональных параметров, таких как сортировка текста или форматирование дат и времени.  
  
 Дополнительные сведения см. в разделе RFC 4646, «Теги для идентификации языков» и самой последней черновик стандартной, черновик винту langtags-05.txt, в [ http://go.microsoft.com/fwlink/?LinkId=100231 ](http://go.microsoft.com/fwlink/?LinkId=100231).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException">Параметр <paramref name="name" /> не соответствует поддерживаемому языку и региональным параметрам.</exception>
        <block subset="none" type="usage">
          <para>[! INCLUDE[net_v35_long](~/includes/NET-v35-Long-MD.MD)] и более ранних версиях исключение <see cref="T:System.ArgumentException" /> Если <paramref name="name" /> не соответствует имя поддерживаемого языка и региональных параметров. Начиная с [! Этот метод вызывает include[net_v40_long](~/includes/NET-v40-Long-MD.MD)] <see cref="T:System.Globalization.CultureNotFoundException" />.</para>
        </block>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultures">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo[] GetCultures (System.Globalization.CultureTypes types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo[] GetCultures(valuetype System.Globalization.CultureTypes types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultures (types As CultureTypes) As CultureInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Globalization::CultureInfo ^&gt; ^ GetCultures(System::Globalization::CultureTypes types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Globalization.CultureTypes" />
      </Parameters>
      <Docs>
        <param name="types">Побитовая комбинация значений перечисления, определяющих фильтрацию получаемых языков и региональных параметров.</param>
        <summary>Возвращает список поддерживаемых языков и региональных параметров, отфильтрованный по заданному значению параметра <see cref="T:System.Globalization.CultureTypes" />.</summary>
        <returns>Массив, содержащий языки и региональные параметры, определенные параметром <paramref name="types" />. Массив языков и региональных параметров не упорядочен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo.GetCultures%2A> Метод часто вызывается с `types` параметр заданы следующие значения:  
  
-   <xref:System.Globalization.CultureTypes.SpecificCultures>, который возвращает все определенные культуры.  
  
-   <xref:System.Globalization.CultureTypes.NeutralCultures>, возвращающий все нейтральные и инвариантного языка и региональных параметров.  
  
-   <xref:System.Globalization.CultureTypes.AllCultures>, который возвращает все нейтральные и конкретные языки и региональные параметры, языки и региональные параметры, установленные в системе Windows и пользовательские языки и региональные параметры, созданные этим пользователем.  
  
-   <xref:System.Globalization.CultureTypes.UserCustomCulture>, который возвращает все пользовательские языки и региональные параметры, например те, зарегистрированные с <xref:System.Globalization.CultureAndRegionInfoBuilder> класса. В версиях Windows до Windows 10 <xref:System.Globalization.CultureTypes.UserCustomCulture> значение применяется для всех определяемых пользователем пользовательские языки и региональные параметры. Начиная с Windows 10, он применяется для языков и региональных параметров системы, отсутствуют полные данные, культуры и, не имеющие уникальный локальный идентификатор, обозначенный <xref:System.Globalization.CultureInfo.LCID%2A> значение свойства. Поэтому следующий код будет возвращать другие результаты при работы на Windows 10 и более ранней версии Windows.  
  
     [!code-csharp[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures3.cs#2)]
     [!code-vb[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures3.vb#2)]  
  
   
  
## Examples  
 В следующем примере кода отображаются несколько свойств нейтральные языки и региональные параметры.  
  
> [!NOTE]
>  В примере отображаются культуры zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 идентификаторы языка и региональных параметров, соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant представляют текущий стандарт имена и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="types" /> определяет недопустимую комбинацию значений <see cref="T:System.Globalization.CultureTypes" />.</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public virtual object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">Значение <see cref="T:System.Type" />, для которого нужно получить объект форматирования. Этот метод поддерживает только типы <see cref="T:System.Globalization.NumberFormatInfo" /> и <see cref="T:System.Globalization.DateTimeFormatInfo" />.</param>
        <summary>Возвращает объект, определяющий способ форматирования заданного типа.</summary>
        <returns>Значение свойства <see cref="P:System.Globalization.CultureInfo.NumberFormat" />, являющееся объектом <see cref="T:System.Globalization.NumberFormatInfo" />, который содержит сведения о формате числа по умолчанию для текущего <see cref="T:System.Globalization.CultureInfo" />, если <paramref name="formatType" /> является объектом <see cref="T:System.Type" /> для класса <see cref="T:System.Globalization.NumberFormatInfo" />.  -или- Значение свойства <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" />, являющееся объектом <see cref="T:System.Globalization.DateTimeFormatInfo" />, который содержит сведения о формате даты и времени по умолчанию для текущего <see cref="T:System.Globalization.CultureInfo" />, если <paramref name="formatType" /> является объектом <see cref="T:System.Type" /> для класса <see cref="T:System.Globalization.DateTimeFormatInfo" />.  -или- null, если <paramref name="formatType" /> — любой другой объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Globalization.CultureInfo.GetFormat%2A> реализует интерфейс <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 `NumberFormatInfo` предоставляет числовой формат определенного языка и региональных параметров, используется в сочетании с методами в базовых типах данных. `DateTimeFormatInfo` Определяет способ форматирования значений даты и времени для определенного языка и региональных параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Служит хэш-функцией текущего класса <see cref="T:System.Globalization.CultureInfo" /> для использования в алгоритмах и структурах данных хеширования, например в хэш-таблице.</summary>
        <returns>Хэш-код для текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 Этот метод создает один и тот же хэш-код для двух объектов, которые равны в соответствии с методом <xref:System.Globalization.CultureInfo.Equals%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Не рекомендуется. Возвращает идентификацию языка по стандарту RFC 4646.</summary>
        <value>Строка, являющаяся идентификацией языка по стандарту RFC 4646.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Это свойство и <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> метод являются устаревшими. Вместо этого следует использовать <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> свойства. Теги IETF и имена идентичны.  
  
 Стандарту RFC 4646, в который ведется по Internet Engineering Task Force (IETF) определяет тег языка IETF, который представляет собой универсальное средство идентификации языка. Формат тега языка IETF аналогична имя языка и региональных параметров, возвращаемое функцией <xref:System.Globalization.CultureInfo.Name%2A> свойства, но не определяет язык и региональные параметры. То есть языков и региональных параметров, совместно использовать один и тот же тег языка IETF, если эти языки и региональные параметры имеют идентичные языковые характеристики. Языковые характеристики языка и региональных параметров содержащихся в <xref:System.Globalization.TextInfo> объекта, связанного с <xref:System.Globalization.CultureInfo> объекта.  
  
 Тег языка IETF состоит из обязательного идентификатора языка, необязательного идентификатора набора символов и необязательного идентификатора региона.  
  
 Дополнительные сведения см. в разделе [RFC 5646 «теги для языков, определение](http://go.microsoft.com/fwlink/?LinkId=230876). Список вложенные теги см. в разделе [языка подтег IANA системного реестра](http://go.microsoft.com/fwlink/?LinkId=230877).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.CultureInfo" />, представляющий язык и региональные параметры, установленные с операционной системой.</summary>
        <value>Объект <see cref="T:System.Globalization.CultureInfo" />, представляющий язык и региональные параметры, установленные с операционной системой.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В локализованной операционной системе, например японского языка Windows это свойство возвращает культуру операционной системы. Это свойство эквивалентно `GetSystemDefaultUILanguage` в формате Windows API.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InvariantCulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.CultureInfo" />, не зависящий от языка и региональных параметров (инвариантный).</summary>
        <value>Объект, не зависящий от языка и региональных параметров (инвариантный).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Инвариантный язык и региональные параметры не учитывает язык и региональные параметры; он связан с английским языком, но не с любой страны или региона. Укажите инвариантного языка и региональных параметров по имени с помощью пустая строка ("») в вызове <xref:System.Globalization.CultureInfo> создание экземпляра метода. <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> также извлекает экземпляр инвариантного языка и региональных параметров. Он может использоваться практически любой метод <xref:System.Globalization> пространство имен, которое требуется языка и региональных параметров. Объекты, возвращаемые свойства, такие как <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, и <xref:System.Globalization.CultureInfo.NumberFormat%2A> также отражают сравнения строк и форматирования соглашения инвариантных региональных параметров.  
  
 В отличие от данных язык и региональные параметры, которые может быть изменена с пользовательской настройки или изменения в платформе .NET Framework или операционной системы, данных инвариантного языка и региональных параметров является устойчивой по времени и в разных языках, установленных и ее нельзя настраивать пользователями. Это делает инвариантный язык и региональные параметры особенно полезно для операций, которые требуют зависящий от языка и региональных параметров, таких как форматирования и анализа операций, которые сохраняются в формате данных, или сортировки и упорядочения операций, требующих отображения данных в фиксированном порядке независимо от языка и региональных параметров.  
  
## <a name="string-operations"></a>Операции со строками  
 Инвариантный язык и региональные параметры можно использовать для операций строк с учетом языка и региональных параметров, не повлияли правила языка и региональных параметров текущего потока и, одинаковы для языков и региональных параметров. Например может потребоваться отсортированные данные отображаются в определенном порядке или применить стандартный набор правила регистра для строки, независимо от языка и региональных параметров текущего потока. Чтобы сделать это, передайте <xref:System.Globalization.CultureInfo.InvariantCulture%2A> объект для метода, имеющего <xref:System.Globalization.CultureInfo> параметров, таких как <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Globalization.CultureInfo%29> и <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29>.  
  
## <a name="persisting-data"></a>Сохранение данных  
 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> Свойство может использоваться для сохранения данных в формате, зависящий от языка и региональных параметров. Это обеспечивает известный формат остается неизменным, и который может использоваться для сериализации и десериализации данных в разных языках. После десериализации данных, их можно отформатировать соответствии национальные стандарты текущего пользователя.  
  
 Например, если вы решите сохранить данные даты и времени в виде строки, можно передать <xref:System.Globalization.CultureInfo.InvariantCulture%2A> объект <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> или <xref:System.DateTimeOffset.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> можно передать в метод для создания строки и <xref:System.Globalization.CultureInfo.InvariantCulture%2A> объект <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> или <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> метод для преобразования строки в значение даты и времени. Этот метод гарантирует, что базовые даты и времени значения не изменяются при чтении или записи пользователями из разных языков и региональных параметров данных.  
  
 В следующем примере используется инвариантный язык и региональные параметры для сохранения <xref:System.DateTime> значение в виде строки. Он анализирует строку и отображение его значения с использованием соглашений о форматировании французский (Франция) и немецкий (Германия) языков и региональных параметров.  
  
 [!code-csharp[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/cs/persist1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/vb/persist1.vb#1)]  
  
## <a name="security-decisions"></a>Решения в области безопасности  
 Если вы выполняете решение, влияющее на безопасность (например, следует ли разрешить доступ к ресурсу системы) на основе результата сравнения строк или изменения регистра, не следует использовать инвариантный язык и региональные параметры. Вместо этого следует выполнить порядковое сравнение с учетом регистра и без учета регистра путем вызова метода, который включает <xref:System.StringComparison> параметр и указания либо <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> или <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> в качестве аргумента. Код, выполняющий строковые операции с учетом языка и региональных параметров может привести к уязвимостям системы безопасности, при изменении текущего языка и региональных параметров, или если язык и региональные параметры на компьютере, на котором выполняется код отличается от языка и региональных параметров, используемый для проверки кода. Напротив порядковое сравнение зависит только от двоичное значение сравниваемых символов.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsNeutralCulture">
      <MemberSignature Language="C#" Value="public virtual bool IsNeutralCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNeutralCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsNeutralCulture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNeutralCulture { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, представляет ли текущий объект <see cref="T:System.Globalization.CultureInfo" /> нейтральный язык и региональные параметры.</summary>
        <value>Значение <see langword="true" />, если текущий объект <see cref="T:System.Globalization.CultureInfo" /> представляет нейтральный язык и региональные параметры, в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Нейтральный язык и региональные параметры — это культура, связанный с языком, но не с страны или региона. Он отличается от определенной культуры, язык и региональные параметры, связанный с как язык и страной или регионом. Например fr — для французского языка, например, имя, а fr-FR — это имя для французского языка и региональных параметров во Франции.  
  
 Если это свойство возвращает `false`, языка и региональных параметров является определенного языка и региональных параметров или инвариантного языка и региональных параметров.  
  
   
  
## Examples  
 В следующем примере кода определяет, какие языки и региональные параметры, с помощью китайского языка, нейтральные языки и региональные параметры.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant представляют текущий стандарт имена и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CPP/neutralculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CS/neutralculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/VB/neutralculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли текущий объект <see cref="T:System.Globalization.CultureInfo" /> доступным только для чтения.</summary>
        <value>Значение <see langword="true" />, если текущий объект <see cref="T:System.Globalization.CultureInfo" /> доступен только для чтения, в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Globalization.CultureInfo> доступно только для чтения, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и <xref:System.Globalization.CultureInfo.NumberFormat%2A> экземпляры также доступны только для чтения.  
  
   
  
## Examples  
 В следующем примере кода показано, что <xref:System.Globalization.CultureInfo.IsReadOnly%2A> также помогает защитить <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo> экземпляры, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public virtual int KeyboardLayoutId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyboardLayoutId { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает активный идентификатор языка ввода.</summary>
        <value>32-битный номер со знаком, указывающий идентификатор языка ввода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Идентификатор языка ввода называлось раскладка клавиатуры. Идентификатор языка ввода является более широким понятием, чем раскладка клавиатуры, так как он может обозначать преобразователь речи в текст, редактор метода ввода (IME) или любые другие формы ввода.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public virtual int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LCID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает идентификатор языка и региональных параметров для текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Идентификатор языка и региональных параметров для текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В большинстве случаев идентификатор языка и региональных параметров сопоставляется соответствующий идентификатор языка NLS.  
  
 В версиях Windows до Windows 10, идентификатор языкового стандарта `LOCALE_CUSTOM_UNSPECIFIED` (0x1000 или 4096) присваивается пользовательские языки и региональные параметры, созданные этим пользователем. Начиная с Windows 10, ему назначается любой язык и региональные параметры, не имеет уникальный локали и не имеет полные данные, предоставляемые системой. В результате код, который выполняет итерацию языков и региональных параметров и возвращает значение, с <xref:System.Globalization.CultureInfo.LCID%2A> значение `LOCALE_CUSTOM_UNSPECIFIED` возвращает больше подмножество <xref:System.Globalization.CultureInfo> объекты, если выполняются под Windows 10.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Globalization.CultureInfo> испанский (Испания) с международный порядок сортировки, а вторая <xref:System.Globalization.CultureInfo> с традиционный порядок сортировки.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя языка и региональных параметров в формате *languagecode2*-*country/regioncode2*.</summary>
        <value>Имя языка и региональных параметров в формате * languagecode2 *-* country / regioncode2 *. * languagecode2 * является двухбуквенный код в нижнем регистре, производный от ISO 639-1. * country / regioncode2 * является производным от ISO 3166 и обычно состоит из 2 прописных букв или из тега языка BCP-47.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список предварительно определенных названий языков, а также идентификаторы, <xref:System.Globalization.CultureInfo.Name%2A> см. свойство может вернуть, [Справочник по API многоязыковой поддержки (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) в центре разработчиков Go Global. Кроме того, начиная с Windows 10 `name` может быть любой допустимый тега языка BCP-47. Обратите внимание, что имена языка и региональных параметров могут быть изменены и что они также может отражают имена языков и региональных параметров пользовательского.  
  
 <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> Свойства соответствует именования стандартам, предоставляемых в <xref:System.Globalization.CultureInfo> разделе, посвященном классу. Возвращает имя языка и региональных параметров, исключается обозначение альтернативный порядок сортировки в краткой форме. Например, при создании экземпляра <xref:System.Globalization.CultureInfo> объекта, используя строку «de-DE_phoneb» для отражения альтернативный порядок сортировки, <xref:System.Globalization.CultureInfo.Name%2A> свойство возвращает «de-DE».  
  
 Чтобы получить полное имя языка и региональных параметров, следует использовать <xref:System.Globalization.CultureInfo.DisplayName%2A>, <xref:System.Globalization.CultureInfo.EnglishName%2A>, или <xref:System.Globalization.CultureInfo.NativeName%2A> свойства.  
  
   
  
## Examples  
 В следующем примере кода отображаются несколько свойств нейтральные языки и региональные параметры.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant представляют текущий стандарт имена и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NativeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя языка и региональных параметров, состоящих из языка, страны или региона и дополнительного набора символов, которые свойственны для этого языка.</summary>
        <value>Имя языка и региональных параметров. состоит из полного имени языка, полного имени страны или региона и дополнительного набора символов. Дополнительные сведения о формате см. в описании класса <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этого свойства одинаково, независимо от языковой версии платформы .NET Framework.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий формат отображения чисел, денежной единицы и процентов, соответствующий языку и региональным параметрам.</summary>
        <value>Объект <see cref="T:System.Globalization.NumberFormatInfo" />, определяющий формат отображения чисел, денежной единицы и процентов, соответствующий языку и региональным параметрам.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a>Overrides  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем язык и региональные параметры в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, используемый по умолчанию для региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущей культурой Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 Значения <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство и <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства не вычисляются, пока пользователь обращается к свойству. Если пользователь использует панели управления, чтобы изменить текущий язык и региональные параметры новый язык и региональные параметры, когда приложение работает, а затем обращается к <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> или <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства, приложение получает значения по умолчанию для нового языка и региональных параметров. не является переопределением для исходного языка и региональных параметров. Для сохранения переопределений для исходного текущего языка и региональных параметров, приложение следует обратиться к <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойства перед изменением текущего языка и региональных параметров.  
  
   
  
## Examples  
 В следующем примере кода показано, что CultureInfo.Clone копирует также <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo> экземпляры, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задано значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> или любого из свойств <see cref="T:System.Globalization.NumberFormatInfo" /> заданы значения, а <see cref="T:System.Globalization.CultureInfo" /> доступен только для чтения.</exception>
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="OptionalCalendars">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar[] OptionalCalendars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] OptionalCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OptionalCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Globalization::Calendar ^&gt; ^ OptionalCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает список календарей, которые могут использоваться в данном языке и региональных параметров.</summary>
        <value>Массив типа <see cref="T:System.Globalization.Calendar" />, представляющий календари, которые могут использоваться в языке и региональных параметрах, представленных текущим <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения изменяется календарь, используемый текущим <xref:System.Globalization.CultureInfo> , установив <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, который является экземпляром класса <xref:System.Globalization.DateTimeFormatInfo> класса. Новый календарь должен быть одним из календарей, перечисленных в <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> также включает другие свойства, регулирующие форматирование даты и времени, связанные с <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как определить <xref:System.Globalization.GregorianCalendar> версии, поддерживаемые языком и региональными параметрами.  
  
 [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CPP/gregoriancalendartypes.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CS/gregoriancalendartypes.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/VB/gregoriancalendartypes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CultureInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.CultureInfo" />, представляющий родительский язык и региональные параметры текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Объект <see cref="T:System.Globalization.CultureInfo" />, представляющий родительский язык и региональные параметры текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существует иерархия культур в которой родительским для определенного языка и региональных параметров является нейтральным языком и региональными параметрами, является родительским для нейтрального языка и региональных параметров <xref:System.Globalization.CultureInfo.InvariantCulture%2A>, который является родительским для <xref:System.Globalization.CultureInfo.InvariantCulture%2A> инвариантный язык и региональные параметры, сам. Родительская культура включает только те сведения, которые являются общими для дочерних.  
  
 Если в системе не доступны ресурсы для конкретного языка и региональных параметров, используются ресурсы для нейтрального языка и региональных параметров. Если недоступны ресурсы для нейтрального языка и региональных параметров, используются ресурсы, встроенные в основную сборку. Дополнительные сведения о процесс использования резервных ресурсов см. в разделе [упаковка и развертывание ресурсов](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
   
  
## Examples  
 В следующем примере кода определяет родительский язык и региональные параметры каждого конкретного языка и региональных параметров с помощью китайского языка.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant представляют текущий стандарт имена и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CPP/parentculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CS/parentculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/VB/parentculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo ReadOnly (System.Globalization.CultureInfo ci);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo ReadOnly(class System.Globalization.CultureInfo ci) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (ci As CultureInfo) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ ReadOnly(System::Globalization::CultureInfo ^ ci);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, для которого создается оболочка.</param>
        <summary>Возвращает программу-оболочку, доступную только для чтения, для заданного объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <returns>Доступная только для чтения программа-оболочка <see cref="T:System.Globalization.CultureInfo" /> для параметра <paramref name="ci" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта оболочка предотвращает изменения в `ci`, или объекты, возвращаемые `ci`.<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> и `ci`.<xref:System.Globalization.CultureInfo.NumberFormat%2A> Свойства.  
  
   
  
## Examples  
 В следующем примере показано, что <xref:System.Globalization.CultureInfo.ReadOnly%2A> метод помогает защитить <xref:System.Globalization.DateTimeFormatInfo> и <xref:System.Globalization.NumberFormatInfo> экземпляры, связанные с <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="ci" /> имеет значение null.</exception>
        <altmember cref="P:System.Globalization.CultureInfo.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.TextInfo TextInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.TextInfo" />, определяющий систему письма, связанную с данным языком и региональными параметрами.</summary>
        <value>Объект <see cref="T:System.Globalization.TextInfo" />, определяющий систему письма, связанную с данным языком и региональными параметрами.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo.TextInfo%2A> Свойство предоставляет сведения о регистре для строк. Чтобы выполнить регистра без учета языка и региональных параметров, приложение должно использовать <xref:System.Globalization.CultureInfo.TextInfo%2A> свойство <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Globalization.CultureInfo> испанский (Испания) с международный порядок сортировки, а вторая <xref:System.Globalization.CultureInfo> с традиционный порядок сортировки.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает трехбуквенный код ISO 639-2 для языка текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Трехбуквенный код ISO 639-2 для языка текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Например трехбуквенное обозначение для английского языка — «eng».  
  
> [!NOTE]
>  При обмене данными между обрабатывает или сохранения данных, обычно лучше использовать полный <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Использование только языка может привести к потере контекста и данных.  
  
   
  
## Examples  
 В следующем примере кода отображаются несколько свойств нейтральные языки и региональные параметры.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant представляют текущий стандарт имена и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает трехбуквенный код для языка, определенный в формате Windows API.</summary>
        <value>Трехбуквенный код для языка, определенный в формате Windows API.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает то же значение, что и метод Windows API `GetLocaleInfo` со значением LOCALE_SABBREVLANGNAME. Например трехбуквенный код для английского языка (США), определенный в формате Windows API — «enu».  
  
> [!NOTE]
>  При обмене данными между обрабатывает или сохранения данных, обычно лучше использовать полный <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Использование только языка может привести к потере контекста и данных.  
  
   
  
## Examples  
 В следующем примере кода отображаются несколько свойств нейтральные языки и региональные параметры.  
  
> [!NOTE]
>  В данном примере отображаются старые имена языков и региональных параметров zh-CHS и zh-CHT с идентификаторами 0x0004 и 0x7C04 соответственно. Тем не менее Windows Vista приложений следует использовать имя zh-Hans вместо zh-CHS и zh-Hant имя вместо zh-CHT. Zh-Hans и zh-Hant представляют текущий стандарт имена и должны использоваться, если у вас нет причин для использования прежних имен.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, содержащую имя текущего объекта <see cref="T:System.Globalization.CultureInfo" /> в формате *languagecode2*-*country/regioncode2*.</summary>
        <returns>Строка, содержащая имя текущего объекта<see cref="T:System.Globalization.CultureInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Object.ToString%2A?displayProperty=nameWithType>. Возвращает имя языка и региональных параметров, передаваемое нормализованную версию <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> или <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> конструктор или <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> или <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29> метод. Выполняется нормализация результирующую строку путем преобразования символов в *languagecode2* в нижнем регистре и преобразование символов в *код_страны_или_региона2* в верхний регистр при необходимости.  
  
 Предварительно определенных названий языков перечислены в [Справочник по API многоязыковой поддержки (NLS)](http://go.microsoft.com/fwlink/?LinkId=200048) страницы в центре разработчиков Go Global.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает двухбуквенный код ISO 639-1 для языка текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</summary>
        <value>Двухбуквенный код ISO 639-1 для языка текущего объекта <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Например двухбуквенный код для английского языка — «en». <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> Значение свойства для инвариантных региональных параметров является «iv».  
  
> [!NOTE]
>  При обмене данными между обрабатывает или сохранения данных, обычно лучше использовать полный <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Использование только языка может привести к потере контекста и данных.  
  
 Если ISO 639-1 не определяет языка двухбуквенный код для определенного языка и региональных параметров <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> свойство возвращает строку, состоящую из трех и более букв. Дополнительные сведения см. пример.  
  
   
  
## Examples  
 В следующем примере перечисляются языки и региональные параметры которого <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> свойство не может состоять из языка двухбуквенный код.  
  
 [!code-csharp[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/cs/twoletterisolanguagename1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/vb/twoletterisolanguagename1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="UseUserOverride">
      <MemberSignature Language="C#" Value="public bool UseUserOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseUserOverride" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.UseUserOverride" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseUserOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseUserOverride { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, использует ли текущий объект <see cref="T:System.Globalization.CultureInfo" /> параметры языка и региональных параметров, выбранные пользователем.</summary>
        <value>Значение <see langword="true" />, если текущий <see cref="T:System.Globalization.CultureInfo" /> использует параметры языка и региональных параметров, выбранные пользователем; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователь может выбрать переопределить некоторые значения, связанные с текущей культурой Windows путем язык и региональные параметры в панели управления. Например пользователь может выбрать для отображения даты в другом формате или использовать денежные единицы, используемый по умолчанию для региональных параметров.  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A> — `true` и указанного языка и региональных параметров совпадает с текущей культурой Windows, <xref:System.Globalization.CultureInfo> использует эти переопределения, включая пользовательские настройки для свойства <xref:System.Globalization.DateTimeFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойства и свойства <xref:System.Globalization.NumberFormatInfo> экземпляр, возвращаемый <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo>, например, если выбранный календарь не является одним из <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, результаты методов и значения свойств не определены.  
  
 Это свойство задается <xref:System.Globalization.CultureInfo> создается.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>