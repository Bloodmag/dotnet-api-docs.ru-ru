<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58b615e5d2d253f3653c3e71a86ddf7e29f513ba" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36487655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type DateTimeFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides culture-specific information about the format of date and time values.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства <xref:System.Globalization.DateTimeFormatInfo> класс содержит сведения о культуре для форматирования или синтаксического анализа значений даты и времени из следующего:  
  
-   Шаблоны, используемые для форматирования значения даты.  
  
-   Шаблоны, используемые для форматирования значения времени.  
  
-   Названия дней недели.  
  
-   Названия месяцев года.  
  
-   По и после полудня обозначения, используемые в значения времени.  
  
-   Календарь, в котором выражаются дат.  
  
 Содержание  
  
-   [Создание экземпляра объекта DateTimeFormatInfo](#instantiating)  
  
    -   [Для инвариантных региональных параметров](#instantiating_Invariant)  
  
    -   [Для определенного языка и региональных параметров](#instantiating_Specific)  
  
    -   [Для нейтрального языка и региональных параметров](#instantiating_neutral)  
  
    -   [Для текущего языка и региональных параметров](#instantiating_Current)  
  
-   [DateTimeFormatInfo и динамических данных](#dynamic)  
  
-   [Форматирование значения даты и времени](#Formatting_dates_times)  
  
-   [Свойства DateTimeFormatInfo и строки формата](#properties)  
  
-   [Изменение свойства DateTimeFormatInfo](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>Создание экземпляра объекта DateTimeFormatInfo  
 Объект <xref:System.Globalization.DateTimeFormatInfo> объект может представлять соглашения о форматировании инвариантных региональных параметров, заданных региональных параметров, нейтрального языка и региональных параметров или текущего языка и региональных параметров. В этом разделе описываются способы создания экземпляра каждого типа <xref:System.Globalization.DateTimeFormatInfo> объекта.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для инвариантных региональных параметров  
 Инвариантный язык и региональные параметры представляет язык и региональные параметры без учета языка и региональных параметров. Он основан на английском языке, но не на любой определенной-английски страны или региона. Несмотря на то, что данные определенных языков и региональных параметров могут быть динамическими и можно изменить в соответствии с новой национальные стандарты или пользовательские настройки, не изменяет данные инвариантного языка и региональных параметров. Можно создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании инвариантных региональных параметров одним из следующих способов:  
  
-   Путем получения значения из <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> свойство. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Путем вызова без параметров <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> конструктор. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
-   Путем получения значения из <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство из <xref:System.Globalization.CultureInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> свойство. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
 В следующем примере каждый из этих методов для создания экземпляра <xref:System.Globalization.DateTimeFormatInfo> , представляющий инвариантного языка и региональных параметров. Затем указывает, является ли объект только для чтения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для определенного языка и региональных параметров  
 Конкретная культура представляет язык, используемый в конкретной страны или региона. Например, en US является определенного языка и региональных параметров, представляющий английского языка в США; она en-CA определенного языка и региональных параметров, представляющий английский язык, на котором говорят в Канаде. Можно создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании для определенного языка и региональных параметров одним из следующих способов:  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> метод и получение значения, возвращаемого <xref:System.Globalization.CultureInfo> объекта <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Путем передачи статический <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> метод <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры которого <xref:System.Globalization.DateTimeFormatInfo> объекта, которые необходимо получить. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
-   Путем вызова статического <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> метод и получение значения, возвращаемого <xref:System.Globalization.CultureInfo> объекта <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> класса конструктор и получение значения, возвращаемого <xref:System.Globalization.CultureInfo> объекта <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство. Возвращаемый объект <xref:System.Globalization.DateTimeFormatInfo> доступен для чтения и записи.  
  
 В следующем примере демонстрируется каждый из этих способов создания экземпляров <xref:System.Globalization.DateTimeFormatInfo> объекта и указывает, является ли результирующий объект только для чтения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для нейтрального языка и региональных параметров  
 Представляет нейтральный язык и региональные параметры языка и региональных параметров или языка, который не зависит от страны или региона; Обычно он является родительским для одного или нескольких конкретных языков. Например Fr представляет нейтральный язык и региональные параметры для французского языка, который является родительским для региональных параметров fr-FR. Можно создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании нейтрального языка и региональных параметров теми же способами, создаваемого <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании для определенного языка и региональных параметров. Кроме того, можно получить нейтральной культуре <xref:System.Globalization.DateTimeFormatInfo> путем извлечения нейтрального языка и региональных параметров из определенной культуры <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> свойство и получение <xref:System.Globalization.DateTimeFormatInfo> объект, возвращаемый его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство. Если родительская культура представляет инвариантных региональных параметров, возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект является чтение и запись. Следующий пример иллюстрирует эти способа создания <xref:System.Globalization.DateTimeFormatInfo> объект, который представляет нейтральный язык и региональные параметры.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  В .NET Framework версии 1.0 через [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], при попытке получить <xref:System.Globalization.DateTimeFormatInfo> создает объект, который отражает соглашения о форматировании нейтрального языка и региональных параметров <xref:System.NotSupportedException> исключение.  
  
 Тем не менее нейтральный язык и региональные параметры отсутствуют сведения о форматировании для определенного языка и региональных параметров, так как она не зависит от конкретного страны или региона. Вместо заполнения <xref:System.Globalization.DateTimeFormatInfo> объекта универсального значениями, .NET Framework возвращает <xref:System.Globalization.DateTimeFormatInfo> объект, который отражает соглашения о форматировании для определенного языка и региональных параметров, является дочерним для нейтрального языка и региональных параметров. Например <xref:System.Globalization.DateTimeFormatInfo> объекта для региональных параметров en US, соглашений о форматировании отражает en нейтрального языка и региональных параметров и <xref:System.Globalization.DateTimeFormatInfo> объекта для региональных параметров fr отражает соглашения о форматировании языка и региональных параметров fr-FR.  
  
 Чтобы определить, какие определенного языка и региональных параметров соглашения о форматировании представляет нейтральный язык и региональные параметры, можно использовать код, аналогичный следующему. В примере отражение используется для сравнения <xref:System.Globalization.DateTimeFormatInfo> свойства нейтрального языка и региональных параметров с помощью свойств дочерних языка и региональных параметров. Он рассматривает двух календарей, которые были эквивалентны, если они относятся к одному типу календаря и григорианский календари, если их <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> свойства имеют одинаковые значения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>Создание экземпляра объекта DateTimeFormatInfo для текущего языка и региональных параметров  
 Можно создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании текущего языка и региональных параметров одним из следующих способов:  
  
-   Путем получения значения из <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> свойство. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Путем получения значения из <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> свойство из <xref:System.Globalization.CultureInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
-   Путем вызова <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> метод с <xref:System.Globalization.CultureInfo> объект, представляющий текущий язык и региональные параметры. Возвращенный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения.  
  
 В следующем примере каждый из этих методов для создания экземпляра <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании текущего языка и региональных параметров. Затем указывает, является ли объект только для чтения.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 Можно создать доступный для записи <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения текущих региональных параметров потока в одном из следующих способов:  
  
-   Путем получения <xref:System.Globalization.DateTimeFormatInfo> объекта в любом из трех предыдущих способов и вызова <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> метод в возвращенном <xref:System.Globalization.DateTimeFormatInfo> объекта. При этом создается копия исходного <xref:System.Globalization.DateTimeFormatInfo> объекта, за исключением того, что его <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> свойство `false`.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> метод для создания <xref:System.Globalization.CultureInfo> объект, представляющий текущий язык и региональные параметры, а затем использовать его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> извлекаемого свойства <xref:System.Globalization.DateTimeFormatInfo> объекта.  
  
 В следующем примере демонстрируется каждый способ создания, чтения и записи <xref:System.Globalization.DateTimeFormatInfo> объекта и отображает значение его <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> свойство.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 В Windows, можно переопределить некоторые из <xref:System.Globalization.DateTimeFormatInfo> значения свойства, используемые при форматировании и разборе операции с помощью **язык и региональные стандарты** приложение панели управления. Например пользователь, языком и региональными параметрами является английский (США) может выбрать отображение длинные значения времени, с использованием 24-часовом формате (в формате ЧЧ) вместо в 12-часовом формате по умолчанию (в формате: mm: SS). <xref:System.Globalization.DateTimeFormatInfo> Объектами, возвращаемыми способами описанные ранее соответствуют эти переопределения пользователем. Если это нежелательно, можно создать <xref:System.Globalization.NumberFormatInfo> объекта, который не отражает пользователя переопределяет (и также является чтение и запись, а не только для чтения), вызвав <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> конструктор и указав значение `false` для `useUserOverride` аргумент. В следующем примере это для системы которого текущий язык — английский (США) и которого долго шаблон был изменен со значения по умолчанию: mm: ss на чч.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo и динамических данных  
 Данные определенного языка и региональных параметров для форматирования значений даты и времени, предоставляемые <xref:System.Globalization.DateTimeFormatInfo> класс является динамическим, так же, как данные, предоставляемые <xref:System.Globalization.CultureInfo> класса. Нельзя делать никаких предположений о стабильности значений для <xref:System.Globalization.DateTimeFormatInfo> объектов, связанных с конкретным <xref:System.Globalization.CultureInfo> объектов. Только данные, предоставляемые инвариантного языка и региональных параметров и связанная с ним <xref:System.Globalization.DateTimeFormatInfo> стабильна объекта. Другие данные, можно изменить между сеансами приложения или даже в том случае, когда приложение запущено. Существует четыре основных источника изменений.  
  
-   Обновления системы. Со временем изменяются региональные параметры, такие как предпочтительный календарь или обычной форматы даты и времени. В этом случае Windows обновление включает изменения <xref:System.Globalization.DateTimeFormatInfo> значение свойства для конкретного языка и региональных параметров.  
  
-   Замена языков и региональных параметров. <xref:System.Globalization.CultureAndRegionInfoBuilder> Класс может использоваться для замены данных существующего языка и региональных параметров.  
  
-   Каскадные изменения значений свойств. Можно изменить число свойств, связанных с языком и региональными параметрами, во время выполнения, который в свою очередь, вызывает <xref:System.Globalization.DateTimeFormatInfo> об изменениях. Например можно изменить текущий язык и региональные параметры программно или в результате действия пользователя. В этом случае <xref:System.Globalization.DateTimeFormatInfo> объект, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> изменения свойств объекта, связанного с текущими региональными параметрами. Аналогичным образом можно изменить календарь для региональных параметров, который может привести к изменениям в многочисленных <xref:System.Globalization.DateTimeFormatInfo> значений свойств.  
  
-   Персональные настройки пользователя. Пользователи приложения можно переопределить некоторые значения, связанные с текущей культурой системы через региональные и языковые параметры в панели управления. Например пользователи могут выбрать для отображения даты в другом формате. Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> свойству `true`, свойства <xref:System.Globalization.DateTimeFormatInfo> также извлечь объект из параметров пользователя. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo> объекта (например, в том случае, если выбранный календарь не является одним из календарей, обозначенном <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> свойства), результаты методов и значения свойств не определены.  
  
 Чтобы свести к минимуму вероятность несогласованности данных, все свойства могут быть переопределены пользователем <xref:System.Globalization.DateTimeFormatInfo> объекта инициализируются при создании объекта. По-прежнему возможна несогласованность, так как ни создание объекта, ни процесс переопределения пользователем является атомарной и соответствующие значения можно изменить при создании объекта. Однако такой ситуации необходимо крайне редко.  
  
 Можно управлять ли пользователь переопределений, отражаются в <xref:System.Globalization.DateTimeFormatInfo> объекты, представляющие языка и региональных параметров, языку и региональным параметрам системы. В следующей таблице перечислены способы, с помощью которого <xref:System.Globalization.DateTimeFormatInfo> объекта можно получить и указывает, отражает ли полученный объект переопределения пользователем.  
  
|Источник объекта CultureInfo и DateTimeFormatInfo|Отражает переопределения пользователем|  
|---------------------------------------------------------|-----------------------------|  
|Свойство `CultureInfo.CurrentCulture.DateTimeFormat`|Да|  
|Свойство <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>|Да|  
|Метод <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>|Да|  
|Метод <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>|Нет|  
|Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType>|Да|  
|Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>|Зависит от значения `useUserOverride` параметр|  
  
 Если нет особой причины делать по-другому, пользователь переопределения должны учитывать при использовании <xref:System.Globalization.DateTimeFormatInfo> объекта в клиентских приложениях для форматирования и анализа пользовательского ввода или для отображения данных. Для сервера приложений или автоматического приложений не следует. Тем не менее если вы используете <xref:System.Globalization.DateTimeFormatInfo> объекта либо явно или неявно для сохранения данных даты и времени в виде строки, следует использовать либо <xref:System.Globalization.DateTimeFormatInfo> следует указать объект, который отражает соглашения о форматировании инвариантных региональных параметров, или пользовательского формата даты и времени, можно использовать независимо от языка и региональных параметров.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>Форматирование значения даты и времени  
 Объект <xref:System.Globalization.DateTimeFormatInfo> объект используется явно или неявно в все даты и времени, в операциях форматирования. К ним относятся вызовы следующих методов:  
  
-   Все форматирования даты и времени методы, такие как <xref:System.DateTime.ToString?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.  
  
-   Основной метод составного форматирования, что является <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Других методов составного форматирования, такие как <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> и <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Все даты и времени, операций форматирования сделать использование <xref:System.IFormatProvider> реализации. <xref:System.IFormatProvider> Интерфейс включает один метод <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>. Этот метод обратного вызова передается <xref:System.Type> , представляющий тип, необходимой для предоставления сведений о форматировании. Метод возвращает экземпляр этого типа или `null` , если он не может предоставлять экземпляр типа. Платформа .NET Framework включает два <xref:System.IFormatProvider> реализации для форматирования даты и времени:  
  
-   <xref:System.Globalization.CultureInfo> Класс, который представляет определенного языка и региональных параметров (или конкретного языка в определенные страну или регион). В форматировании даты и времени операции <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> возвращает <xref:System.Globalization.DateTimeFormatInfo> объект, связанный с его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> Класс, предоставляющий сведения о соглашений о форматировании языка и региональных параметров, его связанные. <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> Метод возвращает экземпляр самого себя.  
  
 Если <xref:System.IFormatProvider> реализацию явно не указан для метода форматирования, <xref:System.Globalization.CultureInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> используется свойство, представляющее язык и региональные параметры текущего потока.  
  
 В следующем примере показано отношение между <xref:System.IFormatProvider> интерфейс и <xref:System.Globalization.DateTimeFormatInfo> класс в операциях форматирования. Он определяет пользовательский <xref:System.IFormatProvider> реализация которого <xref:System.IFormatProvider.GetFormat%2A> метод отображает тип объекта, запрашиваемые операции форматирования. Если он запрашивает <xref:System.Globalization.DateTimeFormatInfo> объекта, этот метод обеспечивает <xref:System.Globalization.DateTimeFormatInfo> объект для текущего языка и региональных параметров потока. Как видно в результатах показано в примере <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> запросов методов <xref:System.Globalization.DateTimeFormatInfo> для получения сведения о форматировании, тогда как <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> запросов методов <xref:System.Globalization.NumberFormatInfo> и <xref:System.Globalization.DateTimeFormatInfo> объектов, а также <xref:System.ICustomFormatter> Реализация.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
<a name="properties"></a>   
## <a name="format-strings-and-datetimeformatinfo-properties"></a>Свойства DateTimeFormatInfo и строки формата  
 <xref:System.Globalization.DateTimeFormatInfo> Объект включает в себя три типа свойства, используемые в операциях форматирования со значениями даты и времени:  
  
-   Свойства, связанные с календаря. Такие свойства, как <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, и <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, связаны с календарь, используемый язык и региональные параметры, которая определяется <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство. Эти свойства используются для даты и форматы времени.  
  
-   Свойства, возвращающих определенные стандарты результирующую строку. <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, И <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> свойства содержат строк настраиваемого формата, производящих результирующие строки определяется международным стандартам. Эти свойства доступны только для чтения и не может быть изменено.  
  
-   Свойства, определяющие строки результата, зависящие от языка и региональных параметров. Некоторые свойства, такие как <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> и <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, содержащие [строк настраиваемого формата](~/docs/standard/base-types/custom-date-and-time-format-strings.md) , укажите формат результирующей строки. Другие, такие как <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>, <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, и <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, определить символы, зависящие от культуры или подстрок, которые могут быть включены в результирующую строку.  
  
 [Стандартных форматов даты и времени строки](~/docs/standard/base-types/standard-date-and-time-format-strings.md), такие как «d», «D», «f» и «F», псевдонимы, которые соответствуют конкретным <xref:System.Globalization.DateTimeFormatInfo> форматирования свойства шаблона. Большинство [настраиваемых форматов даты и времени строки](~/docs/standard/base-types/custom-date-and-time-format-strings.md) связаны с строк или подстрок, операция форматирования вставляет в результирующем потоке. В следующей таблице перечислены стандартных и пользовательских даты и времени описателей формата и связанные с ними <xref:System.Globalization.DateTimeFormatInfo> свойства. Сведения о том, как описатели формата, см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) и [пользовательских строк даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md). Обратите внимание, что соответствует каждой строки стандартного формата <xref:System.Globalization.DateTimeFormatInfo> свойства, значение которого является пользовательского формата даты и времени. Отдельные спецификаторы в данной строке настраиваемого формата в свою очередь соответствуют других <xref:System.Globalization.DateTimeFormatInfo> свойства. В таблице перечислены только <xref:System.Globalization.DateTimeFormatInfo> свойства которых — это псевдонимы строк стандартного формата и не свойства списка, доступ к которым может быть назначен свойства-псевдонимы строк настраиваемого формата. Кроме того, в таблице перечислены только настраиваемых описателей формата, соответствующих <xref:System.Globalization.DateTimeFormatInfo> свойства.  
  
|Описатель формата|Связанные свойства|  
|----------------------|---------------------------|  
|«d» (краткий формат даты, строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, чтобы определить общий формат результирующей строки.|  
|«D» (длинный формат даты, строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, чтобы определить общий формат результирующей строки.|  
|«f» (полная дата / краткая времени; Стандартная строка форматирования)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|«F» (полная дата / длительное время; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|«g» (полный формат даты и краткого формата времени; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|«G» (полный формат даты / времени времени, стандартные строки формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, чтобы определить формат компонента даты результирующей строки.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, чтобы определить формат компонента времени результирующей строки.|  
|«M», «m» (месяц/день; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, чтобы определить общий формат результирующей строки.|  
|«O», «o» (обратного преобразования даты и времени; строка стандартного формата)|Отсутствует.|  
|«R», «r» (RFC1123; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, чтобы определить результирующую строку, которая соответствует стандарту RFC 1123. Свойство доступно только для чтения.|  
|«s» (шаблон даты и времени, строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, чтобы определить результирующую строку, которая соответствует стандарту ISO 8601. Свойство доступно только для чтения.|  
|«t» (короткое время; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, чтобы определить общий формат результирующей строки.|  
|«T» (длительное время, строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, чтобы определить общий формат результирующей строки.|  
|«u» (универсальный шаблон даты и времени, строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, чтобы определить результирующую строку, которая соответствует стандарту ISO 8601 время по Гринвичу. Свойство доступно только для чтения.|  
|«U» (универсальный полный формат даты и времени, строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, чтобы определить общий формат результирующей строки.|  
|«Y», «y» (год-месяц; строка стандартного формата)|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, чтобы определить общий формат результирующей строки.|  
|(описатель настраиваемого формата) «ddd»|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, чтобы включить в результирующую строку сокращенное название дня недели.|  
|«g», «gg» (настраиваемый описатель формата)|Вызовы <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> метод, чтобы вставить имя эру в результирующую строку.|  
|«MMM» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, чтобы включить в результирующую строку сокращенное название месяца.|  
|«MMMM» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> или <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>, чтобы включить в результирующую строку полное название месяца.|  
|(описатель настраиваемого формата) «t»|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> или <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, чтобы включить первый символ указателя AM/PM в результирующую строку.|  
|(описатель настраиваемого формата) «tt»|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> или <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, чтобы включить в результирующую строку полное обозначение AM/PM.|  
|«:» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, необходимо включить в результирующую строку разделителя времени.|  
|«/» (настраиваемый описатель формата)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, необходимо включить в результирующую строку разделителя даты.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>Изменение свойства DateTimeFormatInfo  
 Можно изменить строки, получаемые по строки формата даты и времени, изменив соответствующие свойства класса доступный для записи <xref:System.Globalization.DateTimeFormatInfo> объекта. Чтобы определить, если <xref:System.Globalization.DateTimeFormatInfo> объект доступен для записи, используйте <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> свойство. Чтобы настроить <xref:System.Globalization.DateTimeFormatInfo> объект таким образом:  
  
1.  Создать копию чтения и записи <xref:System.Globalization.DateTimeFormatInfo> объекта соглашения о форматировании которых требуется изменить. (См. [создание экземпляра объекта DateTimeFormatInfo](#instantiating) раздел.)  
  
2.  Измените свойства или свойства, которые используются для создания нужного результирующую строку. (Сведения об использовании способ форматирования методы <xref:System.Globalization.DateTimeFormatInfo> свойства, определяющие результирующие строки см. предыдущий раздел [форматирование строк и свойства DateTimeFormatInfo](#properties).)  
  
3.  Использование пользовательских <xref:System.Globalization.DateTimeFormatInfo> объект был создан как <xref:System.IFormatProvider> аргумент в вызовах методов форматирования.  
  
 Существует два способа изменения формата результирующую строку:  
  
-   Можно использовать <xref:System.Globalization.CultureAndRegionInfoBuilder> класса для определения пользовательского языка и региональных параметров (язык и региональные параметры, имеет уникальное имя и который дополняет существующие языки и региональные параметры) или замещающая культура (той, которая используется вместо конкретного языка и региональных параметров). Можно сохранить и программный доступ к этой культуры, как и любой <xref:System.Globalization.CultureInfo> объектов, поддерживаемых платформой .NET Framework.  
  
-   Если не выполнить предварительно определенный формат результирующей строки не учитывает язык и региональные параметры, можно использовать пользовательского формата даты и времени. Например, при сериализации данных даты и времени в формате ггггммддччммсс, можно создать в результирующую строку путем передачи строки пользовательского формата для <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> метод и можно преобразовать в результирующую строку к <xref:System.DateTime> , вызвав <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> метод.  
  
### <a name="changing-the-short-date-pattern"></a>Изменение шаблона короткого формата даты  
 В следующем примере изменяется формат строки результата, созданного со строкой стандартного формата «d» (короткого формата даты). Изменяется связанный <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство en US или английский (США) язык и региональные параметры, по умолчанию «M/d/yyyy» в «гггг '-«мм» — «дд» и используется строка стандартного формата «d» для отображения даты до и после <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство изменить.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>Изменение символа разделителя даты  
 В следующем примере изменяется знак разделителя даты в <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании языка и региональных параметров fr-FR. В примере со строкой стандартного формата «g» используется для отображения даты до и после <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> изменить свойство.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>Изменение сокращения день имя и полный шаблон даты  
 В некоторых случаях полный шаблон даты, который обычно отображает полный день и месяц имя вместе с номером дня, месяца и года, возможно, слишком длинное. Следующий пример сокращает полный шаблон даты для языка и региональных параметров en US для возврата сокращение названия дня одного символа или двух знаков, за которым следует число дней, сокращение названия месяца и года. Это делается путем назначения короткое имя сокращенные обозначения дня для <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> массива и путем изменения строку пользовательского формата, назначенный <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство. Это влияет на результат строки, возвращаемые «D» и строки стандартного формата «f».  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 Как правило, изменение <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> также влияет свойство <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойство, которое в свою очередь, определяет результат строка, возвращаемая строка стандартного формата «F». Чтобы сохранить исходный полный шаблон даты и времени, в примере производится передача исходной строки настраиваемого формата, назначен <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойство после <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство изменяется.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>Изменение в 24-часовом формате с 12-часовом формате  
 Для многих языков и региональных параметров в платформе .NET Framework время задается с помощью 12-часовом формате и обозначение AM/PM. В следующем примере определяется `ReplaceWith24HourClock` метод, который заменяет любой формат времени, использующего 12-часовом формате, который использует 24-часовом формате.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 В примере используется регулярное выражение для изменения формата строки. Шаблон регулярного выражения `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` определяется следующим образом:  
  
|Шаблон|Описание:|  
|-------------|-----------------|  
|`^`|Начало совпадения в начале строки.|  
|`(?<openAMPM>\s*t+\s*)?`|Случаев сопоставления ноль или один или несколько пробелов символов, за которым следует буква «t», один и более раз, следуют ноль или более символов пробела. Эта группа записи с именем `openAMPM`.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|Если `openAMPM` группы имеется соответствие, соответствует букве «h» на один или несколько раз, следуют один или несколько символов, которые не являются «h» и «t». Соответствие заканчивается в конце строки. Все символы, записанные после «h» включаются в группе записи с именем `nonHours`.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|Если `openAMPM` группа не имеет соответствия, соответствует букве «h» один или несколько раз, один или несколько символов, которые не являются «h» и «t», а затем следуют ноль или более символов пробела. Наконец сопоставление одного или нескольких вхождений букву «t». Все символы, записанные после «h», а также перед пробельные символы и «t» включаются в группе записи с именем `nonHours`.|  
  
 `nonHours` Группы захвата содержит минуты и, возможно, второго компонента пользовательского формата даты и времени, вместе с символы разделителя времени. Шаблон замены `HH${nonHours}` добавляет подстрока «HH» к этим элементам.  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>Отображение и изменение эры в дате  
 В следующем примере добавляется описатель настраиваемого формата «g», чтобы <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство объекта, представляющий соглашения о форматировании языка и региональных параметров en US. Это действие влияет на следующие три строки стандартного формата:  
  
-   Со строкой стандартного формата «D» (даты), который сопоставляется непосредственно с <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство.  
  
-   «f» (полная дата / время краткая) строка стандартного формата, который формирует результирующую строку, объединяющем подстроки, полученных при <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> и <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> свойства.  
  
-   «F» (полная дата / время время) строки стандартного формата, которая сопоставляется непосредственно с <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойство. Так как мы не задали явным образом значение этого свойства, он создается динамически с помощью объединения <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> и <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> свойства.  
  
 В примере также показано изменение имени эра языком и региональными параметрами, чей календарь имеет одну эру. В этом случае региональных параметров en US использует григорианского календаря, который представляется <xref:System.Globalization.GregorianCalendar> объекта. <xref:System.Globalization.GregorianCalendar> Класс поддерживает одну эру, имена н. э. (Anno полуночи). В примере изменяется имя эры в нашей эры (Нашей эры), заменяя описатель настраиваемого формата «g» в строке формата, назначенный <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойство со строковым литералом. Строковый литерал необходима, поскольку имя эры, обычно возвращаемые при <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> метода из личных данных в таблицах язык и региональные параметры, предоставляемые .NET Framework или операционной системы Windows.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>Анализ строк даты и времени  
 Синтаксический анализ включает в себя преобразование строковое представление даты и времени в <xref:System.DateTime> или <xref:System.DateTimeOffset> значение. Оба эти типы включают `Parse`, `TryParse`, `ParseExact`, и `TryParseExact` методы, поддерживающие операции анализа. `Parse` И `TryParse` методы преобразования строки, которая может иметь различные форматы, тогда как `ParseExact` и `TryParseExact` требуют наличия определенного формата или форматы строки. Если операция анализа завершается неудачей, `Parse` и `ParseExact` исключение, в то время как `TryParse` и `TryParseExact` возвращают `false`.  
  
 Методы анализа неявно или явно используют <xref:System.Globalization.DateTimeStyles> значение перечисления, чтобы определить, какие элементы стиля (такие как начальные, конечные или внутренние пробелы) могут быть представлены в строке для анализа и интерпретации анализируемой строке или отсутствие элементы. Если не предоставить <xref:System.Globalization.DateTimeStyles> значение при вызове `Parse` или `TryParse` , значение по умолчанию является <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, являющийся составной стиль, который включает в себя <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>, и <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> флаги. Для `ParseExact` и `TryParseExact` методов, значение по умолчанию — <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; входной строке должен соответствовать точно определенного конкретные дата и время в строку формата.  
  
 Методы синтаксического анализа также неявно или явно используют <xref:System.Globalization.DateTimeFormatInfo> , определяющий специальные символы и шаблоны, которые могут возникать в строке для анализа. Если не предоставить <xref:System.Globalization.DateTimeFormatInfo> объекта, <xref:System.Globalization.DateTimeFormatInfo> объекта для языка и региональных параметров текущего потока используется по умолчанию. Дополнительные сведения о синтаксическом разборе строки даты и времени см. в разделе отдельные методы синтаксического анализа, таких как <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>, и <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>.  
  
 В следующем примере демонстрируется характер культуры строки анализа даты и времени. Предпринимается попытка выполнить анализ двух строк даты с использованием соглашений о en US, en-GB, fr-FR и fi-FI языков и региональных параметров. Дата, интерпретируется как 8/18/2014 на en US, язык и региональные параметры возникает исключение <xref:System.FormatException> исключение в другие языки, поскольку 18 интерпретируется как число месяца. 1/2/2015 анализируется во второй день первого месяца в региональных параметров en US, а в качестве первого дня месяца второго в оставшихся языков и региональных параметров.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 Строки даты и времени обычно анализируются по двум причинам:  
  
-   Для преобразования входных данных пользователя в значение даты и времени.  
  
-   Выполнение цикла обработки значения даты и времени; то есть для десериализации значение даты и времени, который ранее был сериализован как строка.  
  
 В следующих разделах рассматриваются эти две операции более подробно.  
  
### <a name="parsing-user-strings"></a>Разбор строк пользователя  
 При синтаксическом анализе строки даты и времени, введенное пользователем, следует всегда создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , отражающий региональные параметры пользователя, включая все настройки, пользователь может сделать. В противном случае объект даты и времени могут иметь неверные значения. Сведения о том, как создать экземпляр <xref:System.Globalization.DateTimeFormatInfo> , отражающий региональные настройки пользователя, в разделе [DateTimeFormatInfo и динамических данных](#dynamic) раздела.  
  
 В следующем примере показано различие между операции анализа, которая отражает региональных параметров пользователя, а другой — нет. В этом случае система по умолчанию языком и региональными параметрами являются en US, но пользователь использовал панель управления **язык и региональные стандарты** для изменения шаблона короткого формата даты по умолчанию «M/d/yyyy» на «гг/мм/дд». Если пользователь вводит в строке, в которой отражена параметры пользователя, а строка анализируется с <xref:System.Globalization.DateTimeFormatInfo> объекта, который также содержит параметры пользователя (переопределения), операция синтаксического анализа возвращает правильный результат. Тем не менее, когда строка анализируется с <xref:System.Globalization.DateTimeFormatInfo> , отражающий региональные настройки стандартных en US, анализа вызывает метод <xref:System.FormatException> исключение, так как он интерпретирует 14 как номер месяца, не две последние цифры года.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>Сериализация и десериализация данных даты и времени  
 Сериализовать данные даты и времени должны обратного преобразования; т. е все сериализовать и десериализовать значения должны быть идентичны. Если значение даты и времени представляет один момент времени, десериализованное значение должно представлять один и тот же момент времени независимо от языка и региональных параметров или часовой пояс системы, на котором она была восстановлена. Для данных обратного преобразования даты и времени успешно, необходимо использовать соглашения инвариантных региональных параметров, который возвращается методом <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> свойство, чтобы создать и проанализировать данные. Операции форматирования и синтаксического анализа никогда не должны отражать правил языка по умолчанию. Если используются региональные параметры по умолчанию, мобильность данных строго ограничивается; Это может быть успешно десериализован только в потоке, региональные параметры потока, на котором он был сериализован идентичны. В некоторых случаях это означает, что данные нельзя даже успешно сериализовать и десериализовать на том же компьютере.  
  
 Если важно, компонент времени в значении даты и времени, ее нужно также преобразуются в формат UTC и сериализации с помощью «o» или «r» [строка стандартного формата](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Данные времени может быть восстановлена, вызвав метод синтаксического анализа и передачи его в соответствующую строку формата вместе с инвариантным языком как `provider` аргумент.  
  
 Следующий пример иллюстрирует процесс значение даты и времени кругового пути. Он сериализует даты и времени в системе, где используется США Тихоокеанское время и с текущими региональными параметрами являются en US.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 Он выполняет десериализацию данных в системе в часовом поясе Brussels, Копенгаген, Мадрид и Париж и которого текущий язык — fr-FR. Восстановленные дата — девять часов позже, чем исходное, который отражает изменение часового пояса из восемь часов от него отстают на один час опережает время UTC. Исходная дата и Дата восстановленной представляют один и тот же момент времени.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 Следующий пример использует отражение для получения свойств <xref:System.Globalization.DateTimeFormatInfo> объект для английского языка (США). Он отображает значения этих свойств, содержащих строки настраиваемого формата, а также использует эти строки для отображения в формате даты.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new writable instance of the <see cref="T:System.Globalization.DateTimeFormatInfo" /> class that is culture-independent (invariant).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает <xref:System.Globalization.DateTimeFormatInfo> , представляющий сведения о дате и времени инвариантного языка и региональных параметров. Для создания <xref:System.Globalization.DateTimeFormatInfo> объекта для определенного языка и региональных параметров, создания <xref:System.Globalization.CultureInfo> объекта для этого языка и региональных параметров и получения <xref:System.Globalization.DateTimeFormatInfo> объект, возвращаемый его <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство.  
  
 Свойства <xref:System.Globalization.DateTimeFormatInfo> изменить объект, созданный этим конструктором. Тем не менее, нельзя изменить <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство, поскольку инвариантный язык и региональные параметры поддерживает локализованной версии григорианского календаря. Для создания <xref:System.Globalization.DateTimeFormatInfo> объект, который использует конкретного календаря, необходимо создать экземпляр <xref:System.Globalization.CultureInfo> объект, который поддерживает календаря и назначенное календарь <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство <xref:System.Globalization.DateTimeFormatInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> свойство .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a one-dimensional array of type <see cref="T:System.String" /> containing the culture-specific abbreviated names of the days of the week.</summary>
        <value>Одномерный массив типа <see cref="T:System.String" /> содержащий региональных сокращенные названия дней недели. Массив для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит «Sun», «Понедельник», «Вторник», «Среда», «Четверг», «Пятница» и «Суббота».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это свойство задается, массив должен быть одномерным и должен включать ровно семь элементов. Первый элемент (элемент с нулевым индексом) представляет первый день недели в календаре, определяемый <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство.  
  
 Если описатель формата «ddd», включает строку настраиваемого формата <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> или <xref:System.DateTimeOffset.ToString%2A> метод включает соответствующий член <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> массива вместо «ddd» в результирующей строке.  
  
 Это свойство изменяется, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств. Если выбранный <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> поддерживает сокращенные названия дней, в массиве содержатся полные названия дней недели.  
  
   
  
## Examples  
 В следующем примере создается для чтения и записи <xref:System.Globalization.CultureInfo> названия дней, чтобы сократить объект, который представляет английского языка (США) и назначает его <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> свойство. Затем используется описатель формата «ddd» для отображения строковое представление даты за неделю начиная 28 мая 2014 г.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The property is being set to an array that is multidimensional or that has a length that is not exactly 7.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string array of abbreviated month names associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <value>Массив сокращенных имен месяцев.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В некоторых языках название месяца, который является частью даты отображается в падеж. Например даты в ru-RU или язык и региональные параметры для русского языка (Россия) состоит из числа и имя родительный месяца, например 1 Января (1 января). Для этих языков и региональных параметров, если строка настраиваемого формата содержит описатель формата «MMM» <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> или <xref:System.DateTimeOffset.ToString%2A> метод включает соответствующий член <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> массива вместо «MMM» в результирующей строке.  
  
 В операции задания массива должны быть одномерными с ровно 13 элементов, так как <xref:System.Globalization.Calendar> объектов вместить календарей, в которых 13 месяцев. Для календарей, в которых 12 месяцев, должно быть тринадцатый элемент <xref:System.String.Empty?displayProperty=nameWithType>. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определяются <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство.  
  
 Если задать <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойства, необходимо также задать <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> свойства.  
  
   
  
## Examples  
 В следующем примере создается для чтения и записи <xref:System.Globalization.CultureInfo> объект, который представляет английского языка (США) и назначает сокращенные наименования родительный месяц для его <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> и <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойства. Затем отображается строковое представление даты, включающие сокращенное название месяца каждого месяца в календаре поддерживаемые культуры.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In a set operation, the array is multidimensional or has a length that is not exactly 13.</exception>
        <exception cref="T:System.ArgumentNullException">In a set operation, the array or one of the elements of the array is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a one-dimensional string array that contains the culture-specific abbreviated names of the months.</summary>
        <value>Одномерный строковый массив, состоящий из 13 элементов и содержащий сокращения месяцев, принятые в определенном языке и региональных параметрах. В 12-месячных календарях тринадцатый элемент массива представляет собой пустую строку. Массив для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит «Янв», «Февраль», «Мар», «Апр», «Может», «Июн», «Июл», «Авг», «Сен», «Окт», «Ноября», «Dec» и «».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это свойство задано, массив должен быть одномерным массивом с ровно 13 элементов. <xref:System.Globalization.Calendar> объекты размещения календари с 13 месяцев. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определяются <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство.  
  
 Если задать <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> свойства, необходимо также задать <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойства. <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> И <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойства, используемые для форматирования дат с помощью строки форматирования:  
  
-   Стандартных форматов даты и времени строки формата, псевдонимы пользовательского формата строку, содержащую «MMM» спецификатор.  
  
-   Описатель формата пользовательского формата даты и времени, включающий «MMM».  
  
 Это свойство изменяется, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств. Если выбранный <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> поддерживает сокращенные названия месяцев, в массиве содержатся полные названия месяцев.  
  
   
  
## Examples  
 В следующем примере создается для чтения и записи <xref:System.Globalization.CultureInfo> объект, который представляет английского языка (США) и назначает сокращенные наименования родительный месяц для его <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> и <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> свойства. Затем отображается строковое представление даты, включающие сокращенное название каждого месяца в календаре поддерживаемые культуры.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The property is being set to an array that is multidimensional or that has a length that is not exactly 13.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string designator for hours that are "ante meridiem" (before noon).</summary>
        <value>Строка указателя часов до полудня. Значение по умолчанию для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> — «AM».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> Свойство используется для всех значений времени от 0:00:00 (полночь) до 11:59:59.999.  
  
 Если строка настраиваемого формата описатель формата «tt» и времени до полудня, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> или <xref:System.DateTimeOffset.ToString%2A> метод включает значение <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> свойства вместо «tt» в результирующей строке. Если строка настраиваемого формата содержит описатель настраиваемого формата «t», только первый символ <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> включено значение свойства. Следует использовать «tt» для языков, для которых необходимо поддерживать различие между утра и после полудня Например, японский, в котором по и после полудня указатели различаются во втором символе вместо первого.  
  
 Для языков и региональных параметров, которые не используют по указатель, это свойство возвращает пустую строку.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar with get, set" Usage="System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the calendar to use for the current culture.</summary>
        <value>Календарь, используемый в текущем языке и региональных параметрах. Значение по умолчанию для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> — <see cref="T:System.Globalization.GregorianCalendar" /> объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> Свойство принимает только календари, которые являются допустимыми для языка и региональных параметров, с которым связан <xref:System.Globalization.DateTimeFormatInfo> объекта. <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> Свойство указывает, календари, которые могут использоваться в конкретной культурной среде и <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> свойство задает календарь по умолчанию для языка и региональных параметров.  
  
 Изменение значения этого свойства влияет также следующие свойства: <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>, <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> , и <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.  
  
 Например, если японского языка и региональных параметров текущего потока, это свойство принимает <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, или <xref:System.Globalization.GregorianCalendarTypes.USEnglish> <xref:System.Globalization.GregorianCalendar>. Когда <xref:System.Globalization.JapaneseCalendar> используется длинной даты по умолчанию, спецификатор «gg y'\x5e74 'M' \x6708 'd '\x65e5'». При <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, используется длинной даты по умолчанию, спецификатор является «гггг '\x5e74 'M' \x6708 'd '\x65e5'».  
  
   
  
## Examples  
 В следующем примере определяется `ChangeCalendar` метод, который изменяет текущий календарь для региональных параметров для заданного календаря, если он уже является текущим календарем или если он не поддерживается языком и региональными параметрами. Создает код, который вызывает метод <xref:System.Globalization.CultureInfo> объект, представляющий региональные параметры, арабский (Египет) и сначала пытается изменить его календарем японского календаря. Так как не поддерживается по японскому календарю, внесенные методом изменяется календарь культуры. Тем не менее поскольку единой системы обмена сообщениями саудовскому календарю входит в состав <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> коллекции, метод может быть выполнена успешно при выполнении текущего календаря ar-EG язык и региональные параметры.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a <see cref="T:System.Globalization.Calendar" /> object that is not valid for the current culture.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarWeekRule : System.Globalization.CalendarWeekRule with get, set" Usage="System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies which rule is used to determine the first calendar week of the year.</summary>
        <value>Значение, определяющее первую календарную неделю года. Значение по умолчанию для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> — <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство изменяется, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</exception>
        <exception cref="T:System.InvalidOperationException">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a shallow copy of the <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
        <returns>A new <see cref="T:System.Globalization.DateTimeFormatInfo" /> object copied from the original <see cref="T:System.Globalization.DateTimeFormatInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Копия класса доступна для записи даже в том случае, если исходный <xref:System.Globalization.DateTimeFormatInfo> объект доступен только для чтения. Таким образом можно изменить свойства копии с помощью пользовательских шаблонов.  
  
 Неполная копия объекта является копией только данного объекта. Если в объекте содержатся ссылки на другие объекты, создаются в неполной копии не объектов, который ссылается. Он ссылается на исходные объекты вместо него. Напротив глубокую копию объекта создает копию объекта и копию всего содержимого, прямо или косвенно ссылается этот объект.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a read-only <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that formats values based on the current culture.</summary>
        <value>Доступный только для чтения объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> на основе объекта <see cref="T:System.Globalization.CultureInfo" /> текущего потока.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo> Объект, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> свойство отражает переопределения пользователем.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> извлекаемого свойства <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании текущего языка и региональных параметров, который в данном случае является региональных параметров en US. Затем отображается строка формата и строка результата для шести свойства форматирования.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string that separates the components of a date, that is, the year, month, and day.</summary>
        <value>Строка, разделяющая компоненты даты — год, месяц и день. Значение по умолчанию для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> — «/».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если описатель формата «/», включает строку настраиваемого формата <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> метод отображает значение <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> вместо «/» в результирующей строке.  
  
 <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> Свойство определяет строку, заменяет разделитель компонентов даты («/» настраиваемых форматов даты и времени описатель) в результирующую строку в операции форматирования. Он также определяет разделитель строки даты в операции синтаксического анализа.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Globalization.CultureInfo> объекта для региональных параметров en US, изменяет его разделитель компонентов даты для «-» и дата отображается с помощью «d», «G» и строки стандартного формата «g».  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a one-dimensional string array that contains the culture-specific full names of the days of the week.</summary>
        <value>Одномерный массив строк, содержащий полные названия дней недели, принятые в определенном языке и региональных параметрах. Массив для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит «Воскресенье», «Понедельник», «Вторник», «Среда», «Четверг», «Пятница» и «Суббота».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это свойство задается, массив должен быть одномерным и должен включать ровно семь элементов. Первый элемент (элемент с нулевым индексом) представляет первый день недели в календаре, определяемый <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство.  
  
 Если описатель формата «dddd», включает строку настраиваемого формата <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> метода содержит значение соответствующего <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> член вместо «dddd» в результирующей строке.  
  
 Это свойство изменяется, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The property is being set to an array that is multidimensional or that has a length that is not exactly 7.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the first day of the week.</summary>
        <value>Значение перечисления, представляющее первый день недели. Значение по умолчанию для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> — <see cref="F:System.DayOfWeek.Sunday" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство изменяется, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is not a valid <see cref="T:System.DayOfWeek" /> value.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullDateTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the custom format string for a long date and long time value.</summary>
        <value>Строка пользовательского формата для длинного значения даты и длинного значения времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строки стандартного формата «F» является псевдонимом для <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойства. Другими словами строкой пользовательского формата, назначенный этому свойству определяет формат результирующей строки для строки стандартного формата «F». Дополнительные сведения см. в разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  
  
 Значение <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> свойство динамически формируется путем добавления <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> и <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> свойств, разделенных пробелом. Это динамическое назначение происходит при следующих условиях:  
  
-   Если получить значение свойства, прежде чем оно было задано явно.  
  
-   Если значение <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> изменения свойств.  
  
-   Если значение <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> изменения свойств.  
  
 Это свойство изменяется, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">A <see cref="T:System.DayOfWeek" /> value.</param>
        <summary>Returns the culture-specific abbreviated name of the specified day of the week based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <returns>The culture-specific abbreviated name of the day of the week represented by <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию инвариантный <xref:System.Globalization.DateTimeFormatInfo> объекта, этот метод возвращает строку из <xref:System.Globalization.GregorianCalendar>:  
  
|`dayofweek`|Возвращаемое значение|  
|-----------------|------------------|  
|Воскресенье|«Sun»|  
|Понедельник|«Понедельник»|  
|Вторник|«Вторник»|  
|среда|«Среда»|  
|Четверг|«Четверг»|  
|пятница|«Пятница»|  
|Суббота|«Насыщенность»|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dayofweek" /> is not a valid <see cref="T:System.DayOfWeek" /> value.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">The integer representing the era.</param>
        <summary>Returns the string containing the abbreviated name of the specified era, if an abbreviation exists.</summary>
        <returns>A string containing the abbreviated name of the specified era, if an abbreviation exists.  -or-  A string containing the full name of the era, if an abbreviation does not exist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Название эры — имя, используемое в календаре для обозначения периода, который отсчитывается от определенного момента или события. Например «н. э.» или «Н.э.» является текущей эры в григорианском календаре.  
  
 Допустимые значения для `era` , перечислены в <xref:System.Globalization.Calendar.Eras%2A> свойство соответствующего класса, производным от <xref:System.Globalization.Calendar>. Например: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> отображает список эр, поддерживаемых этой реализацией.  
  
 В <xref:System.Globalization.JapaneseCalendar> класса сокращенное имя является первым символом имени полного эры. Это сокращенное название одного символа без учета регистра латинского алфавита или одним канджи.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> does not represent a valid era in the calendar specified in the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</exception>
        <block subset="none" type="usage">
          <para>Если <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> — <see cref="T:System.Globalization.TaiwanCalendar" /> , но <see cref="P:System.Threading.Thread.CurrentCulture" /> не является «zh-TW», затем <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращается пустая строка (»»).</para>
        </block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">An integer from 1 through 13 representing the name of the month to retrieve.</param>
        <summary>Returns the culture-specific abbreviated name of the specified month based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <returns>The culture-specific abbreviated name of the month represented by <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию инвариантный <xref:System.Globalization.DateTimeFormatInfo> объекта, этот метод возвращает строку из <xref:System.Globalization.GregorianCalendar> объекта.  
  
|`month`|Возвращаемое значение|  
|-------------|------------------|  
|1|«Янв»|  
|2|«Февраль»|  
|3|«Мар»|  
|4|«Апр»|  
|5|«Может»|  
|6|«Июн»|  
|7|«Июл»|  
|8|«Авг»|  
|9|«Сен»|  
|10|«Окт»|  
|11|«Ноября»|  
|12|«Dec»|  
|13|""|  
  
 <xref:System.Globalization.Calendar> объекты вмещают календари с 13 месяцев. Для 12-месячных календарях имени тринадцатого месяца всегда возвращается пустая строка.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="month" /> is less than 1 or greater than 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns the standard patterns in which date and time values can be formatted.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : unit -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns all the standard patterns in which date and time values can be formatted.</summary>
        <returns>An array that contains the standard patterns in which date and time values can be formatted.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает массив, содержащий все строки настраиваемого формата, соответствующие строки стандартного формата. В разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) список строк стандартного формата.  
  
 Строки пользовательского формата можно использовать в массиве, возвращенном <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод в операциях форматирования. Тем не менее, в противном случае строковое представление значения даты и времени, возвращаемое в том, что операции форматирования не всегда удается проанализировать успешно по `Parse` и `TryParse` методы. Таким образом, нельзя предполагать, что строки пользовательского формата, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод может использоваться для значений обратного преобразования даты и времени. Приведенный ниже пример иллюстрирует данную проблему. Он извлекает <xref:System.Globalization.DateTimeFormatInfo> объект, содержащий сведения о форматировании для языка и региональных параметров Италия (итальянский). Каждая строка настраиваемого формата он передается в массиве, возвращенном <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> метод <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> метод для создания строкового представления даты и времени. В этом примере затем пытается выполнить синтаксический анализ этого значения путем вызова <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> метод. Как показывают выходные данные примера, некоторые строки пользовательского формата не производят дату, и время, успешно значение циклов приема-передачи.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 Для синтаксического анализа строковое представление даты и времени, который может быть выражен в число стандартных пользовательских форматов, вызовите один из следующих методов:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Строки пользовательского формата в массиве, возвращенном <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод зависит от текущий календарь языка и региональных параметров, для которого <xref:System.Globalization.DateTimeFormatInfo> объект предоставляет сведения о форматировании. Если изменяется календарь, массив, возвращаемый этим методом также изменяется.  
  
   
  
## Examples  
 Следующий пример отображает дату и время строки формата для инвариантных региональных параметров, а также строку результата, созданного при том, что строка форматирования используется для форматирования определенной даты.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 В примере создается экземпляр <xref:System.Globalization.DateTimeFormatInfo> , представляющий инвариантного языка и региональных параметров, вызвав <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> конструктор. Он также может получать <xref:System.Globalization.DateTimeFormatInfo> , представляющий инвариантного языка и региональных параметров из <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : char -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="format">A standard format string.</param>
        <summary>Returns all the patterns in which date and time values can be formatted using the specified standard format string.</summary>
        <returns>An array containing the standard patterns in which date and time values can be formatted using the specified format string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает массив, содержащий строки пользовательского формата, соответствующих строке стандартного формата, определенного. В разделе [стандартной строки даты и времени формат](~/docs/standard/base-types/standard-date-and-time-format-strings.md) список строк стандартного формата.  
  
 Строки пользовательского формата можно использовать в массиве, возвращенном <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод в операциях форматирования. Тем не менее, в противном случае строковое представление значения даты и времени, возвращаемое в том, что операции форматирования не всегда удается проанализировать успешно по `Parse` и `TryParse` методы. Таким образом, нельзя предполагать, что строки пользовательского формата, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод может использоваться для значений обратного преобразования даты и времени. Приведенный ниже пример иллюстрирует данную проблему. Он извлекает <xref:System.Globalization.DateTimeFormatInfo> объект, содержащий сведения о форматировании для языка и региональных параметров Россия (русский). Он вызывает <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> метод для каждой строки стандартного формата, а затем передает строку в возвращаемый массив для форматирования каждый пользовательский <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> метод для создания строкового представления даты и времени. В этом примере затем пытается выполнить синтаксический анализ этого значения путем вызова <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> метод. Как показывают выходные данные примера, некоторые строки пользовательского формата не производят дату, и время, успешно значение циклов приема-передачи.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 Для синтаксического анализа строковое представление даты и времени, который может быть выражен в число стандартных пользовательских форматов, вызовите один из следующих методов:  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 Строки пользовательского формата в массиве, возвращенном <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> метод зависит от текущий календарь языка и региональных параметров, для которого <xref:System.Globalization.DateTimeFormatInfo> объект предоставляет сведения о форматировании. Если изменяется календарь, массив, возвращаемый этим методом также изменяется.  
  
   
  
## Examples  
 В следующем примере отображается шаблоны даты и времени для текущего календаря.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="format" /> is not a valid standard format string.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek">A <see cref="T:System.DayOfWeek" /> value.</param>
        <summary>Returns the culture-specific full name of the specified day of the week based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <returns>The culture-specific full name of the day of the week represented by <paramref name="dayofweek" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию инвариантный <xref:System.Globalization.DateTimeFormatInfo> объекта, этот метод возвращает строку из <xref:System.Globalization.GregorianCalendar> объекта.  
  
|`dayofweek`|Возвращаемое значение|  
|-----------------|------------------|  
|Воскресенье|«Воскресенье»|  
|понедельник|«Понедельник»|  
|Вторник|«Вторник»|  
|среда|«Среда»|  
|Четверг|«Четверг»|  
|пятница|«Пятница»|  
|Суббота|«Суббота»|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dayofweek" /> is not a valid <see cref="T:System.DayOfWeek" /> value.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberSignature Language="F#" Value="member this.GetEra : string -&gt; int" Usage="dateTimeFormatInfo.GetEra eraName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">The string containing the name of the era.</param>
        <summary>Returns the integer representing the specified era.</summary>
        <returns>The integer representing the era, if <paramref name="eraName" /> is valid; otherwise, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Название эры — имя, используемое в календаре для обозначения периода, который отсчитывается от определенного момента или события. Например «н. э.» или «Н.э.» является текущей эры в григорианском календаре.  
  
 Сравнение с `eraName` не учитывается регистр, например, «Н. э.» эквивалентно «н. э.».  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> пропускает знаки препинания в сокращенного названия, только в том случае, если <xref:System.Globalization.GregorianCalendar> выбран в <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> и в культуре «Н. э.» в качестве названия эры, то есть «н. э.» эквивалентно «AD».  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> Сравнивает `eraName` с полным названием эры возвращенных <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> и эры сокращенное имя, возвращаемое функцией <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>.  
  
   
  
## Examples  
 В следующем примере показано, что <xref:System.Globalization.DateTimeFormatInfo> пропускает знаки препинания в названии эры только в том случае, если используется григорианский календарь и в культуре название эры «Н. э.».  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eraName" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">The integer representing the era.</param>
        <summary>Returns the string containing the name of the specified era.</summary>
        <returns>A string containing the name of the era.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Название эры — имя, используемое в календаре для обозначения периода, который отсчитывается от определенного момента или события. Например «н. э.» или «Н.э.» является текущей эры в григорианском календаре.  
  
 Допустимые значения для `era` , перечислены в <xref:System.Globalization.Calendar.Eras%2A> свойство соответствующего класса, производным от <xref:System.Globalization.Calendar>. Например: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> отображает список эр, поддерживаемых этой реализацией.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> does not represent a valid era in the calendar specified in the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</exception>
        <block subset="none" type="usage">
          <para>Если представленный календарь <see cref="T:System.Globalization.TaiwanCalendar" /> , но <see cref="P:System.Threading.Thread.CurrentCulture" /> не является «zh-TW», затем <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращается пустая строка (»»).</para>
        </block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="dateTimeFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">The type of the required formatting service.</param>
        <summary>Returns an object of the specified type that provides a date and time  formatting service.</summary>
        <returns>The current  object, if <paramref name="formatType" /> is the same as the type of the current <see cref="T:System.Globalization.DateTimeFormatInfo" />; otherwise, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Format(String, IFormatProvider)` Метода, поддерживаемого в базовые типы данных этот метод вызывается при текущей <xref:System.Globalization.DateTimeFormatInfo> объект передается как <xref:System.IFormatProvider> параметр. Этот метод реализует <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.GetInstance provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">The <see cref="T:System.IFormatProvider" /> that gets the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.  -or-  <see langword="null" /> to get <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</param>
        <summary>Returns the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object associated with the specified <see cref="T:System.IFormatProvider" />.</summary>
        <returns>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> object associated with <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> метод `formatProvider` с помощью <xref:System.Globalization.DateTimeFormatInfo> объекта в виде `Type` параметра. Если `formatProvider` — `null` или если <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> возвращает `null`, этот метод возвращает <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>.  
  
 Приложение может получить <xref:System.Globalization.DateTimeFormatInfo> объект для определенного языка и региональных параметров с помощью одного из следующих методов:  
  
-   Свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.  
  
-   <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> Метод, где `provider` — <xref:System.Globalization.CultureInfo> объекта.  
  
 Объект <xref:System.Globalization.DateTimeFormatInfo> объекта могут создаваться только для инвариантных региональных параметров или для конкретных языков и региональных параметров, но не для нейтральной культуры.  
  
 Дополнительные сведения о инвариантного языка и региональных параметров, определенных и нейтральные языки и региональные параметры в разделе <xref:System.Globalization.CultureInfo> Описание класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">An integer from 1 through 13 representing the name of the month to retrieve.</param>
        <summary>Returns the culture-specific full name of the specified month based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <returns>The culture-specific full name of the month represented by <paramref name="month" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию инвариантный <xref:System.Globalization.DateTimeFormatInfo> объекта, этот метод возвращает строку из <xref:System.Globalization.GregorianCalendar> объекта.  
  
|`month`|Возвращаемое значение|  
|-------------|------------------|  
|1|«Январь»|  
|2|«Февраль»|  
|3|«Март»|  
|4|«Апрель»|  
|5|«Может»|  
|6|«Июня»|  
|7|«Июль»|  
|8|«Август»|  
|9|«Сентября»|  
|10|«Октябрь»|  
|11|«Ноябрь»|  
|12|«Декабрь»|  
|13|""|  
  
 <xref:System.Globalization.Calendar> объекты вмещают календари с 13 месяцев. Для 12-месячных календарях имени тринадцатого месяца всегда возвращается пустая строка.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="month" /> is less than 1 or greater than 13.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberSignature Language="F#" Value="member this.GetShortestDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetShortestDayName dayOfWeek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek">One of the <see cref="T:System.DayOfWeek" /> values.</param>
        <summary>Obtains the shortest abbreviated day name for a specified day of the week associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <returns>The abbreviated name of the week that corresponds to the <paramref name="dayOfWeek" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано несколько методов и свойств, задающих даты и времени шаблоны форматирования, собственное имя календаря и полное и сокращенное месяц и названия дней.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dayOfWeek" /> is not a value in the <see cref="T:System.DayOfWeek" /> enumeration.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default read-only <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that is culture-independent (invariant).</summary>
        <value>Объект, доступный только для чтения, который не зависит от языка и региональных параметров (инвариантный).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство остается неизменным, независимо от текущего языка и региональных параметров. По этой причине инвариантного языка и региональных параметров <xref:System.Globalization.DateTimeFormatInfo> объект может использоваться для получения результатов согласованной, независимые от языка и региональных параметров в синтаксического анализа и форматирования операций с данными, региональными параметрами. Например, если данные даты и времени из нескольких языков и региональных параметров является должна быть сохранена в виде строки, его можно форматировать с помощью <xref:System.Globalization.DateTimeFormatInfo> объекта инвариантного языка и региональных параметров и сохраняется. Затем можно проанализировать с помощью инвариантного языка и региональных параметров <xref:System.Globalization.DateTimeFormatInfo> объекта.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</summary>
        <value>Значение <see langword="true" />, если объект <see cref="T:System.Globalization.DateTimeFormatInfo" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the custom format string for a long date value.</summary>
        <value>Строка пользовательского формата для длинного значения даты.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> Свойство определяет формат конкретного языка и региональных параметров строки даты, которые возвращаются путем вызова метода <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методов и с составного формата строки, предоставленные со строкой стандартного формата «D». В следующем примере демонстрируется связей из следующих вариантов: со строкой стандартного формата «D», настраиваемый отформатировать строку, возвращаемую <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство и региональным параметрам представление даты.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 В разделе [пользовательские строки даты и времени формат](~/docs/standard/base-types/custom-date-and-time-format-strings.md) для отдельных настраиваемых описателей формата, можно объединить для создания строк настраиваемого формата, например «дддд, дд мммм гггг».  
  
 Разделитель компонентов даты следует задавать в шаблон даты, точная строка вместо заполнителя разделителя даты. Например чтобы получить шаблон мм-дд гггг, задайте полный шаблон даты «Мм-дд-гггг».  
  
 Значение этого свойства может изменяться, если календарь используется для изменения языка и региональных параметров. Например, в следующем примере показано как <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойство <xref:System.Globalization.CultureInfo> , представляющий язык арабский (Сирия) изменяется при <xref:System.Globalization.Calendar> объект, используемый для изменения языка и региональных параметров.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> свойства для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the custom format string for a long time value.</summary>
        <value>Шаблон формата для долговременного значения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> Свойство определяет формат конкретного языка и региональных параметров строки даты, которые возвращаются путем вызова метода <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методов и с составного формата строки, предоставленные со строкой стандартного формата «T».  
  
 Мы рекомендуем установить разделитель компонентов времени в шаблон длительное время, точная строка вместо заполнителя разделителя времени. Например чтобы получить шаблон h мм сс, задайте шаблон даты, «h мм сс».  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthDayPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the custom format string for a month and day value.</summary>
        <value>Строка пользовательского формата для значения месяца и дня.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> Свойство определяет формат конкретного языка и региональных параметров строки даты, которые возвращаются путем вызова метода <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методов и по составного формата строки, предоставленные строки стандартного формата «M» и «m».  
  
 Это свойство изменяется, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 Мы рекомендуем установить разделитель компонентов даты в шаблон месяц и день, точная строка вместо заполнителя разделителя даты. Например чтобы получить шаблон мм-дд, задайте шаблон, месяц и день «Мм-дд».  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string array of month names associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <value>Массив строк имен месяцев.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В некоторых языках название месяца, который является частью даты отображается в падеж. Например даты в русский (Россия) или «ru-RU», языка и региональных параметров состоит из числа и имя родительный месяца, например 1 Января.  
  
 Если это свойство имеет значение, массив должен быть одномерным и должен включать ровно 13 элементов. <xref:System.Globalization.Calendar> объекты размещения календари с 13 месяцев. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определяются <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство. Если задать <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> свойства, необходимо также задать <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> свойства.  
  
   
  
## Examples  
 В следующем примере показано несколько методов и свойств, задающих даты и времени шаблоны форматирования, собственное имя календаря и полное и сокращенное месяц и названия дней.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In a set operation, the array is multidimensional or has a length that is not exactly 13.</exception>
        <exception cref="T:System.ArgumentNullException">In a set operation, the array or one of its elements is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a one-dimensional array of type <see cref="T:System.String" /> containing the culture-specific full names of the months.</summary>
        <value>Одномерный массив типа <see cref="T:System.String" /> содержащий региональных полные названия месяцев. В 12-месячном календаре тринадцатый элемент массива представляет собой пустую строку. Массив для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> содержит «Январь», «Февраль», «Март», «Апрель», «Может», «Июнь», «Июль», «Август», «Сентября», «Октябрь», «Ноябрь», «Декабрь» и «».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это свойство имеет значение, массив должен быть одномерным и должен включать ровно 13 элементов. <xref:System.Globalization.Calendar> объекты размещения календари с 13 месяцев. Первый элемент (элемент с нулевым индексом) представляет первый месяц года, определяются <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство.  
  
 Если задать <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> свойства, необходимо также задать <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> свойства.  
  
 Если пользовательский шаблон содержит шаблон формата «MMMM» <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> отображает значение <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> вместо в шаблоне формата «MMMM».  
  
 Это свойство изменяется, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The property is being set to an array that is multidimensional or that has a length that is not exactly 13.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeCalendarName : string" Usage="System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the native name of the calendar associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <value>Собственное имя календаря, используемого в язык и региональные параметры, связанные с текущим <see cref="T:System.Globalization.DateTimeFormatInfo" /> объекта, если имя доступно, или пустая строка ("») Если собственное имя календаря недоступен.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано несколько методов и свойств, задающих даты и времени шаблоны форматирования, собственное имя календаря и полное и сокращенное месяц и названия дней.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Если <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> — <see cref="T:System.Globalization.TaiwanCalendar" /> , но <see cref="P:System.Threading.Thread.CurrentCulture" /> не является «zh-TW», затем <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, и <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> возвращается пустая строка (»»).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string designator for hours that are "post meridiem" (after noon).</summary>
        <value>Строка указателя часов после полудня (PМ — "post meridiem"). Значение по умолчанию для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> — «PM».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> Свойство используется для всех значений времени от 12:00:00 (от полудня) для 23:59:59.999.  
  
 Если пользовательский шаблон содержит шаблон формата «tt», а время — после полудня, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> отображает значение <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> вместо в шаблоне формата «tt». Если пользовательский шаблон содержит шаблон формата «t», только первый символ <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> отображается. В приложении следует использовать «tt» для языков, для которых необходимо поддерживать различие между AM и PM. Например, японский язык, для которого AM и PM указатели различаются во втором символе вместо первого.  
  
 Для языков и региональных параметров, не использующих указатель PM это свойство возвращает пустую строку.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.DateTimeFormatInfo -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.ReadOnly dtfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi">The <see cref="T:System.Globalization.DateTimeFormatInfo" /> object to wrap.</param>
        <summary>Returns a read-only <see cref="T:System.Globalization.DateTimeFormatInfo" /> wrapper.</summary>
        <returns>A read-only <see cref="T:System.Globalization.DateTimeFormatInfo" /> wrapper.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта оболочка предотвращает изменения в `dtfi`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dtfi" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RFC1123Pattern : string" Usage="System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the custom format string for a time value that is based on the Internet Engineering Task Force (IETF) Request for Comments (RFC) 1123 specification.</summary>
        <value>Строка пользовательского формата для значения времени на основе спецификации 1123 IETF RFC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> Свойство определяет формат конкретного языка и региональных параметров строки даты, которые возвращаются путем вызова метода <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методов и с составного формата строки, предоставленные строки стандартного формата «R» и «r».  
  
 Шаблон RFC1123 отражает определенный стандарт, а свойство доступно только для чтения. Таким образом оно не всегда, независимо от языка и региональных параметров. Строкой пользовательского формата является "ддд, дд ммм гггг чч':'мм':'сс 'GMT'".  
  
   
  
## Examples  
 Следующий пример отображает значение RFC1123Pattern для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberSignature Language="F#" Value="member this.SetAllDateTimePatterns : string[] * char -&gt; unit" Usage="dateTimeFormatInfo.SetAllDateTimePatterns (patterns, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" />
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="patterns">An array of custom format strings.</param>
        <param name="format">The standard format string associated with the custom format strings specified in the <c>patterns</c> parameter.</param>
        <summary>Sets the custom date and time format strings that correspond to a specified standard format string.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> Метод определяет строк настраиваемого формата, которые соответствуют к конкретному стандартные Дата и время в строку формата. Если вызов даты и времени, включает метод форматирования стандартных формата даты и времени, заданный `format`, метод использует первый элемент в `patterns` массива, чтобы определить формат результирующей строки.  
  
> [!WARNING]
>  `Parse` И `TryParse` методы не полностью перечисления всех строк в `patterns` при синтаксическом анализе строковое представление даты и времени. Если требуется, чтобы строки даты и времени на определенной форматы в операции синтаксического анализа, следует передавать массив допустимых форматов для <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>, или <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> метод.  
  
 Можно определить строк настраиваемого формата, которые соответствуют «d», «D», «t», «T» и «y» или стандартный формат даты «Y» и строки формата времени. Если значение `format` является любая другая строка стандартного формата <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> вызывает исключение <xref:System.ArgumentException>.  
  
 Если ваш пользовательские строки даты и времени формат включает разделители компонентов даты, следует явно указать разделитель компонентов даты, не полагаясь на метод синтаксического анализа и форматирования, который заменяет описатель настраиваемого формата «/» разделитель определенной даты. Например чтобы получить шаблон мм-дд гггг, используйте шаблон «Мм-дд гггг».  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Globalization.CultureInfo> объекта, представляет «en US» (английский — США) язык и региональные параметры и использует его для синтаксического анализа массив строк даты и времени с помощью строки стандартного формата «Y». Затем он использует <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> метод, чтобы сопоставить новую строку настраиваемого формата со строкой стандартного формата «Y», а затем пытается выполнить синтаксический анализ массив строк даты и времени. Выходные данные в примере демонстрируется использование новую строку настраиваемого формата в операциях форматирования и синтаксического анализа.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="patterns" /> is <see langword="null" /> or a zero-length array.  -or-  <paramref name="format" /> is not a valid standard format string or is a standard format string whose patterns cannot be set.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="patterns" /> has an array element whose value is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the custom format string for a short date value.</summary>
        <value>Строка пользовательского формата для короткого значения даты.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> Свойство определяет формат конкретного языка и региональных параметров строки даты, которые возвращаются путем вызова метода <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методов и с составного формата строки, предоставленные со строкой стандартного формата «d».  
  
 Это свойство изменяется, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойства и значения даты в формате с помощью <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойства для нескольких языков и региональных параметров.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 В следующем примере изменяется <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство <xref:System.Globalization.DateTimeFormatInfo> , представляющий соглашения о форматировании для английского языка (США). Она также отображает значение даты в два раза, сначала в соответствии с исходного <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> свойство и затем, чтобы отразить новое значение свойства.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortestDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string array of the shortest unique abbreviated day names associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</summary>
        <value>Массив строк имен дней.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано несколько методов и свойств, задающих даты и времени шаблоны форматирования, собственное имя календаря и полное и сокращенное месяц и названия дней.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">In a set operation, the array does not have exactly seven elements.</exception>
        <exception cref="T:System.ArgumentNullException">In a set operation, the value array or one of the elements of the value array is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the custom format string for a short time value.</summary>
        <value>Строка пользовательского формата для короткого значения времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> Свойство определяет формат конкретного языка и региональных параметров строки даты, которые возвращаются путем вызова метода <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методов и с составного формата строки, предоставленные со строкой стандартного формата «t».  
  
 Рекомендуется задать разделитель компонентов времени на короткий шаблон времени для точных строк, вместо заполнителя разделителя времени. Например чтобы получить шаблон h мм сс, можно задайте короткий шаблон времени для «h мм сс».  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the custom format string for a sortable date and time value.</summary>
        <value>Строка пользовательского формата для сортируемого значения даты и времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> Свойство определяет формат конкретного языка и региональных параметров строки даты, которые возвращаются путем вызова метода <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методов и с составного формата строки, предоставленные со строкой стандартного формата «s».  
  
 Строка формата, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> свойство отражает определенный стандарт (ISO 8601) и свойство доступно только для чтения. Таким образом оно не всегда, независимо от языка и региональных параметров. Строкой пользовательского формата является "гггг'-'мм'-'дд'T'чч':'мм':'сс".  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string that separates the components of time, that is, the hour, minutes, and seconds.</summary>
        <value>Строка, разделяющая компоненты времени. Значение по умолчанию для <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> — «:».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если пользовательский шаблон содержит шаблон формата «:», <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> отображает значение <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> вместо «:» в шаблоне.  
  
 Разделитель компонентов времени извлекается из <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> свойство. Рекомендуется задать разделитель компонентов времени в кратком или долго время шаблоны для точных строк, вместо заполнителя разделителя времени. Например чтобы получить шаблон h мм сс, задайте шаблон «h мм сс». Такой подход также позволяет задать шаблоны, например «ч "мм am «ss»» (3 ч 36 м 12), включают несколько типов разделителей. <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> Свойство определяет строку, заменяет разделитель компонентов времени (»:» настраиваемые дата и Описатель полного формата времени) в результирующую строку в операции форматирования. Он также определяет строку разделителя времени в операции синтаксического анализа.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Globalization.CultureInfo> объекта для региональных параметров en US, изменяет его разделитель компонентов даты для «.» и дата отображается с помощью «t», «T», «F», «f», «G» и строки стандартного формата «g».  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniversalSortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the custom format string for a universal, sortable date and time string.</summary>
        <value>Строка пользовательского формата для универсальной, сортируемой строки даты и времени.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> Свойство определяет формат даты строк, возвращаемых вызовов <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методов и с составного формата строки, предоставленные со строкой стандартного формата «u». Он может использоваться для отображения значения даты и времени в порядке сортировки с универсальным указателем времени «Z» в конце. Этот формат допускает сортировку, так как оно использует начальные нули год, месяц, день, час, минуту и секунду. Строка пользовательского формата ("гггг '-' мм'-' дд чч ': 'мм': 'СС ' z'») независимо от языка и региональных параметров или поставщика формата.  
  
 Строка формата, возвращаемый <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> свойство отражает определенный стандарт, а свойство доступно только для чтения. Таким образом оно не всегда, независимо от языка и региональных параметров. Строкой пользовательского формата является "гггг'-'мм'-'дд чч':'мм':'сс'Z'".  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YearMonthPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the custom format string for a year and month value.</summary>
        <value>Строка пользовательского формата для значения года и месяца.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> Свойство определяет формат конкретного языка и региональных параметров строки даты, которые возвращаются путем вызова метода <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> и <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> методов и с составного формата строки, передается в «y» и строки стандартного формата «Y».  
  
 Это свойство изменяется, если значение <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> изменения свойств.  
  
 Мы рекомендуем установить разделитель компонентов даты в шаблон месяца года для точных строк, вместо заполнителя разделителя даты. Например чтобы получить шаблон мм гггг, задайте шаблон месяца года «Мм-гггг».  
  
   
  
## Examples  
 В следующем примере отображается значение <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> для нескольких языков и региональных параметров.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The property is being set to <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</exception>
      </Docs>
    </Member>
  </Members>
</Type>