<Type Name="EastAsianLunisolarCalendar" FullName="System.Globalization.EastAsianLunisolarCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23376f6b74e990ae7d37773f3e8d0bfca21936d1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410338" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EastAsianLunisolarCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EastAsianLunisolarCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.EastAsianLunisolarCalendar" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EastAsianLunisolarCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class EastAsianLunisolarCalendar abstract : System::Globalization::Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет календарь, в котором время разбивается по месяцам, дням, годам и эрам, а дни основаны на солнечных и лунных циклах.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.EastAsianLunisolarCalendar> Класс поддерживает в дополнение к Солнечной годы и месяцы лунного шестидесятилетнем лет (который повторяется каждые 60 лет). Каждый солнечный год в календаре связан с шестидесятилетним года (см. <xref:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear%2A>), астрономическим Stem (см. <xref:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem%2A>) и земной ветвью (см. <xref:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch%2A>).  
  
> [!NOTE]
>  Дополнительные сведения об использовании <xref:System.Globalization.HebrewCalendar> класс, а другой календарь классы в .NET Framework см. в разделе [работа с календарями](~/docs/standard/datetime/working-with-calendars.md).  
  
 В году может быть високосный месяц после любого месяца года и месяца могут иметь день високосным. Например <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> метод возвращает положительное целое число, указывающее месяц, связанные с указанной даты. Если между восьмой и девятый месяцы года, високосным месяцем <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> метод возвращает значение 8 для восьмой месяц, 9 для високосный месяц восьмой и 10 за девятый месяц.  
  
 Каждый <xref:System.Globalization.CultureInfo> поддерживает несколько календарей. В настоящее время отсутствуют лунно-солнечного календаря классы, производные от <xref:System.Globalization.EastAsianLunisolarCalendar> используемую в одном из языков и региональных параметров, поддерживаемых <xref:System.Globalization.CultureInfo> класса. Таким образом этот класс и производные от него может использоваться только для расчета дат в восточно-азиатских языков лунно-солнечных календарей. Этот класс поддерживает несколько методов «get» для описания <xref:System.DateTime> в терминах лунно-солнечных календарей и <xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A> метода для преобразования из данных лунно-солнечного календаря для <xref:System.DateTime>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">Объект <see cref="T:System.DateTime" />, к которому добавляется <c>months</c>.</param>
        <param name="months">Добавляемое число месяцев.</param>
        <summary>Рассчитывает дату через определенное количество месяцев от указанной даты.</summary>
        <returns>Новый объект <see cref="T:System.DateTime" />, которые является суммой указанного количества месяцев и параметра <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компонент дня <xref:System.DateTime> изменяется, если конечный день не является допустимым днем месяца и года. В этом случае значение дня заменяется последним допустимым днем месяца и года. Компонент года <xref:System.DateTime> изменяется, если конечный месяц находится за пределами указанного года <xref:System.DateTime>. Эта реализация поддерживает только текущую эру. Таким образом <xref:System.ArgumentException> создается, если полученный года выходит за пределы указанной эры <xref:System.DateTime>. Компонент времени суток <xref:System.DateTime> остается тем же, что и заданный <xref:System.DateTime>.  
  
 Например, если указанный месяц — октябрь, который содержит 31 день, указанный день — 30-первый день этого месяца, а значение `months` параметра равно 6, год результата один более указанный год, месяц результата — апрель и день — днем последний день в апреле.  
  
 Если значение `months` отрицательное, полученный <xref:System.DateTime> более ранняя, чем заданный <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Свойство возвращаемого <xref:System.DateTime> значение всегда равно <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Можно сохранить <xref:System.DateTime.Kind%2A> свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> метода, как показано в следующем примере.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Полученное значение находится вне допустимого диапазона <see cref="T:System.DateTime" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="months" /> меньше –120 000 или больше 120 000.  
  
 - или -  
  
 Значение <paramref name="time" /> меньше <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или больше <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">Объект <see cref="T:System.DateTime" />, к которому добавляется <c>years</c>.</param>
        <param name="years">Добавляемое число лет.</param>
        <summary>Рассчитывает дату через определенное количество лет от указанной даты.</summary>
        <returns>Новый объект <see cref="T:System.DateTime" />, которые является суммой указанного количества лет и параметра <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компонент дня <xref:System.DateTime> изменяется, если конечный день не является допустимым днем месяца и года. В этом случае значение дня заменяется последним допустимым днем месяца и года. Компонент месяца <xref:System.DateTime> остается тем же, что и заданный <xref:System.DateTime>. Эта реализация поддерживает только текущую эру. Таким образом <xref:System.ArgumentException> создается, если полученный года выходит за пределы указанной эры <xref:System.DateTime>. Компонент времени суток <xref:System.DateTime> остается тем же, что и заданный <xref:System.DateTime>.  
  
 Например февраль имеет 28 дней, за исключением високосного года, когда 29 дней. Если указанной даты — день 29-е февраля високосного года и значение `years` параметр равен 1, полученной дате будет день двадцать восьмым февраля следующего года.  
  
 Если `years` отрицательное, полученный <xref:System.DateTime> более ранняя, чем заданный <xref:System.DateTime>.  
  
 <xref:System.DateTime.Kind%2A> Свойство возвращаемого <xref:System.DateTime> значение всегда равно <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>. Можно сохранить <xref:System.DateTime.Kind%2A> свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> метода, как показано в следующем примере.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Полученное значение находится вне допустимого диапазона <see cref="T:System.DateTime" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение <paramref name="time" /> меньше <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или больше <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.EastAsianLunisolarCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, является ли текущий календарь солнечным, лунным или сочетанием и того, и другого.</summary>
        <value>Всегда возвращает значение <see cref="F:System.Globalization.CalendarAlgorithmType.LunisolarCalendar" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCelestialStem">
      <MemberSignature Language="C#" Value="public int GetCelestialStem (int sexagenaryYear);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCelestialStem(int32 sexagenaryYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCelestialStem (sexagenaryYear As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCelestialStem(int sexagenaryYear);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sexagenaryYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sexagenaryYear">Целое число от 1 до 60, представляющее год в шестидесятилетнем периоде.</param>
        <summary>Расчет небесного ствола указанного года в шестидесятилетнем периоде.</summary>
        <returns>Число в диапазоне от 1 до 10.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметр <paramref name="sexagenaryYear" /> имеет значение меньше 1 или больше 60.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" />, который требуется прочитать.</param>
        <summary>Рассчитывает день месяца из заданной даты.</summary>
        <returns>Целое число от 1 до 31, обозначающее день месяца в заданном параметре <paramref name="time" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" />, который требуется прочитать.</param>
        <summary>Рассчитывает день недели из заданной даты.</summary>
        <returns>Одно из значений <see cref="T:System.DayOfWeek" />, представляющее день недели в заданном параметре <paramref name="time" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение <paramref name="time" /> меньше <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> или больше <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" />, который требуется прочитать.</param>
        <summary>Рассчитывает день года из заданной даты.</summary>
        <returns>Целое число от 1 до 354 в обычном году или от 1 до 384 в високосном году, представляющее день года в заданном параметре <paramref name="time" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 День года определяется как число дней с первого дня года. Например <xref:System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear%2A> для первый день первого месяца возвращает 1, и <xref:System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear%2A> для последнего дня последнего месяца возвращает общее количество дней, в этом году, то же значение возвращаемая <xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Целое число, представляющее год.</param>
        <param name="month">Целое число от 1 до 12 в обычном году или от 1 до 13 в високосном году, представляющее месяц.</param>
        <param name="era">Целое число, представляющее эру.</param>
        <summary>Рассчитывает количество дней в указанном месяце указанных года и эры.</summary>
        <returns>Число дней в указанном месяце указанных года и эры.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `month` параметр является второй месяц <xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth%2A> метод возвращает 28 или 29 в зависимости от того, следует ли `year` параметра является високосным годом.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметры <paramref name="year" />, <paramref name="month" /> или <paramref name="era" /> находятся вне поддерживаемого диапазона значений данного календаря.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Целое число, представляющее год.</param>
        <param name="era">Целое число, представляющее эру.</param>
        <summary>Рассчитывает число дней в указанном году указанной эры.</summary>
        <returns>Число дней в указанном году указанной эры.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear%2A> Метод возвращает значение 365 или 366, в зависимости от того, следует ли `year` параметра является високосным годом.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметры <paramref name="year" /> и <paramref name="era" /> находятся вне поддерживаемого диапазона значений данного календаря.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Целое число, представляющее год.</param>
        <param name="era">Целое число, представляющее эру.</param>
        <summary>Вычисляет високосный месяц для заданных года и эры.</summary>
        <returns>Положительное целое число от 1 до 13, указывающее високосный месяц в указанном году указанной эры.  
  
 - или -  
  
 Нуль, если этот календарь не поддерживает високосные месяцы, или если в параметрах <paramref name="year" /> и <paramref name="era" /> не указан високосный год.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В календарях, високосным месяцем високосный месяц может возникнуть после определенного месяца или после любого месяца в году. Например <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> метод возвращает число от 1 до 13, указывающее месяц, связанные с указанной даты. Если между восьмой и девятый месяцы года, високосным месяцем <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> метод возвращает значение 8 для восьмой месяц, 9 для високосный месяц восьмой и 10 за девятый месяц.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" />, который требуется прочитать.</param>
        <summary>Возвращает номер месяца из заданной даты.</summary>
        <returns>Целое число от 1 до 13, обозначающее месяц в заданном параметре <paramref name="time" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Целое число, представляющее год.</param>
        <param name="era">Целое число, представляющее эру.</param>
        <summary>Рассчитывает число месяцев в указанном году указанной эры.</summary>
        <returns>Число месяцев в указанном году указанной эры. Возвращенное значение равно 12 месяцам для обычного года или 13 для високосного.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметры <paramref name="year" /> и <paramref name="era" /> находятся вне поддерживаемого диапазона значений данного календаря.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSexagenaryYear">
      <MemberSignature Language="C#" Value="public virtual int GetSexagenaryYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSexagenaryYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSexagenaryYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSexagenaryYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">Класс <see cref="T:System.DateTime" />, который требуется прочитать.</param>
        <summary>Рассчитывает год в шестидесятилетнем периоде, соответствующий указанной дате.</summary>
        <returns>Число от 1 до 60 в шестидесятилетнем периоде, соответствующее параметру <paramref name="date" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTerrestrialBranch">
      <MemberSignature Language="C#" Value="public int GetTerrestrialBranch (int sexagenaryYear);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTerrestrialBranch(int32 sexagenaryYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTerrestrialBranch (sexagenaryYear As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTerrestrialBranch(int sexagenaryYear);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sexagenaryYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sexagenaryYear">Целое число от 1 до 60, представляющее год в шестидесятилетнем периоде.</param>
        <summary>Расчет земной ветви указанного года в шестидесятилетнем периоде.</summary>
        <returns>Целое число в диапазоне от 1 до 12.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметр <paramref name="sexagenaryYear" /> имеет значение меньше 1 или больше 60.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" />, который требуется прочитать.</param>
        <summary>Возвращает год из заданной даты.</summary>
        <returns>Целое число, представляющее год в заданном <see cref="T:System.DateTime" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Целое число, представляющее год.</param>
        <param name="month">Целое число от 1 до 13, представляющее месяц.</param>
        <param name="day">Целое число от 1 до 31, представляющее день.</param>
        <param name="era">Целое число, представляющее эру.</param>
        <summary>Определяет, является ли указанная дата указанной эры високосным днем.</summary>
        <returns>
          Значение <see langword="true" />, если указанный день — високосный; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметры <paramref name="year" />, <paramref name="month" />, <paramref name="day" /> или <paramref name="era" /> находятся вне поддерживаемого диапазона значений данного календаря.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Целое число, представляющее год.</param>
        <param name="month">Целое число от 1 до 13, представляющее месяц.</param>
        <param name="era">Целое число, представляющее эру.</param>
        <summary>Определяет, является ли указанный месяц указанных года и эры високосным месяцем.</summary>
        <returns>
          Значение <see langword="true" />, если предоставленный параметр <paramref name="month" /> является високосным месяцем; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметры <paramref name="year" />, <paramref name="month" /> или <paramref name="era" /> находятся вне поддерживаемого диапазона значений данного календаря.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Целое число, представляющее год.</param>
        <param name="era">Целое число, представляющее эру.</param>
        <summary>Определяет, является ли указанный год указанной эры високосным годом.</summary>
        <returns>
          Значение <see langword="true" />, если указанный год — високосный; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметры <paramref name="year" /> и <paramref name="era" /> находятся вне поддерживаемого диапазона значений данного календаря.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Целое число, представляющее год.</param>
        <param name="month">Целое число от 1 до 13, представляющее месяц.</param>
        <param name="day">Целое число от 1 до 31, представляющее день.</param>
        <param name="hour">Целое число от 0 до 23, представляющее час.</param>
        <param name="minute">Целое число от 0 до 59, представляющее минуту.</param>
        <param name="second">Целое число от 0 до 59, представляющее секунду.</param>
        <param name="millisecond">Целое число от 0 до 999, представляющее миллисекунду.</param>
        <param name="era">Целое число, представляющее эру.</param>
        <summary>Возвращает структуру <see cref="T:System.DateTime" /> с заданными значениями даты, времени и эры.</summary>
        <returns>Возвращает структуру <see cref="T:System.DateTime" /> с заданными значениями даты, времени и эры.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A> Метод преобразовать любую дату в текущем календаре Дата по григорианскому календарю. Дата по григорианскому календарю впоследствии можно, например, для сравнения дат в различных календарях или создания эквивалентной даты в определенном календаре.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметры <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, <paramref name="millisecond" /> или <paramref name="era" /> находятся вне поддерживаемого диапазона значений данного календаря.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">Двузначное или четырехзначное целое число, представляющее подлежащий преобразованию год.</param>
        <summary>Преобразует указанный год в четырехзначный год.</summary>
        <returns>Целое число, представляющее четырехразрядное значение параметра <paramref name="year" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear%2A> Использует метод <xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A> для выбора века.  
  
 <xref:System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear%2A> поддерживает двузначный год или год из четырех цифр. При передаче значения двух цифр года (меньше 100) вызывает метод для преобразования значения из четырех цифр значение в соответствии с <xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A> значение, представляющее века. Если приложение передает значение года из четырех цифр в диапазоне поддерживаемых календаря для <xref:System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear%2A>, метод возвращает фактическое входное значение. Если приложение передает значение из четырех цифр, выходит за пределы поддерживаемого календарного или если он предоставляет отрицательное значение, метод создает исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="year" /> находится вне диапазона, поддерживаемого данным календарем.</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает последний год в диапазоне ста лет, для которого существует двузначное представление года.</summary>
        <value>Последний год в диапазоне ста лет, для которого существует двузначное представление года.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет 2 цифрами правильно преобразовать 4-значный номер года. Например в григорианском календаре, если это свойство имеет значение 2029, столетний диапазон определяется с 1930 по 2029. 2-разрядное значение 30 интерпретируется как 1930, а двузначное значение 29 как 2029.  
  
 Начальное значение этого свойства является производным от параметров в списке язык и региональные параметры элемента панели управления. Тем не менее, эти данные могут измениться в течение жизни <xref:System.AppDomain>. <xref:System.Globalization.EastAsianLunisolarCalendar> Класса не обнаруживает изменения параметров системы автоматически.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущий объект <see cref="T:System.Globalization.EastAsianLunisolarCalendar" /> доступен только для чтения.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение в наборе операций меньше 99 или больше наибольшего поддерживаемого года в текущем календаре.</exception>
      </Docs>
    </Member>
  </Members>
</Type>