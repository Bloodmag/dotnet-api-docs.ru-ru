<Type Name="IdnMapping" FullName="System.Globalization.IdnMapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57a3f1970833b876294c8fd9ac91b8e658233e24" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37655178" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IdnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IdnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.IdnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnMapping sealed" />
  <TypeSignature Language="F#" Value="type IdnMapping = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Supports the use of non-ASCII characters for Internet domain names. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя домена в Интернете состоит из одной или нескольких частей, называется меток доменного имени, разделенных особыми символами. Например имя домена «www.proseware.com» состоит из метки, «www», «proseware» и «com», разделенных точками. Стандартный доменные имена состоят из символов, указанного в символов US-ASCII (или Basic Latin) диапазоне от U + 0021 до U + 007E. Чтобы упростить использование Интернета в языки и региональные параметры, которые не используют набор символов US-ASCII, интернационализации доменных имен в приложениях (IDNA) standard был принят в 2003 для поддержки включения большего знаков Юникода, выходящие за диапазон символов US-ASCII. Тем не менее серверами имен и разрешение имени домена по-прежнему полагаться на символы в диапазоне символов US-ASCII.  
  
 Механизм IDNA использует Punycode для сопоставления международного доменного имени, содержит символы Юникода вне диапазона символов US-ASCII в диапазоне символов US-ASCII, поддерживаемых доменных имен. Механизм IDNA используется для преобразования только имена домена, но не данные, передаваемые через Интернет.  
  
> [!IMPORTANT]
>  В [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Globalization.IdnMapping> класс поддерживает разные версии со стандартом IDNA в зависимости от операционной системы используется:  
>   
>  -   При запуске на [!INCLUDE[win8](~/includes/win8-md.md)], он поддерживает версии 2008 стандарта IDNA, рекомендованные компанией [RFC 5891: международных доменных имен в приложениях (IDNA): протокол](http://go.microsoft.com/fwlink/?LinkId=231875).  
> -   Когда под управлением предыдущих версий операционной системы Windows, он поддерживает версии 2003 standard, рекомендованные компанией [RFC 3490: интернационализации доменных имен в приложениях (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110).  
>   
>  См. в разделе [Юникода Technical Standard #46: обработка совместимости IDNA](http://go.microsoft.com/fwlink/?LinkId=232459) эти стандарты иным образом обрабатывать определенные наборы символов.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType> Метод нормализует доменное имя, преобразует нормализованное имя в представление, которое состоит из отображаемых символов Юникода в диапазон кодовых точек US-ASCII (U + 0020 до U + 007E) и добавляет префикс (ACE) кодировки ASCII-совместимыми (» xn--») для каждой метки. <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType> Метод восстанавливает меток доменного имени, преобразовать <xref:System.Globalization.IdnMapping.GetAscii%2A> метод.  
  
 Если строка для преобразования включает разделитель меток символы ИДЕОГРАФИЧЕСКИХ ПОЛНОЙ ОСТАНОВКИ (U + 3002), ПОЛНОШИРИННЫХ ПОЛНОЙ ОСТАНОВКИ (U + FF0E) и ВАРИАНТЫ ИДЕОГРАФИЧЕСКИХ ПОЛНОЙ ОСТАНОВКИ (U + FF61), <xref:System.Globalization.IdnMapping.GetAscii%2A> метод преобразует их в метки разделитель точка (период, U + 002E). <xref:System.Globalization.IdnMapping.GetUnicode%2A> Метод, однако не восстанавливает исходные метки разделитель.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> метод для преобразования массива международные доменные имена в Punycode. <xref:System.Globalization.IdnMapping.GetUnicode%2A> Метод затем преобразует имя домена в формате Punycode обратно в исходное имя домена, но заменяет исходный разделители метку разделителя стандартную метку.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Все открытые методы <see cref="T:System.Globalization.IdnMapping" /> являются потокобезопасными и могут быть использованы одновременно из нескольких потоков, при условии <see cref="T:System.Globalization.IdnMapping" /> свойства экземпляра также не установлены параллельно.</threadsafe>
    <altmember cref="Overload:System.String.Normalize" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.IdnMapping" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType> И <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType> инициализируются значением свойства `false`. Небольшой набор ASCII символы, отличные от A-Z, 0-9, дефиса (-) символов (U + 002D), символ точки (.), разрешены в доменные имена, но кодовые точки Юникод не являются.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnassigned">
      <MemberSignature Language="C#" Value="public bool AllowUnassigned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnassigned" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUnassigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUnassigned { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUnassigned : bool with get, set" Usage="System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether unassigned Unicode code points are used in operations performed by members of the current <see cref="T:System.Globalization.IdnMapping" /> object.</summary>
        <value>
          <see langword="true" /> Если точки кода без знака, используются в операциях; в противном случае <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Зарегистрированное доменное имя не может содержать точки кода без знака. Следовательно, значение по умолчанию <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> свойство `false`. Спецификация IDNA позволяет неназначенные кодовые точки только в запросах совпадающие строки (то есть в поиске имени домена). Дополнительные сведения об использовании неназначенные кодовых позиций в доменных именах см. в разделе [RFC 3454, «Подготовки международное строк (stringprep)»](http://go.microsoft.com/fwlink/?LinkId=231873) и [RFC 5891, «международное имена доменов в (приложений IDNA): протокол»](http://go.microsoft.com/fwlink/?LinkId=231875).  
  
> [!IMPORTANT]
>  Если <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> свойство `false`, поведение, связанное со свойством, зависит от операционной системы. На [!INCLUDE[win8](~/includes/win8-md.md)], <xref:System.Globalization.IdnMapping> класс соответствует 2008 IDNA, который основан на стандарте Юникод 6.0. В предыдущих версиях Windows <xref:System.Globalization.IdnMapping> класс основан на 2003 IDNA, основанной на Юникоде 3.* x*. Некоторые кодовые точки, которые были неназначенные IDNA 2003 строго привязанные символы и поддерживаются в IDNA 2008. Например U + 0221 впервые появился в Юникода версии 4.0. На [!INCLUDE[win8](~/includes/win8-md.md)], кодируется как «xn — 6la». В предыдущих версиях Windows, он вызывает <xref:System.ArgumentException> исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="idnMapping.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare to the current object.</param>
        <summary>Indicates whether a specified object and the current <see cref="T:System.Globalization.IdnMapping" /> object are equal.</summary>
        <returns>
          <see langword="true" /> if the object specified by the <paramref name="obj" /> parameter is derived from <see cref="T:System.Globalization.IdnMapping" /> and its <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties are equal; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAscii">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Encodes a string of domain name labels that include Unicode characters outside the US-ASCII character range to a string of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E). The string is formatted according to the IDNA standard.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string -&gt; string" Usage="idnMapping.GetAscii unicode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unicode">The string to convert, which consists of one or more domain name labels delimited with label separators.</param>
        <summary>Encodes a string of domain name labels that consist of Unicode characters to a string of displayable Unicode characters in the US-ASCII character range. The string is formatted according to the IDNA standard.</summary>
        <returns>The equivalent of the string specified by the <paramref name="unicode" /> parameter, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `unicode` Параметр задает строковое значение из одной или нескольких меток, которые содержат допустимые символы Юникода. Метки разделенных особыми символами. `unicode` Параметр не может начинаться с разделителя меток, но его можно включить и при необходимости заканчиваться разделителем. Метка разделителями являются точка (периода, U + 002E), ИДЕОГРАФИЧЕСКИЙ ПОЛНОЙ ОСТАНОВКИ (U + 3002), ПОЛНОШИРИННЫХ ПОЛНОЙ ОСТАНОВКИ (U + FF0E) и ИДЕОГРАФИЧЕСКИХ символов ПОЛНОЙ ОСТАНОВКИ FULL (U + FF61). Например имя домена «www.adatum.com» состоит из метки, «www», «adatum» и «com», разделенных точками.  
  
 Метка не может содержать следующие символы:  
  
-   Управляющие символы Юникода от U + 0001 до U + 001F и U + 007F.  
  
-   Неназначенные символы Юникода, если значение <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> свойство `false`.  
  
-   Нестандартные символы в US-ASCII символ диапазона, например ПРОСТРАНСТВО (U + 0020), восклицательный знак ПОМЕТИТЬ (U + 0021), и в СНИЖЕНИИ символы строки (U + 005F), если значение <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойство `true`.  
  
-   Символы, которые запрещены в определенной версии стандарта IDNA. Дополнительные сведения о запрещенные символы, см. в разделе [RFC 3454: подготовки международного строк («stringprep»)](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003 и [RFC 5982: кодовые позиции Юникода и международных доменных имен для Приложения](http://go.microsoft.com/fwlink/?LinkId=231877) 2008 IDNA.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Метод преобразует все особыми символами табуляции FULL (периода, U + 002E).  
  
 Если `unicode` не содержит символы за пределами US-ASCII запрещены диапазон символов и символы в диапазоне символов US-ASCII, метод возвращает `unicode` без изменений.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> метод для преобразования массива международных доменных имен в формат Punycode, эквивалентный кодировке, состоящий из символов в диапазоне символов US-ASCII. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> Метод затем преобразует имя домена в формате Punycode обратно в исходное имя домена, но заменяет исходный разделители метку разделителя стандартную метку.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
        <block subset="none" type="usage">
          <para>В [! INCLUDE[net_v45](~/includes/NET-v45-MD.MD)] <see cref="T:System.Globalization.IdnMapping" /> класс поддерживает разные версии со стандартом IDNA в зависимости от операционной системы используется: — при запуске на [! INCLUDE[win8](~/includes/win8-MD.MD)], он поддерживает версии 2008 стандарта IDNA, рекомендованные компанией [RFC 5891: международных доменных имен в приложениях (IDNA): протокол] (http://go.microsoft.com/fwlink/?LinkId=231875).  -Когда под управлением предыдущих версий операционной системы Windows, он поддерживает версии 2003 standard, рекомендованные компанией [RFC 3490: интернационализации доменных имен в приложениях (IDNA)] (http://go.microsoft.com/fwlink/?LinkId=158110).  См. в разделе [Юникода Technical Standard #46: обработка совместимости IDNA] (http://go.microsoft.com/fwlink/?LinkId=232459) эти стандарты иным образом обрабатывать определенные наборы символов.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">The string to convert, which consists of one or more domain name labels delimited with label separators.</param>
        <param name="index">A zero-based offset into <c>unicode</c> that specifies the start of the substring to convert. The conversion operation continues to the end of the <c>unicode</c> string.</param>
        <summary>Encodes a substring of domain name labels that include Unicode characters outside the US-ASCII character range. The substring is converted to a string of displayable Unicode characters in the US-ASCII character range and is formatted according to the IDNA standard.</summary>
        <returns>The equivalent of the substring specified by the <paramref name="unicode" /> and <paramref name="index" /> parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `unicode` И `index` параметры определяют substring с одной или нескольких меток, которые содержат допустимые символы Юникода. Метки разделенных особыми символами. Первого символа подстроки не может начинаться с разделителя меток, но его можно включить и при необходимости заканчиваться разделителем. Метка разделителями являются точка (периода, U + 002E), ИДЕОГРАФИЧЕСКИЙ ПОЛНОЙ ОСТАНОВКИ (U + 3002), ПОЛНОШИРИННЫХ ПОЛНОЙ ОСТАНОВКИ (U + FF0E) и ИДЕОГРАФИЧЕСКИХ символов ПОЛНОЙ ОСТАНОВКИ FULL (U + FF61). Например имя домена «www.adatum.com» состоит из метки, «www», «adatum» и «com», разделенных точками.  
  
 Метка не может содержать следующие символы:  
  
-   Управляющие символы Юникода от U + 0001 до U + 001F и U + 007F.  
  
-   Неназначенные символы Юникода, в зависимости от значения <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> свойство.  
  
-   Нестандартные символы в US-ASCII символ диапазона, например ПРОСТРАНСТВО (U + 0020), восклицательный знак ПОМЕТИТЬ (U + 0021) и символы строки LOW (U + 005F), в зависимости от значения <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойство.  
  
-   Символы, которые запрещены в определенной версии стандарта IDNA. Дополнительные сведения о запрещенные символы, см. в разделе [RFC 3454: подготовки международного строк («stringprep»)](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003 и [RFC 5982: кодовые позиции Юникода и международных доменных имен для Приложения](http://go.microsoft.com/fwlink/?LinkId=231877) 2008 IDNA.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Метод преобразует все особыми символами табуляции FULL (периода, U + 002E).  
  
 Если `unicode` не содержит символы за пределами US-ASCII запрещены диапазон символов и символы в диапазоне символов US-ASCII, метод возвращает `unicode` без изменений.  
  
   
  
## Examples  
 В следующем примере удаляется локальная часть и @ символ из адреса электронной почты и передает полученный домена имя <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> метод для создания имени домена Punycode приведена эквивалентная кодировке, которая состоит из символов US-ASCII диапазон символов. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Метод затем преобразует имя домена в формате Punycode обратно в исходное имя домена, но заменяет исходный разделители метку разделителя стандартную метку.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1a.cs#2)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  -or-  <paramref name="index" /> is greater than the length of <paramref name="unicode" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
        <block subset="none" type="usage">
          <para>В [! INCLUDE[net_v45](~/includes/NET-v45-MD.MD)] <see cref="T:System.Globalization.IdnMapping" /> класс поддерживает разные версии со стандартом IDNA в зависимости от операционной системы используется: — при запуске на [! INCLUDE[win8](~/includes/win8-MD.MD)], он поддерживает версии 2008 стандарта IDNA, рекомендованные компанией [RFC 5891: международных доменных имен в приложениях (IDNA): протокол] (http://go.microsoft.com/fwlink/?LinkId=231875).  -Когда под управлением предыдущих версий операционной системы Windows, он поддерживает версии 2003 standard, рекомендованные компанией [RFC 3490: интернационализации доменных имен в приложениях (IDNA)] (http://go.microsoft.com/fwlink/?LinkId=158110).  См. в разделе [Юникода Technical Standard #46: обработка совместимости IDNA] (http://go.microsoft.com/fwlink/?LinkId=232459) эти стандарты иным образом обрабатывать определенные наборы символов.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">The string to convert, which consists of one or more domain name labels delimited with label separators.</param>
        <param name="index">A zero-based offset into <c>unicode</c> that specifies the start of the substring.</param>
        <param name="count">The number of characters to convert in the substring that starts at the position specified by  <c>index</c> in the <c>unicode</c> string.</param>
        <summary>Encodes the specified number of characters in a  substring of domain name labels that include Unicode characters outside the US-ASCII character range. The substring is converted to a string of displayable Unicode characters in the US-ASCII character range and is formatted according to the IDNA standard.</summary>
        <returns>The equivalent of the substring specified by the <paramref name="unicode" />, <paramref name="index" />, and <paramref name="count" /> parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Unicode`, `index`, И `count` параметры определяют substring с одной или нескольких меток, которые содержат допустимые символы Юникода. Метки разделенных особыми символами. Первого символа подстроки не может начинаться с разделителя меток, но его можно включить и при необходимости заканчиваться разделителем. Метка разделителями являются точка (периода, U + 002E), ИДЕОГРАФИЧЕСКИЙ ПОЛНОЙ ОСТАНОВКИ (U + 3002), ПОЛНОШИРИННЫХ ПОЛНОЙ ОСТАНОВКИ (U + FF0E) и ИДЕОГРАФИЧЕСКИХ символов ПОЛНОЙ ОСТАНОВКИ FULL (U + FF61). Например имя домена «www.adatum.com» состоит из метки, «www», «adatum» и «com», разделенных точками.  
  
 Метка не может содержать следующие символы:  
  
-   Управляющие символы Юникода от U + 0001 до U + 001F и U + 007F.  
  
-   Неназначенные символы Юникода, в зависимости от значения <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> свойство.  
  
-   Нестандартные символы в US-ASCII символ диапазона, например ПРОСТРАНСТВО (U + 0020), восклицательный знак ПОМЕТИТЬ (U + 0021) и символы строки LOW (U + 005F), в зависимости от значения <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойство.  
  
-   Символы, которые запрещены в определенной версии стандарта IDNA. Дополнительные сведения о запрещенные символы, см. в разделе [RFC 3454: подготовки международного строк («stringprep»)](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003 и [RFC 5982: кодовые позиции Юникода и международных доменных имен для Приложения](http://go.microsoft.com/fwlink/?LinkId=231877) 2008 IDNA.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> Метод преобразует все особыми символами табуляции FULL (периода, U + 002E). Если подстрока не содержит символы вне диапазона символов US-ASCII, и не имеют права никакие символы в диапазоне символов US-ASCII, метод возвращает подстроку без изменений.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> метод для преобразования международного доменного имени с именем домена, в соответствии со стандартом IDNA. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Метод затем преобразует имя домена стандартизированный обратно в исходное имя домена, но заменяет исходный разделители метку разделителя стандартную метку.  
  
 [!code-csharp[IdnMapping.GetX#1](~/samples/snippets/csharp/VS_Snippets_CLR/IdnMapping.GetX/CS/getx.cs#1)]
 [!code-vb[IdnMapping.GetX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IdnMapping.GetX/VB/getx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> or <paramref name="count" /> is less than zero.  -or-  <paramref name="index" /> is greater than the length of <paramref name="unicode" />.  -or-  <paramref name="index" /> is greater than the length of <paramref name="unicode" /> minus <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
        <block subset="none" type="usage">
          <para>В [! INCLUDE[net_v45](~/includes/NET-v45-MD.MD)] <see cref="T:System.Globalization.IdnMapping" /> класс поддерживает разные версии со стандартом IDNA в зависимости от операционной системы используется: — при запуске на [! INCLUDE[win8](~/includes/win8-MD.MD)], он поддерживает версии 2008 стандарта IDNA, рекомендованные компанией [RFC 5891: международных доменных имен в приложениях (IDNA): протокол] (http://go.microsoft.com/fwlink/?LinkId=231875).  -Когда под управлением предыдущих версий операционной системы Windows, он поддерживает версии 2003 standard, рекомендованные компанией [RFC 3490: интернационализации доменных имен в приложениях (IDNA)] (http://go.microsoft.com/fwlink/?LinkId=158110).  См. в разделе [Юникода Technical Standard #46: обработка совместимости IDNA] (http://go.microsoft.com/fwlink/?LinkId=232459) эти стандарты иным образом обрабатывать определенные наборы символов.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="idnMapping.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a hash code for this <see cref="T:System.Globalization.IdnMapping" /> object.</summary>
        <returns>One of four 32-bit signed constants derived from the properties of an <see cref="T:System.Globalization.IdnMapping" /> object.  The return value has no special meaning and is not suitable for use in a hash code algorithm.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Переопределить <xref:System.Globalization.IdnMapping.GetHashCode%2A> метод, если в приложении необходимо реализовать код значимые хэш-алгоритма.  
  
   
  
## Examples  
 В следующем примере предполагается, что одна строка может содержать несколько адресов электронной почты, разделяя их пробелами. Удаляется локальная часть и @ символа из каждого адрес электронной почты и передается имя результирующего домена для <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> или <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> метод для создания имени домена Punycode. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> Метод затем преобразует имя домена в формате Punycode обратно в исходное имя домена.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1b.cs#3)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1b.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Decodes one or more domain name labels encoded according to the IDNA standard to a string of Unicode characters.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string -&gt; string" Usage="idnMapping.GetUnicode ascii" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ascii">The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</param>
        <summary>Decodes a string of one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</summary>
        <returns>The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о доменных имен, метки и особыми символами, см. в разделе "Примечания" для <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> метод для преобразования массива международные доменные имена в Punycode. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> Метод затем преобразует имя домена в формате Punycode обратно в исходное имя домена, но заменяет исходный разделители метку разделителя стандартную метку.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</param>
        <param name="index">A zero-based offset into <c>ascii</c> that specifies the start of the substring to decode. The decoding operation continues to the end of the <c>ascii</c> string.</param>
        <summary>Decodes a substring of one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</summary>
        <returns>The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" /> and <paramref name="index" /> parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о доменных имен, метки и особыми символами, см. в разделе "Примечания" для <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  -or-  <paramref name="index" /> is greater than the length of <paramref name="ascii" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</param>
        <param name="index">A zero-based offset into <c>ascii</c> that specifies the start of the substring.</param>
        <param name="count">The number of characters to convert in the substring that starts at the position specified by <c>index</c> in the <c>ascii</c> string.</param>
        <summary>Decodes a substring of a specified length that contains one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</summary>
        <returns>The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" />, <paramref name="index" />, and <paramref name="count" /> parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о доменных имен, метки и особыми символами, см. в разделе "Примечания" для <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> or <paramref name="count" /> is less than zero.  -or-  <paramref name="index" /> is greater than the length of <paramref name="ascii" />.  -or-  <paramref name="index" /> is greater than the length of <paramref name="ascii" /> minus <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseStd3AsciiRules">
      <MemberSignature Language="C#" Value="public bool UseStd3AsciiRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseStd3AsciiRules" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStd3AsciiRules As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseStd3AsciiRules { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseStd3AsciiRules : bool with get, set" Usage="System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether standard or relaxed naming conventions are used in operations performed by members of the current <see cref="T:System.Globalization.IdnMapping" /> object.</summary>
        <value>
          <see langword="true" /> Если стандартным соглашениям об именовании используются в операциях; в противном случае <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Доменные имена, соответствующие стандартным правилам именования состоят из определенное подмножество символов в диапазоне символов US-ASCII. Символы — буквы от A до Z, цифры от 0 до 9, символ точки (.) и знак дефиса (-) (U + 002D). Регистр символов не важен. Ослабленные правила именования позволяют использовать более широкий диапазон ASCII символы, включая пробел символов (U + 0020), восклицательного знака (U + 0021) и знаки: черта внизу символов (U + 005F). Если <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> — `true`, только стандартные символы могут отображаться в метку, возвращенный <xref:System.Globalization.IdnMapping.GetAscii%2A> метод.  
  
 По умолчанию значение <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойство `false`, и развернутое подмножество символов ASCII разрешается в метке.  
  
> [!NOTE]
>  <xref:System.Globalization.IdnMapping> Класса запрещает использование nondisplayable символы от U + 0000 до U + 001F и U + 007F в доменном имени метки независимо от значения <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойство. Этот запрет снижает риск атак с использованием безопасности спуфинг.  
  
   
  
## Examples  
 В следующем примере создает URL-адреса, содержащие символы в диапазоне от U + 0000 до U + 007F ASCII и передает их <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> метод двух <xref:System.Globalization.IdnMapping> объектов. Один объект имеет его <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойство значение `true`, и другой объект со значением `false`. В выходных данных отображаются символы, недопустимые, когда <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> свойство `true` но допустимым, если это `false`.  
  
 [!code-csharp[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/cs/usestd3asciirules1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/vb/usestd3asciirules1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>