<Type Name="JulianCalendar" FullName="System.Globalization.JulianCalendar">
  <TypeSignature Language="C#" Value="public class JulianCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JulianCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.JulianCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class JulianCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class JulianCalendar : System::Globalization::Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c8029-101">Представляет юлианский календарь.</span><span class="sxs-lookup"><span data-stu-id="c8029-101">Represents the Julian calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-102">В 45. до нашей эры большой шлем Цезарь правила календаря, что привело к календаря, который вызывается по юлианскому календарю.</span><span class="sxs-lookup"><span data-stu-id="c8029-102">In 45 B.C., Julius Caesar ordered a calendar reform, which resulted in the calendar called the Julian calendar.</span></span> <span data-ttu-id="c8029-103">Юлианский календарь является предшественником григорианского календаря.</span><span class="sxs-lookup"><span data-stu-id="c8029-103">The Julian calendar is the predecessor of the Gregorian calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c8029-104">Дополнительные сведения об использовании <xref:System.Globalization.HebrewCalendar> класс, а другой календарь классы в .NET Framework см. в разделе [работа с календарями](~/docs/standard/datetime/working-with-calendars.md).</span><span class="sxs-lookup"><span data-stu-id="c8029-104">For information about using the <xref:System.Globalization.HebrewCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="c8029-105"><xref:System.Globalization.JulianCalendar> Класс распознает только текущую эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-105">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span>  
  
 <span data-ttu-id="c8029-106">В отличие от григорианского календаря по юлианскому календарю високосный год определяется как год, делится на четыре без остатка.</span><span class="sxs-lookup"><span data-stu-id="c8029-106">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="c8029-107">Таким образом этот календарь неточен на один день каждые 128 лет.</span><span class="sxs-lookup"><span data-stu-id="c8029-107">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="c8029-108">Общие году 365 дней, в високосном году 366 дней.</span><span class="sxs-lookup"><span data-stu-id="c8029-108">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="c8029-109">Как и григорианского календаря по юлианскому календарю имеет 12 месяцев с 28 до 31 дня: январь (31 день), февраль (28 или 29 дней), март (31 день), апрель (30 дней), май (31 день), июнь (30 дней), июля (31 день), август (31 день), сентябрь (30 дней), октябрь (31 день) , Ноябрь (30 дней) и декабрь (31 день).</span><span class="sxs-lookup"><span data-stu-id="c8029-109">Like the Gregorian calendar, the Julian calendar has 12 months with 28 to 31 days each: January (31 days), February (28 or 29 days), March (31 days), April (30 days), May (31 days), June (30 days), July (31 days), August (31 days), September (30 days), October (31 days), November (30 days), and December (31 days).</span></span> <span data-ttu-id="c8029-110">Февраль имеет 29 дней високосного года и 28 обычные годы.</span><span class="sxs-lookup"><span data-stu-id="c8029-110">February has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="c8029-111">Дата 1 января 2001 г. н. э.</span><span class="sxs-lookup"><span data-stu-id="c8029-111">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="c8029-112">соответствует дню 19 декабря год 2000 г. нашей эры в григорианском календаре</span><span class="sxs-lookup"><span data-stu-id="c8029-112">in the Gregorian calendar is equivalent to the 19th day of December in the year 2000 A.D.</span></span> <span data-ttu-id="c8029-113">по юлианскому календарю.</span><span class="sxs-lookup"><span data-stu-id="c8029-113">in the Julian calendar.</span></span>  
  
 <span data-ttu-id="c8029-114">В настоящее время <xref:System.Globalization.JulianCalendar> не используется какими-либо языков и региональных параметров, поддерживаемых <xref:System.Globalization.CultureInfo> класса.</span><span class="sxs-lookup"><span data-stu-id="c8029-114">Currently, the <xref:System.Globalization.JulianCalendar> is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class.</span></span> <span data-ttu-id="c8029-115">Таким образом <xref:System.Globalization.JulianCalendar> класс может использоваться только для вычисления дат по юлианскому календарю.</span><span class="sxs-lookup"><span data-stu-id="c8029-115">Therefore, the <xref:System.Globalization.JulianCalendar> class can be used only to calculate dates in the Julian calendar.</span></span>  
  
 <span data-ttu-id="c8029-116">Каждый <xref:System.Globalization.CultureInfo> объект поддерживает несколько календарей.</span><span class="sxs-lookup"><span data-stu-id="c8029-116">Each <xref:System.Globalization.CultureInfo> object supports a set of calendars.</span></span> <span data-ttu-id="c8029-117"><xref:System.Globalization.CultureInfo.Calendar%2A> Свойство возвращает календарь по умолчанию для языка и региональных параметров и <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> свойство возвращает массив, содержащий все календари, поддерживаемые языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="c8029-117">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="c8029-118">Чтобы изменить календарь, используемый <xref:System.Globalization.CultureInfo>, приложение должно задать <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> в новую <xref:System.Globalization.Calendar>.</span><span class="sxs-lookup"><span data-stu-id="c8029-118">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JulianCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JulianCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8029-119">Инициализирует новый экземпляр класса <see cref="T:System.Globalization.JulianCalendar" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-119">Initializes a new instance of the <see cref="T:System.Globalization.JulianCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c8029-120">Объект <see cref="T:System.DateTime" />, к которому добавляются месяцы.</span><span class="sxs-lookup"><span data-stu-id="c8029-120">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="c8029-121">Добавляемое число месяцев.</span><span class="sxs-lookup"><span data-stu-id="c8029-121">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="c8029-122">Возвращает значение типа <see cref="T:System.DateTime" />, отличающееся от заданного значения типа <see cref="T:System.DateTime" /> на заданное число месяцев.</span><span class="sxs-lookup"><span data-stu-id="c8029-122">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c8029-123">Объект <see cref="T:System.DateTime" />, полученный добавлением заданного числа месяцев к заданному объекту <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-123">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-124">Компонент дня <xref:System.DateTime> изменяется, если конечный день не является допустимым днем месяца и года.</span><span class="sxs-lookup"><span data-stu-id="c8029-124">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="c8029-125">Он заменяется последним допустимым днем месяца и года.</span><span class="sxs-lookup"><span data-stu-id="c8029-125">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="c8029-126">Компонент года <xref:System.DateTime> изменяется, если конечный месяц находится за пределами указанного года <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="c8029-126">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="c8029-127">Эта реализация поддерживает только текущую эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-127">This implementation supports only the current era.</span></span> <span data-ttu-id="c8029-128">Таким образом <xref:System.ArgumentException> создается, если полученный года выходит за пределы указанной эры <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="c8029-128">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="c8029-129">Компонент времени суток <xref:System.DateTime> остается тем же, что и заданный <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="c8029-129">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="c8029-130">Например, если указанный месяц — октябрь, который содержит 31 день, указанный день — 31 день этого месяца, а значение `months` параметра равно 6, год результата одно больше, чем указанный год, месяц результата является апреля и полученный da y равно 30-й день, что последний день в апреле.</span><span class="sxs-lookup"><span data-stu-id="c8029-130">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="c8029-131">Если значение `months` отрицательное, полученный <xref:System.DateTime> более ранняя, чем заданный <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="c8029-131">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="c8029-132"><xref:System.DateTime.Kind%2A> Свойство возвращаемого <xref:System.DateTime> значение всегда равно <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c8029-132">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c8029-133">Можно сохранить <xref:System.DateTime.Kind%2A> свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> метода, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="c8029-133">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="c8029-134">В следующем примере кода отображаются значения нескольких компонентов структуры <xref:System.DateTime> с точки зрения юлианский календарь.</span><span class="sxs-lookup"><span data-stu-id="c8029-134">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8029-135">Полученное значение <see cref="T:System.DateTime" /> находится вне допустимого диапазона.</span><span class="sxs-lookup"><span data-stu-id="c8029-135">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8029-136">Значение <paramref name="months" /> меньше –120 000.</span><span class="sxs-lookup"><span data-stu-id="c8029-136"><paramref name="months" /> is less than -120000.</span></span>  
  
 <span data-ttu-id="c8029-137">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-137">-or-</span></span>  
  
 <span data-ttu-id="c8029-138">Значение <paramref name="months" /> больше 120 000.</span><span class="sxs-lookup"><span data-stu-id="c8029-138"><paramref name="months" /> is greater than 120000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c8029-139">Объект <see cref="T:System.DateTime" />, к которому добавляются годы.</span><span class="sxs-lookup"><span data-stu-id="c8029-139">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="c8029-140">Добавляемое число лет.</span><span class="sxs-lookup"><span data-stu-id="c8029-140">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="c8029-141">Возвращает значение типа <see cref="T:System.DateTime" />, отстающее от заданного значения типа <see cref="T:System.DateTime" /> на заданное число лет.</span><span class="sxs-lookup"><span data-stu-id="c8029-141">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c8029-142">Объект <see cref="T:System.DateTime" />, полученный добавлением заданного числа лет к заданному объекту <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-142">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-143">Компонент дня <xref:System.DateTime> изменяется, если конечный день не является допустимым днем месяца и года.</span><span class="sxs-lookup"><span data-stu-id="c8029-143">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="c8029-144">Он заменяется последним допустимым днем месяца и года.</span><span class="sxs-lookup"><span data-stu-id="c8029-144">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="c8029-145">Компонент месяца <xref:System.DateTime> остается тем же, что и заданный <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="c8029-145">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="c8029-146">Эта реализация поддерживает только текущую эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-146">This implementation supports only the current era.</span></span> <span data-ttu-id="c8029-147">Таким образом <xref:System.ArgumentException> создается, если полученный года выходит за пределы указанной эры <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="c8029-147">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="c8029-148">Компонент времени суток <xref:System.DateTime> остается тем же, что и заданный <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="c8029-148">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="c8029-149">Например февраль имеет 28 дней, за исключением високосного года, когда 29 дней.</span><span class="sxs-lookup"><span data-stu-id="c8029-149">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="c8029-150">Если задана дата 29 февраля високосного года, а значение `years` равно 1, полученной дате является 28 февраля следующего года.</span><span class="sxs-lookup"><span data-stu-id="c8029-150">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="c8029-151">Если `years` отрицательное, полученный <xref:System.DateTime> более ранняя, чем заданный <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="c8029-151">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="c8029-152"><xref:System.DateTime.Kind%2A> Свойство возвращаемого <xref:System.DateTime> значение всегда равно <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c8029-152">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c8029-153">Можно сохранить <xref:System.DateTime.Kind%2A> свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> метода, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="c8029-153">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="c8029-154">В следующем примере кода отображаются значения нескольких компонентов структуры <xref:System.DateTime> с точки зрения юлианский календарь.</span><span class="sxs-lookup"><span data-stu-id="c8029-154">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8029-155">Полученное значение <see cref="T:System.DateTime" /> находится вне допустимого диапазона.</span><span class="sxs-lookup"><span data-stu-id="c8029-155">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8029-156">Возвращает значение, показывающее, является ли текущий календарь солнечным, лунным или сочетанием и того, и другого.</span><span class="sxs-lookup"><span data-stu-id="c8029-156">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="c8029-157">Всегда возвращает значение <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-157">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c8029-158">В следующем примере отражение используется для создания экземпляра каждого <xref:System.Globalization.Calendar> тип в .NET Framework и отображает значение его <xref:System.Globalization.Calendar.AlgorithmType%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c8029-158">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8029-159">Возвращает список эр в классе <see cref="T:System.Globalization.JulianCalendar" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-159">Gets the list of eras in the <see cref="T:System.Globalization.JulianCalendar" />.</span></span></summary>
        <value><span data-ttu-id="c8029-160">Массив целых чисел для представления эр в классе <see cref="T:System.Globalization.JulianCalendar" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-160">An array of integers that represents the eras in the <see cref="T:System.Globalization.JulianCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-161"><xref:System.Globalization.JulianCalendar> Класс распознает только текущую эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-161">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span> <span data-ttu-id="c8029-162">Это свойство всегда возвращает массив с единственным элементом.</span><span class="sxs-lookup"><span data-stu-id="c8029-162">This property always returns an array with only one element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c8029-163"><see cref="T:System.DateTime" />, который требуется прочитать.</span><span class="sxs-lookup"><span data-stu-id="c8029-163">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c8029-164">Возвращает день месяца из заданной структуры <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-164">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c8029-165">Целое число от 1 до 31, обозначающее день месяца в параметре <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-165">An integer from 1 to 31 that represents the day of the month in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c8029-166">В следующем примере кода отображаются значения нескольких компонентов структуры <xref:System.DateTime> с точки зрения юлианский календарь.</span><span class="sxs-lookup"><span data-stu-id="c8029-166">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c8029-167"><see cref="T:System.DateTime" />, который требуется прочитать.</span><span class="sxs-lookup"><span data-stu-id="c8029-167">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c8029-168">Возвращает день недели из заданной структуры <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-168">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c8029-169">Значение <see cref="T:System.DayOfWeek" />, представляющее день недели в <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-169">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-170"><xref:System.DayOfWeek> Значения — воскресенье, понедельник, Вторник, среда, четверг, пятница и суббота.</span><span class="sxs-lookup"><span data-stu-id="c8029-170">The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8029-171">В следующем примере кода отображаются значения нескольких компонентов структуры <xref:System.DateTime> с точки зрения юлианский календарь.</span><span class="sxs-lookup"><span data-stu-id="c8029-171">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c8029-172"><see cref="T:System.DateTime" />, который требуется прочитать.</span><span class="sxs-lookup"><span data-stu-id="c8029-172">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c8029-173">Возвращает день года в заданном параметре <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-173">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c8029-174">Целое число от 1 до 366, обозначающее день года в параметре <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-174">An integer from 1 to 366 that represents the day of the year in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-175">День года определяется как число дней с первого дня года.</span><span class="sxs-lookup"><span data-stu-id="c8029-175">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="c8029-176">Например <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> для первый день первого месяца возвращает 1, и <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> для последнего дня последнего месяца возвращает общее количество дней в этом году.</span><span class="sxs-lookup"><span data-stu-id="c8029-176">For example, <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year.</span></span> <span data-ttu-id="c8029-177">Общее имеет то же значение, что возвращают <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>.</span><span class="sxs-lookup"><span data-stu-id="c8029-177">The total is the same value as that returned by <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8029-178">В следующем примере кода отображаются значения нескольких компонентов структуры <xref:System.DateTime> с точки зрения юлианский календарь.</span><span class="sxs-lookup"><span data-stu-id="c8029-178">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c8029-179">Целое число, представляющее год.</span><span class="sxs-lookup"><span data-stu-id="c8029-179">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="c8029-180">Целое число от 1 до 12, обозначающее месяц.</span><span class="sxs-lookup"><span data-stu-id="c8029-180">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="c8029-181">Целое число, представляющее эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-181">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c8029-182">Возвращает число дней в указанном месяце указанных года и эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-182">Returns the number of days in the specified month in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="c8029-183">Количество дней в указанном месяце указанных года и эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-183">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-184">Этот метод возвращает 28 или 29 февраля (`month` = 2), в зависимости от ли `year` является високосным годом.</span><span class="sxs-lookup"><span data-stu-id="c8029-184">This method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8029-185">В следующем примере вызывается <xref:System.Globalization.JulianCalendar.GetDaysInMonth%2A> для второго месяца в каждом из пяти лет в каждой эре.</span><span class="sxs-lookup"><span data-stu-id="c8029-185">The following example calls <xref:System.Globalization.JulianCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/CPP/juliancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/CS/juliancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/VB/juliancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8029-186">Значение параметра <paramref name="era" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-186"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-187">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-187">-or-</span></span>  
  
 <span data-ttu-id="c8029-188">Значение параметра <paramref name="year" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-188"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-189">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-189">-or-</span></span>  
  
 <span data-ttu-id="c8029-190">Значение параметра <paramref name="month" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-190"><paramref name="month" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c8029-191">Целое число, представляющее год.</span><span class="sxs-lookup"><span data-stu-id="c8029-191">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="c8029-192">Целое число, представляющее эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-192">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c8029-193">Возвращает число дней в указанном году указанной эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-193">Returns the number of days in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="c8029-194">Число дней в указанном году указанной эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-194">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-195">Этот метод возвращает значение 365 или 366, в зависимости от того, следует ли `year` является високосным годом.</span><span class="sxs-lookup"><span data-stu-id="c8029-195">This method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8029-196">В следующем примере вызывается <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A> пять лет в каждой эре.</span><span class="sxs-lookup"><span data-stu-id="c8029-196">The following example calls <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/CPP/juliancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/CS/juliancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/VB/juliancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8029-197">Значение параметра <paramref name="era" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-197"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-198">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-198">-or-</span></span>  
  
 <span data-ttu-id="c8029-199">Значение параметра <paramref name="year" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-199"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c8029-200"><see cref="T:System.DateTime" />, который требуется прочитать.</span><span class="sxs-lookup"><span data-stu-id="c8029-200">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c8029-201">Возвращает значение эры из заданного объекта <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-201">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c8029-202">Целое число, представляющее эру в <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-202">An integer that represents the era in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-203"><xref:System.Globalization.JulianCalendar> Класс распознает только текущую эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-203">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8029-204">В следующем примере кода отображаются значения нескольких компонентов структуры <xref:System.DateTime> с точки зрения юлианский календарь.</span><span class="sxs-lookup"><span data-stu-id="c8029-204">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c8029-205">Целое число, представляющее год.</span><span class="sxs-lookup"><span data-stu-id="c8029-205">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="c8029-206">Целое число, представляющее эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-206">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c8029-207">Вычисляет високосный месяц для заданных года и эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-207">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="c8029-208">Положительное целое число от 1 до 13, указывающее високосный месяц в указанном году указанной эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-208">A positive integer that indicates the leap month in the specified year and era.</span></span> <span data-ttu-id="c8029-209">Нуль, если этот календарь не поддерживает високосные месяцы, или если в параметрах <paramref name="year" /> и <paramref name="era" /> не указан високосный год.</span><span class="sxs-lookup"><span data-stu-id="c8029-209">Alternatively, this method returns zero if the calendar does not support a leap month, or if <paramref name="year" /> and <paramref name="era" /> do not specify a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-210">В календарях, поддерживает понятие високосного года високосный месяц может возникнуть после определенного месяца или после любого месяца в году.</span><span class="sxs-lookup"><span data-stu-id="c8029-210">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="c8029-211">Например <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> метод возвращает число от 1 до 13, указывающее месяц, связанные с указанной даты.</span><span class="sxs-lookup"><span data-stu-id="c8029-211">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="c8029-212">Если между восьмой и девятый месяцы года, високосным месяцем <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> метод возвращает значение 8 для восьмой месяц, 9 для високосный месяц восьмой и 10 за девятый месяц.</span><span class="sxs-lookup"><span data-stu-id="c8029-212">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c8029-213"><see cref="T:System.DateTime" />, который требуется прочитать.</span><span class="sxs-lookup"><span data-stu-id="c8029-213">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c8029-214">Возвращает месяц в заданном типе <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-214">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c8029-215">Целое число от 1 до 12, обозначающее месяц в параметре <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-215">An integer from 1 to 12 that represents the month in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c8029-216">В следующем примере кода отображаются значения нескольких компонентов структуры <xref:System.DateTime> с точки зрения юлианский календарь.</span><span class="sxs-lookup"><span data-stu-id="c8029-216">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c8029-217">Целое число, представляющее год.</span><span class="sxs-lookup"><span data-stu-id="c8029-217">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="c8029-218">Целое число, представляющее эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-218">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c8029-219">Возвращает число месяцев в указанном году указанной эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-219">Returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="c8029-220">Число месяцев в указанном году указанной эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-220">The number of months in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c8029-221">В следующем примере вызывается <xref:System.Globalization.JulianCalendar.GetMonthsInYear%2A> пять лет в каждой эре.</span><span class="sxs-lookup"><span data-stu-id="c8029-221">The following example calls <xref:System.Globalization.JulianCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/CPP/juliancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/CS/juliancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/VB/juliancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8029-222">Значение параметра <paramref name="era" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-222"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-223">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-223">-or-</span></span>  
  
 <span data-ttu-id="c8029-224">Значение параметра <paramref name="year" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-224"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c8029-225"><see cref="T:System.DateTime" />, который требуется прочитать.</span><span class="sxs-lookup"><span data-stu-id="c8029-225">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c8029-226">Возвращает значение года в заданном <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-226">Returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c8029-227">Целое число, представляющее год в параметре <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-227">An integer that represents the year in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c8029-228">В следующем примере кода отображаются значения нескольких компонентов структуры <xref:System.DateTime> с точки зрения юлианский календарь.</span><span class="sxs-lookup"><span data-stu-id="c8029-228">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c8029-229">Целое число, представляющее год.</span><span class="sxs-lookup"><span data-stu-id="c8029-229">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="c8029-230">Целое число от 1 до 12, обозначающее месяц.</span><span class="sxs-lookup"><span data-stu-id="c8029-230">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="c8029-231">Целое число от 1 до 31, обозначающее день.</span><span class="sxs-lookup"><span data-stu-id="c8029-231">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="c8029-232">Целое число, представляющее эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-232">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c8029-233">Определяет, является ли указанная дата указанной эры високосным днем.</span><span class="sxs-lookup"><span data-stu-id="c8029-233">Determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns>
          <span data-ttu-id="c8029-234">Значение <see langword="true" />, если указанный день — високосный; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-234"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-235">В отличие от григорианского календаря по юлианскому календарю високосный год определяется как год, делится на четыре без остатка.</span><span class="sxs-lookup"><span data-stu-id="c8029-235">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="c8029-236">Таким образом этот календарь неточен на один день каждые 128 лет.</span><span class="sxs-lookup"><span data-stu-id="c8029-236">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="c8029-237">Например не високосный год 1999 года, но был 2000 года.</span><span class="sxs-lookup"><span data-stu-id="c8029-237">For example, the year 1999 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="c8029-238">Общие году 365 дней, в високосном году 366 дней.</span><span class="sxs-lookup"><span data-stu-id="c8029-238">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="c8029-239">День високосным является день, который возникает только в високосном году.</span><span class="sxs-lookup"><span data-stu-id="c8029-239">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="c8029-240">По юлианскому календарю единственный високосный день — 29 февраля.</span><span class="sxs-lookup"><span data-stu-id="c8029-240">In the Julian calendar, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8029-241">В следующем примере вызывается <xref:System.Globalization.JulianCalendar.IsLeapDay%2A> для последнего дня второго месяца (февраля) для пяти лет каждой эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-241">The following example calls <xref:System.Globalization.JulianCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/CPP/juliancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/CS/juliancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/VB/juliancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8029-242">Значение параметра <paramref name="year" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-242"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-243">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-243">-or-</span></span>  
  
 <span data-ttu-id="c8029-244">Значение параметра <paramref name="month" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-244"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-245">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-245">-or-</span></span>  
  
 <span data-ttu-id="c8029-246">Значение параметра <paramref name="day" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-246"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-247">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-247">-or-</span></span>  
  
 <span data-ttu-id="c8029-248">Значение параметра <paramref name="era" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-248"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c8029-249">Целое число, представляющее год.</span><span class="sxs-lookup"><span data-stu-id="c8029-249">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="c8029-250">Целое число от 1 до 12, обозначающее месяц.</span><span class="sxs-lookup"><span data-stu-id="c8029-250">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="c8029-251">Целое число, представляющее эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-251">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c8029-252">Определяет, является ли указанный месяц указанного года указанной эры високосным месяцем.</span><span class="sxs-lookup"><span data-stu-id="c8029-252">Determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="c8029-253">Этот метод всегда возвращает значение <see langword="false" />, если не переопределен производным классом.</span><span class="sxs-lookup"><span data-stu-id="c8029-253">This method always returns <see langword="false" />, unless overridden by a derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-254">В отличие от григорианского календаря по юлианскому календарю високосный год определяется как год, делится на четыре без остатка.</span><span class="sxs-lookup"><span data-stu-id="c8029-254">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="c8029-255">Таким образом этот календарь неточен на один день каждые 128 лет.</span><span class="sxs-lookup"><span data-stu-id="c8029-255">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="c8029-256">Например не високосный год 1999 года, но был 2000 года.</span><span class="sxs-lookup"><span data-stu-id="c8029-256">For example, the year 1999 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="c8029-257">Общие году 365 дней, в високосном году 366 дней.</span><span class="sxs-lookup"><span data-stu-id="c8029-257">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="c8029-258">Високосный месяц — целый месяц, происходит только в високосном году.</span><span class="sxs-lookup"><span data-stu-id="c8029-258">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="c8029-259">Юлианский календарь не поддерживает все месяцы високосным.</span><span class="sxs-lookup"><span data-stu-id="c8029-259">The Julian calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8029-260">В следующем примере вызывается <xref:System.Globalization.JulianCalendar.IsLeapMonth%2A> для всех месяцев в пяти лет в текущей эре.</span><span class="sxs-lookup"><span data-stu-id="c8029-260">The following example calls <xref:System.Globalization.JulianCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/CPP/juliancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/CS/juliancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/VB/juliancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8029-261">Значение параметра <paramref name="year" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-261"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-262">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-262">-or-</span></span>  
  
 <span data-ttu-id="c8029-263">Значение параметра <paramref name="month" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-263"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-264">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-264">-or-</span></span>  
  
 <span data-ttu-id="c8029-265">Значение параметра <paramref name="era" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-265"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c8029-266">Целое число, представляющее год.</span><span class="sxs-lookup"><span data-stu-id="c8029-266">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="c8029-267">Целое число, представляющее эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-267">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c8029-268">Определяет, является ли указанный год указанной эры високосным годом.</span><span class="sxs-lookup"><span data-stu-id="c8029-268">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns>
          <span data-ttu-id="c8029-269">Значение <see langword="true" />, если указанный год — високосный; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-269"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-270">В отличие от григорианского календаря по юлианскому календарю високосный год определяется как год, делится на четыре без остатка.</span><span class="sxs-lookup"><span data-stu-id="c8029-270">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="c8029-271">Таким образом этот календарь неточен на один день каждые 128 лет.</span><span class="sxs-lookup"><span data-stu-id="c8029-271">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="c8029-272">Например не високосный год 1999 года, но был 2000 года.</span><span class="sxs-lookup"><span data-stu-id="c8029-272">For example, the year 1999 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="c8029-273">Общие году 365 дней, в високосном году 366 дней.</span><span class="sxs-lookup"><span data-stu-id="c8029-273">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8029-274">Следующий пример вызывает <xref:System.Globalization.JulianCalendar.IsLeapYear%2A> для пяти лет каждой эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-274">The following example calls <xref:System.Globalization.JulianCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/CPP/juliancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/CS/juliancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/VB/juliancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8029-275">Значение параметра <paramref name="year" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-275"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-276">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-276">-or-</span></span>  
  
 <span data-ttu-id="c8029-277">Значение параметра <paramref name="era" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-277"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="JulianEra">
      <MemberSignature Language="C#" Value="public static readonly int JulianEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 JulianEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.JulianCalendar.JulianEra" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly JulianEra As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int JulianEra;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8029-278">Представляет текущую эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-278">Represents the current era.</span></span> <span data-ttu-id="c8029-279">Это поле является константой.</span><span class="sxs-lookup"><span data-stu-id="c8029-279">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-280"><xref:System.Globalization.JulianCalendar> Класс распознает только текущую эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-280">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span> <span data-ttu-id="c8029-281">Это поле всегда возвращает 1.</span><span class="sxs-lookup"><span data-stu-id="c8029-281">This field always returns 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8029-282">Получает самые последние дату и время, поддерживаемые классом <see cref="T:System.Globalization.JulianCalendar" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-282">Gets the latest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class.</span></span></summary>
        <value><span data-ttu-id="c8029-283">Самые последние дата и время, поддерживаемые классом <see cref="T:System.Globalization.JulianCalendar" />, что эквивалентно последнему мгновению 31 декабря 9999 года нашей эры.</span><span class="sxs-lookup"><span data-stu-id="c8029-283">The latest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class, which is equivalent to the last moment of December 31, 9999 C.E.</span></span> <span data-ttu-id="c8029-284">по григорианскому календарю.</span><span class="sxs-lookup"><span data-stu-id="c8029-284">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c8029-285">В следующем примере кода возвращает минимальное значение и максимальное значение календаря.</span><span class="sxs-lookup"><span data-stu-id="c8029-285">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CPP/juliancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CS/juliancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/VB/juliancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8029-286">Получает самые ранние дату и время, поддерживаемые классом <see cref="T:System.Globalization.JulianCalendar" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-286">Gets the earliest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class.</span></span></summary>
        <value><span data-ttu-id="c8029-287">Самые ранние дата и время, поддерживаемые классом <see cref="T:System.Globalization.JulianCalendar" />, что эквивалентно первому мгновению 1 января 0001 года нашей эры</span><span class="sxs-lookup"><span data-stu-id="c8029-287">The earliest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class, which is equivalent to the first moment of January 1, 0001 C.E.</span></span> <span data-ttu-id="c8029-288">по григорианскому календарю.</span><span class="sxs-lookup"><span data-stu-id="c8029-288">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c8029-289">В следующем примере кода возвращает минимальное значение и максимальное значение календаря.</span><span class="sxs-lookup"><span data-stu-id="c8029-289">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CPP/juliancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CS/juliancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/VB/juliancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c8029-290">Целое число, представляющее год.</span><span class="sxs-lookup"><span data-stu-id="c8029-290">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="c8029-291">Целое число от 1 до 12, обозначающее месяц.</span><span class="sxs-lookup"><span data-stu-id="c8029-291">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="c8029-292">Целое число от 1 до 31, обозначающее день.</span><span class="sxs-lookup"><span data-stu-id="c8029-292">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="c8029-293">Целое число от 0 до 23, представляющее час.</span><span class="sxs-lookup"><span data-stu-id="c8029-293">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="c8029-294">Целое число от 0 до 59, представляющее минуту.</span><span class="sxs-lookup"><span data-stu-id="c8029-294">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="c8029-295">Целое число от 0 до 59, представляющее секунду.</span><span class="sxs-lookup"><span data-stu-id="c8029-295">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="c8029-296">Целое число от 0 до 999, представляющее миллисекунду.</span><span class="sxs-lookup"><span data-stu-id="c8029-296">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="c8029-297">Целое число, представляющее эру.</span><span class="sxs-lookup"><span data-stu-id="c8029-297">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c8029-298">Возвращает <see cref="T:System.DateTime" /> с заданными значениями даты и времени в указанной эре.</span><span class="sxs-lookup"><span data-stu-id="c8029-298">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="c8029-299">Объект <see cref="T:System.DateTime" /> с заданными значениями даты и времени в текущей эре.</span><span class="sxs-lookup"><span data-stu-id="c8029-299">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8029-300">Значение параметра <paramref name="year" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-300"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-301">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-301">-or-</span></span>  
  
 <span data-ttu-id="c8029-302">Значение параметра <paramref name="month" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-302"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-303">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-303">-or-</span></span>  
  
 <span data-ttu-id="c8029-304">Значение параметра <paramref name="day" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-304"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c8029-305">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-305">-or-</span></span>  
  
 <span data-ttu-id="c8029-306">Параметр <paramref name="hour" /> меньше нуля или больше 23.</span><span class="sxs-lookup"><span data-stu-id="c8029-306"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
 <span data-ttu-id="c8029-307">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-307">-or-</span></span>  
  
 <span data-ttu-id="c8029-308">Параметр <paramref name="minute" /> меньше нуля или больше 59.</span><span class="sxs-lookup"><span data-stu-id="c8029-308"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="c8029-309">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-309">-or-</span></span>  
  
 <span data-ttu-id="c8029-310">Параметр <paramref name="second" /> меньше нуля или больше 59.</span><span class="sxs-lookup"><span data-stu-id="c8029-310"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="c8029-311">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-311">-or-</span></span>  
  
 <span data-ttu-id="c8029-312">Параметр <paramref name="millisecond" /> меньше нуля или больше 999.</span><span class="sxs-lookup"><span data-stu-id="c8029-312"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span>  
  
 <span data-ttu-id="c8029-313">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-313">-or-</span></span>  
  
 <span data-ttu-id="c8029-314">Значение параметра <paramref name="era" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-314"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c8029-315">Двузначное или четырехзначное целое число, представляющее подлежащий преобразованию год.</span><span class="sxs-lookup"><span data-stu-id="c8029-315">A two-digit or four-digit integer that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="c8029-316">Преобразует заданный год в четырехзначное представление с использованием свойства <see cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" /> для определения века.</span><span class="sxs-lookup"><span data-stu-id="c8029-316">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="c8029-317">Целое число, содержащее четырехразрядное представление <paramref name="year" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-317">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-318"><xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> — за последний год в диапазоне ста лет, который может быть представлена двумя цифрами.</span><span class="sxs-lookup"><span data-stu-id="c8029-318"><xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year.</span></span> <span data-ttu-id="c8029-319">Век определяется путем нахождения единственного вхождения указанного `year` в данном диапазоне ста лет.</span><span class="sxs-lookup"><span data-stu-id="c8029-319">The century is determined by finding the sole occurrence of the specified `year` within that 100-year range.</span></span> <span data-ttu-id="c8029-320">Например если <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> имеет значение 2029, столетний диапазон определяется с 1930 по 2029.</span><span class="sxs-lookup"><span data-stu-id="c8029-320">For example, if <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="c8029-321">2-разрядное значение 30 интерпретируется как 1930, а двузначное значение 29 как 2029.</span><span class="sxs-lookup"><span data-stu-id="c8029-321">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="c8029-322"><xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A> поддерживает двузначный год или год из четырех цифр.</span><span class="sxs-lookup"><span data-stu-id="c8029-322"><xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="c8029-323">При передаче значения двух цифр года (меньше 100) вызывает метод для преобразования значения из четырех цифр значение в соответствии с <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> значение, представляющее века.</span><span class="sxs-lookup"><span data-stu-id="c8029-323">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="c8029-324">Если приложение передает значение года из четырех цифр в диапазоне поддерживаемых календаря для <xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A>, метод возвращает фактическое входное значение.</span><span class="sxs-lookup"><span data-stu-id="c8029-324">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="c8029-325">Если приложение передает значение из четырех цифр, выходит за пределы поддерживаемого календарного или если он предоставляет отрицательное значение, метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="c8029-325">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8029-326">Значение параметра <paramref name="year" /> находится вне диапазона, поддерживаемого календарем.</span><span class="sxs-lookup"><span data-stu-id="c8029-326"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8029-327">Возвращает или задает последний год в диапазоне ста лет, для которого существует двузначное представление года.</span><span class="sxs-lookup"><span data-stu-id="c8029-327">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="c8029-328">Последний год в диапазоне ста лет, для которого существует двузначное представление года.</span><span class="sxs-lookup"><span data-stu-id="c8029-328">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8029-329">Это свойство позволяет 2 цифрами правильно преобразовать 4-значный номер года.</span><span class="sxs-lookup"><span data-stu-id="c8029-329">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="c8029-330">Например если это свойство имеет значение 2029, столетний диапазон определяется с 1930 по 2029.</span><span class="sxs-lookup"><span data-stu-id="c8029-330">For example, if this property is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="c8029-331">2-разрядное значение 30 интерпретируется как 1930, а двузначное значение 29 как 2029.</span><span class="sxs-lookup"><span data-stu-id="c8029-331">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="c8029-332"><xref:System.Globalization.JulianCalendar> Класса не обнаруживает изменения параметров системы.</span><span class="sxs-lookup"><span data-stu-id="c8029-332">The <xref:System.Globalization.JulianCalendar> class does not detect changes in the system settings.</span></span>  
  
 <span data-ttu-id="c8029-333">Приложение может задать это значение до 99, чтобы указать, что 2 цифрами подхода к.</span><span class="sxs-lookup"><span data-stu-id="c8029-333">The application can set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="c8029-334">Например если это свойство имеет значение 99, столетний диапазон — от 0 (не является допустимым значением для большинства календарей) до 99.</span><span class="sxs-lookup"><span data-stu-id="c8029-334">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="c8029-335">Поэтому двухзначное значение 30 интерпретируется как 30.</span><span class="sxs-lookup"><span data-stu-id="c8029-335">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c8029-336">Значение, указанное в операции установки, меньше 99.</span><span class="sxs-lookup"><span data-stu-id="c8029-336">The value specified in a set operation is less than 99.</span></span>  
  
 <span data-ttu-id="c8029-337">- или -</span><span class="sxs-lookup"><span data-stu-id="c8029-337">-or-</span></span>  
  
 <span data-ttu-id="c8029-338">Значение, указанное в операции установки, больше <see langword="MaxSupportedDateTime.Year" />.</span><span class="sxs-lookup"><span data-stu-id="c8029-338">The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c8029-339">В операции задания текущий экземпляр доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="c8029-339">In a set operation, the current instance is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>