<Type Name="NumberFormatInfo" FullName="System.Globalization.NumberFormatInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="113d3fbbda0876b5fbfe1ccb056490af1cbef7f9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420938" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NumberFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NumberFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.NumberFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NumberFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumberFormatInfo sealed : ICloneable, IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет сведения для конкретного языка и региональных параметров для числовых значений форматирования и анализа.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo> Класс содержит сведения о культуре, используемый при форматировании и анализ числовых значений. Эти сведения включают обозначение денежной единицы, десятичный разделитель, символ-разделитель групп и символы для положительный и отрицательный знак.  
  
-   [Создание экземпляра объекта NumberFormatInfo](#Instantiating)  
  
    -   [Для текущего языка и региональных параметров](#Instantiating_Current)  
  
    -   [Для инвариантных региональных параметров](#Instantiating_Invariant)  
  
    -   [Для определенного языка и региональных параметров](#Instantiating_Specific)  
  
    -   [Для нейтрального языка и региональных параметров](#Instantiating_Neutral)  
  
-   [NumberFormatInfo и динамических данных](#dynamic)  
  
-   [Интерфейс IFormatProvider NumberFormatInfo и форматирование чисел](#formatProvider)  
  
-   [Свойства NumberFormatInfo и строки формата](#properties)  
  
-   [Изменение свойств NumberFormatInfo](#modifying)  
  
    -   [Изменение знака денежной единицы и шаблон](#currency)  
  
    -   [Форматирование государственный идентификационный номер](#id)  
  
-   [Анализ числовых строк](#parsing)  
  
    -   [Разбор строк пользователя](#ParseUser)  
  
    -   [Сериализация и десериализация числовых данных](#ParseSerial)  
  
<a name="Instantiating"></a>   
## <a name="instantiating-a-numberformatinfo-object"></a>Создание экземпляра объекта NumberFormatInfo  
 Можно создать экземпляр <xref:System.Globalization.NumberFormatInfo> , представляющий соглашения о форматировании текущего языка и региональных параметров, инвариантного языка и региональных параметров, заданных региональных параметров или нейтрального языка и региональных параметров.  
  
<a name="Instantiating_Current"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-current-culture"></a>Создание экземпляра объекта NumberFormatInfo для текущего языка и региональных параметров  
 Можно создать экземпляр <xref:System.Globalization.NumberFormatInfo> объект для текущего языка и региональных параметров потока ни в одном из следующих способов. В каждом случае возвращаемый <xref:System.Globalization.NumberFormatInfo> объект доступен только для чтения.  
  
-   Путем получения <xref:System.Globalization.CultureInfo> , представляющий текущий язык и региональные параметры потока из <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> свойство и получение <xref:System.Globalization.CultureInfo> объект из его <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> свойство.  
  
-   Путем получения <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый `static` (`Shared` в Visual Basic) <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> свойство.  
  
-   Путем вызова <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> метод с <xref:System.Globalization.CultureInfo> объект, представляющий текущий язык и региональные параметры.  
  
 В следующем примере используется три способа создания <xref:System.Globalization.NumberFormatInfo> объекты, представляющие соглашения о форматировании текущего языка и региональных параметров. Он также возвращает значение <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> свойства, чтобы продемонстрировать, что каждый объект доступен только для чтения.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate1.vb#1)]  
  
 Можно создать доступный для записи <xref:System.Globalization.NumberFormatInfo> , представляющий соглашения языка и региональных параметров текущего потока в любом из следующих способов:  
  
-   Путем получения <xref:System.Globalization.NumberFormatInfo> объекта одним из способов, приведенных в предыдущем примере кода и вызвать <xref:System.Globalization.NumberFormatInfo.Clone%2A> метод в возвращенном <xref:System.Globalization.NumberFormatInfo> объекта. При этом создается копия исходного <xref:System.Globalization.NumberFormatInfo> объекта, за исключением того, что его <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> свойство `false`.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> метод для создания <xref:System.Globalization.CultureInfo> объект, представляющий текущий язык и региональные параметры, а затем использовать его <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> извлекаемого свойства <xref:System.Globalization.NumberFormatInfo> объекта.  
  
 В следующем примере показано два способа создания <xref:System.Globalization.NumberFormatInfo> объекта и отображает значение его <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> свойство для иллюстрации того, что объект не только для чтения.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate2.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate2.vb#2)]  
  
 Обратите внимание, что операционная система Windows позволяет пользователю переопределить некоторые <xref:System.Globalization.NumberFormatInfo> значения свойства, используемые в числового форматирования и анализа операции с помощью **язык и региональные стандарты** элемента панели управления. Например для отображения денежных значений в виде 1.1 долл. США вместо значения по умолчанию $ 1.1 выбрать пользователя, языком и региональными параметрами является английский (США). <xref:System.Globalization.NumberFormatInfo> Объектами, возвращаемыми способами описанные ранее соответствуют эти переопределения пользователем. Если это нежелательно, можно создать <xref:System.Globalization.NumberFormatInfo> объекта, который не отражает переопределения пользователем (и что также является чтение и запись, а не только для чтения), вызвав <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> конструктор и указав значение `false` для `useUserOverride` аргумент. Ниже приведен пример для системы которого текущий язык — английский (США) и было изменено по умолчанию $ которого обозначение денежной единицы для долл. США.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate3.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate3.vb#3)]  
  
 Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> свойству `true`, свойства <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>, <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType>, и <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> также извлекаются из параметров пользователя. Если пользователем параметры несовместимы с языком и региональными параметрами, связанные с <xref:System.Globalization.CultureInfo> объекта (например, в том случае, если выбранный календарь не является одним из календарей, упорядоченные по <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> свойства), результаты методов и значения свойств не определено.  
  
<a name="Instantiating_Invariant"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-invariant-culture"></a>Создание экземпляра объекта NumberFormatInfo для инвариантных региональных параметров  
 Инвариантный язык и региональные параметры представляет язык и региональные параметры без учета языка и региональных параметров. Он основан на английском языке, но не на любой определенной-английски страны или региона. Несмотря на то, что данные определенных языков и региональных параметров могут быть динамическими и можно изменить в соответствии с новой национальные стандарты или пользовательские настройки, не изменяет данные инвариантного языка и региональных параметров. Объект <xref:System.Globalization.NumberFormatInfo> , представляющий соглашения о форматировании инвариантных региональных параметров может использоваться для операций, в котором результирующая строки не должны зависеть форматирования языка и региональных параметров.  
  
 Можно создать экземпляр <xref:System.Globalization.NumberFormatInfo> , представляющий соглашения о форматировании инвариантных региональных параметров одним из следующих способов:  
  
-   Путем получения значения из <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> свойство. Возвращенный <xref:System.Globalization.NumberFormatInfo> объект доступен только для чтения.  
  
-   Путем получения значения из <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> свойство из <xref:System.Globalization.CultureInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> свойство. Возвращенный <xref:System.Globalization.NumberFormatInfo> объект доступен только для чтения.  
  
-   Путем вызова без параметров <xref:System.Globalization.NumberFormatInfo.%23ctor%2A> конструктора класса. Возвращаемый объект <xref:System.Globalization.NumberFormatInfo> доступен для чтения и записи.  
  
 В следующем примере каждый из этих методов для создания экземпляра <xref:System.Globalization.NumberFormatInfo> , представляющий инвариантного языка и региональных параметров. Затем указывает, является ли объект только для чтения,  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate4.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate4.vb#4)]  
  
<a name="Instantiating_Specific"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-specific-culture"></a>Создание экземпляра объекта NumberFormatInfo для определенного языка и региональных параметров  
 Конкретная культура представляет язык, используемый в конкретной страны или региона. Например, en US является определенного языка и региональных параметров, представляющий английского языка в США; она en-CA определенного языка и региональных параметров, представляющий английский язык, на котором говорят в Канаде. Можно создать экземпляр <xref:System.Globalization.NumberFormatInfo> , представляющий соглашения о форматировании для определенного языка и региональных параметров одним из следующих способов:  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> метод и получение значения, возвращаемого <xref:System.Globalization.CultureInfo> объекта <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Возвращенный <xref:System.Globalization.NumberFormatInfo> объект доступен только для чтения.  
  
-   Путем передачи <xref:System.Globalization.CultureInfo> , представляющий язык и региональные параметры которого <xref:System.Globalization.NumberFormatInfo> объекта требуется извлечь статического <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> метод. Возвращаемый объект <xref:System.Globalization.NumberFormatInfo> доступен для чтения и записи.  
  
-   Путем вызова <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> метод и получение значения, возвращаемого <xref:System.Globalization.CultureInfo> объекта <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Возвращаемый объект <xref:System.Globalization.NumberFormatInfo> доступен для чтения и записи.  
  
-   Путем вызова одного из <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> классов конструкторов и получение значения, возвращаемого <xref:System.Globalization.CultureInfo> объекта <xref:System.Globalization.CultureInfo.NumberFormat%2A> свойство. Возвращаемый объект <xref:System.Globalization.NumberFormatInfo> доступен для чтения и записи.  
  
 В следующем примере используется четыре способа создания <xref:System.Globalization.NumberFormatInfo> объекта, который отражает соглашения о форматировании языка и региональных параметров индонезийский (Индонезия). Также указывает, является ли каждый объект только для чтения.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate5.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate5.vb#5)]  
  
<a name="Instantiating_Neutral"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-neutral-culture"></a>Создание экземпляра объекта NumberFormatInfo для нейтрального языка и региональных параметров  
 Языка и региональных параметров или языка, который не зависит от страны или региона, представляет нейтральный язык и региональные параметры. Обычно он является родительским для одного или нескольких конкретных языков. Например fr представляет нейтральный язык и региональные параметры для французского языка, который является родительским для региональных параметров fr-FR. Вы создаете <xref:System.Globalization.NumberFormatInfo> , представляющий соглашения о форматировании нейтрального языка и региональных параметров таким же образом, вы создаете <xref:System.Globalization.NumberFormatInfo> , представляющий соглашения о форматировании для определенного языка и региональных параметров.  
  
> [!NOTE]
>  В [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] и более ранних версий, при попытке извлечь <xref:System.Globalization.NumberFormatInfo> создает объект, который отражает соглашения о форматировании нейтрального языка и региональных параметров <xref:System.NotSupportedException> исключение.  
  
 Тем не менее так как он не зависит от определенные страну или регион, нейтральный язык и региональные параметры отсутствуют сведения о форматировании для определенного языка и региональных параметров. Вместо того чтобы заполнение <xref:System.Globalization.NumberFormatInfo> объекта универсального значениями, .NET Framework возвращает <xref:System.Globalization.NumberFormatInfo> объект, который отражает соглашения о форматировании для определенного языка и региональных параметров, является дочерним для нейтрального языка и региональных параметров. Например <xref:System.Globalization.NumberFormatInfo> объекта для региональных параметров en US, соглашений о форматировании отражает en нейтрального языка и региональных параметров и <xref:System.Globalization.NumberFormatInfo> объекта для региональных параметров fr отражает соглашения о форматировании языка и региональных параметров fr-FR.  
  
 Чтобы определить, какие определенного языка и региональных параметров соглашения о форматировании представляет каждый нейтрального языка и региональных параметров можно использовать код, аналогичный следующему.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate6c.vb#6)]  
  
<a name="dynamic"></a>   
## <a name="numberformatinfo-and-dynamic-data"></a>NumberFormatInfo и динамических данных  
 Данные определенного языка и региональных параметров для форматирования числовых значений, предоставляемые <xref:System.Globalization.NumberFormatInfo> класс является динамическим, так же, как региональные данные, предоставляемые <xref:System.Globalization.CultureInfo> класса. Нельзя делать никаких предположений о стабильности значений для <xref:System.Globalization.NumberFormatInfo> объектов, связанных с конкретным <xref:System.Globalization.CultureInfo> объектов. Только данные, предоставляемые инвариантного языка и региональных параметров и связанная с ним <xref:System.Globalization.NumberFormatInfo> стабильна объекта. Другие данные, можно изменить между сеансами приложения или даже в рамках одного сеанса, по следующим причинам:  
  
-   **Обновления системы.** Со временем изменяются региональные параметры, такие как обозначение денежной единицы и форматов валют. В этом случае Windows обновление включает изменения <xref:System.Globalization.NumberFormatInfo> значение свойства для конкретного языка и региональных параметров.  
  
-   **Замена языков и региональных параметров.** <xref:System.Globalization.CultureAndRegionInfoBuilder> Класс может использоваться для замены данных существующего языка и региональных параметров.  
  
-   **Каскадные изменения значений свойств.** Можно изменить число свойств, связанных с языком и региональными параметрами, во время выполнения, который в свою очередь, вызывает <xref:System.Globalization.NumberFormatInfo> об изменениях. Например можно изменить текущий язык и региональные параметры программно или в результате действия пользователя. В этом случае <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> изменения свойств объекта, связанного с текущими региональными параметрами.  
  
-   **Персональные настройки пользователя.** Пользователи приложения могут переопределить некоторые значения, связанные с текущей культурой язык и региональные параметры в панели управления. Например пользователи могут выбрать другой символ валюты или символ другой десятичный разделитель. Если <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> свойству `true` (значение по умолчанию), свойства <xref:System.Globalization.NumberFormatInfo> объекта также извлекаются из параметров пользователя.  
  
 Начиная с .NET Framework 2.0, все свойства могут быть переопределены пользователем <xref:System.Globalization.NumberFormatInfo> объекта инициализируются при создании объекта. По-прежнему возможна несогласованность, так как ни один объект создания ни процесс переопределения пользователем является атомарной, и соответствующие значения может измениться при создании объекта. Однако они должны быть крайне редко.  
  
 Можно управлять ли пользователь переопределений, отражаются в <xref:System.Globalization.NumberFormatInfo> объекты, представляющие языка и региональных параметров, как язык и региональные параметры текущего потока. В следующей таблице перечислены способы, с помощью которого <xref:System.Globalization.NumberFormatInfo> объекта можно получить и указывает, отражает ли полученный объект переопределения пользователем.  
  
|Источник объекта CultureInfo и NumberFormatInfo|Отражает переопределения пользователем|  
|-------------------------------------------------------|-----------------------------|  
|Свойство `CultureInfo.CurrentCulture.NumberFormat`|Да|  
|Свойство <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>|Да|  
|Метод <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>|Да|  
|Метод <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType>|Нет|  
|Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29>|Да|  
|Конструктор <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>|Зависит от значения `useUserOverride` параметр|  
  
 Если нет особой причины делать по-другому, пользователь переопределения должны учитывать при использовании <xref:System.Globalization.NumberFormatInfo> объекта в клиентских приложениях для форматирования и анализа пользовательского ввода или для отображения числовых данных. Для сервера приложений или автоматического приложений не должны учитывать переопределения пользователем. Тем не менее если вы используете <xref:System.Globalization.NumberFormatInfo> объекта либо явно или неявно для сохранения числовых данных в виде строки, следует использовать либо <xref:System.Globalization.NumberFormatInfo> следует указать объект, который отражает соглашения о форматировании инвариантных региональных параметров, или Строка настраиваемого числового формата, используемого независимо от языка и региональных параметров.  
  
<a name="formatProvider"></a>   
## <a name="iformatprovider-numberformatinfo-and-numeric-formatting"></a>Интерфейс IFormatProvider NumberFormatInfo и форматирование чисел  
 Объект <xref:System.Globalization.NumberFormatInfo> объект используется в всех числовых форматов операций явно или неявно. К ним относятся вызовы следующих методов:  
  
-   Все методов числового форматирования, такие как <xref:System.Int32.ToString%2A?displayProperty=nameWithType>, <xref:System.Double.ToString%2A?displayProperty=nameWithType>, и <xref:System.Convert.ToString%28System.Int32%29?displayProperty=nameWithType>.  
  
-   Основной метод составного форматирования, <xref:System.String.Format%2A?displayProperty=nameWithType>.  
  
-   Других методов составного форматирования, такие как <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> и <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.  
  
 Сделать все числовые операций форматирования использование <xref:System.IFormatProvider> реализации. <xref:System.IFormatProvider> Интерфейс включает один метод <xref:System.IFormatProvider.GetFormat%28System.Type%29>. Это метод обратного вызова, переданного <xref:System.Type> , представляющий тип, необходимой для предоставления сведений о форматировании. Этот метод отвечает за возврат экземпляра этого типа или `null`, если он не может предоставлять экземпляр типа. Платформа .NET Framework предоставляет два <xref:System.IFormatProvider> реализации для форматирования чисел:  
  
-   <xref:System.Globalization.CultureInfo> Класс, который представляет определенного языка и региональных параметров (или конкретного языка в определенные страну или регион). В числового форматирования операции <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> возвращает <xref:System.Globalization.NumberFormatInfo> объект, связанный с его <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> свойство.  
  
-   <xref:System.Globalization.NumberFormatInfo> Класс, предоставляющий сведения о соглашений о форматировании языка и региональных параметров, его связанные. <xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=nameWithType> Метод возвращает экземпляр самого себя.  
  
 Если <xref:System.IFormatProvider> реализацию явно не указан для метода форматирования, <xref:System.Globalization.CultureInfo> объект, возвращаемый <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> используется свойство, представляющее язык и региональные параметры текущего потока.  
  
 В следующем примере показано отношение между <xref:System.IFormatProvider> интерфейс и <xref:System.Globalization.NumberFormatInfo> класс в операциях форматирования, определив пользовательский <xref:System.IFormatProvider> реализации. Его <xref:System.IFormatProvider.GetFormat%2A> метод отображает имя типа объекта, запрашиваемые операции форматирования. Если запрашивается интерфейс <xref:System.Globalization.NumberFormatInfo> объекта, этот метод обеспечивает <xref:System.Globalization.NumberFormatInfo> объект для текущего языка и региональных параметров потока. Как видно в результатах показано в примере <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> запросов методов <xref:System.Globalization.NumberFormatInfo> для получения сведения о форматировании, тогда как <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> запросов методов <xref:System.Globalization.NumberFormatInfo> и <xref:System.Globalization.DateTimeFormatInfo> объектов, а также <xref:System.ICustomFormatter> Реализация.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/formatprovider1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/formatprovider1.vb#1)]  
  
 Если <xref:System.IFormatProvider> реализацию явно не указан в числового форматирования вызова метода, метод вызывает `CultureInfo.CurrentCulture.GetFormat` метод, возвращающий <xref:System.Globalization.NumberFormatInfo> объект, соответствующий язык и региональные параметры текущего потока.  
  
<a name="properties"></a>   
## <a name="format-strings-and-numberformatinfo-properties"></a>Свойства NumberFormatInfo и строки формата  
 Каждая операция форматирования использует стандартным или строка настраиваемого числового формата и выдает результирующую строку, из числа. В некоторых случаях строка формата, чтобы получить строку результата используется явным, как показано в следующем примере. Этот код вызывает <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> метод преобразования <xref:System.Decimal> до числа различные строковые представления с использованием соглашений о форматировании языка и региональных параметров en US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties1.vb#2)]  
  
 В других случаях использование строка формата является неявным. Например, в следующие вызовы методов по умолчанию или без параметров <xref:System.Decimal.ToString?displayProperty=nameWithType> метода, значение <xref:System.Decimal> значение форматируется с помощью Описатель общего формата («G») и соглашений для текущего языка и региональных параметров, в этом случае языка и региональных параметров en US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties2.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties2.vb#3)]  
  
 Каждая строка стандартных числовых форматов использует один или более <xref:System.Globalization.NumberFormatInfo> свойства, чтобы определить шаблон или символы, используемые в результирующей строке. Аналогичным образом, каждый настраиваемого числового формата описатель за исключением того, «0» и «#» вставить символы в результирующей строке, определяются <xref:System.Globalization.NumberFormatInfo> свойства. В следующей таблице перечислены стандартные и описателях настраиваемого числового формата и связанные с ними <xref:System.Globalization.NumberFormatInfo> свойства.  Чтобы изменить внешний вид строка результата для определенного языка и региональных параметров, в разделе [свойства изменения NumberFormatInfo](#modifying) раздела. Сведения об использовании этих описатели формата, см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
|Описатель формата|Связанные свойства|  
|----------------------|---------------------------|  
|«C» или «c» (описатель формата валюты)|<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>, чтобы определить количество цифр дробной части по умолчанию.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, для определения группы и тысячи разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A>, для определения размеров целых групп.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>, чтобы определить схему для отрицательных значений денежных сумм.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>, чтобы определить схему для положительных значений денежных сумм.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, для определения символа валюты.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.|  
|«D» или «d» (описателя десятичного формата)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.|  
|«E» или «e» (Описатель экспоненциального или в экспоненциальном формате)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус в мантиссу и показатель степени.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, для определения символа положительного знака в показателе степени.|  
|«F» или «f» (описатель формата с фиксированной запятой)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, чтобы определить количество цифр дробной части по умолчанию.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.|  
|«G» или «g» (спецификатора общего формата)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, для определения символа положительного числа строк результата в экспоненциальном формате.|  
|«N» или «n» (спецификатора числового формата)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, чтобы определить количество цифр дробной части по умолчанию.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, для определения (в тысячах) разделитель групп.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, чтобы определить число цифр целой части в группе.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A>, чтобы определить формат отрицательных значений.|  
|«P» или «p» (спецификатора процентного формата)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A>, чтобы определить количество цифр дробной части по умолчанию.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, чтобы определить символ-разделитель групп.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, чтобы определить число цифр целой части в группе.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A>, чтобы определить положение символа процента и отрицательного знака в отрицательных значениях.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A>, чтобы определить положение символа процента в положительных значениях.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, для определения знака процентов.|  
|«R» или «r» (спецификатора формата приема-передачи)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, для определения символа положительного знака в показатель степени.|  
|«X» или «x» (спецификатора шестнадцатеричного формата)|Отсутствует.|  
|"." (описатель настраиваемого формата десятичной запятой)|<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, для определения символа десятичного разделителя.|  
|«,» (описатель настраиваемого формата разделителя групп)|<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, чтобы определить символ-разделитель групп (тысяч).|  
|(описатель настраиваемого формата заполнитель процента) «%»|<xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, для определения знака процентов.|  
|«‰» (на описатель настраиваемого формата местозаполнитель промилле)|<xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A>, чтобы определить символ промилле.|  
|«E» (экспоненциальная нотация настраиваемый описатель формата)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, для определения знака минус в мантиссу и показатель степени.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, для определения символа положительного знака в показателе степени.|  
  
 Обратите внимание, что <xref:System.Globalization.NumberFormatInfo> класс содержит <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> свойство, задающее первых 10 символов, определенного языка и региональных параметров. Однако свойство не используется для форматирования операций. только основные цифры от 0 (U + 0030) до 9 (U + 0039) используются в результирующей строке. Кроме того, для <xref:System.Single> и <xref:System.Double> значения `NaN`, `PositiveInfinity`, и `NegativeInfinity`, результирующую строку состоит только из символов, определенных с <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, и <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> свойства , соответственно.  
  
<a name="modifying"></a>   
## <a name="modifying-numberformatinfo-properties"></a>Изменение свойств NumberFormatInfo  
 Можно изменить свойства <xref:System.Globalization.NumberFormatInfo> объекта для настройки в результирующую строку, производимых в числового форматирования операции. Для этого выполните следующие действия.  
  
1.  Создать копию чтения и записи <xref:System.Globalization.NumberFormatInfo> объекта соглашения о форматировании которых требуется изменить. Дополнительные сведения см. в разделе [создание экземпляра объекта NumberFormatInfo](#Instantiating) раздела.  
  
2.  Измените свойства или свойства, которые используются для создания нужного результирующую строку. Сведения об использовании способ форматирования методы <xref:System.Globalization.NumberFormatInfo> см. свойства, определяющие результирующие строки [форматирование строк и свойства NumberFormatInfo](#properties) раздела.  
  
3.  Использование пользовательских <xref:System.Globalization.NumberFormatInfo> объекта в виде <xref:System.IFormatProvider> аргумент в вызовах методов форматирования.  
  
> [!NOTE]
>  Вместо динамически изменение значений свойств для региональных параметров при каждом запуске приложения, можно использовать <xref:System.Globalization.CultureAndRegionInfoBuilder> класса для определения пользовательского языка и региональных параметров (язык и региональные параметры, имеет уникальное имя и, дополняют существующие языков и региональных параметров) или замена язык и региональные параметры (той, которая используется вместо конкретного языка и региональных параметров).  
  
 Некоторые примеры в следующих разделах.  
  
<a name="currency"></a>   
### <a name="modifying-the-currency-symbol-and-pattern"></a>Изменение знака денежной единицы и шаблон  
 В следующем примере изменяется <xref:System.Globalization.NumberFormatInfo> объект, представляющий соглашения о форматировании языка и региональных параметров en US. Он назначает знака денежной единицы в формате ISO 4217 <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> свойство и определяет шаблон для значений валют, состоящее из знака денежной единицы, за которым следует пробел и числовое значение.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_currency1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_currency1.vb#1)]  
  
<a name="id"></a>   
### <a name="formatting-a-national-identification-number"></a>Форматирование государственный идентификационный номер  
 Многие номера национальной принадлежности состоять только из цифр и поэтому можно легко отформатировать путем изменения свойства <xref:System.Globalization.NumberFormatInfo> объекта. Например, номер социального страхования в США состоит из 9 цифр, размещаются следующим образом: `XXX-XX-XXXX`. В следующем примере предполагается, что номера социального страхования хранятся в виде целого числа, значения и форматирует их соответствующим образом.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_ssn1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_ssn1.vb#2)]  
  
<a name="parsing"></a>   
## <a name="parsing-numeric-strings"></a>Анализ числовых строк  
 Синтаксический анализ подразумевает преобразование строковое представление числа в число. Каждого числового типа в .NET Framework включает два перегруженных метода синтаксического анализа: `Parse` и `TryParse`. `Parse` Метод преобразует строку в число и вызывает исключение, если преобразование завершается неудачей. `TryParse` Метод преобразует строку в число, назначает номер для `out` аргумента и возвращает <xref:System.Boolean> значение, указывающее, успешно ли выполнено преобразование.  
  
 Методы анализа неявно или явно используют <xref:System.Globalization.NumberStyles> значение перечисления, чтобы определить, какие элементы стиля (например, разделители групп десятичный разделитель и обозначение денежной единицы) могут быть представлены в строке, операция синтаксического анализа в случае успешного. Если <xref:System.Globalization.NumberStyles> значение — не указан в вызове метода, значение по умолчанию — <xref:System.Globalization.NumberStyles> значением, которое содержит <xref:System.Globalization.NumberStyles.Float> и <xref:System.Globalization.NumberStyles.AllowThousands> флаги, которые указывает анализируемой строке может включать группы символов, десятичного разделителя, отрицательный знак, и пробелы, или он может быть строковое представление числа в экспоненциальном представлении.  
  
 Методы синтаксического анализа также неявно или явно используют <xref:System.Globalization.NumberFormatInfo> , определяющий специальные символы и шаблоны, которые могут возникать в строке для анализа. Если <xref:System.Globalization.NumberFormatInfo> объекта не указан, значение по умолчанию — <xref:System.Globalization.NumberFormatInfo> для языка и региональных параметров текущего потока. Дополнительные сведения о синтаксическом разборе см. в отдельные методы синтаксического анализа, таких как <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>, <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>, <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29?displayProperty=nameWithType>, и <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29?displayProperty=nameWithType>.  
  
 В следующем примере демонстрируется разбор строк особенностей культуры. Предпринимается попытка синтаксический анализ строки, содержащие тысячи с использованием соглашений о en US, fr-FR и инвариантные в качестве разделителей. Строка, включающая запятой как разделитель групп и период как десятичный разделитель не удается выполнить анализ в региональных параметров fr-FR, а строка с white space в качестве разделителя групп и запятую в качестве десятичного разделителя не удается выполнить анализ на en US и инвариантных региональных параметров.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parse1.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parse1.vb#4)]  
  
 Синтаксический анализ обычно возникает в двух контекстах:  
  
-   Как операция, предназначенная для преобразования входных данных пользователя в числовое значение.  
  
-   Как операция, предназначенная для обратного преобразования числовое значение; то есть для десериализации числовое значение, которое ранее было сериализовано в виде строки.  
  
 В следующих разделах рассматриваются эти две операции более подробно.  
  
<a name="ParseUser"></a>   
### <a name="parsing-user-strings"></a>Разбор строк пользователя  
 При анализе числовых строк ввода пользователя всегда должно создать <xref:System.Globalization.NumberFormatInfo> , отражающий региональные параметры пользователя. Сведения о том, как создать экземпляр <xref:System.Globalization.NumberFormatInfo> , отражающий пользовательские настройки в разделе [NumberFormatInfo и динамических данных](#dynamic) раздела.  
  
 В следующем примере показано различие между операции анализа, которая отражает региональных параметров пользователя, а другой — нет. В этом случае система по умолчанию языком и региональными параметрами являются en US, но пользователь указал «,» как десятичный разделитель и «.» как разделители групп из панели управления **язык и региональные стандарты**. Как правило эти символы поменяются в язык и региональные параметры по умолчанию en US. Если пользователь вводит в строке, в которой отражена параметры пользователя, а строка анализируется с <xref:System.Globalization.NumberFormatInfo> объекта, который также содержит параметры пользователя (переопределения), операция синтаксического анализа возвращает правильный результат. Тем не менее, когда строка анализируется с <xref:System.Globalization.NumberFormatInfo> , отражающий региональные настройки стандартных en US, он ошибки символ запятой для разделителя групп и возвращает неверный результат.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parseuser1.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parseuser1.vb#5)]  
  
<a name="ParseSerial"></a>   
### <a name="serializing-and-deserializing-numeric-data"></a>Сериализация и десериализация числовых данных  
 Когда числовых данных сериализуется в формат строки и более поздней версии десериализуется и проанализировать, строки создавать и обрабатываются с использованием соглашения инвариантных региональных параметров. Операции форматирования и синтаксического анализа никогда не должны отражать соглашения определенного языка и региональных параметров. Если используются параметры, специфичные для языка и региональных параметров, мобильность данных строго ограничивается; Это может быть успешно десериализован только в потоке которого языком и региональными параметрами потока, который был сериализован идентичны. В некоторых случаях это означает, что даже данных не может быть успешно десериализован, на том же компьютере, на котором он был сериализован.  
  
 В следующем примере показано, что может произойти при нарушении этот принцип. Значения с плавающей запятой в виде массива преобразуются в строки, если текущий поток использует региональных параметров en-US. Затем синтаксического анализа данных, потоком, который использует параметры языка и региональных параметров en-GB конкретного языка и региональных параметров. Таким образом, несмотря на то, что каждая операция анализа завершается успешно, данные не обратного преобразования успешно и происходит повреждение данных. В других случаях может произойти сбой операции синтаксического анализа и <xref:System.FormatException> может быть вызвано исключение.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parsepersisted.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parsepersisted.vb#6)]  
  
   
  
## Examples  
 В следующем примере показано, как получить <xref:System.Globalization.NumberFormatInfo> объект для соответствующего <xref:System.Globalization.CultureInfo> и использовать полученного объекта в число запросов форматирования сведения для конкретного языка и региональных параметров.  
  
 [!code-cpp[NumberFormatInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberFormatInfo/cpp/NumberFormatInfo.cpp#1)]
 [!code-csharp[NumberFormatInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberFormatInfo/CS/NumberFormatInfo.cs#1)]
 [!code-vb[NumberFormatInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberFormatInfo/vb/numberformatinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.IFormatProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumberFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumberFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый доступный для записи экземпляр класса <see cref="T:System.Globalization.NumberFormatInfo" />, не зависящий от языка и региональных параметров (инвариантный).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства нового экземпляра можно изменить, если приложению требуется собственный формат.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает неполную копию объекта <see cref="T:System.Globalization.NumberFormatInfo" />.</summary>
        <returns>Новый объект, скопированный из исходного объекта <see cref="T:System.Globalization.NumberFormatInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Копия класса доступна для записи даже в том случае, если исходный <xref:System.Globalization.NumberFormatInfo> объект доступен только для чтения. Таким образом можно изменить свойства копии с помощью пользовательских шаблонов.  
  
 Неполная копия объекта является копией только данного объекта. Если в объекте содержатся ссылки на другие объекты, создаются в неполной копии будут не объектов, который ссылается. Он будет использовать на исходные объекты. С другой стороны глубокую копию объекта создает копию объекта и копию всего содержимого, прямо или косвенно ссылается этот объект. В случае использования <xref:System.Globalization.NumberFormatInfo> объекта неполную копию достаточно для копирования всех свойств экземпляра, поскольку все свойства, которые возвращают ссылки на объекты `static` (`Shared` в Visual Basic).  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.NumberFormatInfo.Clone%2A> метод для создания, чтения и записи копия <xref:System.Globalization.NumberFormatInfo> , представляющий числовое форматирование соглашения языка и региональных параметров текущего потока.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalDigits">
      <MemberSignature Language="C#" Value="public int CurrencyDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyDecimalDigits { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число десятичных разрядов, используемое в значениях денежных сумм.</summary>
        <value>Число десятичных разрядов, используемое в значениях денежных сумм. Значение по умолчанию для аргумента <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> Свойство используется со строкой стандартного формата «C» без описатель точности в числового форматирования операций. Он определяет количество цифр дробной части, которые отображаются после десятичного разделителя по умолчанию. Это значение переопределяется, если используется описателем точности. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> свойство.  
  
 [!code-cpp[CurrencyDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalDigits/CPP/currencydecimaldigits.cpp#1)]
 [!code-csharp[CurrencyDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalDigits/CS/currencydecimaldigits.cs#1)]
 [!code-vb[CurrencyDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalDigits/VB/currencydecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 99.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве десятичного разделителя в значениях денежных сумм.</summary>
        <value>Строка, используемая в качестве десятичного разделителя в значениях денежных сумм. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Начальное значение этого свойства является производным от параметров в **язык и региональные стандарты** элемента панели управления.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> Свойство используется со строкой стандартного формата «C» для определения символа, разделяющую целочисленные цифры дробной части. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> свойство.  
  
 [!code-cpp[CurrencyDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalSeparator/CPP/currencydecimalseparator.cpp#1)]
 [!code-csharp[CurrencyDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalSeparator/CS/currencydecimalseparator.cs#1)]
 [!code-vb[CurrencyDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalSeparator/VB/currencydecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается пустая строка.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, разделяющую разряды в целой части десятичной дроби в значениях денежных сумм.</summary>
        <value>Строка, разделяющая разряды в целой части десятичной дроби в значениях денежных сумм. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно "-".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Начальное значение этого свойства является производным от параметров в **языка и региональных стандартов** элемента панели управления.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> Свойство используется со строкой стандартного формата «C» для определения символа, разделяющую группы цифр целой части. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> свойство.  
  
 [!code-cpp[CurrencyGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSeparator/CPP/currencygroupseparator.cpp#1)]
 [!code-csharp[CurrencyGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSeparator/CS/currencygroupseparator.cs#1)]
 [!code-vb[CurrencyGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSeparator/VB/currencygroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSizes">
      <MemberSignature Language="C#" Value="public int[] CurrencyGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] CurrencyGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ CurrencyGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число цифр в каждой из групп целой части десятичной дроби в значениях денежных сумм.</summary>
        <value>Число цифр в каждой из групп целой части десятичной дроби в значениях денежных сумм. Для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> по умолчанию используется одномерный массив с единственным элементом, для которого задано значение 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> Свойство используется со строкой стандартного формата «C» для определения числа цифр, входящих в целых групп. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md). Каждый элемент в одномерном массиве должно быть целое число от 1 до 9. Последний элемент может быть 0.  
  
 Первый элемент массива определяет число элементов в группе младших разрядов слева от <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>. Каждый последующий элемент относится к следующей группе значительные цифр слева от предыдущей группы. Если последний элемент массива — 0, остальные цифры группируются по последним элементом массива. Если последним элементом является 0, остальные цифры не группируются.  
  
 Например если массив содержит элементы {3, 4, 5}, цифры группируются следующим образом: «$55,55555,55555,55555,4444,333.00». Если массив содержит элементы {3, 4, 0}, цифры группируются примерно «$: 55555555555555555 4444 333,00».  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> свойство.  
  
 [!code-cpp[CurrencyGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSizes/CPP/currencygroupsizes.cpp#1)]
 [!code-csharp[CurrencyGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSizes/CS/currencygroupsizes.cs#1)]
 [!code-vb[CurrencyGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSizes/VB/currencygroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается значение, и массив содержит запись, которая меньше 0 или больше 9.  
  
 -или-  
  
 Для свойства задается значение, и массив содержит запись, отличную от последней записи, которая имеет значение 0.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyNegativePattern">
      <MemberSignature Language="C#" Value="public int CurrencyNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyNegativePattern { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон формата для отрицательных значений денежных сумм.</summary>
        <value>Шаблон формата для отрицательных значений денежных сумм. По умолчанию для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> задано значение 0, представляющее "($n)", где "$" — это <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />, а <paramref name="n" /> — число.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> Свойство используется со строкой стандартного формата «C» для определения шаблона отрицательных значений денежных сумм. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md). Это свойство имеет одно из значений в таблице ниже. Символ «$» <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, символ «-» — <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, и `n` является числом.  
  
|Значение|Соответствующий шаблон|  
|-----------|------------------------|  
|0|($n)|  
|1|-$n|  
|2|$n|  
|3|$n-|  
|4|(n$)|  
|5|-n$|  
|6|n$|  
|7|n$-|  
|8|-n $|  
|9|-$ n|  
|10|n $-|  
|11|$ n-|  
|12|$ - n|  
|13|n - $|  
|14|($ n)|  
|15|(n $)|  
  
   
  
## Examples  
 В следующем примере показан способ <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> свойство определяет формат отрицательных значений денежных сумм.  Он извлекает все определенные культуры, которые определены на главном компьютере и отображает для каждого языка <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> форматирования значение свойства, его соответствующий шаблон и число как денежное значение.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/cs/currencynegativepattern1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/vb/currencynegativepattern1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 15.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyPositivePattern">
      <MemberSignature Language="C#" Value="public int CurrencyPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyPositivePattern { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон формата для положительных значений денежных сумм.</summary>
        <value>Шаблон формата для положительных значений денежных сумм. По умолчанию для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> задано значение 0, представляющее "$n", где "$" — это <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />, а <paramref name="n" /> — число.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> Свойство используется со строкой стандартного формата «C» для определения шаблона для положительных значений денежных сумм. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md). Это свойство имеет одно из значений в таблице ниже. Символ «$» <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> и `n` является числом.  
  
|Значение|Соответствующий шаблон|  
|-----------|------------------------|  
|0|$n|  
|1|n$|  
|2|$ n|  
|3|n $|  
  
 Обратите внимание, что шаблон не поддерживает положительный знак.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 3.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public string CurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве знака денежной единицы.</summary>
        <value>Строка, используемая в качестве знака денежной единицы. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> — "¤".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка, присвоенная <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> свойство включено в результирующую строку при форматировании числового значения с «C» [строкой стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере отображается символ валюты для текущего языка и региональных параметров и используется строка стандартного числового формата «C» для форматирования значения валюты.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/cs/currencysymbolex1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/vb/currencysymbolex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ CurrentInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает доступный только для чтения объект <see cref="T:System.Globalization.NumberFormatInfo" />, форматирующий значения на основе текущего языка и региональных параметров.</summary>
        <value>Доступный только для чтения объект <see cref="T:System.Globalization.NumberFormatInfo" /> на основе языка и региональных параметров текущего потока.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Получение <xref:System.Globalization.NumberFormatInfo> объекта из <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> свойство эквивалентно получение <xref:System.Globalization.NumberFormatInfo> объекта из `CultureInfo.CurrentCulture.NumberFormat` свойство.  
  
   
  
## Examples  
 В следующем примере показано, что объекты, возвращаемые <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> и `CultureInfo.CurrentCulture.NumberFormat` свойства идентичны. Затем он использует отражение для отображения значений свойств <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> свойства в системе с текущими региональными параметрами являются en US.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/cs/currentinfo1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/vb/currentinfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitution">
      <MemberSignature Language="C#" Value="public System.Globalization.DigitShapes DigitSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.DigitShapes DigitSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitSubstitution As DigitShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DigitShapes DigitSubstitution { System::Globalization::DigitShapes get(); void set(System::Globalization::DigitShapes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DigitShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, каким образом а графическом интерфейсе пользователя должны отображаться фигуры цифр.</summary>
        <value>Одно из значений перечисления, указывающее фигуру цифры, связанную с языком и региональными параметрами.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Globalization.NumberFormatInfo.DigitSubstitution%2A> Свойство зарезервировано для будущего использования. В настоящее время не используется в синтаксическом анализе или операций для текущего форматирования <xref:System.Globalization.NumberFormatInfo> объекта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущий объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения. </exception>
        <exception cref="T:System.ArgumentException">Значение в операции задания не является допустимым значением <see cref="T:System.Globalization.DigitShapes" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">
          <see cref="T:System.Type" /> требуемой службы форматирования.</param>
        <summary>Возвращает объект указанного типа, предоставляющий службу форматирования чисел.</summary>
        <returns>Текущий объект <see cref="T:System.Globalization.NumberFormatInfo" />, если параметр <paramref name="formatType" /> совпадает с типом текущего объекта <see cref="T:System.Globalization.NumberFormatInfo" />; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Format(String, IFormatProvider)` Методы, поддерживаемые базовые типы данных этот метод вызывается при текущей <xref:System.Globalization.NumberFormatInfo> передается в качестве <xref:System.IFormatProvider> параметра. Этот метод реализует <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo GetInstance (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo GetInstance(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (formatProvider As IFormatProvider) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ GetInstance(IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">Объект <see cref="T:System.IFormatProvider" />, используемый для получения <see cref="T:System.Globalization.NumberFormatInfo" />.  
  
 - или -  
  
 Значение <see langword="null" />, чтобы получить <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />.</param>
        <summary>Возвращает класс <see cref="T:System.Globalization.NumberFormatInfo" />, связанный с заданным <see cref="T:System.IFormatProvider" />.</summary>
        <returns>Класс <see cref="T:System.Globalization.NumberFormatInfo" />, связанный с заданным классом <see cref="T:System.IFormatProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> метод `formatProvider` с помощью <xref:System.Globalization.NumberFormatInfo> параметром типа. Если `formatProvider` — `null` или если <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> возвращает `null`, этот метод возвращает <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.  
  
 Приложение получает <xref:System.Globalization.NumberFormatInfo> объект для определенного языка и региональных параметров с помощью одного из следующих методов:  
  
-   Через <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> свойство.  
  
-   Через <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> метод где `provider` — <xref:System.Globalization.CultureInfo>.  
  
 Объект <xref:System.Globalization.NumberFormatInfo> создается только для инвариантных региональных параметров или для конкретных языков и региональных параметров, но не для нейтральной культуры. Дополнительные сведения о инвариантного языка и региональных параметров, определенных и нейтральные языки и региональные параметры в разделе <xref:System.Globalization.CultureInfo> класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ InvariantInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Globalization.NumberFormatInfo" />, доступный только для чтения, который не зависит от языка и региональных параметров (инвариантный).</summary>
        <value>Объект, доступный только для чтения, который не зависит от языка и региональных параметров (инвариантный).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это <xref:System.Globalization.NumberFormatInfo> объект, возвращаемый этим свойством не меняется независимо от текущего языка и региональных параметров. Он представляет соглашения о форматировании инвариантных региональных параметров, язык и региональные параметры, связанные с английским языком, но не с любой страны или региона. Инвариантный язык и региональные параметры будут использоваться при форматировании операций, не зависят от языка и региональных параметров, так и для нескольких языков и региональных параметров, создания строк результатов, удобному для отображения.  
  
   
  
## Examples  
 В следующем примере отображается значение свойства по умолчанию <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A>.  
  
 [!code-cpp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CPP/invariantinfo.cpp#1)]
 [!code-csharp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CS/invariantinfo.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/VB/invariantinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли данный объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступным только для чтения.</summary>
        <value>
          Значение <see langword="true" />, если интерфейс <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Попытка выполнить присвоения значения свойства только для чтения <xref:System.Globalization.NumberFormatInfo> вызывает <xref:System.InvalidOperationException>.  
  
 Можно вызвать <xref:System.Globalization.NumberFormatInfo.Clone%2A> метод для создания, чтения и записи <xref:System.Globalization.NumberFormatInfo> объекта из объекта только для чтения, как показано в следующем примере.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="NaNSymbol">
      <MemberSignature Language="C#" Value="public string NaNSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NaNSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NaNSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NaNSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, представляющую значение IEEE NaN (не числовое).</summary>
        <value>Строка, представляющая значение IEEE NaN (не числовое). Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> — "NaN".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о значениях NaN см. в разделе <xref:System.Double> или <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      </Docs>
    </Member>
    <Member MemberName="NativeDigits">
      <MemberSignature Language="C#" Value="public string[] NativeDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] NativeDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NativeDigits As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ NativeDigits { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает массив строк собственных цифр, эквивалентных арабским цифрам от 0 до 9.</summary>
        <value>Массив строк, содержащий собственный эквивалент арабских цифр от 0 до 9. Значение по умолчанию — массив, включающий элементы "0", "1", "2", "3", "4", "5", "6", "7", "8" и "9".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Набор символов, который задается параметром <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> свойство влияет только на анализ или операций форматирования. Только основные цифры от 0 (U + 0030) до 9 (U + 0039) используются при форматировании или анализе числовые значения или значения даты и времени.  
  
   
  
## Examples  
 В следующем примере демонстрируется <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> свойство.  
  
 [!code-cpp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cpp/nd.cpp#1)]
 [!code-csharp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cs/nd.cs#1)]
 [!code-vb[sys.glob.NFI.nativeDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/vb/nd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущий объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения. </exception>
        <exception cref="T:System.ArgumentNullException">В наборе операций значением является <see langword="null" />.  
  
 - или -  
  
 в наборе операций элемент массива значений равен <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">В операции над множеством массив значений не содержит 10 элементов.  
  
 - или -  
  
 в наборе операций элемент массива значений не содержит отдельный объект <see cref="T:System.Char" /> или пару объектов <see cref="T:System.Char" />, составляющих суррогатную пару,  
  
 - или -  
  
 В операции над множеством элемент массива значений не является цифрой, как определено [стандартом Юникода](http://go.microsoft.com/fwlink/?linkid=37123). То есть цифра в элементе массива не имеет значения общей категории Юникода (Nd) <see langword="Number, Decimal Digit" />,  
  
 - или -  
  
 В операции над множеством числовое значение элемента в массиве значений не соответствует положению элемента в массиве. То есть элемент с индексом 0, который является первым элементом массива, не имеет числового значения 0, или элемент с индексом 1 не имеет числового значения 1.</exception>
        <altmember cref="T:System.Globalization.DigitShapes" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinitySymbol">
      <MemberSignature Language="C#" Value="public string NegativeInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, представляющую минус бесконечность.</summary>
        <value>Строка, представляющая минус бесконечность. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> ‏‏— "Infinity".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о минус бесконечности см. в разделе <xref:System.Double> или <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="NegativeSign">
      <MemberSignature Language="C#" Value="public string NegativeSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, указывающую, что соответствующее число является отрицательным.</summary>
        <value>Строка, указывающая, что соответствующее число является отрицательным. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> — "+".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется в операциях синтаксического анализа и форматирования. Дополнительные сведения о его использование в операциях форматирования см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md) разделы.  
  
   
  
## Examples  
 В следующем примере создается для чтения и записи <xref:System.Globalization.CultureInfo> объект, который представляет инвариантного языка и региональных параметров и назначает НАДЧЕРКИВАНИЕ знака (U + 203E) его <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> свойство. Затем он использует это <xref:System.Globalization.CultureInfo> объект для форматирования массив отрицательных чисел с плавающей запятой.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/cs/negativesign1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/vb/negativesign1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalDigits">
      <MemberSignature Language="C#" Value="public int NumberDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberDecimalDigits { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число десятичных разрядов, используемое в числовых значениях.</summary>
        <value>Число десятичных разрядов, используемое в числовых значениях. Значение по умолчанию для аргумента <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> Свойство используется с помощью строки стандартного формата «F» и «N» без описатель точности в операциях форматирования числовых. Он определяет количество цифр дробной части, которые отображаются после десятичного разделителя по умолчанию. Это значение переопределяется, если используется описателем точности. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> свойство.  
  
 [!code-cpp[NumberDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalDigits/CPP/numberdecimaldigits.cpp#1)]
 [!code-csharp[NumberDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalDigits/CS/numberdecimaldigits.cs#1)]
 [!code-vb[NumberDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalDigits/VB/numberdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 99.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalSeparator">
      <MemberSignature Language="C#" Value="public string NumberDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве десятичного разделителя в числовых значениях.</summary>
        <value>Строка, используемая в качестве десятичного разделителя в числовых значениях. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> Свойство используется с помощью строки стандартного формата «E», «F», «G», «N» и «R» для определения символа, разделяющую целочисленные цифры дробной части. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
 Начальное значение этого свойства является производным от параметров в **язык и региональные стандарты** элемента панели управления.  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> свойство.  
  
 [!code-cpp[NumberDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalSeparator/CPP/numberdecimalseparator.cpp#1)]
 [!code-csharp[NumberDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalSeparator/CS/numberdecimalseparator.cs#1)]
 [!code-vb[NumberDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalSeparator/VB/numberdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается пустая строка.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSeparator">
      <MemberSignature Language="C#" Value="public string NumberGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, разделяющую разряды в целой части десятичной дроби в числовых значениях.</summary>
        <value>Строка, разделяющая разряды в целой части десятичной дроби в числовых значениях. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно "-".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> Свойство используется со строкой стандартного формата «N» для определения символа, разделяющую группы цифр целой части. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
 Начальное значение этого свойства является производным от параметров в **язык и региональные стандарты** элемента панели управления.  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> свойство.  
  
 [!code-cpp[NumberGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSeparator/CPP/numbergroupseparator.cpp#1)]
 [!code-csharp[NumberGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSeparator/CS/numbergroupseparator.cs#1)]
 [!code-vb[NumberGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSeparator/VB/numbergroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSizes">
      <MemberSignature Language="C#" Value="public int[] NumberGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] NumberGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ NumberGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число цифр в каждой из групп целой части десятичной дроби в числовых значениях.</summary>
        <value>Число цифр в каждой из групп целой части десятичной дроби в числовых значениях. Для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> по умолчанию используется одномерный массив с единственным элементом, для которого задано значение 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> свойства влияет на результат числовые значения, отформатированные с помощью «N». Если пользовательский числовой формат строки или других стандартных числовых форматов используются строки, значение <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> свойство игнорируется.  
  
 Каждый элемент в одномерном массиве должно быть целое число от 1 до 9. Последний элемент может быть 0.  
  
 Первый элемент массива определяет число элементов в группе младших разрядов слева от <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>. Каждый последующий элемент относится к следующей группе значительные цифр слева от предыдущей группы. Если последний элемент массива — 0, остальные цифры группируются по последним элементом массива. Если последним элементом является 0, остальные цифры не группируются.  
  
 Например если массив содержит элементы {3, 4, 5}, цифры группируются следующим образом: «55,55555,55555,55555,4444,333.00». Если массив содержит элементы {3, 4, 0}, цифры группируются следующим образом: «55555555555555555 4444 333,00».  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> свойство.  
  
 [!code-cpp[NumberGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSizes/CPP/numbergroupsizes.cpp#1)]
 [!code-csharp[NumberGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSizes/CS/numbergroupsizes.cs#1)]
 [!code-vb[NumberGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSizes/VB/numbergroupsizes.vb#1)]  
  
 В следующем примере выводится значение с помощью различных <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> массивов.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается значение, и массив содержит запись, которая меньше 0 или больше 9.  
  
 -или-  
  
 Для свойства задается значение, и массив содержит запись, отличную от последней записи, которая имеет значение 0.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="NumberNegativePattern">
      <MemberSignature Language="C#" Value="public int NumberNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberNegativePattern { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон формата для отрицательных числовых значений.</summary>
        <value>Шаблон формата для отрицательных числовых значений.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> Свойство определяет формат отрицательных значений в формате со строкой стандартного числового формата «N». Это свойство имеет одно из значений в таблице ниже. Символ «-» — <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> и `n` является числом.  
  
|Значение|Соответствующий шаблон|  
|-----------|------------------------|  
|0|(n)|  
|1|-n|  
|2|- n|  
|3|n-|  
|4|n -|  
  
 Значение по умолчанию для инвариантного языка и региональных параметров, возвращаемых <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> свойство имеет значение 1, которое представляет «-n», где *n* является числом.  
  
   
  
## Examples  
 В следующем примере отображается значение, используя различные <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> шаблонов.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 4.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalDigits">
      <MemberSignature Language="C#" Value="public int PercentDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentDecimalDigits { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает количество десятичных разрядов, используемое в значениях процентов.</summary>
        <value>Число десятичных разрядов, используемое в значениях процентов. Значение по умолчанию для аргумента <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно 2.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> Свойство используется со строкой стандартного формата «P» без описатель точности в числового форматирования операций. Он определяет количество цифр дробной части, которые отображаются после десятичного разделителя по умолчанию. Это значение переопределяется, если используется описателем точности. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> свойство.  
  
 [!code-cpp[PercentDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalDigits/CPP/percentdecimaldigits.cpp#1)]
 [!code-csharp[PercentDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalDigits/CS/percentdecimaldigits.cs#1)]
 [!code-vb[PercentDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalDigits/VB/percentdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 99.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalSeparator">
      <MemberSignature Language="C#" Value="public string PercentDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве десятичного разделителя в значениях процентов.</summary>
        <value>Строка, используемая в качестве десятичного разделителя в значениях процентов. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно ".".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> Свойство используется со строкой стандартного формата «P» для определения символа, разделяющую целочисленные цифры дробной части. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> свойство.  
  
 [!code-cpp[PercentDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalSeparator/CPP/percentdecimalseparator.cpp#1)]
 [!code-csharp[PercentDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalSeparator/CS/percentdecimalseparator.cs#1)]
 [!code-vb[PercentDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalSeparator/VB/percentdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается пустая строка.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSeparator">
      <MemberSignature Language="C#" Value="public string PercentGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, разделяющую разряды в целой части десятичной дроби в значениях процентов.</summary>
        <value>Строка, разделяющая разряды в целой части десятичной дроби в значениях процентов. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно "-".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> Свойство используется со строкой стандартного формата «P» для определения символа, разделяющую целых чисел. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> свойство.  
  
 [!code-cpp[PercentGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSeparator/CPP/percentgroupseparator.cpp#1)]
 [!code-csharp[PercentGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSeparator/CS/percentgroupseparator.cs#1)]
 [!code-vb[PercentGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSeparator/VB/percentgroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSizes">
      <MemberSignature Language="C#" Value="public int[] PercentGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] PercentGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ PercentGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает количество цифр в каждой из групп разрядов целой части десятичной дроби в значениях процентов.</summary>
        <value>Число цифр в каждой из групп целой части десятичной дроби в значениях процентов. Для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> по умолчанию используется одномерный массив с единственным элементом, для которого задано значение 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> Свойство используется со строкой стандартного формата «P» для определения числа цифр, входящих в целых групп. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md). Каждый элемент в одномерном массиве должно быть целое число от 1 до 9. Последний элемент может быть 0.  
  
 Первый элемент массива определяет число элементов в группе младших разрядов слева от <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>. Каждый последующий элемент относится к следующей группе значительные цифр слева от предыдущей группы. Если последний элемент массива — 0, остальные цифры группируются по последним элементом массива. Если последним элементом является 0, остальные цифры не группируются.  
  
 Например, если массив содержит элементы {3, 4, 5}, цифры группируются примерно «55,55555,55555,55555,4444,333.00%». Если массив содержит элементы {3, 4, 0}, цифры группируются примерно»: 55555555555555555 4444 333,00%».  
  
   
  
## Examples  
 В следующем примере демонстрируется эффект от изменения <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> свойство.  
  
 [!code-cpp[PercentGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSizes/CPP/percentgroupsizes.cpp#1)]
 [!code-csharp[PercentGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSizes/CS/percentgroupsizes.cs#1)]
 [!code-vb[PercentGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSizes/VB/percentgroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Для свойства задается значение, и массив содержит запись, которая меньше 0 или больше 9.  
  
 -или-  
  
 Для свойства задается значение, и массив содержит запись, отличную от последней записи, которая имеет значение 0.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="PercentNegativePattern">
      <MemberSignature Language="C#" Value="public int PercentNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentNegativePattern { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон формата для отрицательных значений процентов.</summary>
        <value>Шаблон формата для отрицательных значений процентов. По умолчанию для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> задано значение 0, представляющее "-n %", где "%" — это <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />, а <paramref name="n" /> — число.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A> Свойство используется со строкой стандартного формата «P» для определения шаблона отрицательное процентных значений. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md). Это свойство имеет одно из значений в таблице ниже. Символ «%» <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, символ «-» — <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, и `n` является числом. Значения 3-11 впервые появились в .NET Framework 2.0 и не может использоваться в более ранних версиях.  
  
|Значение|Соответствующий шаблон|  
|-----------|------------------------|  
|0|% - n|  
|1|-n%|  
|2|-%n|  
|3|%-n|  
|4|%n-|  
|5|n-%|  
|6|n%-|  
|7|-% n|  
|8|n %-|  
|9|% n-|  
|10|% - n|  
|11|n %|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 11.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentPositivePattern">
      <MemberSignature Language="C#" Value="public int PercentPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentPositivePattern { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон формата для положительных значений процентов.</summary>
        <value>Шаблон формата для положительных значений процентов. По умолчанию для свойства <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> задано значение 0, представляющее "n %", где "%" — это <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />, а <paramref name="n" /> — число.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A> Свойство используется со строкой стандартного формата «P» для определения шаблона положительный процент значений. Дополнительные сведения см. в разделе [строки стандартного числового формата](~/docs/standard/base-types/standard-numeric-format-strings.md). Это свойство имеет одно из значений в таблице ниже. Символ «%» <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> и `n` является числом.  
  
|Значение|Соответствующий шаблон|  
|-----------|------------------------|  
|0|n %|  
|1|n%|  
|2|%n|  
|3|% n|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства задано значение меньше 0 или больше 3.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentSymbol">
      <MemberSignature Language="C#" Value="public string PercentSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве знака процентов.</summary>
        <value>Строка, используемая в качестве знака процентов. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно "%".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка, присвоенная <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> свойство включено в результирующую строку при форматировании числового значения с «P» или со строкой формата, которая включает в себя «%».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PerMilleSymbol">
      <MemberSignature Language="C#" Value="public string PerMilleSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PerMilleSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PerMilleSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PerMilleSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, используемую в качестве знака промилле.</summary>
        <value>Строка, используемая в качестве знака промилле. Значением по умолчанию для <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> является "‰", что соответствует символу Юникода U+2030.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка, присвоенная <xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A> свойство включено в результирующую строку при форматировании числового значения с строка формата, включающая «‰».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinitySymbol">
      <MemberSignature Language="C#" Value="public string PositiveInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, представляющую плюс бесконечность.</summary>
        <value>Строка, представляющая плюс бесконечность. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> ‏‏равно "Infinity".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о плюс бесконечности см. в разделе <xref:System.Double> или <xref:System.Single>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства задается значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveSign">
      <MemberSignature Language="C#" Value="public string PositiveSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, указывающую, что соответствующее число является положительным.</summary>
        <value>Строка, указывающая, что соответствующее число является положительным. Значение по умолчанию для объекта <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> равно "+".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется только для разбора числовых строк, а не для форматирования.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">В операции присваивания присваиваемое значение меньше <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Для свойства задается значение, а объект <see cref="T:System.Globalization.NumberFormatInfo" /> доступен только для чтения.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo ReadOnly (System.Globalization.NumberFormatInfo nfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo ReadOnly(class System.Globalization.NumberFormatInfo nfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (nfi As NumberFormatInfo) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ ReadOnly(System::Globalization::NumberFormatInfo ^ nfi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nfi" Type="System.Globalization.NumberFormatInfo" />
      </Parameters>
      <Docs>
        <param name="nfi">Класс <see cref="T:System.Globalization.NumberFormatInfo" />, для которого создается оболочка.</param>
        <summary>Возвращает программу-оболочку <see cref="T:System.Globalization.NumberFormatInfo" />, доступную только для чтения.</summary>
        <returns>Доступная только для чтения программа-оболочка <see cref="T:System.Globalization.NumberFormatInfo" /> для параметра <paramref name="nfi" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта оболочка предотвращает изменения в `nfi`.  
  
 Попытка выполнить присвоения значения свойства только для чтения <xref:System.Globalization.NumberFormatInfo> вызывает <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="nfi" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      </Docs>
    </Member>
  </Members>
</Type>