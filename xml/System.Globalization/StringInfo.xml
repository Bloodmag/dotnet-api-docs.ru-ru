<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80c192082c2c19396d1b5a09fe5f8cde1b836f2d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37654330" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides functionality to split a string into text elements and to iterate through those text elements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework определяет текстовый элемент как единица текст, отображаемый как один символ, то есть графем. Элемент текста может быть базового символа, пара символов-заместителей или несамостоятельный знак последовательности. [Стандарта Юникод](http://go.microsoft.com/fwlink/?linkid=37123) определяет суррогатную пару как представление закодированных символов для один абстрактный символ, который состоит из последовательности из двух частей кода, где первая единица пары является заместителем, а второй — низкого уровня суррогат. Стандарт Юникод определяет присоединяемую последовательность знаков как сочетание базового символа и один или несколько несамостоятельных символов. Пара символов-заместителей может представлять базовый или несамостоятельный знак.  
  
 <xref:System.Globalization.StringInfo> Класс предоставляет возможность работы со строками, как ряд текстовых элементов, а не отдельные <xref:System.Char> объектов.  
  
 Для создания экземпляра <xref:System.Globalization.StringInfo> , представляющий указанную строку, можно выполнить одно из следующих:  
  
-   Вызовите <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> конструктор и передайте ему строку, <xref:System.Globalization.StringInfo> объект будет представлен в качестве аргумента.  
  
-   Вызов по умолчанию <xref:System.Globalization.StringInfo.%23ctor> конструктор и назначить ей строку, <xref:System.Globalization.StringInfo> объект будет представлен в <xref:System.Globalization.StringInfo.String%2A> свойство.  
  
 Можно работать с отдельными текстовые элементы строки двумя способами:  
  
-   Перечисляет каждый текстовый элемент. Чтобы сделать это, вызовите <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> метод и затем несколько раз вызвать <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> метод в возвращенном <xref:System.Globalization.TextElementEnumerator> объекта до выполнения метода `false`.  
  
-   Путем вызова <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> метод для извлечения массив, содержащий начальный индекс каждого элемента текста. Отдельные текстовые элементы можно получить, передав эти индексы для <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> метод.  
  
 В следующем примере оба способа работы с элементов текста в строке. Создает две строки:  
  
-   `strCombining`, который является строкой символы арабского алфавита, включает в себя три текстовых элементов с несколькими <xref:System.Char> объектов. Первый элемент текста — базового символа АЛИФ АРАБСКОГО ПИСЬМА (U +-627) следуют ARABIC ГАМЗА ниже (U +-655) и АРАБСКОГО КАЗРА (U + 0650). Второй элемент текста — HEH АРАБСКОГО ПИСЬМА (U + 0647) следуют FATHA арабского языка (U +-64E). Третий элемент текста является ARABIC БА LETTTER (U + 0628) следуют DAMMATAN арабского языка (U + 064C).  
  
-   `strSurrogates`, который является строкой, которая включает в себя три суррогатные пары: GREEK ACROPHONIC пять ТАЛАНТЫ (U + 10148) с дополнительными многоязыковой плоскостью, U + 20026 Идеографическая плоскость и U + F1001 из частной пользовательской области. Кодировка UTF-16 каждого символа является суррогатной пары, который состоит из заместителем следуют младшим символом-заместителем.  
  
 Каждая строка анализируется один раз с <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> метода и затем по <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> метод. Оба метода правильно анализируют текстовые элементы в двух строк и отображает результаты анализа.  
  
 [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
 [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
   
  
## Examples  
 В этом примере показано, как использовать <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> и <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> методы <xref:System.Globalization.StringInfo> класс для управления Строка, содержащая суррогат и несамостоятельных символов.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>На внутреннем уровне методы <see cref="T:System.Globalization.StringInfo" /> класса вызывать методы <see cref="T:System.Globalization.CharUnicodeInfo" /> класса для определения категории символов. Начиная с [! INCLUDE[net_v462](~/includes/NET-v462-MD.MD)], [The Unicode Standard, Version 8.0.0] на основе классификации символов (https://unicode.org/versions/Unicode8.0.0). Для [! INCLUDE[net_v40_long](~/includes/NET-v40-Long-MD.MD)] по [! INCLUDE[net_v461](~/includes/NET-v461-MD.MD)], он основан на [стандарте Юникода, версия 6.3.0] (https://www.unicode.org/versions/Unicode6.3.0/).</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение нового объекта <xref:System.Globalization.StringInfo> инициализируется с пустой строкой (»»). Можно назначить другой строкой на него с помощью <xref:System.Globalization.StringInfo.String%2A> свойство.  Можно также создать экземпляр <xref:System.Globalization.StringInfo> , представляющий указанную строку за один шаг, вызвав <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> конструктор.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">A string to initialize this <see cref="T:System.Globalization.StringInfo" /> object.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class to a specified string.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор присваивает значение аргумента объекта <xref:System.Globalization.StringInfo.String%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">An object.</param>
        <summary>Indicates whether the current <see cref="T:System.Globalization.StringInfo" /> object is equal to a specified object.</summary>
        <returns>
          <see langword="true" /> if the <paramref name="value" /> parameter is a <see cref="T:System.Globalization.StringInfo" /> object and its <see cref="P:System.Globalization.StringInfo.String" /> property equals the <see cref="P:System.Globalization.StringInfo.String" /> property of this <see cref="T:System.Globalization.StringInfo" /> object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calculates a hash code for the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
        <returns>A 32-bit signed integer hash code based on the string value of this <see cref="T:System.Globalization.StringInfo" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поведение <xref:System.Globalization.StringInfo.GetHashCode%2A> зависит от его реализации, которая может изменяться от одной версии среды CLR в другой. Это может произойти, чтобы повысить производительность <xref:System.Globalization.StringInfo.GetHashCode%2A>. Чтобы сделать поведение <xref:System.Globalization.StringInfo.GetHashCode%2A> константы, приложения должны переопределять реализацию среды <xref:System.Globalization.StringInfo.GetHashCode%2A> с реализацией гарантированно никогда не изменений.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the first text element in a specified string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string from which to get the text element.</param>
        <summary>Gets the first text element in a specified string.</summary>
        <returns>A string containing the first text element in the specified string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework определяет текстовый элемент как единица текст, отображаемый как один символ, то есть графем. Элемент текста может быть базового символа, пара символов-заместителей или несамостоятельный знак последовательности. [Стандарта Юникод](http://go.microsoft.com/fwlink/?linkid=37123) определяет суррогатную пару как представление закодированных символов для один абстрактный символ, который состоит из последовательности из двух частей кода, где первая единица пары является заместителем, а второй — низкого уровня суррогат. [Стандарта Юникод](http://go.microsoft.com/fwlink/?linkid=37123) определяет присоединяемую последовательность знаков как сочетание базового символа и один или несколько несамостоятельных символов. Пара символов-заместителей может представлять базовый или несамостоятельный знак.  
  
 Этот метод возвращает только первый текстовый элемент. Для прохода по текстовым элементам строки, приложение должно использовать <xref:System.Globalization.TextElementEnumerator> созданным методом <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">The string from which to get the text element.</param>
        <param name="index">The zero-based index at which the text element starts.</param>
        <summary>Gets the text element at the specified index of the specified string.</summary>
        <returns>A string containing the text element at the specified index of the specified string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework определяет текстовый элемент как единица текст, отображаемый как один символ, то есть графем. Элемент текста может быть базового символа, пара символов-заместителей или несамостоятельный знак последовательности. [Стандарта Юникод](http://go.microsoft.com/fwlink/?linkid=37123) определяет суррогатную пару как представление закодированных символов для один абстрактный символ, который состоит из последовательности из двух частей кода, где первая единица пары является заместителем, а второй — низкого уровня суррогат. Стандарт Юникод определяет присоединяемую последовательность знаков как сочетание базового символа и один или несколько несамостоятельных символов. Пара символов-заместителей может представлять базовый или несамостоятельный знак.  
  
 Этот метод возвращает только первый текстовый элемент подстроку, которая начинается с указанного индекса. Для прохода по текстовым элементам строки, приложение должно использовать <xref:System.Globalization.TextElementEnumerator> созданные <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns an enumerator that iterates through the text elements of a string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string to iterate through.</param>
        <summary>Returns an enumerator that iterates through the text elements of the entire string.</summary>
        <returns>A <see cref="T:System.Globalization.TextElementEnumerator" /> for the entire string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework определяет текстовый элемент как единица текст, отображаемый как один символ, то есть графем. Элемент текста может быть базового символа, пара символов-заместителей или несамостоятельный знак последовательности. [Стандарта Юникод](http://go.microsoft.com/fwlink/?linkid=37123) определяет суррогатную пару как представление закодированных символов для один абстрактный символ, который состоит из последовательности из двух частей кода, где первая единица пары является заместителем, а второй — низкого уровня суррогат. Стандарт Юникод определяет присоединяемую последовательность знаков как сочетание базового символа и один или несколько несамостоятельных символов. Пара символов-заместителей может представлять базовый или несамостоятельный знак.  
  
 Перечислитель текстовых элементов используется только для чтения данных в строке; он не может изменить основной строки. Перечислитель не имеет монопольного доступа к строке.  
  
 Перечислитель находится в недопустимом состоянии, если он располагается перед первым текстовым элементом или после последнего элемента текста в строке. Когда перечислитель находится в недопустимом состоянии, вызов <xref:System.Globalization.TextElementEnumerator.Current%2A> возникло исключение.  
  
 Изначально перечислитель располагается перед первым текстовым элементом в строке. Метод <xref:System.Globalization.TextElementEnumerator.Reset%2A> также переводит перечислитель в эту позицию. Таким образом после создания перечислителя или после <xref:System.Globalization.TextElementEnumerator.Reset%2A> вызове <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> необходимо вызвать, чтобы переместить перечислитель к первый текстовый элемент строки до считывания значения свойства <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> или <xref:System.Globalization.TextElementEnumerator.Reset%2A>.  
  
 После конца строки, перечислитель снова находится в недопустимом состоянии <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> возвращает `false`. Вызов <xref:System.Globalization.TextElementEnumerator.Current%2A> при последнем вызове метода создается исключение <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> возвращается `false`.  
  
   
  
## Examples  
 В следующем примере кода показан вызов <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> метод. Данный пример кода является частью большего примера для <xref:System.Globalization.StringInfo> класса.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">The string to iterate through.</param>
        <param name="index">The zero-based index at which to start iterating.</param>
        <summary>Returns an enumerator that iterates through the text elements of the string, starting at the specified index.</summary>
        <returns>A <see cref="T:System.Globalization.TextElementEnumerator" /> for the string starting at <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework определяет текстовый элемент как единица текст, отображаемый как один символ, то есть графем. Элемент текста может быть базового символа, пара символов-заместителей или несамостоятельный знак последовательности. [Стандарта Юникод](http://go.microsoft.com/fwlink/?linkid=37123) определяет суррогатную пару как представление закодированных символов для один абстрактный символ, который состоит из последовательности из двух частей кода, где первая единица пары является заместителем, а второй — низкого уровня суррогат. Стандарт Юникод определяет присоединяемую последовательность знаков как сочетание базового символа и один или несколько несамостоятельных символов. Пара символов-заместителей может представлять базовый или несамостоятельный знак.  
  
 Перечислитель текстовых элементов используется только для чтения данных в строке; он не может изменить основной строки. Перечислитель не имеет монопольного доступа к строке.  
  
 Перечислитель находится в недопустимом состоянии, если он располагается перед первым текстовым элементом или после последнего элемента текста в строке. Когда перечислитель находится в недопустимом состоянии, вызов <xref:System.Globalization.TextElementEnumerator.Current%2A> возникло исключение.  
  
 Изначально перечислитель располагается перед первым текстовым элементом в строке. Метод <xref:System.Globalization.TextElementEnumerator.Reset%2A> также переводит перечислитель в эту позицию. Таким образом после создания перечислителя или после <xref:System.Globalization.TextElementEnumerator.Reset%2A> вызове <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> необходимо вызвать, чтобы переместить перечислитель к первый текстовый элемент строки до считывания значения свойства <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> или <xref:System.Globalization.TextElementEnumerator.Reset%2A>.  
  
 После конца строки, перечислитель снова находится в недопустимом состоянии <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> возвращает `false`. Вызов <xref:System.Globalization.TextElementEnumerator.Current%2A> при последнем вызове метода создается исключение <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> возвращается `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of text elements in the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
        <value>Количество базовых символов, суррогатных пар и последовательностей несамостоятельных знаков в этом объекте <see cref="T:System.Globalization.StringInfo" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string to search.</param>
        <summary>Returns the indexes of each base character, high surrogate, or control character within the specified string.</summary>
        <returns>An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [Стандарта Юникод](http://go.microsoft.com/fwlink/?linkid=37123) определяет суррогатную пару как представление закодированных символов для один абстрактный символ, который состоит из последовательности из двух частей кода, где первая единица пары является заместителем, а второй — низкого уровня суррогат. Старший символ-заместитель является кодовую точку Юникода в диапазоне от U + D800 до U + DBFF и кодовую точку Юникода в диапазоне от U + DC00 до U + DFFF является младшим символом-заместителем.  
  
 Управляющий символ является символом для U + 007F которого задано значение Юникода или в диапазоне от U + 0000 до U + 001F или от U + 0080 до U + 009F.  
  
 .NET Framework определяет текстовый элемент как единица текст, отображаемый как один символ, то есть графем. Элемент текста может быть базового символа, пара символов-заместителей или несамостоятельный знак последовательности. [Стандарта Юникод](http://go.microsoft.com/fwlink/?linkid=37123) определяет присоединяемую последовательность знаков как сочетание базового символа и один или несколько несамостоятельных символов. Пара символов-заместителей может представлять базовый или несамостоятельный знак.  
  
 Если сочетание Недопустимая последовательность символов, каждый символ объединения в этой последовательности также возвращается.  
  
 Каждый индекс результирующего массива является начало текстового элемента, то есть индекс базового знака или старшим символом-заместителем.  
  
 Длина каждого элемента легко вычисляется как разница между последовательными индексами. Длина массива всегда будет меньше или равен длине строки. К примеру Если строка «\u4f00\u302a\ud800\udc00\u4f01», этот метод возвращает индексы 0, 2 и 4.  
  
## <a name="equivalent-members"></a>Эквивалентные элементы  
 Начиная с версии 2.0 платформы .NET Framework, <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> метод и <xref:System.Globalization.StringInfo.LengthInTextElements%2A> свойство обеспечивать реализацию простой в использовании возможностей, предоставляемых <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода показан вызов <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> метод. Данный пример кода является частью большего примера для <xref:System.Globalization.StringInfo> класса.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
        <value>Строка, представляющая значение текущего <see cref="T:System.Globalization.StringInfo" /> объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Globalization.StringInfo> объекта его <xref:System.Globalization.StringInfo.String%2A> свойству присваивается одно из следующих значений:  
  
-   <xref:System.String.Empty?displayProperty=nameWithType> Если значение по умолчанию <xref:System.Globalization.StringInfo.%23ctor> вызывается. Затем следует использовать <xref:System.Globalization.StringInfo.String%2A> свойство, чтобы назначить строку, <xref:System.Globalization.StringInfo> объекта rperesents.  
  
-   Строка, заданная как `value` аргумент <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> конструктор.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The value in a set operation is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</param>
        <summary>Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the last text element.</summary>
        <returns>A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object, starting from the text element index specified by the <paramref name="startingTextElement" /> parameter and continuing through the last text element in this object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Рассмотрите возможность строка, состоящая из пяти элементов текста с индексами от 0 до 4. Если `startingTextElement` параметр имеет значение 1, <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> метод возвращает подстроку, которая состоит из элементов текста, для которых индексы отсчитываются 1, 2, 3 и 4.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> is less than zero.  -or-  The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</param>
        <param name="lengthInTextElements">The number of text elements to retrieve.</param>
        <summary>Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the specified number of text elements.</summary>
        <returns>A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object. The substring consists of the number of text elements specified by the <paramref name="lengthInTextElements" /> parameter and starts from the text element index specified by the <paramref name="startingTextElement" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Рассмотрите возможность строка, состоящая из пяти элементов текста с индексами от 0 до 4. Если `startingTextElement` параметр имеет значение 1 и `lengthInTextElements` равен 3, <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> метод возвращает подстроку, которая состоит из элементов текста, для которых индексы отсчитываются 1, 2 и 3.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> is less than zero.  -or-  <paramref name="startingTextElement" /> is greater than or equal to the length of the string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object.  -or-  <paramref name="lengthInTextElements" /> is less than zero.  -or-  The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").  -or-  <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> specify an index that is greater than the number of text elements in this <see cref="T:System.Globalization.StringInfo" /> object.</exception>
      </Docs>
    </Member>
  </Members>
</Type>