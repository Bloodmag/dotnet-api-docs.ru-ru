<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fb3464827a5444befa67fc3c606f41e583b23520" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36562600" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Перечисляет текстовые элементы строки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Платформа .NET Framework определяет текстовый элемент как единое текст, отображаемый как один символ, то есть графем. Текстовый элемент может иметь любое из следующих.  
  
-   Базового символа, который представлен как один <xref:System.Char> значение. Например, ЛАТИНСКИЕ прописные буквы (U + 0041) и LATIN НЕБОЛЬШОЙ буквы AE (U + 00E6) — это базовый символы.  
  
-   Несамостоятельных символов в последовательности, который состоит из базового символа и одного или более несамостоятельных знаков. Например, пример, ЛАТИНИЦА прописные буквы (U + 0041), ОБЪЕДИНЕНИЕ знаком долготы над ГЛАСНЫМИ (U + 0304) является несамостоятельных последовательность символов.  
  
-   Суррогатные пары, который [стандарт Юникод](http://go.microsoft.com/fwlink/?linkid=37123) определяет как кодовое представление знака для одного обобщенного знака, состоящего из двух частей кода: старшим символом-заместителем и младшим символом-заместителем. Суррогатные пары, используются для представления символов вне Юникода основное многоязычное поле как символы в кодировке UTF-16. Например буква GOTHIC SAUIL (U + 10343) представляется в старшим символом-заместителем, значение которого является 0xD800 и младшим символом-заместителем, значение которого является 0xDF43 кодировкой UTF-16. Пара символов-заместителей может представлять базовый или несамостоятельный знак.  
  
 <xref:System.Globalization.TextElementEnumerator> Позволяет работать с элементами текста в строке, а не с одним <xref:System.Char> объектов.  
  
 Можно создать <xref:System.Globalization.TextElementEnumerator> , представляющий определенной строки, передав строку, <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> метод. Возвращает перечислитель, который располагается перед первым текстовым элементом в строке. Вызов <xref:System.Globalization.TextElementEnumerator.Reset%2A> метод также переводит перечислитель в эту позицию. Поскольку это представляет недопустимое состояние, необходимо вызвать метод <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> Чтобы переместить перечислитель на первый текстовый элемент строки до считывания значения свойства <xref:System.Globalization.TextElementEnumerator.Current%2A> свойство для возврата текущий текстовый элемент.  
  
 При работе с <xref:System.Globalization.TextElementEnumerator> объекта, вы несете ответственность за позиционирование перечислитель. <xref:System.Globalization.TextElementEnumerator.Current%2A> Свойство возвращает один и тот же элемент текста, пока не будет вызван либо <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> или <xref:System.Globalization.TextElementEnumerator.Reset%2A>. Перечислитель находится в недопустимом состоянии, если он расположен перед первым текстовым элементом или после последнего элемента текста в строке. Когда перечислитель находится в недопустимом состоянии, при попытке получить значение <xref:System.Globalization.TextElementEnumerator.Current%2A> вызывает исключение. Можно определить, является ли перечислитель находится в недопустимом состоянии путем проверки ли возвращаемое значение <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> свойство `false`.  
  
 <xref:System.Globalization.TextElementEnumerator> Объект представляет собой моментальный снимок текущего состояния строковой переменной или строковым литералом в данный момент, <xref:System.Globalization.TextElementEnumerator> экземпляра объекта. Обратите внимание на следующее.  
  
-   Перечислители текстовых элементов может использоваться только для чтения данных в строке. Они не могут изменять основной строки.  
  
-   Перечислитель не имеет монопольного доступа к строке, который он представляет. Строковой переменной, можно изменить после создания перечислителя.  
  
-   Объект <xref:System.Globalization.TextElementEnumerator> объекта перечисляет текстовые элементы присутствуют в строке во время, <xref:System.Globalization.TextElementEnumerator> создать экземпляр объекта. Описатель не отражает все последующие изменения строковой переменной, если впоследствии изменить эту переменную.  
  
-   Поскольку <xref:System.Globalization.TextElementEnumerator> класс не переопределяет <xref:System.Object.Equals%2A?displayProperty=nameWithType>, два <xref:System.Globalization.TextElementEnumerator> объекты, представляющие та же строка будет считаться неравными.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Globalization.TextElementEnumerator> класс, чтобы перечислить текстовые элементы строки.  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает текущий текстовый элемент строки.</summary>
        <value>Объект, содержащий текущий текстовый элемент строки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После создания перечислителя или после <xref:System.Globalization.TextElementEnumerator.Reset%2A> вызове <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> необходимо вызвать, чтобы переместить перечислитель на первый текстовый элемент строки до считывания значения свойства <xref:System.Globalization.TextElementEnumerator.Current%2A>. В противном случае <xref:System.Globalization.TextElementEnumerator.Current%2A> не определено.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> также создает исключение, если последний вызов метода <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> возвращается `false`, который указывает на конец строки.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> не изменяет положение перечислителя и последовательных вызовов <xref:System.Globalization.TextElementEnumerator.Current%2A> возвращать тот же объект, пока не будет <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> или <xref:System.Globalization.TextElementEnumerator.Reset%2A> вызывается.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Перечислитель помещается перед первым текстовым элементом или после последнего текстового элемента.</exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает индекс текстового элемента, в котором в настоящий момент находится перечислитель.</summary>
        <value>Индекс текстового элемента, в котором в настоящий момент находится перечислитель.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Перечислитель помещается перед первым текстовым элементом или после последнего текстового элемента.</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает текущий текстовый элемент строки.</summary>
        <returns>Новая строка, содержащая текущий текстовый элемент в читаемой строке.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает одного текстового элемента как <xref:System.Globalization.TextElementEnumerator.Current%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Перечислитель помещается перед первым текстовым элементом или после последнего текстового элемента.</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Перемещает перечислитель на следующий текстовый элемент строки.</summary>
        <returns>
          <see langword="true" />, если перечислитель был успешно перемещен на следующий текстовый элемент; <see langword="false" />, если перечислитель достиг конца строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После создания перечислителя или после <xref:System.Globalization.TextElementEnumerator.Reset%2A> является именем, перечислитель располагается перед первым элементом текста строки и первого вызова <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> перемещает перечислитель на первый текстовый элемент строки.  
  
 Если строка была изменена после создания перечислителя <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> приводит к возникновению исключения.  
  
 После конца строки — последующие вызовы метода <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> возвращают `false` до <xref:System.Globalization.TextElementEnumerator.Reset%2A> вызывается.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Перемещает перечислитель в исходное положение, перед первым текстовым элементом в строке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.TextElementEnumerator.Reset%2A> Метод перемещает перечислитель в начало строки перед первым текстовым элементом. После вызова метода <xref:System.Globalization.TextElementEnumerator.Reset%2A>, необходимо вызвать <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> Чтобы переместить перечислитель на первый текстовый элемент строки перед вызовом метода <xref:System.Globalization.TextElementEnumerator.Current%2A> для чтения значение первого элемента текста.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>