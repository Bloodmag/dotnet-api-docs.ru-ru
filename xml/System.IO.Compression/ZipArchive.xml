<Type Name="ZipArchive" FullName="System.IO.Compression.ZipArchive">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69d8f68c04b20c5dff55edf31c96edfb5b763433" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30419858" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ZipArchive : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipArchive extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipArchive" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipArchive&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipArchive : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет пакет сжатых файлов в формате ZIP архива.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Методы для работы с ZIP-архивы и их записи в файл распределяются на трех классов: <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive>, и <xref:System.IO.Compression.ZipArchiveEntry>.  
  
|Кому|Использовать|  
|--------|---------|  
|Создать ZIP-архив, из каталога|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|Извлеките содержимое ZIP-архива в каталог|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|Добавлять новые файлы на существующих ZIP-архив|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Извлечение файла из ZIP-архива|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Получить все файлы из ZIP-архива|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|Открывает поток в одном файле, содержащиеся в ZIP-архив|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Удаление файла из ZIP-архива|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 При создании новой записи, файл сжимается и добавлен в ZIP-пакет. <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> Метод дает возможность указать Иерархия каталогов, при добавлении записи. Включить относительный путь к новой записи в ZIP-пакета. Например, создании новой записи с относительным путем `AddedFolder\NewFile.txt` создает сжатого текстового файла в каталоге с именем AddedFolder.  
  
 При ссылке `System.IO.Compression.FileSystem` сборки в проекте, доступны три метода расширения (из <xref:System.IO.Compression.ZipFileExtensions> класса) для <xref:System.IO.Compression.ZipArchive> класса: <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>, <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>, и <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>. Эти методы расширения позволяют сжатия и распаковки содержимого записи в файл. `System.IO.Compression.FileSystem` Сборки не доступен для [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений. В [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложений можно сжатия и распаковки файлов с помощью <xref:System.IO.Compression.DeflateStream> или <xref:System.IO.Compression.GZipStream> класс, или же можно использовать [!INCLUDE[wrt](~/includes/wrt-md.md)] типы [сжатия](http://go.microsoft.com/fwlink/p/?LinkID=246357) и [программа распаковки](http://go.microsoft.com/fwlink/p/?LinkID=246358).  
  
   
  
## Examples  
 В первом примере показано, как создать новую запись и запись в него с помощью потока.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 В следующем примере показано, как откройте ZIP-архив и прохода по коллекции элементов.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 Третий пример показывает, как использовать методы расширения для создания записи в ZIP-архив, из существующего файла и извлеките содержимое архива. Необходимо сослаться на `System.IO.Compression.FileSystem` сборки для выполнения кода.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Compression.ZipFile" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Compression.ZipArchive" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Поток, содержащий архив для чтения.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Compression.ZipArchive" /> из указанного потока.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Поток уже закрыт или не поддерживает чтение.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.IO.InvalidDataException">Формат содержимого потока отличен от ZIP-архива.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="stream">Входной или выходной поток.</param>
        <param name="mode">Одно из значений перечисления, указывающее, для чтения, создания или обновления записей используется ZIP-архив.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Compression.ZipArchive" /> из указанного потока с указанным режимом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `mode` параметр имеет значение <xref:System.IO.Compression.ZipArchiveMode.Read>, поток должен поддерживать чтение. Если `mode` параметр имеет значение <xref:System.IO.Compression.ZipArchiveMode.Create>, поток должен поддерживать операцию записи. Если `mode` параметр имеет значение <xref:System.IO.Compression.ZipArchiveMode.Update>, поток должен поддерживать чтение, запись и поиск.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Поток уже закрыт или возможности потока не соответствует режиму.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> не является допустимым значением.</exception>
        <exception cref="T:System.IO.InvalidDataException">Содержимое потока не удалось интерпретировать как ZIP-архив.  
  
 - или -  
  
 <paramref name="mode" /> имеет значение <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> и запись отсутствует в архиве или повреждена и не может быть прочитана.  
  
 - или -  
  
 <paramref name="mode" /> имеет значение <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> и запись слишком велика, чтобы поместиться в памяти.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Входной или выходной поток.</param>
        <param name="mode">Одно из значений перечисления, указывающее, для чтения, создания или обновления записей используется ZIP-архив.</param>
        <param name="leaveOpen">
          Значение <see langword="true" />, чтобы оставить поток открытым после удаления объекта <see cref="T:System.IO.Compression.ZipArchive" />; в противном случае — значение <see langword="false" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Compression.ZipArchive" /> в указанном потоке для указанного режима, а также при необходимости оставляет поток открытым.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `mode` параметр имеет значение <xref:System.IO.Compression.ZipArchiveMode.Read>, поток должен поддерживать чтение. Если `mode` параметр имеет значение <xref:System.IO.Compression.ZipArchiveMode.Create>, поток должен поддерживать операцию записи. Если `mode` параметр имеет значение <xref:System.IO.Compression.ZipArchiveMode.Update>, поток должен поддерживать чтение, запись и поиск.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Поток уже закрыт или возможности потока не соответствует режиму.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> не является допустимым значением.</exception>
        <exception cref="T:System.IO.InvalidDataException">Содержимое потока не удалось интерпретировать как ZIP-архив.  
  
 - или -  
  
 <paramref name="mode" /> имеет значение <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> и запись отсутствует в архиве или повреждена и не может быть прочитана.  
  
 - или -  
  
 <paramref name="mode" /> имеет значение <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> и запись слишком велика, чтобы поместиться в памяти.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">Входной или выходной поток.</param>
        <param name="mode">Одно из значений перечисления, указывающее, для чтения, создания или обновления записей используется ZIP-архив.</param>
        <param name="leaveOpen">
          Значение <see langword="true" />, чтобы оставить поток открытым после удаления объекта <see cref="T:System.IO.Compression.ZipArchive" />; в противном случае — значение <see langword="false" />.</param>
        <param name="entryNameEncoding">Кодирование, используемое при чтении или записи имен записей в этом архиве. Задайте значение для этого параметра, только если кодирование требуется для взаимодействия с инструментами и библиотеками ZIP-архива, которые не поддерживают кодирование UTF-8 для имен записей.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Compression.ZipArchive" /> в указанном потоке для заданного режима, использует указанную кодировку для кодировку для имен записей, а также, при необходимости, оставляет поток открытым.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `mode` параметр имеет значение <xref:System.IO.Compression.ZipArchiveMode.Read>, поток должен поддерживать чтение. Если `mode` параметр имеет значение <xref:System.IO.Compression.ZipArchiveMode.Create>, поток должен поддерживать операцию записи. Если `mode` параметр имеет значение <xref:System.IO.Compression.ZipArchiveMode.Update>, поток должен поддерживать чтение, запись и поиск.  
  
 При открытии файла zip архив для чтения и `entryNameEncoding` равно `null`, имена входа декодируются согласно следующим правилам:  
  
-   Если языковая кодировка флаг (в общего назначения битовым флагом локального файла заголовка) не установлен, текущей кодовой страницы системы по умолчанию используется для расшифровки имени входа.  
  
-   Если установлен флаг языковой кодировки, UTF-8 используется для расшифровки имени входа.  
  
 При открытии файла zip архив для чтения и `entryNameEncoding` задано значение, отличное от `null`, имена входа декодируются согласно следующим правилам:  
  
-   Когда флаг кодировки не задано, указанный `entryNameEncoding` используется для расшифровки имени входа.  
  
-   Если установлен флаг языковой кодировки, UTF-8 используется для расшифровки имени входа.  
  
 При написании для архивации файлов и `entryNameEncoding` равно `null`, имена входа кодируются согласно следующим правилам:  
  
-   Для имен записей, которые содержат символы вне диапазона ASCII установлен флаг кодировки языка и имена входа кодируются с помощью UTF-8.  
  
-   Для имен входа, которые содержат только символы ASCII не установлен флаг кодировки языка и имена входа кодируются с помощью текущей кодовой страницы системы по умолчанию.  
  
 При написании для архивации файлов и `entryNameEncoding` задано значение, отличное от `null`, указанный `entryNameEncoding` используется для кодирования имена записей в байтах. Кодировки, флаг (в общего назначения битовым флагом локального файла заголовка) имеет значение только в том случае, если указанная кодировка имеет кодировку UTF-8.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Поток уже закрыт или возможности потока не соответствует режиму.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> не является допустимым значением.</exception>
        <exception cref="T:System.IO.InvalidDataException">Содержимое потока не удалось интерпретировать как ZIP-архив.  
  
 - или -  
  
 <paramref name="mode" /> имеет значение <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> и запись отсутствует в архиве или повреждена и не может быть прочитана.  
  
 - или -  
  
 <paramref name="mode" /> имеет значение <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> и запись слишком велика, чтобы поместиться в памяти.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEntry">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает пустую запись в ZIP-архиве.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">Путь относительно корня архива, который указывает имя создаваемой записи.</param>
        <summary>Создает пустую запись, которая имеет указанные путь и имя записи в ZIP архиве.</summary>
        <returns>Пустая запись в ZIP-архиве.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entryName` Строка должна отражать относительный путь записи, необходимо создать в ZIP-архиве. Нет никаких ограничений на введенной строки. Тем не менее если он не отформатирован как относительный путь, запись создается, но при Извлеките содержимое ZIP-архив, может возникнуть исключение. Если запись с указанным путем и именем уже существует в архиве, вторую запись создается с тем же путь и имя.  
  
 Значение <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> для новой записи задано значение текущего времени. Операция сжимается с использованием уровня сжатия по умолчанию базового алгоритма сжатия. Если вы хотите указать уровень сжатия, используйте <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> метод.  
  
   
  
## Examples  
 Приведенный ниже показано, как создать сущность и запись в него с помощью потока.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Свойство <paramref name="entryName" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="entryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">ZIP-архив не поддерживает запись.</exception>
        <exception cref="T:System.ObjectDisposedException">ZIP-архив был удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="entryName">Путь относительно корня архива, который указывает имя создаваемой записи.</param>
        <param name="compressionLevel">Одно из значений перечисления, указывающее, акцентировать ли внимание на скорости или эффективности сжатия при создании записи.</param>
        <summary>Создает пустую запись, которая имеет указанные имя и уровень сжатия ZIP записи в архиве.</summary>
        <returns>Пустая запись в ZIP-архиве.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entryName` Строка должна отражать относительный путь записи, необходимо создать в ZIP-архиве. Нет никаких ограничений на введенной строки. Тем не менее если он не отформатирован как относительный путь, запись создается, но при Извлеките содержимое ZIP-архив, может возникнуть исключение. Если запись с указанным именем уже существует в архиве, вторую запись создается с тем же именем.  
  
 Значение <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> для новой записи задано значение текущего времени. Задать `compressionLevel` параметр <xref:System.IO.Compression.CompressionLevel.Optimal> Если файл будет сжат требуется максимальной. Задать `compressionLevel` параметр <xref:System.IO.Compression.CompressionLevel.Fastest> только в том случае, если вы сомневаетесь, что операция сжатия не завершится, достаточно быстро для вашего сценария.  
  
   
  
## Examples  
 Приведенный ниже показано, как создать сущность с уровнем оптимального сжатия. Она также записывает новую запись с помощью потока.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Свойство <paramref name="entryName" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="entryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">ZIP-архив не поддерживает запись.</exception>
        <exception cref="T:System.ObjectDisposedException">ZIP-архив был удален.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.IO.Compression.ZipArchive" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает ресурсы, используемые текущим экземпляром класса <see cref="T:System.IO.Compression.ZipArchive" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод завершения записи в архив и освобождает все ресурсы, используемые <xref:System.IO.Compression.ZipArchive> объекта. Если не создать объект с помощью <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> перегрузку конструктора и задайте его `leaveOpen` параметр `true`, все базовый поток, закрыто, больше не доступны для операций записи.  
  
 Когда вы закончите, с помощью этого экземпляра <xref:System.IO.Compression.ZipArchive>, вызовите <xref:System.IO.Compression.ZipArchive.Dispose> освободить все ресурсы, используемые этим экземпляром. Следует удалить дальнейшие ссылки на это <xref:System.IO.Compression.ZipArchive> , чтобы сборщик мусора мог освободить память, вместо поддержания финализации.  
  
 <xref:System.IO.Compression.ZipArchive.Dispose> вызовы <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> метод, который содержит код для освобождения управляемых и неуправляемых ресурсов. Для получения дополнительной информации см. .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          Значение <see langword="true" /> для завершения записи архива и освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</param>
        <summary>Вызывается методами <see cref="M:System.IO.Compression.ZipArchive.Dispose" /> и <see cref="M:System.Object.Finalize" />, чтобы освободить неуправляемые ресурсы, используемые текущим экземпляром класса <see cref="T:System.IO.Compression.ZipArchive" />, и необязательно заканчивает запись архива и высвобождает управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `disposing` равно `true`, все базовые потоки находятся в закрытых и больше не доступны для операций записи, если создать объект с помощью <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> перегрузку конструктора и задайте его `leaveOpen` параметра `true`.  
  
 Этот метод вызывается только открытые <xref:System.IO.Compression.ZipArchive.Dispose> и <xref:System.Object.Finalize> методов; не вызывайте этот метод напрямую.  
  
 При реализации шаблона удаления логического параметра для <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> метод должен использоваться следующим образом:  
  
-   <xref:System.IO.Compression.ZipArchive.Dispose> Метод текущего объекта должен вызывать <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> с параметром логическое значение `true` для освобождения управляемых и неуправляемых ресурсов.  
  
-   <xref:System.Object.Finalize> Метод текущего объекта должен вызывать <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> с параметром логическое значение `false` для освобождения только неуправляемых ресурсов.  
  
 Для получения дополнительной информации см. .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Compression.ZipArchiveEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As ReadOnlyCollection(Of ZipArchiveEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ Entries { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию записей, которые находятся в ZIP-архиве в текущий момент.</summary>
        <value>Коллекция записей, которые находятся в ZIP-архиве в текущий момент.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.IO.Compression.ZipArchive.Entries%2A> свойство для получения всей коллекции записей. Используйте <xref:System.IO.Compression.ZipArchive.GetEntry%2A> метод, чтобы получить одну запись по имени.  
  
   
  
## Examples  
 В следующем примере показано, как откройте ZIP-архив и прохода по коллекции элементов.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">ZIP-архив не поддерживает чтение.</exception>
        <exception cref="T:System.ObjectDisposedException">ZIP-архив был удален.</exception>
        <exception cref="T:System.IO.InvalidDataException">ZIP-архив поврежден, и его записи не могут быть извлечены.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry GetEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.GetEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ GetEntry(System::String ^ entryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">Путь относительно корня архива, который указывает запись для получения.</param>
        <summary>Извлекает оболочку для заданной записи в ZIP-архиве.</summary>
        <returns>Программа-оболочка для определенной записи в архиве; <see langword="null" /> если запись не существует в архиве.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если несколько записей с указанным именем существует в архиве, возвращается первый. Имя записи сравнивается с `entryName` с помощью порядкового сравнения.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.IO.Compression.ZipArchive.GetEntry%2A> метод для извлечения записи.  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Свойство <paramref name="entryName" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="entryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">ZIP-архив не поддерживает чтение.</exception>
        <exception cref="T:System.ObjectDisposedException">ZIP-архив был удален.</exception>
        <exception cref="T:System.IO.InvalidDataException">ZIP-архив поврежден, и его записи не могут быть извлечены.</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Compression.ZipArchiveMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As ZipArchiveMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Compression::ZipArchiveMode Mode { System::IO::Compression::ZipArchiveMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое описывает тип действий, которые ZIP-архив может выполнять над записями.</summary>
        <value>Одно из значений перечисления, описывающее тип действия (чтение, создание или обновление), которое ZIP-архив может выполнять над записями.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Укажите значение для <xref:System.IO.Compression.ZipArchive> свойства при создании экземпляра <xref:System.IO.Compression.ZipArchive> класса. Используйте <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29> или <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> конструктор, чтобы предоставить значение для <xref:System.IO.Compression.ZipArchive.Mode%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>