<Type Name="IRecordSequence" FullName="System.IO.Log.IRecordSequence">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="55071e6e771f10cc96e2985b37bd85ac9623b58a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420628" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRecordSequence : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRecordSequence implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.IRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRecordSequence&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRecordSequence : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c66d8-101">Предоставляет универсальный интерфейс последовательности записей.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c66d8-101">Provides a generic interface to a sequence of records.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-102">Интерфейс <xref:System.IO.Log.IRecordSequence> предоставляет абстрактный интерфейс потоку, ориентированному на записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-102">The <xref:System.IO.Log.IRecordSequence> interface provides an abstract interface to a record-oriented stream.</span></span> <span data-ttu-id="c66d8-103">Экземпляр <xref:System.IO.Log.IRecordSequence> можно использовать для чтения и записи записей журнала.</span><span class="sxs-lookup"><span data-stu-id="c66d8-103">A <xref:System.IO.Log.IRecordSequence> instance can be used to read and write log records.</span></span>  
  
 <span data-ttu-id="c66d8-104">Интерфейс <xref:System.IO.Log.IRecordSequence> предоставляет следующие возможности.</span><span class="sxs-lookup"><span data-stu-id="c66d8-104">The <xref:System.IO.Log.IRecordSequence> interface provides the following capabilities,</span></span>  
  
-   <span data-ttu-id="c66d8-105">Добавление записей журнала с помощью методов <xref:System.IO.Log.IRecordSequence.Append%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-105">Append log records using the <xref:System.IO.Log.IRecordSequence.Append%2A> methods.</span></span>  
  
-   <span data-ttu-id="c66d8-106">Считывание добавленных записей с помощью метода <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-106">Read the appended records using the <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> method.</span></span>  
  
-   <span data-ttu-id="c66d8-107">Регистрация специальной записи перезапуска с помощью метода <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-107">Write a special restart record using the <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A> method.</span></span>  
  
-   <span data-ttu-id="c66d8-108">Считывание записей из последней перезаписанной записи перезапуска с помощью <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-108">Read restart records from the most recently written restart record using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
-   <span data-ttu-id="c66d8-109">Очистка записей для устойчивого хранения с помощью метода <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-109">Flush the records to durable store using the  <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
-   <span data-ttu-id="c66d8-110">Резервирование пространства для добавления записей.</span><span class="sxs-lookup"><span data-stu-id="c66d8-110">Reserve space for appending records.</span></span>  
  
-   <span data-ttu-id="c66d8-111">Освобождение пространства журнала с помощью перемещения базы журнала.</span><span class="sxs-lookup"><span data-stu-id="c66d8-111">Free log space by advancing the base of the log.</span></span>  
  
-   <span data-ttu-id="c66d8-112">Получение уведомлений о событиях <xref:System.IO.Log.IRecordSequence.TailPinned> для перемещения базы журнала на свободное пространство.</span><span class="sxs-lookup"><span data-stu-id="c66d8-112">Receive <xref:System.IO.Log.IRecordSequence.TailPinned> event notifications to move the base of the log to free space.</span></span>  
  
 <span data-ttu-id="c66d8-113">Записи журнала добавляются в экземпляр <xref:System.IO.Log.IRecordSequence>, и каждой записи присваивается уникальный порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="c66d8-113">Log records are appended to a <xref:System.IO.Log.IRecordSequence> instance, and each log record is given a unique sequence number.</span></span> <span data-ttu-id="c66d8-114">Порядковые номера увеличиваются строго монотонно в рамках определенной последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="c66d8-114">Sequence numbers are strictly monotonically increasing within a given record sequence.</span></span> <span data-ttu-id="c66d8-115">Запись журнала состоит из непрозрачных данных, предоставляемых экземпляру <xref:System.IO.Log.IRecordSequence> в списке <xref:System.Collections.IList> фрагментов массива байтов.</span><span class="sxs-lookup"><span data-stu-id="c66d8-115">A log record consists of opaque data, supplied to the <xref:System.IO.Log.IRecordSequence> instance in an <xref:System.Collections.IList> of ArraySegments of bytes.</span></span>  
  
 <span data-ttu-id="c66d8-116">Интерфейс <xref:System.IO.Log.IRecordSequence> также предоставляет несколько базовых свойств, содержащих сведения о границах журнала.</span><span class="sxs-lookup"><span data-stu-id="c66d8-116">The <xref:System.IO.Log.IRecordSequence> interface also exposes a few basic properties which provides information about log boundaries.</span></span>  
  
-   <span data-ttu-id="c66d8-117">Свойство <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> содержит порядковый номер первой допустимой записи в последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="c66d8-117">The <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> property contains the sequence number of the first valid record in the record sequence.</span></span>  
  
-   <span data-ttu-id="c66d8-118">Свойство <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A> содержит порядковый номер, который гарантированно больше, чем порядковый номер последней добавленной записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-118">The <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A> property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span>  
  
-   <span data-ttu-id="c66d8-119">Свойство <xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A> содержит порядковый номер последней записанной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="c66d8-119">The <xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A> property contains the sequence number of the last written restart area.</span></span>  
  
-   <span data-ttu-id="c66d8-120">Свойство <xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A> содержит размер в байтах наибольшей записи, которую можно добавить или прочитать из последовательности.</span><span class="sxs-lookup"><span data-stu-id="c66d8-120">The <xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A> property contains the size of the largest record that can be appended to, or read from the sequence.</span></span>  
  
-   <span data-ttu-id="c66d8-121">Свойство <xref:System.IO.Log.IRecordSequence.ReservedBytes%2A> содержит общий размер резервирований, созданных в последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="c66d8-121">The <xref:System.IO.Log.IRecordSequence.ReservedBytes%2A> property contains the total size of all reservations made in this record sequence.</span></span>  
  
-   <span data-ttu-id="c66d8-122">Если свойство <xref:System.IO.Log.IRecordSequence.RetryAppend%2A> имеет значение `true` и операция <xref:System.IO.Log.IRecordSequence.Append%2A> завершается неудачно из-за отсутствия места в последовательности, последовательность записей пытается освободить место и повторно выполнить операцию добавления.</span><span class="sxs-lookup"><span data-stu-id="c66d8-122">If the <xref:System.IO.Log.IRecordSequence.RetryAppend%2A> property is set to `true`, and an <xref:System.IO.Log.IRecordSequence.Append%2A> operation fails because there is no space in the sequence, the record sequence will attempt to free space, and retry the Append operation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="c66d8-123">Новый базовый порядковый номер последовательности журналов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-123">The new base sequence number of the record sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-124">Выполняет переход базового порядкового номера журнала.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-124">Moves the base sequence number of the log forward.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-125">При использовании экземпляра <xref:System.IO.Log.LogRecordSequence> и попытке переместить порядковый номер для освобождения пространства в журнале новый базовый порядковый номер должен находиться в другой области журнала, чтобы предыдущая область была помечена как пустая.</span><span class="sxs-lookup"><span data-stu-id="c66d8-125">When you use a <xref:System.IO.Log.LogRecordSequence> instance and try to advance the sequence number to free up space in the log, the new base sequence number must reside in a different log extent for the previous extent to be marked as empty.</span></span> <span data-ttu-id="c66d8-126">Частичное освобождение областей не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="c66d8-126">Freeing extents partially is not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-127">
            <paramref name="newBaseSequenceNumber" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-127">
              <paramref name="newBaseSequenceNumber" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c66d8-128">Параметр <paramref name="newBaseSequenceNumber" /> не активен в журнале.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-128">
              <paramref name="newBaseSequenceNumber" /> is not active in the log.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-129">При изменении последовательности произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-129">An I/O error occurred while modifying the sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-130">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-130">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-131">Последовательность записей заполнена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-131">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-132">При переопределении в производном классе записывает запись журнала в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-132">When overridden in a derived class, writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-133">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-133">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-134">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-134">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-135">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-135">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-136">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-136">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-137">При переопределении в производном классе записывает запись журнала в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-137">When overridden in a derived class, writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-138">Порядковый номер добавленной в журнал записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-138">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-139">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-139">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-140">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-140">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-141">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-141">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="c66d8-142">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-142">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-143">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-143">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-144">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-144">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-145">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-145">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-146">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-146">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-147">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-147">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-148">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-148">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-149">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-149">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-150">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-150">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-151">При переопределении в производном классе добавляет запись журнала в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-151">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-152">Порядковый номер добавленной в журнал записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-152">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-153">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-153">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-154">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-154">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-155">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-155">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="c66d8-156">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-156">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-157">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-157">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-158">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-158">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-159">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-159">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-160">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-160">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-161">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-161">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-162">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-162">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-163">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-163">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-164">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-164">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="c66d8-165">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-165">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-166">При переопределении в производном классе добавляет запись журнала в <see cref="T:System.IO.Log.IRecordSequence" />, используя пространство, которое было ранее зарезервировано в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-166">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-167">Порядковый номер добавленной в журнал записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-167">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-168">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-168">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-169">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-169">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-170">Добавленная запись будет занимать пространство, ранее зарезервированное с помощью резервирования, заданного параметром `reservations`.</span><span class="sxs-lookup"><span data-stu-id="c66d8-170">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="c66d8-171">Если выполнить добавление удается, оно займет минимальную область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-171">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="c66d8-172">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-172">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="c66d8-173">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-173">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-174">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-174">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-175">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-175">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-176">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-176">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-177">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-177">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-178">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-178">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-179">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-179">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-180">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-180">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-181">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-181">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="c66d8-182">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-182">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-183">При переопределении в производном классе добавляет запись журнала в <see cref="T:System.IO.Log.IRecordSequence" />, используя пространство, которое было ранее зарезервировано в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-183">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-184">Порядковый номер добавленной в журнал записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-184">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-185">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-185">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-186">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-186">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-187">Добавленная запись будет занимать пространство, ранее зарезервированное с помощью резервирования, заданного параметром `reservations`.</span><span class="sxs-lookup"><span data-stu-id="c66d8-187">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="c66d8-188">Если выполнить добавление удается, оно займет минимальную область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-188">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="c66d8-189">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-189">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="c66d8-190">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-190">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-191">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-191">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-192">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-192">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-193">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-193">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-194">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-194">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-195">При переопределении в производном классе возвращает порядковый номер первой допустимой записи в текущей последовательности <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-195">When overridden in a derived class, gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c66d8-196">Самый низкий порядковый номер, соответствующий допустимой записи в последовательности <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-196">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-197">Допустимые порядковые номера больше или равны <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> и меньше <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-197">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span></span>  
  
 <span data-ttu-id="c66d8-198">Значение этого свойства можно изменить вызовом метода<xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A> или <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-198">The value of this property can be changed by calling the <xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A> or <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-199">Обращение к свойству произошло после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-199">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-200">При переопределении в производном классе начинает асинхронную операцию добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-200">When overridden in a derived class, begins an asynchronous append operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-201">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-201">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-202">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-202">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-203">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-203">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-204">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-204">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c66d8-205">Необязательный асинхронный обратный вызов по завершении добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-205">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c66d8-206">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-206">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-207">При переопределении в производном классе начинает асинхронную операцию добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-207">When overridden in a derived class, begins an asynchronous append operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-208">Объект <see cref="T:System.IAsyncResult" />, представляющий асинхронное добавление, которое может все еще ожидать выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-208">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-209">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-209">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="c66d8-210">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="c66d8-210">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="c66d8-211">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-211">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-212">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-212">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-213">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-213">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="c66d8-214">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-214">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-215">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-215">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-216">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-216">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-217">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-217">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-218">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-218">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-219">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-219">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-220">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-220">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-221">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-221">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-222">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-222">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c66d8-223">Необязательный асинхронный обратный вызов по завершении добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-223">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c66d8-224">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-224">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-225">При переопределении в производном классе начинает асинхронную операцию добавления, используя пространство, которое было ранее зарезервировано в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-225">When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-226">Объект <see cref="T:System.IAsyncResult" />, представляющий асинхронное добавление, которое может все еще ожидать выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-226">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-227">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-227">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="c66d8-228">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="c66d8-228">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="c66d8-229">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-229">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-230">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-230">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-231">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-231">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="c66d8-232">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-232">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-233">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-233">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-234">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-234">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-235">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-235">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-236">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-236">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-237">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-237">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-238">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-238">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-239">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-239">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-240">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-240">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="c66d8-241">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-241">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c66d8-242">Необязательный асинхронный обратный вызов по завершении добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-242">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c66d8-243">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-243">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-244">При переопределении в производном классе начинает асинхронную операцию добавления, используя пространство, которое было ранее зарезервировано в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-244">When overridden in a derived class, begins an asynchronous append operation using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-245">Объект <see cref="T:System.IAsyncResult" />, представляющий асинхронное добавление, которое может все еще ожидать выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-245">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-246">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-246">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="c66d8-247">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="c66d8-247">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="c66d8-248">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-248">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-249">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-249">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-250">Добавленная запись будет занимать пространство, ранее зарезервированное с помощью резервирования, заданного параметром `reservations`.</span><span class="sxs-lookup"><span data-stu-id="c66d8-250">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="c66d8-251">Если выполнить добавление удается, оно займет минимальную область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-251">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="c66d8-252">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-252">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="c66d8-253">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-253">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-254">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-254">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-255">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-255">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-256">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-256">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-257">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-257">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousUndoRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousUndoRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousUndoRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-258">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-258">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-259">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-259">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousUndoRecord">
          <span data-ttu-id="c66d8-260">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-260">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-261">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-261">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="c66d8-262">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-262">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c66d8-263">Необязательный асинхронный обратный вызов по завершении добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-263">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c66d8-264">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-264">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-265">При переопределении в производном классе начинает асинхронную операцию добавления, используя пространство, которое было ранее зарезервировано в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-265">When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-266">Объект <see cref="T:System.IAsyncResult" />, представляющий асинхронное добавление, которое может все еще ожидать выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-266">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-267">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-267">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="c66d8-268">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="c66d8-268">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="c66d8-269">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-269">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-270">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-270">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-271">Добавленная запись будет занимать пространство, ранее зарезервированное с помощью резервирования, заданного параметром `reservations`.</span><span class="sxs-lookup"><span data-stu-id="c66d8-271">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="c66d8-272">Если выполнить добавление удается, оно займет минимальную область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-272">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="c66d8-273">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-273">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="c66d8-274">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-274">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-275">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-275">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-276">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-276">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-277">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-277">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-278">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-278">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">
          <span data-ttu-id="c66d8-279">Порядковый номер последней записи, которую требуется записать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-279">The sequence number of the latest record that must be written.</span>
          </span>
          <span data-ttu-id="c66d8-280">Если этот номер <see cref="T:System.IO.Log.SequenceNumber" /> недопустим, необходимо записать все записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-280">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c66d8-281">Необязательный асинхронный обратный вызов по завершении операции записи на диск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-281">An optional asynchronous callback, to be called when the flush is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c66d8-282">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на запись на диск от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-282">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-283">При переопределении в производном классе начинает асинхронную операцию записи на диск, используя пространство, которое было ранее зарезервировано в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-283">When overridden in a derived class, begins an asynchronous flush operation, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-284">Объект <see cref="T:System.IAsyncResult" />, представляющий асинхронную операцию очистки, которая может все еще ожидать выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-284">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-285">Необходимо передать объект <xref:System.IAsyncResult>, возвращаемый текущим методом, методу <xref:System.IO.Log.IRecordSequence.EndFlush%2A>, чтобы обеспечить завершение очистки и правильное освобождение ресурсов.</span><span class="sxs-lookup"><span data-stu-id="c66d8-285">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="c66d8-286">Если ошибка возникает при выполнении асинхронной очистки, исключение не будет создано до тех пор, пока не будет вызван метод <xref:System.IO.Log.IRecordSequence.EndFlush%2A> с объектом <xref:System.IAsyncResult>, возвращаемым данным методом.</span><span class="sxs-lookup"><span data-stu-id="c66d8-286">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="c66d8-287">Вызов этого метода гарантирует, что внесены все записи, добавленные в последовательность <xref:System.IO.Log.IRecordSequence>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-287">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.IRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="c66d8-288">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-288">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="c66d8-289">Ошибки, возникшие при выполнении запроса асинхронной очистки, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-289">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-290">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-290">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-291">При очистке данных произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-291">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-292">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-292">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-293">При переопределении в производном классе начинает асинхронную операцию резервирования и добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-293">When overridden in a derived class, begins an asynchronous reserve and append operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-294">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-294">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-295">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-295">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-296">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-296">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-297">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-297">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="c66d8-298">Коллекция резервирования, в которой требуется сделать резервирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-298">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="c66d8-299">Размер необходимого резервирования (в байтах).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-299">The reservations to make, in bytes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c66d8-300">Необязательный асинхронный обратный вызов по завершении добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-300">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c66d8-301">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-301">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-302">При переопределении в производном классе начинает асинхронную операцию резервирования и добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-302">When overridden in a derived class, begins an asynchronous reserve and append operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-303">Объект <see cref="T:System.IAsyncResult" />, представляющий данную асинхронную операцию, которая может все еще ожидать выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-303">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-304">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-304">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="c66d8-305">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="c66d8-305">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="c66d8-306">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-306">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-307">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-307">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-308">Заданные резервирования добавляются в предоставленную коллекцию резервирования при помощи атомарной операции добавления записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-308">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="c66d8-309">Если выполнить добавление не удается, место не резервируется.</span><span class="sxs-lookup"><span data-stu-id="c66d8-309">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="c66d8-310">Обычно этот метод может завершить работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-310">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="c66d8-311">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-311">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="c66d8-312">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-312">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="c66d8-313">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-313">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-314">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-314">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-315">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-315">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-316">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи или выполнить резервирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-316">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-317">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-317">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-318">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-318">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-319">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-319">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-320">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-320">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-321">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-321">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="c66d8-322">Коллекция резервирования, в которой требуется сделать резервирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-322">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="c66d8-323">Размер необходимого резервирования (в байтах).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-323">The reservations to make, in bytes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c66d8-324">Необязательный асинхронный обратный вызов по завершении добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-324">An optional asynchronous callback, to be called when the append is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c66d8-325">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-325">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-326">При переопределении в производном классе начинает асинхронную операцию резервирования и добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-326">When overridden in a derived class, begins an asynchronous reserve and append operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-327">Объект <see cref="T:System.IAsyncResult" />, представляющий данную асинхронную операцию, которая может все еще ожидать выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-327">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-328">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-328">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="c66d8-329">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="c66d8-329">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="c66d8-330">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-330">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-331">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-331">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-332">Заданные резервирования добавляются в предоставленную коллекцию резервирования при помощи атомарной операции добавления записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-332">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="c66d8-333">Если выполнить добавление не удается, место не резервируется.</span><span class="sxs-lookup"><span data-stu-id="c66d8-333">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="c66d8-334">Обычно этот метод может завершить работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-334">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="c66d8-335">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-335">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="c66d8-336">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-336">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="c66d8-337">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-337">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-338">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-338">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-339">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-339">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-340">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи или выполнить резервирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-340">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-341">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-341">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-342">При переопределении в производном классе начинает асинхронную операцию записи области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-342">When overridden in a derived class, begins an asynchronous restart area write operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-343">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-343">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="c66d8-344">Новый базовый порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-344">The new base sequence number.</span>
          </span>
          <span data-ttu-id="c66d8-345">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-345">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="c66d8-346">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-346">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c66d8-347">Необязательный асинхронный обратный вызов по завершении записи в области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-347">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c66d8-348">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронную запись в область перезапуска от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-348">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-349">При переопределении в производном классе начинает асинхронную операцию записи области перезапуска, используя пространство, которое было ранее зарезервировано в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-349">When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-350">Объект <see cref="T:System.IAsyncResult" /> представляет асинхронную операцию записи в область перезапуска, которая может все еще быть отложена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-350">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-351">Чтобы обеспечить завершение операции записи в область перезапуска и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-351">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="c66d8-352">Если ошибка возникла при выполнении операции асинхронной записи в область перезапуска, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="c66d8-352">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="c66d8-353">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-353">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-354">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-354">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-355">При успешном выполнении операции базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="c66d8-355">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="c66d8-356">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="c66d8-356">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="c66d8-357">Если задано <xref:System.IO.Log.ReservationCollection>, записанная область перезапуска будет занимать место, ранее зарезервированное с помощью содержащегося в коллекции резервирования.</span><span class="sxs-lookup"><span data-stu-id="c66d8-357">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="c66d8-358">Если метод завершается успешно, будет занята минимальная область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-358">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="c66d8-359">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-359">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="c66d8-360">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-360">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-361">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-361">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="c66d8-362">Новый базовый порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-362">The new base sequence number.</span>
          </span>
          <span data-ttu-id="c66d8-363">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-363">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="c66d8-364">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-364">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c66d8-365">Необязательный асинхронный обратный вызов по завершении записи в области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-365">An optional asynchronous callback, to be called when the restart area write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c66d8-366">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронную запись в область перезапуска от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-366">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-367">При переопределении в производном классе начинает асинхронную операцию записи области перезапуска, используя пространство, которое было ранее зарезервировано в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-367">When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-368">Объект <see cref="T:System.IAsyncResult" /> представляет асинхронную операцию записи в область перезапуска, которая может все еще быть отложена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-368">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-369">Чтобы обеспечить завершение операции записи в область перезапуска и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-369">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method to ensure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="c66d8-370">Если ошибка возникла при выполнении операции асинхронной записи в область перезапуска, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="c66d8-370">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="c66d8-371">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-371">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-372">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-372">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-373">При успешном выполнении операции базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="c66d8-373">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="c66d8-374">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="c66d8-374">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="c66d8-375">Если задано <xref:System.IO.Log.ReservationCollection>, записанная область перезапуска будет занимать место, ранее зарезервированное с помощью содержащегося в коллекции резервирования.</span><span class="sxs-lookup"><span data-stu-id="c66d8-375">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="c66d8-376">Если метод завершается успешно, будет занята минимальная область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-376">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="c66d8-377">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-377">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="c66d8-378">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-378">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-379">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-379">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-380">При записи в область перезапуска произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-380">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-381">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-381">The record sequence could not make enough free space to contain the new record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-382">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-382">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-383">При переопределении в производном классе создает новый объект <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-383">When overridden in a derived class, creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-384">Вновь созданный <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-384">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-385">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-385">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c66d8-386">Ссылка на невыполненный асинхронный запрос ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-386">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-387">При переопределении в производном классе завершает асинхронную операцию добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-387">When overridden in a derived class, ends an asynchronous append operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-388">Порядковый номер добавленной в журнал записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-388">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-389">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="c66d8-389">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="c66d8-390">Ошибки, возникающие при выполнении запроса асинхронной записи, например ошибка диска в процессе запроса ввода-вывода, отображаются при вызове <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-390">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="c66d8-391">Этот метод должен вызываться ровно по одному разу для каждого объекта <xref:System.IAsyncResult>, возвращенного методом <xref:System.IO.Log.IRecordSequence.BeginAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-391">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-392">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-392">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-393">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-393">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c66d8-394">Ссылка на невыполненный асинхронный запрос ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-394">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-395">При переопределении в производном классе завершает асинхронную операцию очистки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-395">When overridden in a derived class, ends an asynchronous flush operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-396">Порядковый номер последней записи, которая была записана.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-396">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-397">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="c66d8-397">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="c66d8-398">Ошибки, возникающие при выполнении запроса асинхронной очистки, например ошибка диска в процессе запроса ввода-вывода, отображаются при вызове <xref:System.IO.Log.IRecordSequence.EndFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-398">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="c66d8-399">Этот метод должен вызываться ровно по одному разу для каждого объекта <xref:System.IAsyncResult>, возвращенного методом <xref:System.IO.Log.IRecordSequence.BeginFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-399">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-400">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-400">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-401">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-401">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c66d8-402">Ссылка на невыполненный асинхронный запрос ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-402">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-403">При переопределении в производном классе завершает асинхронную операцию резервирования и добавления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-403">When overridden in a derived class, ends an asynchronous reserve and append operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-404">Порядковый номер добавленной в журнал записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-404">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-405">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="c66d8-405">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="c66d8-406">Ошибки, возникающие при выполнении запроса асинхронной записи, например ошибка диска в процессе запроса ввода-вывода, отображаются при вызове <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-406">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="c66d8-407">Этот метод должен вызываться ровно по одному разу для каждого объекта <xref:System.IAsyncResult>, возвращенного методом <xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-407">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-408">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-408">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-409">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-409">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c66d8-410">Ссылка на невыполненный асинхронный запрос ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-410">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-411">При переопределении в производном классе завершает асинхронную операцию записи области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-411">When overridden in a derived class, ends an asynchronous restart area write operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-412">Порядковый номер записанной в журнал записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-412">The sequence number of the written log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-413">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="c66d8-413">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="c66d8-414">Ошибки, возникающие при выполнении запроса асинхронной записи, например ошибка диска в процессе запроса ввода-вывода, отображаются при вызове <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-414">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="c66d8-415">Этот метод должен вызываться ровно по одному разу для каждого объекта <xref:System.IAsyncResult>, возвращенного методом <xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-415">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-416">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-416">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-417">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-417">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-418">При переопределении в производном классе приводит к регистрации всех добавленных записей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-418">When overridden in a derived class, causes appended records to be written.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-419">При переопределении в производном классе обеспечивает регистрацию всех добавленных записей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-419">When overridden in a derived class, ensures that all appended records have been written.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-420">Порядковый номер последней записи, которая была записана.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-420">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-421">Вызов этого метода гарантирует выполнение устойчивых записей, добавленных в последовательность <xref:System.IO.Log.IRecordSequence>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-421">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.IRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-422">При очистке данных произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-422">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-423">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-423">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">
          <span data-ttu-id="c66d8-424">Порядковый номер последней записи, которую требуется записать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-424">The sequence number of the latest record that must be written.</span>
          </span>
          <span data-ttu-id="c66d8-425">Если этот номер <see cref="T:System.IO.Log.SequenceNumber" /> недопустим, необходимо записать все записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-425">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-426">При переопределении в производном классе обеспечивает устойчивую запись всех добавленных записей до указанного порядкового номера включительно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-426">When overridden in a derived class, ensures that all appended records up to and including the record with the specified sequence number have been durably written.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-427">Порядковый номер последней записи, которая была записана.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-427">The sequence number of the last record written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-428">Вызов этого метода обеспечивает устойчивую запись всех записей до указанного порядкового номера включительно.</span><span class="sxs-lookup"><span data-stu-id="c66d8-428">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-429">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-429">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-430">При очистке данных произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-430">An I/O error occurred while flushing the data.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-431">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-431">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-432">При переопределении в производном классе возвращает порядковый номер, превышающий последнюю добавленную запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-432">When overridden in a derived class, gets the sequence number which is greater than the last record appended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c66d8-433">Порядковый номер, превышающий последнюю добавленную запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-433">A sequence number which is greater than the last record appended.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-434">Данное свойство содержит порядковый номер, который гарантированно больше, чем порядковый номер последней добавленной записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-434">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="c66d8-435">Допустимые порядковые номера больше или равны <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> и меньше <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-435">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c66d8-436">При использовании экземпляра <xref:System.IO.Log.LogRecordSequence> значение <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A> может стать устаревшим, пока записи не помещены в журнал.</span><span class="sxs-lookup"><span data-stu-id="c66d8-436">When using a <xref:System.IO.Log.LogRecordSequence> instance, the <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A> value can become out of date until records are flushed to the log.</span></span> <span data-ttu-id="c66d8-437">Дополнительные сведения об очистке записей см. в <xref:System.IO.Log.IRecordSequence.Flush%2A> и <xref:System.IO.Log.RecordAppendOptions>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-437">See <xref:System.IO.Log.IRecordSequence.Flush%2A> and <xref:System.IO.Log.RecordAppendOptions> for more information on flushing records..</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-438">Обращение к свойству произошло после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-438">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-439">При переопределении в производном классе возвращает размер в байтах наибольшей записи, которую можно добавить или прочитать из последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-439">When overridden in a derived class, gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c66d8-440">Размер в байтах наибольшей записи, которую можно добавить или прочитать из последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-440">The size of the largest record that can be appended to or read from this sequence, in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-441">Обращение к свойству произошло после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-441">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="c66d8-442">Порядковый номер первой записи, с которой начинается чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-442">The sequence number of the first record where the reading starts.</span>
          </span>
        </param>
        <param name="logRecordEnum">
          <span data-ttu-id="c66d8-443">Допустимое значение <see cref="T:System.IO.Log.LogRecordEnumeratorType" />, указывающее способ (вперед или назад), которым записи должны считываться из <see cref="T:System.IO.Log.LogRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-443">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-444">При переопределении в производном классе возвращает перечислимую коллекцию записей в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-444">When overridden in a derived class, returns an enumerable collection of records in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-445">Перечисляемая коллекция записей в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-445">An enumerable collection of records in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-446">При переопределении в производном классе возвращает перечислимую коллекцию записей в последовательности.</span><span class="sxs-lookup"><span data-stu-id="c66d8-446">When overridden in a derived class, returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="c66d8-447">Порядок перечисленных записей зависит от значения параметра `logRecordEnum`.</span><span class="sxs-lookup"><span data-stu-id="c66d8-447">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c66d8-448">В этом образце демонстрируется использование метода <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-448">This sample demonstrates the use of the <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> method.</span></span>  
  
```csharp  
using System;  
 using System.IO;  
 using System.IO.Log;  
  
 class ReadRecordsSample  
 {  
     static SequenceNumber AppendRecord(IRecordSequence sequence,  
                                        string message,  
                                        SequenceNumber user,  
                                        SequenceNumber previous)  
     {  
         MemoryStream data = new MemoryStream();  
         BinaryWriter writer = new BinaryWriter(data);  
         writer.Write(message);  
  
         ArraySegment<byte>[] segments;  
         segments = new ArraySegment<byte>[1];  
         segments[0] = new ArraySegment(data.GetBuffer(),  
                                        0,  
                                        Data.Length);  
  
         return sequence.Append(segments,  
                                user,  
                                previous,  
                                WriteFlags.None);  
     }  
  
     public static void Main(string[] args)  
     {  
         IRecordSequence sequence;  
         sequence = new FileIRecordSequence(args[0]);  
  
         SequenceNumber a, b, c, d;  
  
         a = AppendRecord(sequence,  
                          "This is record A",  
                          SequenceNumber.Invalid,  
                          SequenceNumber.Invalid);  
         Console.WriteLine("Record A has sequence number System.IO.Log", a);  
  
         b = AppendRecord(sequence,  
                          "This is record B",  
                          a,  
                          a);  
         Console.WriteLine("Record B has sequence number System.IO.Log", b);  
  
         c = AppendRecord(sequence,  
                          "This is record C",  
                          a,  
                          a);  
         Console.WriteLine("Record C has sequence number System.IO.Log", c);  
  
         d = AppendRecord(sequence,  
                          "This is record D",  
                          b,  
                          c);  
         Console.WriteLine("Record D has sequence number System.IO.Log", d);  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(a, ReadDirection.Forward))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(d, ReadDirection.User))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(d, ReadDirection.Previous))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
     }  
       }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-449">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-449">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-450">При чтении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-450">An I/O error occurred while reading the record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-451">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-451">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-452">При переопределении в производном классе возвращает перечисляемую коллекцию областей перезапуска в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-452">When overridden in a derived class, returns an enumerable collection of the restart areas in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-453">Перечисляемая коллекция областей перезапуска в последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-453">An enumerable collection of the restart areas in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-454">Области перезапуска перечислены в обратном порядке их номеров, т.е. от самого высокого порядкового номера до самого низкого.</span><span class="sxs-lookup"><span data-stu-id="c66d8-454">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="c66d8-455">Выполняется перечисление только областей перезапуска между последним и базовым порядковым номером.</span><span class="sxs-lookup"><span data-stu-id="c66d8-455">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c66d8-456">В случае повреждения области журнала, содержащей свойство <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A>, этот метод может создать исключение <xref:System.IO.IOException> с сообщением об ошибке "Не удалось выполнить запрос, так как возникла неожиданная ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="c66d8-456">If the log extent containing the <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> becomes corrupted, this method can throw an <xref:System.IO.IOException> with the error message "The request could not be performed because of an unexpected I/O exception.</span></span> <span data-ttu-id="c66d8-457">Возвращен код ошибки: '80070026'".</span><span class="sxs-lookup"><span data-stu-id="c66d8-457">The following error code was returned: '80070026'".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-458">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-458">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-459">При чтении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-459">An I/O error occurred while reading the record.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-460">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-460">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-461">При переопределении в производном классе автоматически делает одно резервирование и добавляет запись в последовательность.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-461">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-462">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-462">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-463">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-463">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-464">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-464">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-465">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-465">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="c66d8-466">Объект <see cref="T:System.IO.Log.ReservationCollection" />, содержащий коллекцию, в которой создается резервирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-466">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="c66d8-467">Размер необходимого резервирования (в байтах).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-467">The reservations to make, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-468">При переопределении в производном классе автоматически делает одно резервирование и добавляет запись в последовательность.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-468">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-469">Порядковый номер добавленной в журнал записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-469">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-470">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-470">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-471">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-471">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-472">Заданные резервирования добавляются в предоставленную коллекцию резервирования при помощи атомарной операции добавления записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-472">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="c66d8-473">Если выполнить добавление не удается, место не резервируется.</span><span class="sxs-lookup"><span data-stu-id="c66d8-473">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="c66d8-474">Обычно этот метод может завершить работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-474">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="c66d8-475">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-475">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-476">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-476">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-477">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-477">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-478">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи или выполнить резервирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-478">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-479">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-479">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-480">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-480">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="nextUndoRecord">
          <span data-ttu-id="c66d8-481">Порядковый номер следующей записи в порядке, заданном пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-481">The sequence number of the next record in the user-specified order.</span>
          </span>
        </param>
        <param name="previousRecord">
          <span data-ttu-id="c66d8-482">Порядковый номер следующей записи в обратном порядке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-482">The sequence number of the next record in Previous order.</span>
          </span>
        </param>
        <param name="recordAppendOptions">
          <span data-ttu-id="c66d8-483">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-483">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span>
          </span>
        </param>
        <param name="reservationCollection">
          <span data-ttu-id="c66d8-484">Коллекция резервирования, в которой требуется сделать резервирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-484">The reservation collection to make reservations in.</span>
          </span>
        </param>
        <param name="reservations">
          <span data-ttu-id="c66d8-485">Размер необходимого резервирования (в байтах).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-485">The reservations to make, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-486">При переопределении в производном классе автоматически делает одно резервирование и добавляет запись в последовательность.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-486">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-487">Порядковый номер добавленной в журнал записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-487">The sequence number of the appended log record.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-488">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-488">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-489">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-489">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="c66d8-490">Заданные резервирования добавляются в предоставленную коллекцию резервирования при помощи атомарной операции добавления записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-490">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="c66d8-491">Если выполнить добавление не удается, место не резервируется.</span><span class="sxs-lookup"><span data-stu-id="c66d8-491">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="c66d8-492">Обычно этот метод может завершить работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="c66d8-492">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="c66d8-493">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-493">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-494">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-494">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-495">При добавлении записи произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-495">An I/O error occurred while appending the record.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-496">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи или выполнить резервирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-496">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-497">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-497">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-498">При переопределении в производном классе возвращает общее количество зарезервированных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-498">When overridden in a derived class, gets the total number of bytes that have been reserved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c66d8-499">Общий размер резервирований, созданных в последовательности записей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-499">The total size of all reservations made in this record sequence.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-500">Обращение к свойству произошло после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-500">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-501">При переопределении в производном классе возвращает порядковый номер последней записанной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-501">When overridden in a derived class, gets the sequence number of the most recently written restart area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c66d8-502">Порядковый номер последней записанной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-502">The sequence number of the most recently written restart area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-503">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="c66d8-503">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="c66d8-504">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="c66d8-504">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="c66d8-505">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="c66d8-505">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-506">Обращение к свойству произошло после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-506">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-507">Возвращает или задает значение, указывающее, выполняется ли повторная автоматическая попытка добавления в случае заполнения журнала.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-507">Gets or sets a value indicating whether appends are automatically retried if the log is full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c66d8-508">Значение <see langword="true" />, если выполняется автоматическая повторная попытка добавления при заполнении журнала; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-508">
              <see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c66d8-509">Значение по умолчанию: <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-509">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-510">Если значением данного свойства является `true` и происходит сбой вызова <xref:System.IO.Log.IRecordSequence.Append%2A> из-за недостатка места в последовательности, последовательность записей пытается освободить место и совершает повторную попытку добавления.</span><span class="sxs-lookup"><span data-stu-id="c66d8-510">If the value of this property is `true`, and an <xref:System.IO.Log.IRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-511">Обращение к свойству произошло после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-511">The property was accessed after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.IRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-512">Происходит, когда последовательность записей определяет завершающую часть, которую необходимо переместить вперед.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-512">Occurs when the record sequence determines that the tail must be moved forward.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-513">Это событие можно создать, когда в последовательности записей закончилось свободное пространство.</span><span class="sxs-lookup"><span data-stu-id="c66d8-513">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="c66d8-514">При создании этого события завершающая часть последовательности (то есть базовый порядковый номер) перемещается вперед для освобождения места.</span><span class="sxs-lookup"><span data-stu-id="c66d8-514">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c66d8-515">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-515">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-516">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="c66d8-516">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="c66d8-517">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="c66d8-517">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="c66d8-518">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="c66d8-518">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="c66d8-519">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-519">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-520">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-520">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-521">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-521">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-522">Порядковый номер записанной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-522">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-523">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="c66d8-523">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="c66d8-524">Файловая система CLFS поддерживает две области перезапуска, чтобы всегда была доступна хотя бы одна действительная область.</span><span class="sxs-lookup"><span data-stu-id="c66d8-524">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="c66d8-525">Если требуется выполнить восстановление, файловая система CLFS читает область перезапуска и все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="c66d8-525">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="c66d8-526">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="c66d8-526">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="c66d8-527">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-527">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="c66d8-528">Данные в этих фрагментах массива байтов будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-528">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-529">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="c66d8-529">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-530">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-530">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-531">При записи в область перезапуска произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-531">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-532">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-532">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-533">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-533">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-534">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-534">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-535">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-535">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-536">Порядковый номер записанной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-536">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-537">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="c66d8-537">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="c66d8-538">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="c66d8-538">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="c66d8-539">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="c66d8-539">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="c66d8-540">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-540">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="c66d8-541">Данные в этих фрагментах массива байтов будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-541">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-542">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="c66d8-542">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-543">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-543">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-544">При записи в область перезапуска произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-544">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-545">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-545">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-546">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-546">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-547">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-547">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="c66d8-548">Новый базовый порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-548">The new base sequence number.</span>
          </span>
          <span data-ttu-id="c66d8-549">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-549">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-550">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" /> и обновляет базовый порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-550">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> and updates the base sequence number</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-551">Порядковый номер записанной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-551">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-552">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="c66d8-552">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="c66d8-553">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="c66d8-553">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="c66d8-554">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="c66d8-554">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="c66d8-555">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-555">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="c66d8-556">При записи области перезапуска данные в этих фрагментах массива байтов сцепляются в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-556">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-557">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="c66d8-557">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="c66d8-558">При успешном выполнении этого метода базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="c66d8-558">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="c66d8-559">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="c66d8-559">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-560">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-560">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-561">При записи в область перезапуска произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-561">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-562">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-562">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-563">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-563">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-564">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-564">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="c66d8-565">Новый базовый порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-565">The new base sequence number.</span>
          </span>
          <span data-ttu-id="c66d8-566">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-566">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-567">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" /> и обновляет базовый порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-567">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> and updates the base sequence number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-568">Порядковый номер записанной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-568">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-569">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="c66d8-569">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="c66d8-570">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="c66d8-570">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="c66d8-571">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="c66d8-571">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="c66d8-572">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-572">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="c66d8-573">При записи области перезапуска данные в этих фрагментах массива байтов сцепляются в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-573">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-574">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="c66d8-574">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="c66d8-575">При успешном выполнении этого метода базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="c66d8-575">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="c66d8-576">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="c66d8-576">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-577">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-577">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-578">При записи в область перезапуска произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-578">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-579">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-579">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-580">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-580">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-581">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-581">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="c66d8-582">Новый базовый порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-582">The new base sequence number.</span>
          </span>
          <span data-ttu-id="c66d8-583">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-583">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="c66d8-584">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-584">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-585">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" />, используя резервирование, и обновляет базовый порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-585">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> using a reservation, and updates the base sequence number</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-586">Порядковый номер записанной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-586">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-587">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="c66d8-587">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="c66d8-588">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="c66d8-588">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="c66d8-589">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="c66d8-589">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="c66d8-590">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-590">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="c66d8-591">При записи области перезапуска данные в этих фрагментах массива байтов сцепляются в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-591">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-592">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="c66d8-592">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="c66d8-593">Если задано резервирование, записанная область перезапуска будет занимать место, ранее зарезервированное с помощью содержащегося в коллекции резервирования.</span><span class="sxs-lookup"><span data-stu-id="c66d8-593">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="c66d8-594">Если метод завершается успешно, будет занята минимальная область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-594">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="c66d8-595">При успешном выполнении этого метода базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="c66d8-595">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="c66d8-596">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="c66d8-596">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="c66d8-597">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-597">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="c66d8-598">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-598">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-599">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-599">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-600">При записи в область перезапуска произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-600">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-601">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-601">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-602">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-602">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="c66d8-603">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-603">A list of byte array segments that will be concatenated and appended as the record.</span>
          </span>
        </param>
        <param name="newBaseSequenceNumber">
          <span data-ttu-id="c66d8-604">Новый базовый порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-604">The new base sequence number.</span>
          </span>
          <span data-ttu-id="c66d8-605">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-605">The specified sequence number must be greater than or equal to the current base sequence number.</span>
          </span>
        </param>
        <param name="reservation">
          <span data-ttu-id="c66d8-606">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-606">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c66d8-607">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" />, используя резервирование, и обновляет базовый порядковый номер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-607">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> using a reservation, and updates the base sequence number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c66d8-608">Порядковый номер записанной области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-608">The sequence number of the written restart area.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c66d8-609">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="c66d8-609">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="c66d8-610">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="c66d8-610">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="c66d8-611">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="c66d8-611">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="c66d8-612">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-612">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="c66d8-613">При записи области перезапуска данные в этих фрагментах массива байтов сцепляются в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="c66d8-613">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="c66d8-614">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="c66d8-614">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="c66d8-615">Если задано резервирование, записанная область перезапуска будет занимать место, ранее зарезервированное с помощью содержащегося в коллекции резервирования.</span><span class="sxs-lookup"><span data-stu-id="c66d8-615">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="c66d8-616">Если метод завершается успешно, будет занята минимальная область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-616">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="c66d8-617">При успешном выполнении этого метода базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="c66d8-617">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="c66d8-618">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="c66d8-618">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="c66d8-619">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="c66d8-619">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="c66d8-620">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="c66d8-620">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c66d8-621">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-621">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c66d8-622">При записи в область перезапуска произошла ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-622">An I/O error occurred while writing the restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="c66d8-623">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-623">The record sequence could not make enough free space to contain the new restart area.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c66d8-624">Метод был вызван после удаления последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c66d8-624">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>