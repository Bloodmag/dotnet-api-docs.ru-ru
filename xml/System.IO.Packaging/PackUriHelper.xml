<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67f8cba3240e8067b8f39977ff141e48227aa706" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37759175" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides utility methods to compose and parse pack URI objects.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" />
        <Parameter Name="secondPackUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">The first pack URI.</param>
        <param name="secondPackUri">The second pack URI.</param>
        <summary>Returns a value that indicates whether two pack URIs are equivalent.</summary>
        <returns>A signed integer indicating the relationship between <paramref name="firstPackUri" /> and <paramref name="secondPackUri" />.  
  
 <list type="table"><listheader><term> Value  </term><description> Meaning  </description></listheader><item><term> Less than 0  </term><description><paramref name="firstPackUri" /> is less than <paramref name="secondPackUri" />.  </description></item><item><term> 0  </term><description><paramref name="firstPackUri" /> is equivalent to <paramref name="secondPackUri" />.  </description></item><item><term> Greater than 0  </term><description><paramref name="firstPackUri" /> is greater than <paramref name="secondPackUri" />.  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если оба `firstPackUri` и `secondPackUri` являются `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> возвращает 0. При сравнении URI типа pack, URI со значением null, всегда меньше URI отличное от null.    Для случаев, где `firstPackUri` и `secondPackUri` являются оба абсолютный пакет URI, <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> выполняет сравнение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Either <paramref name="firstPackUri" /> or <paramref name="secondPackUri" /> is not an absolute [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].  -or-  Either <paramref name="firstPackUri" /> or <paramref name="secondPackUri" /> do not begin with a "pack://" scheme.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the first <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <param name="secondPartUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the second <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Returns a value that indicates whether two package part [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] are equivalent.</summary>
        <returns>A value that indicates the relationship between <paramref name="firstPartUri" /> and <paramref name="secondPartUri" />.  
  
 <list type="table"><listheader><term> Value  </term><description> Meaning  </description></listheader><item><term> Less than 0  </term><description><paramref name="firstPartUri" /> is less than <paramref name="secondPartUri" />.  </description></item><item><term> 0  </term><description><paramref name="firstPartUri" /> is equivalent to <paramref name="secondPartUri" />.  </description></item><item><term> Greater than 0  </term><description><paramref name="firstPartUri" /> is greater than <paramref name="secondPartUri" />.  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если оба `firstPartUri` и `secondPartUri` являются `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> возвращает 0. При сравнении <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)], значение null [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] , всегда меньше ненулевой [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]. Для случаев, где `firstPartUri` и `secondPartUri` оба являются относительными <xref:System.IO.Packaging.PackagePart> URI, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> выполняет сравнение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firstPartUri" /> or <paramref name="secondPartUri" /> is not a valid part [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] syntax.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a new pack URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны образцы вариантов для <xref:System.IO.Packaging.PackUriHelper.Create%2A> метод.  
  
|`packageUri`|`partUri`|`fragment`|Возвращенный URI ТИПА pack.|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/Page1.XAML|#intro|pack://http:,, www.proseware.com, mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/Page2.XAML|**null**|pack://http:,, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.XAML|**null**|pack://http:,, www.proseware.com, mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.XML|**null**|pack://http:,, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.XML|**null**|pack://http:,, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.XAML|#summary|pack://http:,, www.proseware.com, mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/Page1.XAML|#intro|pack://http:,, www.proseware.com, packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:,, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/myDoc.XAML|**null**|pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/Packages/mypackage2.pkg|/a/Bar.XAML|#xref|pack://file:,, d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 Создание URI типа pack — это многоэтапный процесс.  Например, один шаг при создании URI типа pack является для замены символов косой черты (/) из `packageUri` запятыми (,).  
  
 Дополнительные сведения о преобразовании строк и каким образом формируются URI типа pack см. в разделе приложение A.4 «Примеры преобразования строк» и приложении б.3 «Составление пакет URI» в спецификации Open Packaging Conventions, можно загрузить по адресу [спецификации и лицензирование загрузки](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packageUri">The URI of the referenced <see cref="T:System.IO.Packaging.Package" />.</param>
        <summary>Creates a new pack URI that points to a package.</summary>
        <returns>The pack URI for the <see cref="T:System.IO.Packaging.Package" /> referenced by the given <paramref name="packageUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` не может быть указан как `null` или пустым.  
  
 В следующей таблице показаны образцы вариантов для <xref:System.IO.Packaging.PackUriHelper.Create%2A>.  
  
|`packageUri`|Возвращенный URI ТИПА pack.|  
|------------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|pack://http:,, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc|  
|file:///d:/Packages/mypackage2.pkg|pack://file:,, d:,packages,mypackage2.pkg|  
  
 Создание URI типа pack — это многоэтапный процесс.  Например, один шаг при создании URI типа pack является для замены символов косой черты (/) из `packageUri` запятыми (,).  
  
 Дополнительные сведения о преобразовании строк и каким образом формируются URI типа pack см. в разделе приложение A.4 «Примеры преобразования строк» и приложении б.3 «Составление пакет URI» в спецификации Open Packaging Conventions, можно загрузить по адресу [спецификации и лицензирование загрузки](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.IO.Packaging.PackUriHelper.Create%2A> метод для определения пакет URI, который ссылается на пакет.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> is not an absolute URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packageUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <see cref="T:System.IO.Packaging.PackagePart" /> in the package.</param>
        <summary>Creates a pack URI given a <see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] and the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of a part in the package.</summary>
        <returns>The pack URI of the given <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` не может быть задан как null или пустым.  
  
 Если `partUri` является `null`, возвращаемый пакет URI указывает на пакет.  
  
 В следующей таблице показаны образцы вариантов для <xref:System.IO.Packaging.PackUriHelper.Create%2A> метод.  
  
|`packageUri`|`partUri`|Возвращенный URI ТИПА pack.|  
|------------------|---------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/Page2.XAML|pack://http:,, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.XAML|pack://http:,, www.proseware.com, mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.XML|pack://http:,, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.XML|pack://http:,, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|**null**|pack://http:,, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/myDoc.XAML|pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/Packages/mypackage2.pkg|/a/Bar.XAML|pack://file:,, d:,packages,mypackage2.pkg/a/bar.xaml|  
  
 Создание URI типа pack — это многоэтапный процесс.  Например, один шаг при создании URI типа pack является для замены символов косой черты (/) из `packageUri` запятыми (,).  
  
 Дополнительные сведения о преобразовании строк и каким образом формируются URI типа pack см. в разделе приложение A.4 «Примеры преобразования строк» и приложении б.3 «Составление пакет URI» в спецификации Open Packaging Conventions, можно загрузить по адресу [спецификации и лицензирование загрузки](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> метод для определения пакет URI, который ссылается на пакет.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> is not an absolute URI.  -or-  <paramref name="partUri" /> is not a valid part URI syntax.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="fragment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <see cref="T:System.IO.Packaging.PackagePart" /> in the package.</param>
        <param name="fragment">A "#" reference identifying an element within the package part.</param>
        <summary>Creates a pack URI given a <see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of a part in the package, and a "#" fragment to append.</summary>
        <returns>The pack URI that identifies the specified package, package part, and fragment.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` не может быть указан как `null` или пустым.  
  
 Если `partUri` является `null`, возвращаемый пакет URI указывает на пакет.  
  
 `fragment` не может быть пустой строкой, но может быть указан как `null`.  Если не указано, что `null`, `fragment` строка должна начинаться с символа «#».  Дополнительные сведения о синтаксисе из `fragment` ссылки, см. раздел 3.5 «Fragment» из [RFC 3986](https://www.ietf.org/rfc/rfc3986.txt).  
  
 В следующей таблице показаны образцы вариантов для <xref:System.IO.Packaging.PackUriHelper.Create%2A> метод.  
  
|`packageUri`|`partUri`|`fragment`|Возвращенный URI ТИПА pack.|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/Page1.XAML|#intro|pack://http:,, www.proseware.com, mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/Page2.XAML|**null**|pack://http:,, www.proseware.com, mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.XAML|**null**|pack://http:,, www.proseware.com, mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.XML|**null**|pack://http:,, www.proseware.com, mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.XML|**null**|pack://http:,, www.proseware.com, mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.XAML|#summary|pack://http:,, www.proseware.com, mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/Page1.XAML|#intro|pack://http:,, www.proseware.com, packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:,, www.proseware.com, mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/myDoc.XAML|**null**|pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/Packages/mypackage2.pkg|/a/Bar.XAML|#xref|pack://file:,, d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 Создание URI типа pack — это многоэтапный процесс.  Например, один шаг при создании URI типа pack является для замены символов косой черты (/) из `packageUri` запятыми (,).  
  
 Дополнительные сведения о преобразовании строк и каким образом формируются URI типа pack см. в разделе приложение A.4 «Примеры преобразования строк» и приложении б.3 «Составление пакет URI» в спецификации Open Packaging Conventions, можно загрузить по адресу [спецификации и лицензирование загрузки](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> метод для определения пакет URI, который ссылается на пакет.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> is not an absolute URI.  -or-  <paramref name="partUri" /> is not a valid part URI syntax.  -or-  <paramref name="fragment" /> is empty or does begin with "#".</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">The URI of the <see cref="T:System.IO.Packaging.PackagePart" /> within the package.</param>
        <summary>Creates a formatted <see cref="T:System.IO.Packaging.PackagePart" /> URI.</summary>
        <returns>A formatted <see cref="T:System.IO.Packaging.PackagePart" /> URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Из <xref:System.IO.Packaging.PackagePart> всегда есть ссылка из <xref:System.IO.Packaging.Package> корневой.  
  
 Возвращенный <xref:System.IO.Packaging.PackagePart> URI является абсолютным, который всегда начинается с «/» и соответствующий синтаксис, определяемый в [открытых спецификаций соглашения упаковки](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 В следующей таблице показаны образцы вариантов для <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>.  
  
|`partUri`|Возвращенный URI части.|  
|---------------|-----------------------|  
|picture1.jpg|/picture1.jpg|  
|/picture2.jpg|/picture2.jpg|  
|a/myDoc.XAML|/a/myDoc.XAML|  
|/b/Bar.XAML|/b/Bar.XAML|  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A> метод для определения относительных URI для <xref:System.IO.Packaging.PackagePart> элементов.  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">The <see cref="T:System.IO.Packaging.PackagePart" /> URI to normalize.</param>
        <summary>Returns the normalized form of a specified <see cref="T:System.IO.Packaging.PackagePart" /> URI.</summary>
        <returns>The normalized form of the given <paramref name="partUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> Нормализует `partUri` путем складывания случай в верхний регистр (<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>) и возвращает результат.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partUri" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packUri">The pack URI from which to return the URI of the <see cref="T:System.IO.Packaging.Package" />.</param>
        <summary>Returns the inner URI that points to the entire package of a specified pack URI.</summary>
        <returns>The URI of the <see cref="T:System.IO.Packaging.Package" /> from the specified <paramref name="packUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны образцы вариантов для <xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>.  
  
|`packUri`|Возвращаемый пакет URI|  
|---------------|--------------------------|  
|pack://http:,, www.proseware.com, mypackage.xyz/a/mydoc.xaml|http://www.proseware.com/mypackage.xyz|  
|pack://http:,, www.proseware.com, packages.aspx%3fmypackage/a/bar.xaml|http://www.proseware.com/packages.aspx?mypackage|  
|pack://http:,, www.proseware.com, mypackage.pkg|http://www.proseware.com/mypackage.pkg|  
|pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|ftp://ftp.proseware.com/packages/mypackage1.abc|  
|pack://file:,, d:,packages,mypackage2.pkg/a/bar.xaml|file:///d:/Packages/mypackage2.pkg|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packUri">The pack URI from which to return the <see cref="T:System.IO.Packaging.PackagePart" /> URI.</param>
        <summary>Returns the URI of a <see cref="T:System.IO.Packaging.PackagePart" /> within a specified pack URI.</summary>
        <returns>The URI of the <see cref="T:System.IO.Packaging.PackagePart" /> in the given <paramref name="packUri" />, or <see langword="null" /> if <paramref name="packUri" /> points to a package instead of a <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращенный <xref:System.IO.Packaging.PackagePart> URI задается относительно корневого каталога пакета и является абсолютным, всегда начинается с «/» и соответствующий синтаксис, определяемый в [открытых спецификаций соглашения упаковки](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 В следующей таблице показаны образцы вариантов для <xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>.  
  
|`packUri`|Возвращенный URI части.|  
|---------------|-----------------------|  
|pack://http:,, www.proseware.com, mypackage.xyz/a/mydoc.xaml|/a/myDoc.XAML|  
|pack://http:,, www.proseware.com, packages.aspx%3fmypackage/a/bar.xaml|/a/Bar.XAML|  
|pack://http:,, www.proseware.com, mypackage.pkg|null|  
|pack://FTP:,, ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/Picture.jpg|  
|pack://file:,, d:,packages,mypackage2.pkg/a/bar.xaml|/a/Bar.XAML|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">The <see cref="P:System.IO.Packaging.PackagePart.Uri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> to return the URI for the associated <see cref="T:System.IO.Packaging.PackageRelationship" />.</param>
        <summary>Returns the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the relationship part associated with a specified <see cref="T:System.IO.Packaging.PackagePart" />.</summary>
        <returns>The URI of the <see cref="T:System.IO.Packaging.PackageRelationship" /> part associated with the <see cref="T:System.IO.Packaging.PackagePart" /> identified by <paramref name="partUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` необходимо указать либо <xref:System.IO.Packaging.Package> («/») или <xref:System.IO.Packaging.PackagePart> , не <xref:System.IO.Packaging.PackageRelationship> часть.  
  
 Дополнительные сведения о <xref:System.IO.Packaging.PackageRelationship> частей, см. в разделе 9.3 раздел «Связей» в открытых спецификаций соглашения упаковки, можно загрузить по адресу [формировании](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 [URI типа "pack" в WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Спецификации Open Packaging соглашения](http://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> syntax is not valid for a package part URI.  -or-  <paramref name="partUri" /> is an absolute URI.  -or-  <paramref name="partUri" /> references a relationship part.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the source part.</param>
        <param name="targetPartUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the target part.</param>
        <summary>Returns the relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] between two specified <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)].</summary>
        <returns>The relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] from <paramref name="sourcePartUri" /> to <paramref name="targetPartUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны образцы вариантов для <xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>.  
  
|`sourcePartUri`|`targetPartUri`|Возвращаемый относительный URI|  
|---------------------|---------------------|---------------------------|  
|/myDoc/Markup/Page.XML|/myDoc/Markup/Picture.jpg|Picture.jpg|  
|/myDoc/Markup/Page.XML|/myDoc/Picture.jpg|.. /Picture.jpg|  
|/myDoc/Markup/Page.XML|/myDoc/Images/Picture.jpg|.. /Images/Picture.jpg|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourcePartUri" /> or <paramref name="targetPartUri" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the relationship part to return the <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> from.</param>
        <summary>Returns the <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> from the <see cref="T:System.IO.Packaging.PackageRelationship" /> with a specified [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</summary>
        <returns>The <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> from the relationship with the specified <paramref name="relationshipPartUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> Свойство компонента связей необходимо либо определить <xref:System.IO.Packaging.PackagePart.Package%2A> («/») или <xref:System.IO.Packaging.PackagePart> , не <xref:System.IO.Packaging.PackageRelationship>.  
  
 Например если часть пакета «/ files/document.xaml» является владельцем источника части связи, «/ files/_rels/document.xaml.rels», что вызов <xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A> с `relationshipPartUri` параметр «/ files/_rels/document.xaml.rels» возвращает <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>из «/ files/document.xaml».  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relationshipPartUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipPartUri" /> is an absolute [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].  -or-  <paramref name="relationshipPartUri" /> syntax is not valid for a <see cref="T:System.IO.Packaging.PackagePart" />.  -or-  <paramref name="relationshipPartUri" /> does not reference a relationship part.  -or-  The <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> of the relationship part references another relationship part (not valid).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to check for a <see cref="T:System.IO.Packaging.PackageRelationship" /> part.</param>
        <summary>Returns a value that indicates whether a specified [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] is the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of a <see cref="T:System.IO.Packaging.PackageRelationship" /> part.</summary>
        <returns>
          <see langword="true" /> if <paramref name="partUri" /> identifies a <see cref="T:System.IO.Packaging.PackageRelationship" /> part; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> is an absolute [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].  -or-  <paramref name="partUri" /> is an invalid <see cref="T:System.IO.Packaging.PackagePart" /> syntax.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">The URI of the source part, or "/" to designate the <see cref="T:System.IO.Packaging.Package" /> root.</param>
        <param name="targetUri">The relative URI to the target part.</param>
        <summary>Returns a part URI given a source part URI and a URI with a relative path to a target part.</summary>
        <returns>The URI of the target part resolved between the specified <paramref name="SourcePartUri" /> and the <paramref name="targetUri" /> parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны образцы вариантов для <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  
  
|`sourcePartUri`|`targetUri`|Полученный URI|  
|---------------------|-----------------|------------------|  
|/myDoc/Markup/Page.XML|Picture.jpg|/myDoc/Markup/Picture.jpg|  
|/myDoc/Markup/Page.XML|Images/Picture.jpg|/myDoc/Markup/Images/Picture.jpg|  
|/myDoc/Markup/Page.XML|./Picture.jpg|/myDoc/Markup/Picture.jpg|  
|/myDoc/Markup/Page.XML|.. /Picture.jpg|/myDoc/Picture.jpg|  
|/myDoc/Markup/Page.XML|.. /Images/Picture.jpg|/myDoc/Images/Picture.jpg|  
|/|Images/Picture.jpg|/Images/Picture.jpg|  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  Полный пример см. в разделе [пример чтения пакета](http://go.microsoft.com/fwlink/?LinkID=160034).  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourcePartUri" /> or <paramref name="targetUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourcePartUri" /> is not a valid part URI.  -or-  <paramref name="targetUri" /> is not a valid relative URI.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Defines the pack URI scheme name "pack".</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>