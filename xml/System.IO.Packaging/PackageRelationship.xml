<Type Name="PackageRelationship" FullName="System.IO.Packaging.PackageRelationship">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a6fa63b1c921255feabb5f4e944de73cd92bf24" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33679715" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PackageRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageRelationship" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageRelationship" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет ассоциацию между исходным объектом <see cref="T:System.IO.Packaging.Package" /> или <see cref="T:System.IO.Packaging.PackagePart" /> и целевым объектом, которым может быть <see cref="T:System.IO.Packaging.PackagePart" /> или внешний ресурс.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.IO.Packaging.PackageRelationship> определяет ассоциацию между *источника* <xref:System.IO.Packaging.Package> или <xref:System.IO.Packaging.PackagePart> для *целевой* <xref:System.IO.Packaging.PackagePart> или внешние ресурсы.  Исходный объект считается «владелец» связи.  
  
 <xref:System.IO.Packaging.PackageRelationship> Класс не имеет открытого конструктора; вместо этого используются два метода создания:  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|Создает связь «на уровне пакета» — из пакета в указанной части или внешний ресурс.|  
|<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|Создает связь «уровня» — из одной части в другую часть или внешние ресурсы.|  
  
 Источник пакета или части определяется <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> свойству связи.  Целевой частью или внешний ресурс определяется <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> свойству связи.  
  
 Создание или удаление связи не влияет на исходные или целевые объекты каким-либо образом.  
  
 Если исходный объект удаляется, также удаляются все связи, принадлежащих объекту.  
  
 Связи позволяют перемещаться в документе, а также между документами.  Связи также поддерживают службы объектных моделей документов, например связывание <xref:System.Printing.PrintTicket> к конкретным элементам документа при печати.  
  
 Дополнительные сведения о <xref:System.IO.Packaging.PackageRelationship> элементов см. в разделе 1.3 «Связей» *Open Packaging Conventions* спецификацию можно загрузить по адресу [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку идентификатора связи.</summary>
        <value>Строка идентификатора связи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A> Строки свойства уникален для всех связей, принадлежащих <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> пакет или часть.  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A> Задается в вызове **пакета**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> или **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> метод создания связи.  После создания связи <xref:System.IO.Packaging.PackageRelationship.Id%2A> не может быть изменено.  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A> Свойство строка является допустимым идентификатором XML. <xref:System.IO.Packaging.PackageRelationship.Id%2A> Тип xsd:ID и должны соответствовать соглашениям об именах, предписанные в *XML Schema Part 2: Datatypes* спецификации (см. [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.IO.Packaging.Package" />, содержащий данную связь.</summary>
        <value>Пакет, содержащий данную связь.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о <xref:System.IO.Packaging.Package> элементов в разделе *Open Packaging Conventions* спецификацию можно загрузить по адресу [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает уточненное имя типа связи.</summary>
        <value>Уточненное имя типа связи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> Задается в вызове **пакета**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> или **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> метод создания связи.  После создания связи <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> не может быть изменено.  
  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> определяется в соответствии с синтаксисом URI like и определяет роль связи. Например «http://schemas.microsoft.com/xps/2005/06/required-resource» определяет связь с целевой части, которая является «required-resource.»  
  
 **Типы связей в пакете**  
  
|Описание:|Тип связи|  
|-----------------|-----------------------|  
|Основные свойства|http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties|  
|Цифровая подпись|http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature|  
|Цифровая подпись сертификата|http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate|  
|Цифровая подпись источника|http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin|  
|Эскиз|http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail|  
  
 Дополнительные сведения о связи пакета типов см. раздел 3 и приложение I *Open Packaging Conventions* спецификацию можно загрузить по адресу [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.Id" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] пакета или части, которым принадлежит связь.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] объекта <see cref="T:System.IO.Packaging.Package" /> или <see cref="T:System.IO.Packaging.PackagePart" />, являющегося владельцем связи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если связь является владельцем <xref:System.IO.Packaging.Package>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> возвращает URI «/».  
  
 Если связь является владельцем <xref:System.IO.Packaging.PackagePart>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> возвращает URI части.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetMode">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.TargetMode TargetMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.TargetMode TargetMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetMode As TargetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::TargetMode TargetMode { System::IO::Packaging::TargetMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.TargetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, показывающее тип целевого объекта связи: <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> по отношению к <see cref="T:System.IO.Packaging.Package" />.</summary>
        <value>Значение перечисления, показывающее, на какой ресурс ссылается <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />: <see cref="F:System.IO.Packaging.TargetMode.Internal" /> или <see cref="F:System.IO.Packaging.TargetMode.External" /> по отношению к <see cref="T:System.IO.Packaging.Package" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> Задается в вызове **пакета**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> или **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> метод создания связи. После создания связи <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> не может быть изменено.  
  
 Когда <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> — <xref:System.IO.Packaging.TargetMode.Internal>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> должно быть относительная ссылка.  Для связи уровня пакета, относительные ссылки <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> разрешаться относительно URI типа pack исходного пакета, который является владельцем и со связью.  (Пример источника пакета URI типа pack: «pack://http:,, www.adatum.com, files,datapak.package/».)  Для отношения уровня части <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> разрешается относительно исходной части владельца связи (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> интерпретируется относительно <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).  
  
 Когда <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> — <xref:System.IO.Packaging.TargetMode.External>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> может быть относительная ссылка или полный URI.  Если <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> является относительным, ссылка интерпретируется как относительно расположения <xref:System.IO.Packaging.Package> , содержащий эту связь.  
  
 Дополнительные сведения о <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> разделе 1.3.3 «Связь разметки» из *Open Packaging Conventions* спецификацию можно загрузить по адресу [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetUri">
      <MemberSignature Language="C#" Value="public Uri TargetUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TargetUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TargetUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] целевого ресурса связи.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] целевого ресурса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> Задается в вызове **пакета**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> или **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> метод создания связи. После создания связи <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> не может быть изменено.  
  
 Когда <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> — <xref:System.IO.Packaging.TargetMode.Internal>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> должно быть относительная ссылка.  Для связи уровня пакета, относительные ссылки <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> разрешаться относительно URI типа pack исходного пакета, который является владельцем и со связью.  (Пример источника пакета URI типа pack: «pack://http:,, www.adatum.com, files,datapak.package/».)  Для отношения уровня части <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> разрешается относительно исходной части владельца связи (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> интерпретируется относительно <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).  
  
 Когда <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> — <xref:System.IO.Packaging.TargetMode.External>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> может быть относительная ссылка или полный URI.  Если <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> является относительным, ссылка интерпретируется как относительно расположения <xref:System.IO.Packaging.Package> , содержащий эту связь.  
  
 Дополнительные сведения о <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> разделе 1.3.3 «Связь разметки» из *Open Packaging Conventions* спецификацию можно загрузить по адресу [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      </Docs>
    </Member>
  </Members>
</Type>