<Type Name="PackageStore" FullName="System.IO.Packaging.PackageStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="09c25cbc0310ad976dc23dd14cc3caa0b864965f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30417858" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class PackageStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackageStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageStore" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageStore abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет коллекцию зависящих от приложения экземпляров объекта <see cref="T:System.IO.Packaging.Package" />, используемых в сочетании с объектом <see cref="T:System.IO.Packaging.PackWebRequest" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageStore> Определяет коллекции ссылку пакета, которые были открыты и активны в приложении.  Добавить пакеты <xref:System.IO.Packaging.PackageStore> осуществляется — по значению ключа URI.  <xref:System.IO.Packaging.PackageStore> Поддерживает три распространенных случаев:  
  
1.  Доступ к <xref:System.IO.Packaging.PackagePart> данных с помощью <xref:System.IO.Packaging.PackWebRequest>.  
  
2.  Приложение, получив экземпляр из <xref:System.IO.Packaging.Package> заданному URI пакета.  
  
3.  Доступе к пакетам, которые создаются и сохраняются в <xref:System.IO.MemoryStream>.  
  
 Для повышения производительности и свести к минимуму нагрузку операций открытия/закрытия повторяющиеся файл <xref:System.IO.Packaging.PackageStore> используется для управления экземплярами пакетов осуществляется <xref:System.IO.Packaging.PackWebRequest> и непосредственно приложением.  При доступе к данным в пакете, <xref:System.IO.Packaging.Package> запрошенный адрес <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> сначала проверяется, находится ли пакет уже определены и открыт в <xref:System.IO.Packaging.PackageStore>.  Если пакет определен как открытая в <xref:System.IO.Packaging.PackageStore>, запрошенный частей может осуществляться непосредственно, без повторного открытия и закрытия пакета для каждого запроса.  
  
 Если приложение открывает пакет с <xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> может быть вызван для добавления пакета <xref:System.IO.Packaging.PackageStore>.  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> должен быть вызван, более поздней версии, чтобы удалить пакет <xref:System.IO.Packaging.PackageStore> до вызова метода <xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>.  
  
 Пакеты XPS открывается с <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> конструктор автоматически добавляются и удаляются из <xref:System.IO.Packaging.PackageStore> при документа создается и удаляется.  (Необходимо вызвать <xref:System.IO.Packaging.PackageStore.AddPackage%2A> или <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> отдельно для открытой пакеты XPS с <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> конструкторов.)  
  
 Файловый ввод-вывод разрешения пакета доступ через <xref:System.IO.Packaging.PackageStore> остается тем же, как разрешения ввода-вывода, назначенных для пакета при его открытии.  <xref:System.IO.Packaging.PackageStore> Предоставляет только ссылки на пакеты, которые были добавлены хранилище.  Это приложение должно правильно открытия, обновления и закрытия каждого пакета.  
  
 Добавить пакеты <xref:System.IO.Packaging.PackageStore> может осуществляться в многопоточных средах, если они используются в сочетании с [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] средство синтаксического анализа, такие как <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>.  При работе в многопоточной среде, приложение должно заблокировать пакет перед выполнением доступа.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackWebRequest" />
    <altmember cref="T:System.IO.Packaging.PackWebResponse" />
  </Docs>
  <Members>
    <Member MemberName="AddPackage">
      <MemberSignature Language="C#" Value="public static void AddPackage (Uri uri, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPackage(class System.Uri uri, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPackage(Uri ^ uri, System::IO::Packaging::Package ^ package);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="uri">Ключ [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] пакета <c>package</c>, сравниваемого в запросе <see cref="T:System.IO.Packaging.PackWebRequest" />.</param>
        <param name="package">Пакет, добавляемый в хранилище.</param>
        <summary>Добавляет в хранилище объект <see cref="T:System.IO.Packaging.Package" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` Определяет ключ пакет URI, который сравнивается при вызове <xref:System.IO.Packaging.PackWebRequest>.  
  
 Если `packageUri` соответствует <xref:System.IO.Packaging.PackagePart.Uri%2A> для <xref:System.IO.Packaging.PackagePart> в <xref:System.IO.Packaging.PackWebRequest> вызвать пакет, определенный в <xref:System.IO.Packaging.PackageStore> используется для доступа к запрашиваемой части.  
  
 Если `packageUri` не соответствует <xref:System.IO.Packaging.PackagePart.Uri%2A> для <xref:System.IO.Packaging.PackagePart> в <xref:System.IO.Packaging.PackWebRequest> вызова, пакет с указанным URI будет открыт для доступа к запрашиваемой части.  
  
 **Примечание по безопасности** этот метод требует <xref:System.Security.Permissions.EnvironmentPermission> для всех пользовательских <xref:System.IO.Packaging.Package> (отличных<xref:System.IO.Packaging.ZipPackage>) типы.  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackageStore.AddPackage%2A>.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="package" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> является недопустимым [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] пакета.</exception>
        <exception cref="T:System.InvalidOperationException">Пакет с указанным <paramref name="packageUri" /> уже имеется в хранилище.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package GetPackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package GetPackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ GetPackage(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] пакета, который требуется возвратить.</param>
        <summary>Возвращает из хранилища <see cref="T:System.IO.Packaging.Package" /> с указанным [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</summary>
        <returns>Пакет с указанным <paramref name="packageUri" /> или <see langword="null" />, если в хранилище нет пакета с указанным <paramref name="packageUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` сопоставляется с URL-адреса, указанного в <xref:System.IO.Packaging.PackageStore.AddPackage%2A> вызова метода.  
  
 **Примечание по безопасности** этот метод требует <xref:System.Security.Permissions.EnvironmentPermission> для всех пользовательских <xref:System.IO.Packaging.Package> (отличных<xref:System.IO.Packaging.ZipPackage>) типы.  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackageStore.GetPackage%2A>.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopendoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopendoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="packageUri" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> является недопустимым [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] пакета.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackage">
      <MemberSignature Language="C#" Value="public static void RemovePackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePackage(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] пакета, который требуется удалить.</param>
        <summary>Удаляет из хранилища <see cref="T:System.IO.Packaging.Package" /> с указанным [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` сопоставляется с URL-адреса, указанного в <xref:System.IO.Packaging.PackageStore.AddPackage%2A> вызова метода.  
  
 **Примечание по безопасности** этот метод требует <xref:System.Security.Permissions.EnvironmentPermission> для всех пользовательских <xref:System.IO.Packaging.Package> (отличных<xref:System.IO.Packaging.ZipPackage>) типы.  
  
   
  
## Examples  
 В следующем примере показано, как использовать метод <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewclosedoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewclosedoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="packageUri" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> является недопустимым [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] пакета.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>