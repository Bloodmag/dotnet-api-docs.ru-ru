<Type Name="SerialPort" FullName="System.IO.Ports.SerialPort">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edb46f25768209ef7558903ea96c655667e2e21a" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31781047" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SerialPort : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SerialPort extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.IO.Ports.SerialPort" />
  <TypeSignature Language="VB.NET" Value="Public Class SerialPort&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerialPort : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Ports</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет ресурс последовательного порта.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс используется для управления файловый ресурс последовательного порта. Этот класс предоставляет синхронные и событиями ввода-вывода, доступ к ПИН-код, а также переход состояния и доступ к свойствам последовательного драйвера. Кроме того, функциональные возможности этого класса может быть заключен в внутреннего <xref:System.IO.Stream> объект, доступный через <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство и передается классы, идущие или использовать потоки.  
  
 <xref:System.IO.Ports.SerialPort> Класс поддерживает следующие кодировки: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>и в любой кодировке, определенные в библиотеке mscorlib.dll, где кодовая страница — не более 50 000 или кодовая страница — 54936.  Можно использовать альтернативный кодировки, но необходимо использовать <xref:System.IO.Ports.SerialPort.ReadByte%2A> или <xref:System.IO.Ports.SerialPort.Write%2A> метод и выполните Кодируемое самостоятельно.  
  
 Вы используете <xref:System.IO.Ports.SerialPort.GetPortNames%2A> метод для извлечения допустимых портов для текущего компьютера.  
  
 Если <xref:System.IO.Ports.SerialPort> объект блокируется во время операции чтения, не прекращения потока. Вместо этого, либо закрыть базовый поток или освобождения <xref:System.IO.Ports.SerialPort> объекта.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Оба компьютера должны выполнение программы, для обеспечения полной функциональности в этом примере.  
  
 [!code-cpp[System.IO.Ports.SerialPort#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#10)]
 [!code-csharp[System.IO.Ports.SerialPort#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#10)]
 [!code-vb[System.IO.Ports.SerialPort#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Ports.SerialPort" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор использует значения по умолчанию, если не указан ни один. Например <xref:System.IO.Ports.SerialPort.DataBits%2A> свойств по умолчанию равным 8, <xref:System.IO.Ports.SerialPort.Parity%2A> свойство по умолчанию `None` значение перечисления <xref:System.IO.Ports.SerialPort.StopBits%2A> свойств по умолчанию 1 и именем по умолчанию порт COM1.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">Интерфейс к контейнеру.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Ports.SerialPort" />, используя указанный объект <see cref="T:System.ComponentModel.IContainer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор использует значения по умолчанию, если не указан ни один. Например <xref:System.IO.Ports.SerialPort.DataBits%2A> свойств по умолчанию равным 8, <xref:System.IO.Ports.SerialPort.Parity%2A> свойство по умолчанию `None` значение перечисления <xref:System.IO.Ports.SerialPort.StopBits%2A> свойств по умолчанию 1 и именем по умолчанию порт COM1.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Не удается найти или открыть указанный порт.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName">Порт для использования (например, COM1).</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Ports.SerialPort" />, используя указанное имя порта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания нового экземпляра <xref:System.IO.Ports.SerialPort> класс, после которого требуется задать имя порта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Не удается найти или открыть указанный порт.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String, baudRate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">Порт для использования (например, COM1).</param>
        <param name="baudRate">Скорость в бодах.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Ports.SerialPort" />, используя указанное имя порта и скорость передачи в бодах.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания нового экземпляра <xref:System.IO.Ports.SerialPort> класс, после которого требуется задать имя порта и скорость передачи в бодах.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Не удается найти или открыть указанный порт.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName">Порт для использования (например, COM1).</param>
        <param name="baudRate">Скорость в бодах.</param>
        <param name="parity">Одно из значений перечисления <see cref="P:System.IO.Ports.SerialPort.Parity" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Ports.SerialPort" />, используя указанное имя порта, скорость передачи в бодах и бит четности.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания нового экземпляра <xref:System.IO.Ports.SerialPort> класс, после которого требуется задать имя порта, скорость передачи в бодах и бит четности.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Не удается найти или открыть указанный порт.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">Порт для использования (например, COM1).</param>
        <param name="baudRate">Скорость в бодах.</param>
        <param name="parity">Одно из значений перечисления <see cref="P:System.IO.Ports.SerialPort.Parity" />.</param>
        <param name="dataBits">Число битов данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Ports.SerialPort" />, используя указанное имя порта, скорость передачи в бодах, бит четности и биты данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания нового экземпляра <xref:System.IO.Ports.SerialPort> класс, после которого требуется задать имя порта, скорость передачи в бодах, бит четности и биты данных.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Не удается найти или открыть указанный порт.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName">Порт для использования (например, COM1).</param>
        <param name="baudRate">Скорость в бодах.</param>
        <param name="parity">Одно из значений перечисления <see cref="P:System.IO.Ports.SerialPort.Parity" />.</param>
        <param name="dataBits">Число битов данных.</param>
        <param name="stopBits">Одно из значений перечисления <see cref="P:System.IO.Ports.SerialPort.StopBits" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Ports.SerialPort" />, используя указанное имя порта, скорость передачи в бодах, бит четности, биты данных и стоп-бит.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания нового экземпляра <xref:System.IO.Ports.SerialPort> класса, если требуется указать имя порта, скорость передачи в бодах, бит четности, биты данных и Стоп-бит.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Не удается найти или открыть указанный порт.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает базовый объект <see cref="T:System.IO.Stream" /> для объекта <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <value>Объект <see cref="T:System.IO.Stream" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется для явного асинхронных операций ввода-вывода или для передачи <xref:System.IO.Ports.SerialPort> объект <xref:System.IO.Stream> класс-оболочку, такие как <xref:System.IO.StreamWriter>.  
  
 Открытые последовательного порта <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство возвращает объект, который является производным от абстрактного <xref:System.IO.Stream> класс и реализует методов чтения и записи с помощью прототипов, унаследованные от <xref:System.IO.Stream> класса: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A> , <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, и <xref:System.IO.Stream.WriteByte%2A>. Эти методы могут быть полезны при передаче упакованного ресурса последовательного порта для <xref:System.IO.Stream> класс-оболочку.  
  
 Из-за прочтите дескриптор перенесенного файла <xref:System.IO.Stream.Length%2A> и <xref:System.IO.Stream.Position%2A> свойства не поддерживаются и <xref:System.IO.Stream.Seek%2A> и <xref:System.IO.Stream.SetLength%2A> методы не поддерживаются.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Поток закрыт. Это может произойти, если метод <see cref="M:System.IO.Ports.SerialPort.Open" /> не был вызван или же, напротив, вызван метод <see cref="M:System.IO.Ports.SerialPort.Close" />.</exception>
        <exception cref="T:System.NotSupportedException">Поток находится в приложении .NET Compact Framework и был вызван один из следующих методов:  
  
 <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)" /><see cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />  
  
 В .NET Compact Framework не поддерживается асинхронная модель с базовыми потоками.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaudRate">
      <MemberSignature Language="C#" Value="public int BaudRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BaudRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BaudRate" />
      <MemberSignature Language="VB.NET" Value="Public Property BaudRate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BaudRate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(9600)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает скорость передачи для последовательного порта (в бодах).</summary>
        <value>Скорость в бодах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Скорость в бодах должны поддерживаться пользователя последовательного драйвера. Значение по умолчанию — 9600 бит в секунду (бит/с).  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.IO.Ports.SerialPort.BaudRate%2A> свойства `9600`.  
  
 [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]
 [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]
 [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  
  
 В следующем примере показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанная скорость меньше или равна нулю, или больше максимальной допустимой скорости передачи для устройства.</exception>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
      </Docs>
    </Member>
    <Member MemberName="BreakState">
      <MemberSignature Language="C#" Value="public bool BreakState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakState" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BreakState" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает состояние сигнала разрыва.</summary>
        <value>
          <see langword="true" />, если порт находится в состоянии разрыва, в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Состояние сигнала разрыва возникает, когда передача приостанавливается и линия переходит в состояние разрыва (все low, Стоп-бит) до выпуска. Чтобы перейти в режим приостановки выполнения, присвойте этому свойству значение `true`. Если порт уже находится в состоянии разрыва, установка этого свойства на попытку `true` не приводит к возникновению исключения. Не удается записать <xref:System.IO.Ports.SerialPort> объекта при <xref:System.IO.Ports.SerialPort.BreakState%2A> — `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Поток закрыт. Это может произойти, если метод <see cref="M:System.IO.Ports.SerialPort.Open" /> не был вызван или же, напротив, вызван метод <see cref="M:System.IO.Ports.SerialPort.Close" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BytesToRead">
      <MemberSignature Language="C#" Value="public int BytesToRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesToRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BytesToRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesToRead As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesToRead { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает число байтов данных, находящихся в буфере приема.</summary>
        <value>Число байтов данных, находящихся в буфере приема.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Включает буфера приема последовательного драйвера приемного буфера, а также внутренний буфер <xref:System.IO.Ports.SerialPort> сам объект.  
  
 Поскольку <xref:System.IO.Ports.SerialPort.BytesToRead%2A> свойство представляет оба <xref:System.IO.Ports.SerialPort> буфер и буфера Windows создан, он может возвращать больше значения <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> свойства, которое представляет только созданные Windows буфера.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Порт не открыт.</exception>
      </Docs>
    </Member>
    <Member MemberName="BytesToWrite">
      <MemberSignature Language="C#" Value="public int BytesToWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesToWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BytesToWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesToWrite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesToWrite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает число байтов данных, находящихся в буфере отправки.</summary>
        <value>Число байтов данных, находящихся в буфере отправки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Включает буфера передачи последовательного драйвера буфера отправки, а также внутренний буфер <xref:System.IO.Ports.SerialPort> сам объект.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.</exception>
        <exception cref="T:System.InvalidOperationException">Поток закрыт. Это может произойти, если метод <see cref="M:System.IO.Ports.SerialPort.Open" /> не был вызван или же, напротив, вызван метод <see cref="M:System.IO.Ports.SerialPort.Close" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CDHolding">
      <MemberSignature Language="C#" Value="public bool CDHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.CDHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDHolding { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает состояние линии обнаружения несущей для порта.</summary>
        <value>
          Значение <see langword="true" />, если несущая обнаружена, в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство может использоваться, чтобы отслеживать состояние линии обнаружения несущей для порта. Отсутствие несущей обычно означает, что получатель произошло зависание и было удалено, компании-перевозчика.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Поток закрыт. Это может произойти, если метод <see cref="M:System.IO.Ports.SerialPort.Open" /> не был вызван или же, напротив, вызван метод <see cref="M:System.IO.Ports.SerialPort.Close" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает соединение порта, присваивает свойству <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> значение <see langword="false" /> и уничтожает внутренний объект <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода закрывает <xref:System.IO.Ports.SerialPort> объекта и очищает обе приема и передачи буферов. Этот метод вызывает метод <xref:System.ComponentModel.Component.Dispose?displayProperty=nameWithType> метод, который вызывает защищенный <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=nameWithType> метод с `disposing` равным `true`.  
  
 Для любого приложения рекомендуется подождать некоторое количество времени, после вызова метода <xref:System.IO.Ports.SerialPort.Close%2A> метода, прежде чем пытаться вызвать <xref:System.IO.Ports.SerialPort.Open%2A> метода, как порт может не быть закрыто мгновенно.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
      </Docs>
    </Member>
    <Member MemberName="CtsHolding">
      <MemberSignature Language="C#" Value="public bool CtsHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtsHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.CtsHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtsHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtsHolding { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает состояние линии готовности к приему.</summary>
        <value>
          Значение <see langword="true" />, если сигнал готовности к приему обнаружен, в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Линии готовности к приему (CTS) используется в запросе to Send/Clear для отправки синхронизация оборудования (RTS/CTS). Линии CTS опрашивается портом перед отправкой данных.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Поток закрыт. Это может произойти, если метод <see cref="M:System.IO.Ports.SerialPort.Open" /> не был вызван или же, напротив, вызван метод <see cref="M:System.IO.Ports.SerialPort.Close" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataBits">
      <MemberSignature Language="C#" Value="public int DataBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataBits" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DataBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DataBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataBits { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает стандартное число битов данных в байте.</summary>
        <value>Число битов данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Диапазон значений для этого свойства — от 5 до 8. Значение по умолчанию — 8.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Число битов данных меньше 5 или больше 8.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataReceived">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialDataReceivedEventHandler DataReceived" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.DataReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataReceived As SerialDataReceivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialDataReceivedEventHandler ^ DataReceived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialDataReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, что данные были получены через порт, представленный объектом <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данные события может быть вызвана любой из элементов в <xref:System.IO.Ports.SerialData> перечисления. Операционная система определяет, следует ли вызывать это событие или нет, может сообщаться не все ошибки четности.  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> Событие также возникает, если получен символ конца файла, независимо от того, число байт во внутреннем входном буфере и значение <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> свойства.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, и <xref:System.IO.Ports.SerialPort.ErrorReceived> события может быть вызван не по порядку и может присутствовать небольшая задержка между при основной поток сообщает об ошибке и при выполнении обработчика событий. Одновременно может выполнять только один обработчик событий.  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> Возникает для каждого байта полученных событий не гарантируется. Используйте <xref:System.IO.Ports.SerialPort.BytesToRead%2A> свойство, чтобы определить, сколько данных оставить для чтения в буфере.  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> Событие второстепенный поток при получении данных от <xref:System.IO.Ports.SerialPort> объекта. Поскольку это событие вызывается во вторичном потоке, а не главного потока, предпринимается попытка изменить некоторые элементы в основном потоке, таких как элементы пользовательского интерфейса, может вызвать исключение потоковой обработки. При необходимости изменить элементы в главном <xref:System.Windows.Forms.Form> или <xref:System.Windows.Forms.Control>, запросы на изменение post с помощью <xref:System.Windows.Forms.Control.Invoke%2A>, который будет выполнять работу в правильном потоке.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В этом примере добавляется <xref:System.IO.Ports.SerialDataReceivedEventHandler> для <xref:System.IO.Ports.SerialPort.DataReceived> для чтения всех доступных данных, полученных через порт COM1. Обратите внимание, что для проверки кода необходимо иметь оборудование COM1, который будет отправлять данные.  
  
 [!code-cpp[System.IO.Ports.SerialPort#06](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#06)]
 [!code-csharp[System.IO.Ports.SerialPort#06](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#06)]
 [!code-vb[System.IO.Ports.SerialPort#06](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#06)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardInBuffer">
      <MemberSignature Language="C#" Value="public void DiscardInBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardInBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.DiscardInBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardInBuffer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardInBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет данные из буфера приема последовательного драйвера.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод эквивалентен следующему коду Visual Basic: `MSComm1.InBufferCount = 0`. Очищает буфер приема, но не влияет на буфера передачи.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Поток закрыт. Это может произойти, если метод <see cref="M:System.IO.Ports.SerialPort.Open" /> не был вызван или же, напротив, вызван метод <see cref="M:System.IO.Ports.SerialPort.Close" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DiscardNull">
      <MemberSignature Language="C#" Value="public bool DiscardNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DiscardNull" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DiscardNull" />
      <MemberSignature Language="VB.NET" Value="Public Property DiscardNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DiscardNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, игнорируются ли пустые байты (NULL), передаваемые между портом и буфером приема.</summary>
        <value>
          <see langword="true" />, если байты NULL игнорируются, в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение обычно должно быть присвоено `false`, особенно при передаче двоичных данных.  Присвоение этому свойству `true` может привести к непредвиденным результатам для байтов в кодировке UTF32 и UTF16.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Поток закрыт. Это может произойти, если метод <see cref="M:System.IO.Ports.SerialPort.Open" /> не был вызван или же, напротив, вызван метод <see cref="M:System.IO.Ports.SerialPort.Close" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DiscardOutBuffer">
      <MemberSignature Language="C#" Value="public void DiscardOutBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardOutBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.DiscardOutBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardOutBuffer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardOutBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет данные из буфера передачи последовательного драйвера.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод эквивалентен следующему коду Visual Basic: `MSComm1.OutBufferCount = 0`. Очищает буфер передачи, но не влияет на приемного буфера.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Поток закрыт. Это может произойти, если метод <see cref="M:System.IO.Ports.SerialPort.Open" /> не был вызван или же, напротив, вызван метод <see cref="M:System.IO.Ports.SerialPort.Close" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.Ports.SerialPort" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом открытые <xref:System.ComponentModel.Component.Dispose%2A> метод и <xref:System.Object.Finalize%2A> метод. <xref:System.ComponentModel.Component.Dispose%2A> вызывает защищенный <xref:System.IO.Ports.SerialPort.Dispose%2A> метод с `disposing` равным `true`. <xref:System.Object.Finalize%2A> вызывает <xref:System.IO.Ports.SerialPort.Dispose%2A> с `disposing` значение `false`.  
  
 Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.IO.Ports.SerialPort>. Этот метод вызывает метод <xref:System.ComponentModel.Component.Dispose%2A> каждого объекта, на который есть ссылка.  
  
 Этот метод выполняет очистку и закрывает объект потока <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <block subset="none" type="overrides">
          <para>
            Метод <see cref="M:System.ComponentModel.Component.Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see cref="M:System.ComponentModel.Component.Dispose" />. Дополнительные сведения о реализации <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />, в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Дополнительные сведения о <see cref="M:System.ComponentModel.Component.Dispose" /> и <see cref="M:System.Object.Finalize" />, в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DsrHolding">
      <MemberSignature Language="C#" Value="public bool DsrHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DsrHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DsrHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DsrHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DsrHolding { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает состояние сигнала готовности данных (DSR).</summary>
        <value>
          Значение <see langword="true" />, если сигнал готовности данных отправлен в порт, в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется в синхронизации данных или все готово терминалов готовности данных (DSR/DTR). Сигнал готовности данных (DSR) обычно посылается модема к порту для указания, что он готов передавать или принимать данные.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Поток закрыт. Это может произойти, если метод <see cref="M:System.IO.Ports.SerialPort.Open" /> не был вызван или же, напротив, вызван метод <see cref="M:System.IO.Ports.SerialPort.Close" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DtrEnable">
      <MemberSignature Language="C#" Value="public bool DtrEnable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtrEnable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DtrEnable" />
      <MemberSignature Language="VB.NET" Value="Public Property DtrEnable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtrEnable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, включающее поддержку сигнала готовности терминала (DTR) в сеансе последовательной связи.</summary>
        <value>
          <see langword="true" /> для включения сигнала готовности терминала (DTR), в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Готовности терминала (DTR) обычно включается во время установления XON/XOFF программного обеспечения и запроса to Send/Clear синхронизация оборудования (RTS/CTS) и связи через модем.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает кодировку байтов для преобразования текста до и после передачи.</summary>
        <value>Объект <see cref="T:System.Text.Encoding" />. Значение по умолчанию: <see cref="T:System.Text.ASCIIEncoding" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Для свойства <see cref="P:System.IO.Ports.SerialPort.Encoding" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">В качестве свойства <see cref="P:System.IO.Ports.SerialPort.Encoding" /> задана кодировка, отличная от <see cref="T:System.Text.ASCIIEncoding" />, <see cref="T:System.Text.UTF8Encoding" />, <see cref="T:System.Text.UTF32Encoding" />, <see cref="T:System.Text.UnicodeEncoding" /> и любых однобайтовых и двухбайтовых кодировок Windows.</exception>
      </Docs>
    </Member>
    <Member MemberName="ErrorReceived">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.ErrorReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ErrorReceived As SerialErrorReceivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialErrorReceivedEventHandler ^ ErrorReceived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialErrorReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, что произошла ошибка с портом, представленным объектом <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 События ошибок может быть вызвана любой из элементов в <xref:System.IO.Ports.SerialError> перечисления. Операционная система определяет, следует ли вызывать это событие или нет, может сообщаться не все ошибки четности.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, и <xref:System.IO.Ports.SerialPort.ErrorReceived> события может быть вызван не по порядку и может присутствовать небольшая задержка между при основной поток сообщает об ошибке, и если код может при выполнении обработчика событий. Одновременно может выполнять только один обработчик событий.  
  
 В случае ошибки четности на конечным байтом потока входной буфер со значением 126 добавляется дополнительный байт.  
  
 <xref:System.IO.Ports.SerialPort.ErrorReceived> Событие второстепенный поток при получении ошибки из <xref:System.IO.Ports.SerialPort> объекта. Поскольку это событие вызывается во вторичном потоке, а не главного потока, предпринимается попытка изменить некоторые элементы в основном потоке, таких как элементы пользовательского интерфейса, может вызвать исключение потоковой обработки. При необходимости изменить элементы в главном <xref:System.Windows.Forms.Form> или <xref:System.Windows.Forms.Control>, запросы на изменение post с помощью <xref:System.Windows.Forms.Control.Invoke%2A>, который будет выполнять работу в правильном потоке.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPortNames">
      <MemberSignature Language="C#" Value="public static string[] GetPortNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetPortNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.GetPortNames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPortNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetPortNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает массив имен последовательных портов для текущего компьютера.</summary>
        <returns>Массив имен последовательных портов для текущего компьютера.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Порядок имена портов, возвращенные <xref:System.IO.Ports.SerialPort.GetPortNames%2A> не указан.  
  
 Используйте <xref:System.IO.Ports.SerialPort.GetPortNames%2A> метод для запроса на текущем компьютере список имен существующего последовательного порта. Например этот метод можно использовать для определения COM1 и COM2 допустимых последовательных портов для текущего компьютера.  
  
 Имена портов, поступают из системного реестра (например, HKEY_LOCAL_MACHINE\HARDWARE\DEVICEMAP\SERIALCOMM). Если в реестре устаревших или в противном случае неверные данные то <xref:System.IO.Ports.SerialPort.GetPortNames%2A> метод будет возвращать неправильные данные.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.IO.Ports.SerialPort.GetPortNames%2A> способ отображения имен последовательных портов на консоль.  
  
 [!code-cpp[IO.Ports.GetPortNames#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Ports.GetPortNames/cpp/example.cpp#1)]
 [!code-csharp[IO.Ports.GetPortNames#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Ports.GetPortNames/CS/example.cs#1)]
 [!code-vb[IO.Ports.GetPortNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Ports.GetPortNames/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Не удалось выполнить запрос имен последовательных портов.</exception>
      </Docs>
    </Member>
    <Member MemberName="Handshake">
      <MemberSignature Language="C#" Value="public System.IO.Ports.Handshake Handshake { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.Handshake Handshake" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Handshake" />
      <MemberSignature Language="VB.NET" Value="Public Property Handshake As Handshake" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::Handshake Handshake { System::IO::Ports::Handshake get(); void set(System::IO::Ports::Handshake value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Handshake</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает протокол установления связи для передачи данных через последовательный порт с использованием значения <see cref="T:System.IO.Ports.Handshake" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.IO.Ports.Handshake" />. Значение по умолчанию: <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании синхронизации устройство подключено к <xref:System.IO.Ports.SerialPort> объекта предложено остановить передачу данных, при наличии по крайней мере (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) байтов в буфере. Устройство возобновляет передачу данных, при наличии в буфере 1024 байта или меньше. Если устройство отправляет данные в блоках, размер которых превышает 1024 байта, это может привести к переполнению буфера.  
  
 Если <xref:System.IO.Ports.SerialPort.Handshake%2A> свойству <xref:System.IO.Ports.Handshake.RequestToSendXOnXOff> и <xref:System.IO.Ports.SerialPort.CtsHolding%2A> равно `false`, символ XOff не будет отправлено. Если <xref:System.IO.Ports.SerialPort.CtsHolding%2A> присваивается значение `true`, дополнительные данные, которые должны быть отправлены до отправки символ XOff.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданное значение не является допустимым значением перечисления <see cref="T:System.IO.Ports.Handshake" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public const int InfiniteTimeout = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 InfiniteTimeout = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Ports.SerialPort.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const InfiniteTimeout As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int InfiniteTimeout = -1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Указывает, что отсчет времени ожидания не производится.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение используется с <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> и <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее открытое или закрытое состояние объекта <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <value>
          Значение <see langword="true" />, если последовательный порт открыт, в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.IsOpen%2A> Свойство отслеживает ли порт открыт для использования вызывающим, не является ли порт открыт любым приложением на компьютере.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Переданное значение <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Переданное значение <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> является пустой строкой ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("\n")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, используемое для интерпретации окончания вызова методов <see cref="M:System.IO.Ports.SerialPort.ReadLine" /> и <see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" />.</summary>
        <value>Значение, представляющее конец строки. По умолчанию это знак перевода строки (<see cref="P:System.Environment.NewLine" />).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет, какое значение (байт) определяет конец строки для <xref:System.IO.Ports.SerialPort.ReadLine%2A> и <xref:System.IO.Ports.SerialPort.WriteLine%2A> методы. По умолчанию имеет значение конца строки <xref:System.Environment.NewLine%2A>. Можно изменить это другое значение Если конкретного последовательного устройства, которым вы работаете использует другое значение для той же цели.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение свойства не указано.</exception>
        <exception cref="T:System.ArgumentNullException">Значение свойства — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Открывает новое соединение последовательного порта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Может существовать только одно открытое соединение для <xref:System.IO.Ports.SerialPort> объекта.  
  
 Для любого приложения рекомендуется подождать некоторое количество времени, после вызова метода <xref:System.IO.Ports.SerialPort.Close%2A> метода, прежде чем пытаться вызвать <xref:System.IO.Ports.SerialPort.Open%2A> метода, как порт может не быть закрыто мгновенно.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Отказ в доступе к порту.  
  
 \- или -  
  
 Для текущего процесса или другого процесса в системе уже открыт заданный порт COM — экземпляром <see cref="T:System.IO.Ports.SerialPort" /> или в неуправляемом коде.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Одно или несколько свойств этого экземпляра недопустимы. Например, свойство <see cref="P:System.IO.Ports.SerialPort.Parity" />, <see cref="P:System.IO.Ports.SerialPort.DataBits" /> или <see cref="P:System.IO.Ports.SerialPort.Handshake" /> имеет недопустимое значение, значение <see cref="P:System.IO.Ports.SerialPort.BaudRate" /> меньше или равно нулю, значение <see cref="P:System.IO.Ports.SerialPort.ReadTimeout" /> или <see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> меньше нуля и отлично от <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</exception>
        <exception cref="T:System.ArgumentException">Имя порта не начинается с "COM".  
  
 \- или -  
  
 Тип файла порта не поддерживается.</exception>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.InvalidOperationException">Заданный порт текущего экземпляра объекта <see cref="T:System.IO.Ports.SerialPort" /> уже открыт.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Соответствующее перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Parity">
      <MemberSignature Language="C#" Value="public System.IO.Ports.Parity Parity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.Parity Parity" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Parity" />
      <MemberSignature Language="VB.NET" Value="Public Property Parity As Parity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::Parity Parity { System::IO::Ports::Parity get(); void set(System::IO::Ports::Parity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Parity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает протокол контроля четности.</summary>
        <value>Одно из значений перечисления, представляющее протокол контроля четности. Значение по умолчанию: <see cref="F:System.IO.Ports.Parity.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Четность — процедуру проверки ошибок, в котором число 1s должен всегда быть одинаковым — четным или нечетным, для каждой группы битов, переданной без ошибок. При взаимодействии модемами четности часто является одним из параметров, которые должны быть согласованы с передающей и принимающей, поместите сторон до передачи.  
  
 В случае ошибки четности на конечным байтом потока входной буфер со значением 126 добавляется дополнительный байт.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданное значение <see cref="P:System.IO.Ports.SerialPort.Parity" /> не является допустимым значением перечисления <see cref="T:System.IO.Ports.Parity" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParityReplace">
      <MemberSignature Language="C#" Value="public byte ParityReplace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 ParityReplace" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ParityReplace" />
      <MemberSignature Language="VB.NET" Value="Public Property ParityReplace As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte ParityReplace { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(63)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает байт, которым заменяются недопустимые байты потока данных при обнаружении ошибок четности.</summary>
        <value>Байт для замены недопустимых байтов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если значение равно символ null, замена ошибок четности отключается.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
      </Docs>
    </Member>
    <Member MemberName="PinChanged">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialPinChangedEventHandler PinChanged" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.PinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PinChanged As SerialPinChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialPinChangedEventHandler ^ PinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPinChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, что для порта, представленного объектом <see cref="T:System.IO.Ports.SerialPort" />, возникло событие сигнала, не связанного с данными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изменения последовательного ПИН-кода события может быть вызвана любой из элементов в <xref:System.IO.Ports.SerialPinChange> перечисления. Операционная система определяет, следует ли вызывать это событие или нет, может сообщаться не все ошибки четности. В рамках события задано новое значение ПИН-код.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged> Событие возникает при <xref:System.IO.Ports.SerialPort> объект переходит <xref:System.IO.Ports.SerialPort.BreakState%2A>, но не при порт завершает работу <xref:System.IO.Ports.SerialPort.BreakState%2A>. Такое поведение не реализуется в других значений в <xref:System.IO.Ports.SerialPinChange> перечисления.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, и <xref:System.IO.Ports.SerialPort.ErrorReceived> события может быть вызван не по порядку и может присутствовать небольшая задержка между при основной поток сообщает об ошибке и при выполнении обработчика событий. Одновременно может выполнять только один обработчик событий.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged> Событие второго потока. Поскольку это событие вызывается во вторичном потоке, а не главного потока, предпринимается попытка изменить некоторые элементы в основном потоке, таких как элементы пользовательского интерфейса, может вызвать исключение потоковой обработки. При необходимости изменить элементы в главном <xref:System.Windows.Forms.Form> или <xref:System.Windows.Forms.Control>, запросы на изменение post с помощью <xref:System.Windows.Forms.Control.Invoke%2A>, который будет выполнять работу в правильном потоке.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PortName">
      <MemberSignature Language="C#" Value="public string PortName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PortName" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.PortName" />
      <MemberSignature Language="VB.NET" Value="Public Property PortName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PortName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("COM1")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает последовательный порт, в частности, любой из доступных портов COM.</summary>
        <value>COM-порт. По умолчанию используется порт COM1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список имен допустимый порт можно получить с помощью <xref:System.IO.Ports.SerialPort.GetPortNames%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Свойству <see cref="P:System.IO.Ports.SerialPort.PortName" /> присвоено значение нулевой длины.  
  
 - или -  
  
 Свойству <see cref="P:System.IO.Ports.SerialPort.PortName" /> присвоено значение, начинающееся с "\\\\".  
  
 - или -  
  
 Недопустимое имя порта.</exception>
        <exception cref="T:System.ArgumentNullException">Для свойства <see cref="P:System.IO.Ports.SerialPort.PortName" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный порт открыт.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выполняет чтение из входного буфера <see cref="T:System.IO.Ports.SerialPort" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Массив байтов, в который записываются входные данные.</param>
        <param name="offset">Смещение в <c>buffer</c>, с которым следует записывать байты.</param>
        <param name="count">Максимальное число байтов, предназначенных для чтения. Считывается меньшее число байтов, если <c>count</c> больше числа байтов во входном буфере.</param>
        <summary>Считывает из входного буфера <see cref="T:System.IO.Ports.SerialPort" /> определенное число байтов и записывает их в байтовый массив, начиная с указанной позиции.</summary>
        <returns>Количество прочитанных байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При необходимости переключаться между чтением текста и чтением двоичных данных из потока, выберите протокол, определяющий границу между текст и двоичные данные, такие как вручную чтение байтов и декодирование данных внимательно.  
  
 Поскольку <xref:System.IO.Ports.SerialPort> класс буферов данных и поток включается в <xref:System.IO.Ports.SerialPort.BaseStream%2A> не поддерживает свойство, могут конфликтовать двумя о количество байтов, доступных для чтения.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Свойства можно указать, что байт для чтения, но эти байты могут оказаться недоступными в поток, содержащихся в <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство так, как они буферизировать для <xref:System.IO.Ports.SerialPort> класса.  
  
 <xref:System.IO.Ports.SerialPort.Read%2A> Метод не блокировать другие операции, когда число считанных байтов равно `count` , но по-прежнему непрочитанных байтов на имеются последовательного порта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Буфер для записи задан значением <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> или <paramref name="count" /> выходит за пределы указанного массива <paramref name="buffer" />. <paramref name="offset" /> или <paramref name="count" /> меньше нуля.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> плюс <paramref name="count" /> превышает длину массива <paramref name="buffer" />.</exception>
        <exception cref="T:System.TimeoutException">Отсутствуют байты, доступные для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Read(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (buffer As Char(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Read(cli::array &lt;char&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Массив символов, в который записываются входные данные.</param>
        <param name="offset">Смещение в <c>buffer</c>, с которым следует записывать знаки.</param>
        <param name="count">Максимальное число считываемых символов. Считывается меньшее число знаков, если <c>count</c> больше числа знаков во входном буфере.</param>
        <summary>Считывает из входного буфера <see cref="T:System.IO.Ports.SerialPort" /> определенное число символов и записывает их в символьный массив, начиная с указанной позиции.</summary>
        <returns>Число прочитанных знаков.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод для чтения символов из последовательного порта.  
  
 При необходимости переключаться между чтением текста и чтением двоичных данных из потока, выберите протокол, определяющий границу между текст и двоичные данные, такие как вручную чтение байтов и декодирование данных внимательно.  
  
 Поскольку <xref:System.IO.Ports.SerialPort> класс буферов данных и поток включается в <xref:System.IO.Ports.SerialPort.BaseStream%2A> не поддерживает свойство, могут конфликтовать двумя о количество символов, доступных для чтения.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Свойства можно указать, что есть символов для чтения, но эти символы могут быть недоступны в поток, содержащихся в <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство так, как они буферизировать для <xref:System.IO.Ports.SerialPort> класса.  
  
 <xref:System.IO.Ports.SerialPort.Read%2A> Метод не блокировать другие операции, когда число считанных байтов равно `count` , но по-прежнему непрочитанных байтов на имеются последовательного порта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> плюс <paramref name="count" /> превышает длину буфера.  
  
 \- или -  
  
 <paramref name="count" /> равно 1 и в буфере имеется символ-суррогат.</exception>
        <exception cref="T:System.ArgumentNullException">В качестве <paramref name="buffer" /> передано <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> или <paramref name="count" /> выходит за пределы указанного массива <paramref name="buffer" />. <paramref name="offset" /> или <paramref name="count" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
        <exception cref="T:System.TimeoutException">Отсутствуют символы, доступные для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBufferSize">
      <MemberSignature Language="C#" Value="public int ReadBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReadBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(4096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает размер входного буфера <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <value>Размер буфера в байтах. Значение по умолчанию равно 4096; максимальное значение является положительным int или 2147483647.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> Свойство игнорирует любое значение меньше, чем 4096.  
  
 Поскольку <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> свойство представляет только буфера Windows создан, он может возвращать меньше, чем значение <xref:System.IO.Ports.SerialPort.BytesToRead%2A> свойства, которое представляет оба <xref:System.IO.Ports.SerialPort> буфера и буфера, созданные в Windows.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Задаваемое значение <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> меньше или равно нулю.</exception>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> было установлено при открытом потоке.</exception>
        <exception cref="T:System.IO.IOException">Свойству <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> присвоено нечетное значение.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает из входного буфера <see cref="T:System.IO.Ports.SerialPort" /> один байт в синхронном режиме.</summary>
        <returns>Байт, приведенный к типу <see cref="T:System.Int32" />, или -1, если достигнут конец потока.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод считывает один байт.  
  
 Соблюдайте осторожность при использовании <xref:System.IO.Ports.SerialPort.ReadByte%2A> и <xref:System.IO.Ports.SerialPort.ReadChar%2A> друг с другом. Переключение между чтением байтов и чтением символов может привести к дополнительные данные для чтения или другим непредвиденным последствиям. При необходимости переключаться между чтением текста и чтением двоичных данных из потока, выберите протокол, определяющий границу между текст и двоичные данные, такие как вручную чтение байтов и декодирование данных внимательно.  
  
> [!NOTE]
>  Поскольку <xref:System.IO.Ports.SerialPort> класс буферов данных и поток включается в <xref:System.IO.Ports.SerialPort.BaseStream%2A> не поддерживает свойство, могут конфликтовать двумя о количество байтов, доступных для чтения.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Свойства можно указать, что байт для чтения, но эти байты могут оказаться недоступными в поток, содержащихся в <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство так, как они буферизировать для <xref:System.IO.Ports.SerialPort> класса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">Операция не была завершена до истечения срока ожидания.  
  
 \- или -  
  
 Не считано ни одного байта.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public int ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadChar" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadChar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает из входного буфера <see cref="T:System.IO.Ports.SerialPort" /> один символ в синхронном режиме.</summary>
        <returns>Прочитанный символ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод считывает полностью один символ в соответствии с кодировкой.  
  
 Соблюдайте осторожность при использовании <xref:System.IO.Ports.SerialPort.ReadByte%2A> и <xref:System.IO.Ports.SerialPort.ReadChar%2A> друг с другом. Переключение между чтением байтов и чтением символов может привести к дополнительные данные для чтения или другим непредвиденным последствиям. При необходимости переключаться между чтением текста и чтением двоичных данных из потока, выберите протокол, определяющий границу между текст и двоичные данные, такие как вручную чтение байтов и декодирование данных внимательно.  
  
> [!NOTE]
>  Поскольку <xref:System.IO.Ports.SerialPort> класс буферов данных и поток включается в <xref:System.IO.Ports.SerialPort.BaseStream%2A> не поддерживает свойство, могут конфликтовать двумя о количество байтов, доступных для чтения.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Свойства можно указать, что байт для чтения, но эти байты могут оказаться недоступными в поток, содержащихся в <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство так, как они буферизировать для <xref:System.IO.Ports.SerialPort> класса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">Операция не была завершена до истечения срока ожидания.  
  
 \- или -  
  
 В течение отведенного срока ожидания не было доступно ни одного символа.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadExisting">
      <MemberSignature Language="C#" Value="public string ReadExisting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadExisting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadExisting" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadExisting () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadExisting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает все непосредственно доступные байты в соответствии с кодировкой из потока и из входного буфера объекта <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Содержимое потока и входного буфера объекта <see cref="T:System.IO.Ports.SerialPort" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает содержимое потока и внутренний буфер <xref:System.IO.Ports.SerialPort> объект в виде строки. Этот метод не использует время ожидания. Обратите внимание, что этот метод можно оставить в конце старших байтов во внутреннем буфере, благодаря чему <xref:System.IO.Ports.SerialPort.BytesToRead%2A> значение больше нуля.  
  
 При необходимости переключаться между чтением текста и чтением двоичных данных из потока, выберите протокол, определяющий границу между текст и двоичные данные, такие как вручную чтение байтов и декодирование данных внимательно.  
  
> [!NOTE]
>  <xref:System.IO.Ports.SerialPort> Класс буферов данных, но содержится в объект потока в <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=nameWithType> не поддерживает свойство. Таким образом <xref:System.IO.Ports.SerialPort> объект и объект потока могут отличаться от числа байтов, доступных для чтения. Когда помещаются в буфер байтов для <xref:System.IO.Ports.SerialPort> объекта, <xref:System.IO.Ports.SerialPort.BytesToRead%2A> свойства включает эти байты значение; тем не менее, эти байты могут оказаться недоступными в поток, содержащихся в <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает данные из входного буфера до значения <see cref="P:System.IO.Ports.SerialPort.NewLine" />.</summary>
        <returns>Содержимое входного буфера до первого появления значения <see cref="P:System.IO.Ports.SerialPort.NewLine" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание, что, хотя этот метод не возвращает <xref:System.IO.Ports.SerialPort.NewLine%2A> значение <xref:System.IO.Ports.SerialPort.NewLine%2A> значение удаляется из входного буфера.  
  
 По умолчанию <xref:System.IO.Ports.SerialPort.ReadLine%2A> метод будет заблокирован до получения строки. Если такое поведение нежелательно, задайте <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> свойство любое ненулевое значение для принудительного <xref:System.IO.Ports.SerialPort.ReadLine%2A> метод выдает исключение <xref:System.TimeoutException> Если строки не доступен для порта.  
  
 При необходимости переключаться между чтением текста и чтением двоичных данных из потока, выберите протокол, определяющий границу между текст и двоичные данные, такие как вручную чтение байтов и декодирование данных внимательно.  
  
> [!NOTE]
>  Поскольку <xref:System.IO.Ports.SerialPort> класс буферов данных и поток включается в <xref:System.IO.Ports.SerialPort.BaseStream%2A> не поддерживает свойство, могут конфликтовать двумя о количество байтов, доступных для чтения.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Свойства можно указать, что байт для чтения, но эти байты могут оказаться недоступными в поток, содержащихся в <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство так, как они буферизировать для <xref:System.IO.Ports.SerialPort> класса.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
        <exception cref="T:System.TimeoutException">Операция не была завершена до истечения срока ожидания.  
  
 \- или -  
  
 Не считано ни одного байта.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает срок ожидания в миллисекундах для завершения операции чтения.</summary>
        <value>Срок ожидания в миллисекундах для завершения операции чтения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Срок ожидания чтения первоначально устанавливается равным 500 миллисекунд в Win32 Communications API. Это свойство позволяет задать это значение. Время ожидания можно присвоить любое значение больше нуля или равно <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, в этом случае отсутствие времени ожидания. Значение по умолчанию — <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.  
  
> [!NOTE]
>  Пользователи неуправляемого `COMMTIMEOUTS` структуры, предполагается, что значение времени ожидания равным нулю, чтобы отключить время ожидания. Отключение времени ожидания, <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> свойство, однако необходимо указать <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.  
  
 Это свойство не влияет на <xref:System.IO.Stream.BeginRead%2A> поток, возвращенный методом <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Срок ожидания чтения меньше нуля и отличен от <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTo">
      <MemberSignature Language="C#" Value="public string ReadTo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadTo(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTo (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadTo(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Значение, указывающее место прекращения операции чтения.</param>
        <summary>Считывает из входного буфера строку до указанного значения <paramref name="value" />.</summary>
        <returns>Содержимое входного буфера до указанного <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод считывает строку до указанного `value`. Хотя возвращаемая строка не включает `value`, `value` удаляется из входного буфера.  
  
 При необходимости переключаться между чтением текста и чтением двоичных данных из потока, выберите протокол, определяющий границу между текст и двоичные данные, такие как вручную чтение байтов и декодирование данных внимательно.  
  
> [!NOTE]
>  Поскольку <xref:System.IO.Ports.SerialPort> класс буферов данных и поток включается в <xref:System.IO.Ports.SerialPort.BaseStream%2A> не поддерживает свойство, могут конфликтовать двумя о количество байтов, доступных для чтения.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Свойства можно указать, что байт для чтения, но эти байты могут оказаться недоступными в поток, содержащихся в <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство так, как они буферизировать для <xref:System.IO.Ports.SerialPort> класса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Длина параметра <paramref name="value" /> равна 0.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
        <exception cref="T:System.TimeoutException">Операция не была завершена до истечения срока ожидания.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceivedBytesThreshold">
      <MemberSignature Language="C#" Value="public int ReceivedBytesThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceivedBytesThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceivedBytesThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceivedBytesThreshold { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число байтов во внутреннем входном буфере до возникновения события <see cref="E:System.IO.Ports.SerialPort.DataReceived" />.</summary>
        <value>Число байтов во внутреннем входном буфере до возникновения события <see cref="E:System.IO.Ports.SerialPort.DataReceived" />. Значение по умолчанию — 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.DataReceived> Событие также возникает, если <xref:System.IO.Ports.SerialData.Eof> символ получен, независимо от того, число байт во внутреннем входном буфере и значение <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> свойства.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <see cref="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" /> меньше или равно нулю.</exception>
      </Docs>
    </Member>
    <Member MemberName="RtsEnable">
      <MemberSignature Language="C#" Value="public bool RtsEnable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RtsEnable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.RtsEnable" />
      <MemberSignature Language="VB.NET" Value="Public Property RtsEnable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RtsEnable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, включен ли сигнал запроса передачи (RTS) в сеансе последовательной связи.</summary>
        <value>
          <see langword="true" /> для включения запроса передачи (RTS), в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сигнал передачи (RTS) запроса обычно используется в запросе to Send/Clear для отправки синхронизация оборудования (RTS/CTS).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.IO.Ports.SerialPort.RtsEnable" /> устанавливается или извлекается, в то время как свойству <see cref="P:System.IO.Ports.SerialPort.Handshake" /> присваивается значение <see cref="F:System.IO.Ports.Handshake.RequestToSend" /> или <see cref="F:System.IO.Ports.Handshake.RequestToSendXOnXOff" />.</exception>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
      </Docs>
    </Member>
    <Member MemberName="StopBits">
      <MemberSignature Language="C#" Value="public System.IO.Ports.StopBits StopBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.StopBits StopBits" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.StopBits" />
      <MemberSignature Language="VB.NET" Value="Public Property StopBits As StopBits" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::StopBits StopBits { System::IO::Ports::StopBits get(); void set(System::IO::Ports::StopBits value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.StopBits</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает стандартное число стоповых битов в байте.</summary>
        <value>Одно из значений перечисления <see cref="T:System.IO.Ports.StopBits" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию для объекта <xref:System.IO.Ports.SerialPort.StopBits%2A> установлено значение <xref:System.IO.Ports.StopBits.One>.  
  
 <xref:System.IO.Ports.StopBits.None?displayProperty=nameWithType> Значение не поддерживается.  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.IO.Ports.SerialPort.StopBits%2A> свойства `One`.  
  
 [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]
 [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]
 [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  
  
 В следующем примере показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера, приведенного для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <see cref="P:System.IO.Ports.SerialPort.StopBits" /> равно <see cref="F:System.IO.Ports.StopBits.None" />.</exception>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает данные в выходной буфер последовательного порта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string text) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (text As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void Write (string str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string str) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (str As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="str">To be added.</param>
        <summary>Записывает указанную строку в последовательный порт.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод для записи строки в качестве выходных данных для последовательного порта.  
  
 Если существует слишком много байт в выходной буфер и <xref:System.IO.Ports.SerialPort.Handshake%2A> имеет значение <xref:System.IO.Ports.Handshake.XOnXOff> то <xref:System.IO.Ports.SerialPort> объекта может вызвать <xref:System.ServiceProcess.TimeoutException> при ожидании устройства будет готов к приему больше данных.  
  
 По умолчанию <xref:System.IO.Ports.SerialPort> использует <xref:System.Text.ASCIIEncoding> для кодирования символов. <xref:System.Text.ASCIIEncoding> Преобразует все символы больше 127 (char) 63 или "?". Для поддержки дополнительных символов в этом диапазоне, значение <xref:System.IO.Ports.SerialPort.Encoding%2A> для <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, или <xref:System.Text.UnicodeEncoding>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="text" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">Операция не была завершена до истечения срока ожидания.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Массив байтов, данные из которого записываются в порт.</param>
        <param name="offset">Отсчитываемое от нуля смещение в массиве <c>buffer</c> (в байтах), с которого начинается копирование байтов в порт.</param>
        <param name="count">Количество записываемых байтов.</param>
        <summary>Записывает указанное число байтов в последовательный порт, используя данные из буфера.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод следует используйте, когда требуется выполнить запись в буфер байтов для создания выходного файла для последовательного порта.  
  
 Если существует слишком много байт в выходной буфер и <xref:System.IO.Ports.SerialPort.Handshake%2A> имеет значение <xref:System.IO.Ports.Handshake.XOnXOff> то <xref:System.IO.Ports.SerialPort> объекта может вызвать <xref:System.ServiceProcess.TimeoutException> при ожидании устройства будет готов к приему больше данных.  
  
 По умолчанию <xref:System.IO.Ports.SerialPort> использует <xref:System.Text.ASCIIEncoding> для кодирования символов. <xref:System.Text.ASCIIEncoding> Преобразует все символы больше 127 (char) 63 или "?". Для поддержки дополнительных символов в этом диапазоне, значение <xref:System.IO.Ports.SerialPort.Encoding%2A> для <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, или <xref:System.Text.UnicodeEncoding>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">В качестве <paramref name="buffer" /> передано <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> или <paramref name="count" /> выходит за пределы указанного массива <paramref name="buffer" />. <paramref name="offset" /> или <paramref name="count" /> меньше нуля.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> плюс <paramref name="count" /> превышает длину массива <paramref name="buffer" />.</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">Операция не была завершена до истечения срока ожидания.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Char(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;char&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Массив символов, данные из которого записываются в порт.</param>
        <param name="offset">Отсчитываемое от нуля смещение в массиве <c>buffer</c> (в байтах), с которого начинается копирование байтов в порт.</param>
        <param name="count">Количество символов для записи.</param>
        <summary>Записывает указанное число символов в последовательный порт, используя данные из буфера.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод, если вы хотите выполнять запись в буфер символов для вывода в последовательный порт.  
  
 Если существует слишком много байт в выходной буфер и <xref:System.IO.Ports.SerialPort.Handshake%2A> имеет значение <xref:System.IO.Ports.Handshake.XOnXOff> то <xref:System.IO.Ports.SerialPort> объекта может вызвать <xref:System.ServiceProcess.TimeoutException> при ожидании устройства будет готов к приему больше данных.  
  
 По умолчанию <xref:System.IO.Ports.SerialPort> использует <xref:System.Text.ASCIIEncoding> для кодирования символов. <xref:System.Text.ASCIIEncoding> Преобразует все символы больше 127 (char) 63 или "?". Для поддержки дополнительных символов в этом диапазоне, значение <xref:System.IO.Ports.SerialPort.Encoding%2A> для <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, или <xref:System.Text.UnicodeEncoding>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">В качестве <paramref name="buffer" /> передано <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> или <paramref name="count" /> выходит за пределы указанного массива <paramref name="buffer" />. <paramref name="offset" /> или <paramref name="count" /> меньше нуля.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> плюс <paramref name="count" /> превышает длину массива <paramref name="buffer" />.</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">Операция не была завершена до истечения срока ожидания.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBufferSize">
      <MemberSignature Language="C#" Value="public int WriteBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.WriteBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WriteBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает размер выходного буфера последовательного порта.</summary>
        <value>Размер выходного буфера. Значение по умолчанию — 2048.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.WriteBufferSize%2A> Свойство игнорирует любое значение меньше 2048.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> меньше или равно нулю.</exception>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> было установлено при открытом потоке.</exception>
        <exception cref="T:System.IO.IOException">Свойству <see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> присвоено нечетное значение.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public void WriteLine (string text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLine(string text) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (text As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLine(System::String ^ text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void WriteLine (string str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLine(string str) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.WriteLine(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (str As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLine(System::String ^ str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="str">To be added.</param>
        <summary>Записывает указанную строку и значение <see cref="P:System.IO.Ports.SerialPort.NewLine" /> в выходной буфер.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если существует слишком много байт во входном буфере и <xref:System.IO.Ports.SerialPort.Handshake%2A> задано значение <xref:System.IO.Ports.Handshake.XOnXOff> то <xref:System.IO.Ports.SerialPort> объекта может вызвать <xref:System.ServiceProcess.TimeoutException> время ожидания для данного устройства будет готов к приему больше данных.  
  
 Записать выходные данные содержат <xref:System.IO.Ports.SerialPort.NewLine%2A> строки.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="text" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный порт не открыт.</exception>
        <exception cref="T:System.TimeoutException">Метод <see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> не выполнил запись в поток.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает срок ожидания в миллисекундах для завершения операции записи.</summary>
        <value>Количество миллисекунд до истечения времени ожидания. Значение по умолчанию: <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение времени ожидания записи первоначально устанавливается равным 500 миллисекунд в Win32 Communications API. Это свойство позволяет задать это значение. Время ожидания можно присвоить любое значение больше нуля или равно <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, в этом случае отсутствие времени ожидания. Значение по умолчанию — <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.  
  
> [!NOTE]
>  Пользователи неуправляемого `COMMTIMEOUTS` структуры, предполагается, что значение времени ожидания равным нулю, чтобы отключить время ожидания. Отключение времени ожидания, <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> свойство, однако необходимо указать <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.  
  
 Это свойство не влияет на <xref:System.IO.Stream.BeginWrite%2A> поток, возвращенный методом <xref:System.IO.Ports.SerialPort.BaseStream%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.IO.Ports.SerialPort> класс, позволяющий двум пользователям общаться из двух отдельных компьютеров, соединенных нуль-модемом. В этом примере пользователям предлагается ввести параметры порта и имени пользователя до разговора. Данный пример кода является частью большего примера кода, используемого для <xref:System.IO.Ports.SerialPort> класса.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Порт находится в недействительном состоянии.  
  
 \- или -  
  
 Попытка задать состояние базового порта завершилась неудачей. Например, вследствие недопустимости переданных этим объектом <see cref="T:System.IO.Ports.SerialPort" /> параметров.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> меньше нуля и отлично от <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>