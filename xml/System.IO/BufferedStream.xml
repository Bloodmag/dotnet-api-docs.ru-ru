<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BufferedStream.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50565905affcad56d23c9b51bc2aa664f02fdc654.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0565905affcad56d23c9b51bc2aa664f02fdc654</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.BufferedStream">
          <source>Adds a buffering layer to read and write operations on another stream.</source>
          <target state="translated">Добавляет уровень буферизации в операциях чтения и записи в другие потоки.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.BufferedStream">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>A buffer is a block of bytes in memory used to cache data, thereby reducing the number of calls to the operating system.</source>
          <target state="translated">Буфер является блок байтов в памяти для кэширования данных, тем самым снижая количество вызовов в операционную систему.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>Buffers improve read and write performance.</source>
          <target state="translated">Буферы улучшить чтения и записи.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>A buffer can be used for either reading or writing, but never both simultaneously.</source>
          <target state="translated">Буфер можно использовать для одного чтения или записи, но не обоих одновременно.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.BufferedStream.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.BufferedStream.Write%2A&gt;</ph> methods of <ph id="ph3">`BufferedStream`</ph> automatically maintain the buffer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BufferedStream.Read%2A&gt;</ph> И <ph id="ph2">&lt;xref:System.IO.BufferedStream.Write%2A&gt;</ph> методы <ph id="ph3">`BufferedStream`</ph> автоматически поддерживают буфер.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Этот тип реализует <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">После завершения с помощью типа следует освободить его прямо или косвенно.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Для удаления типа непосредственно вызвать его <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> метод в <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> блока.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Чтобы удалить ее косвенно, использовать языковой конструкции, такие как <ph id="ph1">`using`</ph> (в C#) или <ph id="ph2">`Using`</ph> (в Visual Basic).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Дополнительные сведения см. в разделе «С помощью объекта, реализует интерфейс IDisposable» в <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> разделе интерфейса.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source><ph id="ph1">`BufferedStream`</ph> can be composed around certain types of streams.</source>
          <target state="translated"><ph id="ph1">`BufferedStream`</ph> можно сочетать определенных типов потоков.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>It provides implementations for reading and writing bytes to an underlying data source or repository.</source>
          <target state="translated">Он предоставляет реализации для чтения и записи байтов в базовый источник данных или репозиторий.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>Use <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.BinaryWriter&gt;</ph> for reading and writing other data types.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> и <ph id="ph2">&lt;xref:System.IO.BinaryWriter&gt;</ph> для чтения и записи данных других типов.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source><ph id="ph1">`BufferedStream`</ph> is designed to prevent the buffer from slowing down input and output when the buffer is not needed.</source>
          <target state="translated"><ph id="ph1">`BufferedStream`</ph> предназначен для предотвращения буфера замедлении ввода и вывода, если буфер не требуется.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>If you always read and write for sizes greater than the internal buffer size, then <ph id="ph1">`BufferedStream`</ph> might not even allocate the internal buffer.</source>
          <target state="translated">Если всегда чтения и записи блоков, размер которых превышает размер внутреннего буфера, затем <ph id="ph1">`BufferedStream`</ph> может даже не выделять место внутреннего буфера.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source><ph id="ph1">`BufferedStream`</ph> also buffers reads and writes in a shared buffer.</source>
          <target state="translated"><ph id="ph1">`BufferedStream`</ph> также буферизует ввод и вывод в общий буфер.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>It is assumed that you will almost always be doing a series of reads or writes, but rarely alternate between the two of them.</source>
          <target state="translated">Предполагается, что будет осуществление ряд операций чтения или записи, но редко переключением между этими двумя из них.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>The following code examples show how to use the <ph id="ph1">`BufferedStream`</ph> class over the <ph id="ph2">`NetworkStream`</ph> class to increase the performance of certain I/O operations.</source>
          <target state="translated">В следующем примере кода показано, как использовать <ph id="ph1">`BufferedStream`</ph> класса через <ph id="ph2">`NetworkStream`</ph> класса, чтобы повысить производительность отдельных операций ввода-вывода.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>Start the server on a remote computer before starting the client.</source>
          <target state="translated">Запустите сервер на удаленном компьютере перед запуском клиента.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>Specify the remote computer name as a command-line argument when starting the client.</source>
          <target state="translated">Укажите имя удаленного компьютера в качестве аргумента командной строки при запуске клиента.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>Vary the <ph id="ph1">`dataArraySize`</ph> and <ph id="ph2">`streamBufferSize`</ph> constants to view their effect on performance.</source>
          <target state="translated">Изменять <ph id="ph1">`dataArraySize`</ph> и <ph id="ph2">`streamBufferSize`</ph> константы, чтобы просмотреть их влияние на производительность.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source>The first example shows the code that runs on the client, and the second example shows the code that runs on the server.</source>
          <target state="translated">В первом примере кода, который выполняется на клиенте, а во втором примере показан код, который выполняется на сервере.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source><bpt id="p1">**</bpt>Example 1: Code that runs on the client<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Пример 1: Код, который выполняется на стороне клиента<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.BufferedStream">
          <source><bpt id="p1">**</bpt>Example 2: Code that runs on the server<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Пример 2: Код, который выполняется на сервере<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.IO.BufferedStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BufferedStream" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.IO.BufferedStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream)">
          <source>The current stream.</source>
          <target state="translated">Текущий поток.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BufferedStream" /&gt;</ph> class with a default buffer size of 4096 bytes.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.IO.BufferedStream" /&gt;</ph> со стандартным размером буфера 4096 байт.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream)">
          <source>A shared read/write buffer is allocated the first time a <ph id="ph1">`BufferedStream`</ph> object is initialized with this constructor.</source>
          <target state="translated">Общий, чтение и запись буфера выделяется первый раз <ph id="ph1">`BufferedStream`</ph> объект инициализируется с помощью этого конструктора.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream)">
          <source>The shared buffer is not used if all reads and writes are greater than or equal to <ph id="ph1">`bufferSize`</ph>.</source>
          <target state="translated">Общий буфер не используется, если все операции чтения и записи, больше или равно <ph id="ph1">`bufferSize`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
          <source>The current stream.</source>
          <target state="translated">Текущий поток.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
          <source>The buffer size in bytes.</source>
          <target state="translated">Размер буфера в байтах.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.BufferedStream" /&gt;</ph> class with the specified buffer size.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.IO.BufferedStream" /&gt;</ph> с заданным размером буфера.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
          <source>A shared read/write buffer is allocated the first time a <ph id="ph1">`BufferedStream`</ph> object is initialized with this constructor.</source>
          <target state="translated">Общий, чтение и запись буфера выделяется первый раз <ph id="ph1">`BufferedStream`</ph> объект инициализируется с помощью этого конструктора.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
          <source>The shared buffer is not used if all reads and writes are greater than or equal to <ph id="ph1">`bufferSize`</ph>.</source>
          <target state="translated">Общий буфер не используется, если все операции чтения и записи, больше или равно <ph id="ph1">`bufferSize`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to read the data into.</source>
          <target state="translated">Буфер, в который необходимо считать данные.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing data read from the stream.</source>
          <target state="translated">Смещение байтов в <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, с которого начинается запись данных, считанных из потока.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Максимальное число байтов, предназначенных для чтения.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An optional asynchronous callback, to be called when the read is complete.</source>
          <target state="translated">Дополнительный асинхронный обратный вызов по завершении чтения.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests.</source>
          <target state="translated">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронное чтение от других запросов.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">Начинает операцию асинхронного чтения.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>(Consider using <ph id="ph1">&lt;see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph> instead.)</source>
          <target state="translated">(Рекомендуется использовать <ph id="ph1">&lt;see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An object that represents the asynchronous read, which could still be pending.</source>
          <target state="translated">Объект, представляющий асинхронную операцию чтения, которая может все еще быть отложена.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as <ph id="ph1">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph> to implement asynchronous file operations.</source>
          <target state="translated">В .NET Framework 4 и более ранних версий, необходимо использовать методы, такие как <ph id="ph1">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph> для реализации асинхронных операций.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, the new async methods, such as <ph id="ph2">&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;</ph>, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Эти методы по-прежнему доступны в <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <ph id="ph2">&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;</ph>, и <ph id="ph4">&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;</ph>, вы легко реализовать асинхронные операции с файлами справки.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;</ph> must be called exactly once for every call to <ph id="ph2">&lt;xref:System.IO.BufferedStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;</ph> должен вызываться ровно по одному разу для каждого вызова <ph id="ph2">&lt;xref:System.IO.BufferedStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</source>
          <target state="translated">Невозможность закончить процесс чтения до начала другой операции чтения может привести к нежелательным поведению, например взаимоблокировки.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.BufferedStream.CanRead%2A&gt;</ph> property to determine whether the current instance supports reading.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.IO.BufferedStream.CanRead%2A&gt;</ph> свойство, чтобы определить, поддерживает ли текущий экземпляр чтение.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndRead%2A&gt;</ph> must be called with this <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to find out how many bytes were read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndRead%2A&gt;</ph> должен вызываться с этим <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> чтобы узнать, сколько байтов прочитано.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Attempted an asynchronous read past the end of the stream.</source>
          <target state="translated">Предпринята попытка асинхронного чтения за пределами потока.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Длина буфера минус <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> меньше <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current stream does not support the read operation.</source>
          <target state="translated">Текущий поток не поддерживает операцию чтения.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer containing data to write to the current stream.</source>
          <target state="translated">Буфер, содержащий данные для записи в текущий поток.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          <target state="translated">Отсчитываемое от нуля смещение байтов в буфере <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, с которого начинается копирование байтов в текущий поток.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Максимальное число байтов для записи.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method to be called when the asynchronous write operation is completed.</source>
          <target state="translated">Метод, вызываемый после завершения операции асинхронной записи.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронную запись от других запросов.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">Начинает операцию асинхронной записи.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>(Consider using <ph id="ph1">&lt;see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph> instead.)</source>
          <target state="translated">(Рекомендуется использовать <ph id="ph1">&lt;see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An object that references the asynchronous write which could still be pending.</source>
          <target state="translated">Объект, который ссылается на асинхронную операцию записи, которая может все еще быть отложена.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as <ph id="ph1">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Stream.EndWrite%2A&gt;</ph> to implement asynchronous file operations.</source>
          <target state="translated">В .NET Framework 4 и более ранних версий, необходимо использовать методы, такие как <ph id="ph1">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.IO.Stream.EndWrite%2A&gt;</ph> для реализации асинхронных операций.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, the new async methods, such as <ph id="ph2">&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;</ph>, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Эти методы по-прежнему доступны в <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <ph id="ph2">&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;</ph>, и <ph id="ph4">&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;</ph>, вы легко реализовать асинхронные операции с файлами справки.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;</ph> must be called exactly once on every <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> from <ph id="ph3">&lt;xref:System.IO.BufferedStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;</ph> должен вызываться ровно по одному разу для каждого <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> из <ph id="ph3">&lt;xref:System.IO.BufferedStream.BeginWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;</ph> will block until the I/O operation has completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;</ph> будет заблокирован до завершения операции ввода-вывода.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> length minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Длина <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> минус <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> меньше <ph id="ph3">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The stream does not support writing.</source>
          <target state="translated">Поток не поддерживает запись.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.CanRead">
          <source>Gets a value indicating whether the current stream supports reading.</source>
          <target state="translated">Возвращает значение, определяющее в текущем потоке наличие поддержки операций чтения.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream supports reading; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the stream is closed or was opened with write-only access.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если в потоке поддерживаются операции чтения; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>, если поток закрыт или открыт только для записи.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanRead">
          <source>If a class derived from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> does not support reading, calls to the <ph id="ph2">&lt;xref:System.IO.BufferedStream.Read%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.ReadByte%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph>, and the <ph id="ph6">`Peek`</ph> methods of <ph id="ph7">&lt;xref:System.IO.StreamReader&gt;</ph>, <ph id="ph8">&lt;xref:System.IO.StringReader&gt;</ph>, and <ph id="ph9">&lt;xref:System.IO.TextReader&gt;</ph> throw a <ph id="ph10">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Если класс, производный от <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> не поддерживает чтение, при вызове <ph id="ph2">&lt;xref:System.IO.BufferedStream.Read%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.ReadByte%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph>и <ph id="ph6">`Peek`</ph> методы <ph id="ph7">&lt;xref:System.IO.StreamReader&gt;</ph>, <ph id="ph8">&lt;xref:System.IO.StringReader&gt;</ph>, и <ph id="ph9">&lt;xref:System.IO.TextReader&gt;</ph> throw<ph id="ph10">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanRead">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если поток закрыт, это свойство возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanRead">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.CanSeek">
          <source>Gets a value indicating whether the current stream supports seeking.</source>
          <target state="translated">Возвращает значение, определяющее в текущем потоке наличие поддержки операций поиска.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanSeek">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream supports seeking; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the stream is closed or if the stream was constructed from an operating system handle such as a pipe or output to the console.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> если поток поддерживает поиск; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>, если поток закрыт или создан на базе дескриптора операционной системы, соответствующего каналу или выводу на консоль.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanSeek">
          <source>If a class derived from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> does not support seeking, calls to <ph id="ph2">&lt;xref:System.IO.BufferedStream.Length%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.SetLength%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.BufferedStream.Position%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.IO.BufferedStream.Seek%2A&gt;</ph> throw a <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Если класс, производный от <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> не поддерживает поиск, при вызове <ph id="ph2">&lt;xref:System.IO.BufferedStream.Length%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.SetLength%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.BufferedStream.Position%2A&gt;</ph>, и <ph id="ph5">&lt;xref:System.IO.BufferedStream.Seek%2A&gt;</ph> throw <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanSeek">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если поток закрыт, это свойство возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanSeek">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.CanWrite">
          <source>Gets a value indicating whether the current stream supports writing.</source>
          <target state="translated">Возвращает значение, определяющее в текущем потоке наличие поддержки операций записи.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream supports writing; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the stream is closed or was opened with read-only access.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если поток поддерживает операции записи; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>, если поток закрыт или открыт только для чтения.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanWrite">
          <source>If a class derived from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> does not support writing, a call to <ph id="ph2">&lt;xref:System.IO.BufferedStream.SetLength%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.Write%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.BufferedStream.WriteByte%2A&gt;</ph> throws a <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Если класс, производный от <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> не поддерживает запись, при вызове <ph id="ph2">&lt;xref:System.IO.BufferedStream.SetLength%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.Write%2A&gt;</ph>, или <ph id="ph4">&lt;xref:System.IO.BufferedStream.WriteByte%2A&gt;</ph> вызывает <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanWrite">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Если поток закрыт, это свойство возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.CanWrite">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
          <source>The reference to the pending asynchronous request to wait for.</source>
          <target state="translated">Ссылка на ожидаемый отложенный асинхронный запрос.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
          <source>Waits for the pending asynchronous read operation to complete.</source>
          <target state="translated">Ожидает завершения отложенной асинхронной операции чтения.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
          <source>(Consider using <ph id="ph1">&lt;see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph> instead.)</source>
          <target state="translated">(Рекомендуется использовать <ph id="ph1">&lt;see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
          <source>The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</source>
          <target state="translated">Количество байтов, считанных из потока, от нуля (0) до количества запрошенных байтов.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
          <source>Streams only return 0 only at the end of the stream, otherwise, they should block until at least 1 byte is available.</source>
          <target state="translated">Потоки возвращают только 0 только в конце потока, в противном случае они должны блокироваться, пока не будет доступен по крайней мере 1 байт.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as <ph id="ph1">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph> to implement asynchronous file operations.</source>
          <target state="translated">В .NET Framework 4 и более ранних версий, необходимо использовать методы, такие как <ph id="ph1">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph> для реализации асинхронных операций.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, the new async methods, such as <ph id="ph2">&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;</ph>, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Эти методы по-прежнему доступны в <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <ph id="ph2">&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;</ph>, и <ph id="ph4">&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;</ph>, вы легко реализовать асинхронные операции с файлами справки.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndRead%2A&gt;</ph> must be called with this <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to find out how many bytes were read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndRead%2A&gt;</ph> должен вызываться с этим <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> чтобы узнать, сколько байтов прочитано.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
          <source>This <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object was not created by calling <ph id="ph2">&lt;see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> on this class.</source>
          <target state="translated">Этот объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> не был создан путем вызова <ph id="ph2">&lt;see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> для данного класса.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
          <source>The pending asynchronous request.</source>
          <target state="translated">Отложенный асинхронный запрос.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
          <source>Ends an asynchronous write operation and blocks until the I/O operation is complete.</source>
          <target state="translated">Завершает асинхронную операцию записи и блокирует до тех пор, пока не будет завершена операция ввода-вывода.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
          <source>(Consider using <ph id="ph1">&lt;see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph> instead.)</source>
          <target state="translated">(Рекомендуется использовать <ph id="ph1">&lt;see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as <ph id="ph1">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Stream.EndWrite%2A&gt;</ph> to implement asynchronous file operations.</source>
          <target state="translated">В .NET Framework 4 и более ранних версий, необходимо использовать методы, такие как <ph id="ph1">&lt;xref:System.IO.Stream.BeginWrite%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.IO.Stream.EndWrite%2A&gt;</ph> для реализации асинхронных операций.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, the new async methods, such as <ph id="ph2">&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;</ph>, help you implement asynchronous file operations more easily.</source>
          <target state="translated">Эти методы по-прежнему доступны в <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <ph id="ph2">&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;</ph>, и <ph id="ph4">&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;</ph>, вы легко реализовать асинхронные операции с файлами справки.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;</ph> must be called exactly once for every call to <ph id="ph2">&lt;xref:System.IO.BufferedStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;</ph> должен вызываться ровно по одному разу для каждого вызова <ph id="ph2">&lt;xref:System.IO.BufferedStream.BeginRead%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
          <source>Failing to end a read process before beginning another read operation can cause deadlock or other undesirable behavior.</source>
          <target state="translated">Невозможность закончить процесс чтения до начала другой операции чтения может привести к взаимоблокировке или другим нежелательным последствиям.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
          <source>This <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object was not created by calling <ph id="ph2">&lt;see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> on this class.</source>
          <target state="translated">Этот объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> не был создан путем вызова <ph id="ph2">&lt;see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> для данного класса.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Flush">
          <source>Clears all buffers for this stream and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Очищает все буферы для этого потока и приводит к записи всех буферизованных данных в базовое устройство.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Flush`</ph> or <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>.</source>
          <target state="translated">Сброс потока его основной кодировщик не очищается, пока не будет явно вызван метод <ph id="ph1">`Flush`</ph> или <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Flush">
          <source>If you use the <ph id="ph1">&lt;xref:System.IO.BufferedStream.%23ctor%2A&gt;</ph> constructor, thus specifying the buffer size while creating the <ph id="ph2">`BufferedStream`</ph> object, the content is flushed when it reaches the buffer size.</source>
          <target state="translated">Если вы используете <ph id="ph1">&lt;xref:System.IO.BufferedStream.%23ctor%2A&gt;</ph> конструктор, в котором размер буфера при создании <ph id="ph2">`BufferedStream`</ph> объекта содержимое очищается при достижении размера буфера.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Flush">
          <source>For example, code such as <ph id="ph1">`BufferedStream bs = new BufferedStream(bs, 5)`</ph> will flush the content when the buffer size reaches 5 bytes.</source>
          <target state="translated">Например, такие как код <ph id="ph1">`BufferedStream bs = new BufferedStream(bs, 5)`</ph> содержимое будут удалены, когда размер буфера достигнет 5 байт.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Flush">
          <source>All the read and write methods of <ph id="ph1">`BufferedStream`</ph> automatically maintain the buffer, so there is no need to invoke <ph id="ph2">`Flush`</ph> when switching back and forth between reading and writing.</source>
          <target state="translated">Все методы чтения и записи из <ph id="ph1">`BufferedStream`</ph> автоматически поддерживают буфер, поэтому нет необходимости вызывать <ph id="ph2">`Flush`</ph> при переключении между чтением и записью.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Flush">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Flush">
          <source>The stream has been disposed.</source>
          <target state="translated">Поток был удален.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Flush">
          <source>The data source or repository is not open.</source>
          <target state="translated">Источник данных или репозиторий закрыты.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Токен для отслеживания запросов отмены.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)">
          <source>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</source>
          <target state="translated">Асинхронно очищает все буферы данного потока, вызывает запись буферизованных данных в базовое устройство и отслеживает запросы отмены.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию очистки.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">Поток был удален.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.Length">
          <source>Gets the stream length in bytes.</source>
          <target state="translated">Возвращает длину потока в байтах.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.Length">
          <source>The stream length in bytes.</source>
          <target state="translated">Длина потока в байтах.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.Length">
          <source>The underlying stream is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or closed.</source>
          <target state="translated">Базовый поток закрыт или его значение равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.Length">
          <source>The stream does not support seeking.</source>
          <target state="translated">Поток не поддерживает поиск.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.Length">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.Position">
          <source>Gets the position within the current stream.</source>
          <target state="translated">Возвращает позицию в текущем потоке.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.Position">
          <source>The position within the current stream.</source>
          <target state="translated">Позиция в текущем потоке.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.Position">
          <source>The <ph id="ph1">`get`</ph> accessor invokes <ph id="ph2">&lt;xref:System.IO.BufferedStream.Seek%2A&gt;</ph> to obtain the current position within the underlying stream and then adjusts this value according to the current position within the buffer.</source>
          <target state="translated"><ph id="ph1">`get`</ph> Вызывает метод доступа <ph id="ph2">&lt;xref:System.IO.BufferedStream.Seek%2A&gt;</ph> получить текущую позицию в базовом потоке и затем изменяет это значение в соответствии с текущей позиции в буфере.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.Position">
          <source>The <ph id="ph1">`set`</ph> accessor copies any data previously written to the buffer to the underlying stream, and then invokes <ph id="ph2">&lt;xref:System.IO.BufferedStream.Seek%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`set`</ph> Доступа копирует все данные, записанные ранее в буфер в основной поток, а затем вызывает <ph id="ph2">&lt;xref:System.IO.BufferedStream.Seek%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.BufferedStream.Position">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">Поддерживается поиск в любом месте за пределами длины потока.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.Position">
          <source>The value passed to <ph id="ph1">&lt;see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" /&gt;</ph> is negative.</source>
          <target state="translated">Значение, переданное в <ph id="ph1">&lt;see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" /&gt;</ph>, представляет собой отрицательное число.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.Position">
          <source>An I/O error occurs, such as the stream being closed.</source>
          <target state="translated">Ошибка ввода-вывода, например указывающая, что поток закрыт.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.Position">
          <source>The stream does not support seeking.</source>
          <target state="translated">Поток не поддерживает поиск.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.IO.BufferedStream.Position">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer to which bytes are to be copied.</source>
          <target state="translated">Буфер, в который необходимо скопировать байты.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in the buffer at which to begin reading bytes.</source>
          <target state="translated">Смещение в буфере (в байтах), с которого начинается чтение байтов.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to be read.</source>
          <target state="translated">Количество байтов, чтение которых необходимо выполнить.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Copies bytes from the current buffered stream to an array.</source>
          <target state="translated">Копирует байты из текущего буферизованного потока в массив.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into <ph id="ph1">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Общее число байтов, считанных в <ph id="ph1">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or 0 if the end of the stream has been reached before any data can be read.</source>
          <target state="translated">Это число может быть меньше, чем количество запрошенных байтов, если столько байтов в настоящее время недоступно, или равняться нулю, если конец файла был достигнут раньше, чем были считаны данные.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Read`</ph> method will return 0 only if the end of the stream is reached.</source>
          <target state="translated"><ph id="ph1">`Read`</ph> Метод возвращает 0 только в том случае, если достигнут конец потока.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>In all other cases, <ph id="ph1">`Read`</ph> always reads at least one byte from the stream before returning.</source>
          <target state="translated">Во всех остальных случаях <ph id="ph1">`Read`</ph> всегда считывает хотя бы один байт из потока перед возвратом.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>By definition, if no data is available from the stream upon a call to <ph id="ph1">`Read`</ph>, the <ph id="ph2">`Read`</ph> method returns 0 (the end of the stream is reached automatically).</source>
          <target state="translated">По определению, если данные недоступны в потоке при вызове <ph id="ph1">`Read`</ph>, <ph id="ph2">`Read`</ph> метод возвращает значение 0 (автоматически достигается конец потока).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">Реализация может вернуть меньше байтов, чем было запрошено, даже если не достигнут конец потока.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Use <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> for reading primitive data types.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> для чтения простых типов данных.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Length of <ph id="ph1">&lt;paramref name="array" /&gt;</ph> minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Длина <ph id="ph1">&lt;paramref name="array" /&gt;</ph> минус <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> меньше <ph id="ph3">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="array" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The stream is not open or is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Поток не открыт или его значение равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The stream does not support reading.</source>
          <target state="translated">Поток не поддерживает чтение.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The buffer to write the data into.</source>
          <target state="translated">Буфер, в который записываются данные.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing data from the stream.</source>
          <target state="translated">Смещение байтов в <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, с которого начинается запись данных, считанных из потока.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Максимальное число байтов, предназначенных для чтения.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Токен для отслеживания запросов отмены.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</source>
          <target state="translated">Асинхронно считывает последовательность байтов из текущего потока, перемещает позицию в потоке на число считанных байтов и отслеживает запросы отмены.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию чтения.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> содержит общее число байтов, считанных в буфер.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">Значение результата может быть меньше запрошенного числа байтов, если число доступных в данный момент байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец потока.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>You can create a cancellation token by creating an instance of the <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> class and passing the <ph id="ph2">&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;</ph> property as the <ph id="ph3">`cancellationToken`</ph> parameter.</source>
          <target state="translated">Токен отмены, который можно создать путем создания экземпляра <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> класса и передавая <ph id="ph2">&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;</ph> свойство как <ph id="ph3">`cancellationToken`</ph> параметр.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated">Сумма <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> и <ph id="ph2">&lt;paramref name="count" /&gt;</ph> больше, чем длина буфера.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream does not support reading.</source>
          <target state="translated">Поток не поддерживает чтение.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">Поток был удален.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream is currently in use by a previous read operation.</source>
          <target state="translated">Поток в настоящее время используется предыдущей операцией чтения.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadByte">
          <source>Reads a byte from the underlying stream and returns the byte cast to an <ph id="ph1">&lt;see langword="int" /&gt;</ph>, or returns -1 if reading from the end of the stream.</source>
          <target state="translated">Считывает байт из базового потока и возвращает байт, приведенный к <ph id="ph1">&lt;see langword="int" /&gt;</ph>, или значение -1 при попытке чтения из конца потока.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadByte">
          <source>The byte cast to an <ph id="ph1">&lt;see langword="int" /&gt;</ph>, or -1 if reading from the end of the stream.</source>
          <target state="translated">Байт, приведенный к <ph id="ph1">&lt;see langword="int" /&gt;</ph>, или значение -1 при попытке чтения из конца потока.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadByte">
          <source>An I/O error occurs, such as the stream being closed.</source>
          <target state="translated">Ошибка ввода-вывода, например указывающая, что поток закрыт.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadByte">
          <source>The stream does not support reading.</source>
          <target state="translated">Поток не поддерживает чтение.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.ReadByte">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.ReadByte">
          <source>The default implementation on <ph id="ph1">&lt;see langword="Stream" /&gt;</ph> creates a new single-byte array and then calls <ph id="ph2">&lt;see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>.</source>
          <target state="translated">Реализация по умолчанию в <ph id="ph1">&lt;see langword="Stream" /&gt;</ph> создает новый однобайтовый массив и вызывает <ph id="ph2">&lt;see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.ReadByte">
          <source>While this is formally correct, it is inefficient.</source>
          <target state="translated">Это формально верно, но неэффективно.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.ReadByte">
          <source>Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</source>
          <target state="translated">Любой поток с внутренним буфером следует переопределить этот метод и предоставить гораздо более эффективную версию, которая непосредственного чтения буфера, как избежать дополнительное размещение массива при каждом вызове.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A byte offset relative to <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Смещение байтов относительно параметра <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> indicating the reference point from which to obtain the new position.</source>
          <target state="translated">Значение типа <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph>, указывающее точку отсчета, относительно которой задается новая позиция.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the position within the current buffered stream.</source>
          <target state="translated">Задает позицию в текущем буферизованном потоке.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position within the current buffered stream.</source>
          <target state="translated">Новая позиция в текущем буферизованном потоке.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position will precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">Если значение параметра <ph id="ph1">`offset`</ph> является отрицательным, новая позиция будет предшествовать позиции, заданной параметром <ph id="ph2">`origin`</ph>, при этом расстояние между позициями будет равняться числу байтов, заданному параметром <ph id="ph3">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is 0, the new position will be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">Если <ph id="ph1">`offset`</ph> равно 0, новая позиция будет позиции, указанной параметром <ph id="ph2">`origin`</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position will follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">Если значение параметра <ph id="ph1">`offset`</ph> является положительным, новая позиция будет следовать за позицией, заданной параметром <ph id="ph2">`origin`</ph>, при этом расстояние между позициями будет равняться количеству байтов, которое задано параметром <ph id="ph3">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>When a <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> object is the base stream for a <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> object, calling the <ph id="ph3">&lt;xref:System.IO.BufferedStream.Seek%2A&gt;</ph> method can cause the position of the stream to no longer match the position of the internal buffer in the reader.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> объект находится в базовый поток для <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> объекта, вызов <ph id="ph3">&lt;xref:System.IO.BufferedStream.Seek%2A&gt;</ph> метода может привести к позиции потока, больше не соответствует позиции внутреннего буфера в модуле чтения.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>To reset the internal buffer, call the <ph id="ph1">&lt;xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=nameWithType&gt;</ph> method; however, this method slows performance and should be called only when absolutely necessary.</source>
          <target state="translated">Чтобы сбросить во внутреннем буфере, вызовите <ph id="ph1">&lt;xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=nameWithType&gt;</ph> метода; тем не менее, этот метод снижает производительность и должен вызываться только в случае крайней необходимости.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">Поддерживается поиск в любом месте за пределами длины потока.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The stream is not open or is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Поток не открыт или его значение равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The stream does not support seeking.</source>
          <target state="translated">Поток не поддерживает поиск.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source>An integer indicating the desired length of the current buffered stream in bytes.</source>
          <target state="translated">Целое число, определяющее необходимую длину текущего буферизованного потока в байтах.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source>Sets the length of the buffered stream.</source>
          <target state="translated">Задает длину буферизованного потока.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source>The buffer is flushed before setting the length of the underlying data source or repository.</source>
          <target state="translated">Буфер очищается перед установкой длины базового источника данных или репозиторий.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source>If the specified value is less than the current length of the buffered stream, the buffered stream is truncated.</source>
          <target state="translated">Если указанное значение меньше текущей длины буферизованного потока, буферизованный поток усекается.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source>If the specified value is larger than the current length of the buffered stream, the buffered stream is expanded.</source>
          <target state="translated">Если указанное значение больше текущей длины буферизованного потока, буферизованный поток будет расширен.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source>If the buffered stream is expanded, the contents of the buffered stream between the old and the new lengths are not defined.</source>
          <target state="translated">При расширении буферизованный поток содержимого из буферизованного потока между старой и новой длины не определены.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source><ph id="ph1">`SetLength`</ph> flushes any buffered writes if necessary.</source>
          <target state="translated"><ph id="ph1">`SetLength`</ph> Очищает весь буферизованный при необходимости.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source>A stream must support both writing and seeking for <ph id="ph1">`SetLength`</ph> to work.</source>
          <target state="translated">Поток должен поддерживать запись и поиск для <ph id="ph1">`SetLength`</ph> для работы.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source>The stream is not open or is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Поток не открыт или его значение равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source>The stream does not support both writing and seeking.</source>
          <target state="translated">Поток не поддерживает запись и поиск.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.SetLength(System.Int64)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array from which to copy <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> bytes to the current buffered stream.</source>
          <target state="translated">Массив байтов, из которого необходимо скопировать <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> байтов в текущий буферизованный поток.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The offset in the buffer at which to begin copying bytes to the current buffered stream.</source>
          <target state="translated">Смещение в буфере, с которого необходимо начать копирование байтов в текущий буферизованный поток.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to be written to the current buffered stream.</source>
          <target state="translated">Количество байтов, которые необходимо записать в текущий буферизованный поток.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Copies bytes to the buffered stream and advances the current position within the buffered stream by the number of bytes written.</source>
          <target state="translated">Копирует байты в буферизованный поток и перемещает текущую позицию в буферизованном потоке вперед на количество записанных байтов.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> class.</source>
          <target state="translated">Данный пример кода является частью большего примера, приведенного для <ph id="ph1">&lt;xref:System.IO.BufferedStream&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Length of <ph id="ph1">&lt;paramref name="array" /&gt;</ph> minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Длина <ph id="ph1">&lt;paramref name="array" /&gt;</ph> минус <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> меньше <ph id="ph3">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="array" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The stream is closed or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Поток закрыт или его значение равно <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The stream does not support writing.</source>
          <target state="translated">Поток не поддерживает запись.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The buffer to write data from.</source>
          <target state="translated">Буфер, из которого записываются данные.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> from which to begin copying bytes to the stream.</source>
          <target state="translated">Смещение байтов (начиная с нуля) в <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, с которого начинается копирование байтов в поток.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Максимальное число байтов для записи.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Токен для отслеживания запросов отмены.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">Асинхронно записывает последовательность байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию записи.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>You can create a cancellation token by creating an instance of the <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> class and passing the <ph id="ph2">&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;</ph> property as the <ph id="ph3">`cancellationToken`</ph> parameter.</source>
          <target state="translated">Токен отмены, который можно создать путем создания экземпляра <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> класса и передавая <ph id="ph2">&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;</ph> свойство как <ph id="ph3">`cancellationToken`</ph> параметр.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated">Сумма <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> и <ph id="ph2">&lt;paramref name="count" /&gt;</ph> больше, чем длина буфера.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream does not support writing.</source>
          <target state="translated">Поток не поддерживает запись.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">Поток был удален.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream is currently in use by a previous write operation.</source>
          <target state="translated">Поток в настоящее время используется предыдущей операцией записи.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteByte(System.Byte)">
          <source>A byte to write to the stream.</source>
          <target state="translated">Байт, который необходимо записать в поток.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteByte(System.Byte)">
          <source>Writes a byte to the current position in the buffered stream.</source>
          <target state="translated">Записывает байт в текущую позицию буферизованного потока.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteByte(System.Byte)">
          <source>The stream does not support writing.</source>
          <target state="translated">Поток не поддерживает запись.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteByte(System.Byte)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="value" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.BufferedStream.WriteByte(System.Byte)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">Методы были вызваны после закрытия потока.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>