<Type Name="FileSystemWatcher" FullName="System.IO.FileSystemWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10cab9d5d130cd5e31ba2f2a3417bc5bac002972" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37652572" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileSystemWatcher : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileSystemWatcher extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileSystemWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class FileSystemWatcher&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemWatcher : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type FileSystemWatcher = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Changed")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.IO.IODescription("")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c568f-101">Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c568f-101">Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-102">Используйте <xref:System.IO.FileSystemWatcher> для отслеживания изменений в указанном каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-102">Use <xref:System.IO.FileSystemWatcher> to watch for changes in a specified directory.</span></span> <span data-ttu-id="c568f-103">Можно следить за изменениями файлов и подкаталогов из указанного каталога.</span><span class="sxs-lookup"><span data-stu-id="c568f-103">You can watch for changes in files and subdirectories of the specified directory.</span></span> <span data-ttu-id="c568f-104">Можно создать компонент, чтобы следить за файлами на локальном компьютере, на сетевом диске или удаленном компьютере.</span><span class="sxs-lookup"><span data-stu-id="c568f-104">You can create a component to watch files on a local computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="c568f-105">Для отслеживания изменений во всех файлах, установите <xref:System.IO.FileSystemWatcher.Filter%2A> присваивается пустая строка ("») или используйте подстановочные знаки (» *.\*«).</span><span class="sxs-lookup"><span data-stu-id="c568f-105">To watch for changes in all files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to an empty string ("") or use wildcards ("*.\*").</span></span> <span data-ttu-id="c568f-106">Для отслеживания определенного файла, установите <xref:System.IO.FileSystemWatcher.Filter%2A> свойство имени файла.</span><span class="sxs-lookup"><span data-stu-id="c568f-106">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span> <span data-ttu-id="c568f-107">Например, чтобы отслеживать изменения в файле MyDoc.txt, задайте <xref:System.IO.FileSystemWatcher.Filter%2A> свойства «MyDoc.txt».</span><span class="sxs-lookup"><span data-stu-id="c568f-107">For example, to watch for changes in the file MyDoc.txt, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "MyDoc.txt".</span></span> <span data-ttu-id="c568f-108">Кроме того, можно также наблюдать за изменениями в файл определенного типа.</span><span class="sxs-lookup"><span data-stu-id="c568f-108">You can also watch for changes in a certain type of file.</span></span> <span data-ttu-id="c568f-109">Например, чтобы отслеживать изменения в текстовых файлах, задайте <xref:System.IO.FileSystemWatcher.Filter%2A> свойства "\*.txt».</span><span class="sxs-lookup"><span data-stu-id="c568f-109">For example, to watch for changes in text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt".</span></span>  
  
 <span data-ttu-id="c568f-110">Существует несколько типов изменений, которые можно отслеживать в каталог или файл.</span><span class="sxs-lookup"><span data-stu-id="c568f-110">There are several types of changes you can watch for in a directory or file.</span></span> <span data-ttu-id="c568f-111">Например, можно наблюдать за изменениями в `Attributes`, `LastWrite` даты и времени, или `Size` файлов или каталогов.</span><span class="sxs-lookup"><span data-stu-id="c568f-111">For example, you can watch for changes in `Attributes`, the `LastWrite` date and time, or the `Size` of files or directories.</span></span> <span data-ttu-id="c568f-112">Это сделать, задав <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> задается одно из <xref:System.IO.NotifyFilters> значения.</span><span class="sxs-lookup"><span data-stu-id="c568f-112">This is done by setting the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> property to one of the <xref:System.IO.NotifyFilters> values.</span></span> <span data-ttu-id="c568f-113">Дополнительные сведения о тип изменений, вы можете посмотреть, см. в разделе <xref:System.IO.NotifyFilters>.</span><span class="sxs-lookup"><span data-stu-id="c568f-113">For more information on the type of changes you can watch, see <xref:System.IO.NotifyFilters>.</span></span>  
  
 <span data-ttu-id="c568f-114">Можно отслеживать переименование, удаление или создание файлов или каталогов.</span><span class="sxs-lookup"><span data-stu-id="c568f-114">You can watch for renaming, deletion, or creation of files or directories.</span></span> <span data-ttu-id="c568f-115">Например, для отслеживания переименований текстовых файлов, задайте <xref:System.IO.FileSystemWatcher.Filter%2A> свойство «\*.txt» с последующим вызовом <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> метод с <xref:System.IO.WatcherChangeTypes.Renamed> для его параметра.</span><span class="sxs-lookup"><span data-stu-id="c568f-115">For example, to watch for renaming of text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt" and call the <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> method with a <xref:System.IO.WatcherChangeTypes.Renamed> specified for its parameter.</span></span>  
  
 <span data-ttu-id="c568f-116">Операционная система Windows уведомляет компонент об изменениях файлов в буфере, созданные <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-116">The Windows operating system notifies your component of file changes in a buffer created by the <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="c568f-117">Если за короткое время большое количество изменений, буфер может переполниться.</span><span class="sxs-lookup"><span data-stu-id="c568f-117">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="c568f-118">В результате этот компонент сможет отслеживать изменения в каталоге, и он будет давать только общие уведомления.</span><span class="sxs-lookup"><span data-stu-id="c568f-118">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="c568f-119">Увеличение размера буфера с <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> свойство является ресурсоемким, при поступлении из невыгружаемой памяти, который не может быть переключена диска, поэтому буфера как можно меньше еще больших достаточно, чтобы не пропустить любой файл события изменения.</span><span class="sxs-lookup"><span data-stu-id="c568f-119">Increasing the size of the buffer with the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property is expensive, as it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small yet large enough to not miss any file change events.</span></span> <span data-ttu-id="c568f-120">Чтобы избежать переполнения буфера, используйте <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> и <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> уведомления об изменении свойства, может сделать возможной фильтрацию нежелательного.</span><span class="sxs-lookup"><span data-stu-id="c568f-120">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties so you can filter out unwanted change notifications.</span></span>  
  
 <span data-ttu-id="c568f-121">Список начальных значений свойств для экземпляра <xref:System.IO.FileSystemWatcher>, см. в разделе <xref:System.IO.FileSystemWatcher.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="c568f-121">For a list of initial property values for an instance of <xref:System.IO.FileSystemWatcher>, see the <xref:System.IO.FileSystemWatcher.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="c568f-122">Имейте в виду следующее при использовании <xref:System.IO.FileSystemWatcher> класса.</span><span class="sxs-lookup"><span data-stu-id="c568f-122">Please note the following when using the <xref:System.IO.FileSystemWatcher> class.</span></span>  
  
-   <span data-ttu-id="c568f-123">Скрытые файлы не учитываются.</span><span class="sxs-lookup"><span data-stu-id="c568f-123">Hidden files are not ignored.</span></span>  
  
-   <span data-ttu-id="c568f-124">В некоторых системах <xref:System.IO.FileSystemWatcher> сообщает об изменениях в файлы с помощью короткий формат имени файла 8.3.</span><span class="sxs-lookup"><span data-stu-id="c568f-124">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="c568f-125">Например, изменение «LongFileName.LongExtension» может отображаться как «LongFil ~. Lon».</span><span class="sxs-lookup"><span data-stu-id="c568f-125">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFil~.Lon".</span></span>  
  
-   <span data-ttu-id="c568f-126">Этот класс содержит запрос компоновки и требования наследования на уровне класса, который применяется ко всем элементам.</span><span class="sxs-lookup"><span data-stu-id="c568f-126">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="c568f-127">Объект <xref:System.Security.SecurityException> возникает, если непосредственный вызывающий оператор или производного класса не имеет разрешения полного доверия.</span><span class="sxs-lookup"><span data-stu-id="c568f-127">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="c568f-128">Дополнительные сведения о требованиях безопасности см. в разделе [требования связывания](~/docs/framework/misc/link-demands.md).</span><span class="sxs-lookup"><span data-stu-id="c568f-128">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
-   <span data-ttu-id="c568f-129">Максимальный размер, можно задать для <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> свойства для наблюдения за каталогом по сети составляет 64 КБ.</span><span class="sxs-lookup"><span data-stu-id="c568f-129">The maximum size you can set for the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property for monitoring a directory over the network is 64 KB.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-130">Под управлением <xref:System.IO.FileSystemWatcher> в операционной системе Windows 98 не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="c568f-130">Running <xref:System.IO.FileSystemWatcher> on Windows 98 is not supported.</span></span>  
  
## <a name="copying-and-moving-folders"></a><span data-ttu-id="c568f-131">Копирование и перемещение папок</span><span class="sxs-lookup"><span data-stu-id="c568f-131">Copying and moving folders</span></span>  
 <span data-ttu-id="c568f-132">Операционная система и <xref:System.IO.FileSystemWatcher> объект интерпретации операцию вырезания и вставки или действие перемещения как действие переименования для папки и ее содержимого.</span><span class="sxs-lookup"><span data-stu-id="c568f-132">The operating system and <xref:System.IO.FileSystemWatcher> object interpret a cut-and-paste action or a move action as a rename action for a folder and its contents.</span></span> <span data-ttu-id="c568f-133">Если вы вырезаете и вставьте папку с файлами в отслеживаемую, папку <xref:System.IO.FileSystemWatcher> объект сообщает только той папке, что новый, но не его содержимое, так как они по сути только переименовываются.</span><span class="sxs-lookup"><span data-stu-id="c568f-133">If you cut and paste a folder with files into a folder being watched, the <xref:System.IO.FileSystemWatcher> object reports only the folder as new, but not its contents because they are essentially only renamed.</span></span>  
  
 <span data-ttu-id="c568f-134">Чтобы получить уведомление о том, что содержимое папок был перемещен или скопирован в отслеживаемую папку, укажите <xref:System.IO.FileSystemWatcher.OnChanged%2A> и <xref:System.IO.FileSystemWatcher.OnRenamed%2A> методы обработчиков событий, как описано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="c568f-134">To be notified that the contents of folders have been moved or copied into a watched folder, provide <xref:System.IO.FileSystemWatcher.OnChanged%2A> and <xref:System.IO.FileSystemWatcher.OnRenamed%2A> event handler methods as suggested in the following table.</span></span>  
  
|<span data-ttu-id="c568f-135">Обработчик событий</span><span class="sxs-lookup"><span data-stu-id="c568f-135">Event Handler</span></span>|<span data-ttu-id="c568f-136">Событий, обрабатываемых</span><span class="sxs-lookup"><span data-stu-id="c568f-136">Events Handled</span></span>|<span data-ttu-id="c568f-137">Выполняет</span><span class="sxs-lookup"><span data-stu-id="c568f-137">Performs</span></span>|  
|-------------------|--------------------|--------------|  
|<xref:System.IO.FileSystemWatcher.OnChanged%2A>|<span data-ttu-id="c568f-138"><xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted></span><span class="sxs-lookup"><span data-stu-id="c568f-138"><xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted></span></span>|<span data-ttu-id="c568f-139">Изменения отчета в файл атрибуты, созданные файлы и удаленных файлов.</span><span class="sxs-lookup"><span data-stu-id="c568f-139">Report changes in file attributes, created files, and deleted files.</span></span>|  
|<xref:System.IO.FileSystemWatcher.OnRenamed%2A>|<xref:System.IO.FileSystemWatcher.Renamed>|<span data-ttu-id="c568f-140">Перечислены старые и новые пути переименованных файлов и папок, при необходимости расширяя рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="c568f-140">List the old and new paths of renamed files and folders, expanding recursively if needed.</span></span>|  
  
## <a name="events-and-buffer-sizes"></a><span data-ttu-id="c568f-141">События и размеры буфера</span><span class="sxs-lookup"><span data-stu-id="c568f-141">Events and Buffer Sizes</span></span>  
 <span data-ttu-id="c568f-142">Обратите внимание, что зависит от нескольких факторов события изменения от файловой системы вызываются, как описано ниже:</span><span class="sxs-lookup"><span data-stu-id="c568f-142">Note that several factors can affect which file system change events are raised, as described by the following:</span></span>  
  
-   <span data-ttu-id="c568f-143">Общие операции файловой системы может вызвать несколько событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-143">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="c568f-144">Например, при перемещении файла из одной папки в другую несколько <xref:System.IO.FileSystemWatcher.OnChanged%2A> и некоторые <xref:System.IO.FileSystemWatcher.OnCreated%2A> и <xref:System.IO.FileSystemWatcher.OnDeleted%2A> события могут вызываться.</span><span class="sxs-lookup"><span data-stu-id="c568f-144">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="c568f-145">Перемещение файла — это сложная операция, состоит из нескольких простых операций, поэтому создание нескольких событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-145">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="c568f-146">Аналогично некоторые приложения (например, антивирусное программное обеспечение) могут вызывать дополнительные события файловой системы, которые определяются <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-146">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
-   <span data-ttu-id="c568f-147"><xref:System.IO.FileSystemWatcher> Может наблюдать за дисками, пока они не переключается или удалены.</span><span class="sxs-lookup"><span data-stu-id="c568f-147">The <xref:System.IO.FileSystemWatcher> can watch disks as long as they are not switched or removed.</span></span> <span data-ttu-id="c568f-148"><xref:System.IO.FileSystemWatcher> Инициирует события для компакт-дисков и DVD-дисков, так как временные метки и свойства нельзя изменить.</span><span class="sxs-lookup"><span data-stu-id="c568f-148">The <xref:System.IO.FileSystemWatcher> does not raise events for CDs and DVDs, because time stamps and properties cannot change.</span></span> <span data-ttu-id="c568f-149">Удаленных компьютерах должна быть установлена одна из необходимых платформ для правильного функционирования компонента.</span><span class="sxs-lookup"><span data-stu-id="c568f-149">Remote computers must have one of the required platforms installed for the component to function properly.</span></span>  
  
-   <span data-ttu-id="c568f-150">При наличии нескольких <xref:System.IO.FileSystemWatcher> объекты, которые они просматривают же UNC-путь в Windows XP без пакета обновления 1 или Windows 2000 с пакетом обновления 2 или более ранней, то только один из объектов возникнет событие.</span><span class="sxs-lookup"><span data-stu-id="c568f-150">If multiple <xref:System.IO.FileSystemWatcher> objects are watching the same UNC path in Windows XP prior to Service Pack 1, or Windows 2000 SP2 or earlier, then only one of the objects will raise an event.</span></span> <span data-ttu-id="c568f-151">На компьютерах под управлением Windows XP с пакетом обновления 1 и более поздних версиях Windows 2000 SP3 или более поздней версии или Windows Server 2003, все <xref:System.IO.FileSystemWatcher> объектов будет вызвать соответствующие события.</span><span class="sxs-lookup"><span data-stu-id="c568f-151">On machines running Windows XP SP1 and newer, Windows 2000 SP3 or newer or Windows Server 2003, all <xref:System.IO.FileSystemWatcher> objects will raise the appropriate events.</span></span>  
  
 <span data-ttu-id="c568f-152">Обратите внимание, что <xref:System.IO.FileSystemWatcher> пропускают события при превышении размера буфера.</span><span class="sxs-lookup"><span data-stu-id="c568f-152">Note that a <xref:System.IO.FileSystemWatcher> may miss an event when the buffer size is exceeded.</span></span> <span data-ttu-id="c568f-153">Чтобы предотвратить отсутствие событий, выполните следующие рекомендации:</span><span class="sxs-lookup"><span data-stu-id="c568f-153">To avoid missing events, follow these guidelines:</span></span>  
  
-   <span data-ttu-id="c568f-154">Увеличить размер буфера, установив <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c568f-154">Increase the buffer size by setting the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property.</span></span>  
  
-   <span data-ttu-id="c568f-155">Избегайте отслеживать файлы с длинными именами файлов, так как длинное имя файла помогает реализовать переполнение буфера.</span><span class="sxs-lookup"><span data-stu-id="c568f-155">Avoid watching files with long file names, because a long file name contributes to filling up the buffer.</span></span> <span data-ttu-id="c568f-156">Рассмотрите возможность переименования эти файлы, используя более короткие имена.</span><span class="sxs-lookup"><span data-stu-id="c568f-156">Consider renaming these files using shorter names.</span></span>  
  
-   <span data-ttu-id="c568f-157">Сохраните как можно более короткими код обработки событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-157">Keep your event handling code as short as possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c568f-158">В следующем примере создается <xref:System.IO.FileSystemWatcher> Чтобы просмотреть каталог, указанный во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="c568f-158">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="c568f-159">Этот компонент настроен для отслеживания изменений в `LastWrite` и `LastAccess` время создания, удаления или переименования текстовых файлов в каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-159">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="c568f-160">Если файл изменен, создана или удалена, путь к файлу выводит на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-160">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="c568f-161">При переименовании файла, старые и новые пути вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-161">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="c568f-162">Используйте <xref:System.Diagnostics> и <xref:System.IO> пространства имен для этого примера.</span><span class="sxs-lookup"><span data-stu-id="c568f-162">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="c568f-163">для создания производного от <see cref="T:System.Diagnostics.ProcessStartInfo" /> класса.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c568f-163">for deriving from the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span>
      </span>
      <span data-ttu-id="c568f-164">Значение запроса: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Именованные наборы разрешений: <see langword="FullTrust" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c568f-164">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Named Permission Sets: <see langword="FullTrust" />.</span>
      </span>
    </permission>
    <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
    <altmember cref="T:System.IO.NotifyFilters" />
    <altmember cref="T:System.IO.FileSystemEventArgs" />
    <altmember cref="T:System.IO.FileSystemEventHandler" />
    <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
    <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
    <altmember cref="T:System.IO.InternalBufferOverflowException" />
    <altmember cref="T:System.IO.RenamedEventArgs" />
    <altmember cref="T:System.IO.RenamedEventHandler" />
    <altmember cref="T:System.IO.WaitForChangedResult" />
    <altmember cref="T:System.IO.WatcherChangeTypes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-165">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-165">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c568f-166">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-166">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-167">Не может отслеживать удаленный компьютер не поддерживает Windows NT или Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="c568f-167">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="c568f-168">Не может отслеживать удаленный компьютер Windows NT 4.0 с компьютера Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="c568f-168">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span>  
  
 <span data-ttu-id="c568f-169">В следующей таблице представлены исходные значения свойств для экземпляра <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-169">The following table shows initial property values for an instance of <xref:System.IO.FileSystemWatcher>.</span></span>  
  
|<span data-ttu-id="c568f-170">Свойство.</span><span class="sxs-lookup"><span data-stu-id="c568f-170">Property</span></span>|<span data-ttu-id="c568f-171">Начальное значение</span><span class="sxs-lookup"><span data-stu-id="c568f-171">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>|<span data-ttu-id="c568f-172">Побитовое сочетание OR `LastWrite`, `FileName`, и `DirectoryName`</span><span class="sxs-lookup"><span data-stu-id="c568f-172">bitwise OR combination of `LastWrite`, `FileName`, and `DirectoryName`</span></span>|  
|<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>|`false`|  
|<xref:System.IO.FileSystemWatcher.Filter%2A>|<span data-ttu-id="c568f-173">"*. \*«(Отслеживаются все файлы.)</span><span class="sxs-lookup"><span data-stu-id="c568f-173">"*.\*" (Watch all files.)</span></span>|  
|<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>|`false`|  
|<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>|<span data-ttu-id="c568f-174">8192</span><span class="sxs-lookup"><span data-stu-id="c568f-174">8192</span></span>|  
|<xref:System.IO.FileSystemWatcher.Path%2A>|<span data-ttu-id="c568f-175">пустая строка (»»)</span><span class="sxs-lookup"><span data-stu-id="c568f-175">empty string ("")</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="c568f-176">Компонент не будет наблюдать за указанный каталог до <xref:System.IO.FileSystemWatcher.Path%2A> имеет значение, и <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> является `true`.</span><span class="sxs-lookup"><span data-stu-id="c568f-176">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c568f-177">В следующем примере создается <xref:System.IO.FileSystemWatcher> объекта, чтобы просмотреть каталог, указанный во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="c568f-177">The following example creates a <xref:System.IO.FileSystemWatcher> object to watch the directory specified at run time.</span></span> <span data-ttu-id="c568f-178"><xref:System.IO.FileSystemWatcher> Объект наблюдает за `LastWrite` и `LastAccess` время, а также для создания, удаления или переименования текста файлов в каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-178">The <xref:System.IO.FileSystemWatcher> object watches for changes in `LastWrite` and `LastAccess` times, and for the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="c568f-179">Если файл изменен, создана или удалена, путь к файлу выводит на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-179">If a file is changed, created, or deleted, the path to the file displays to the console.</span></span> <span data-ttu-id="c568f-180">При переименовании файла, старые и новые пути вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-180">When a file is renamed, the old and new paths display to the console.</span></span>  
  
 <span data-ttu-id="c568f-181">В этом примере используется <xref:System.Diagnostics> и <xref:System.IO> пространства имен.</span><span class="sxs-lookup"><span data-stu-id="c568f-181">This example uses the <xref:System.Diagnostics> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="c568f-182">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-182">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c568f-183">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-183">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.FileSystemWatcher : string -&gt; System.IO.FileSystemWatcher" Usage="new System.IO.FileSystemWatcher path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c568f-184">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-184">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c568f-185">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory to monitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-185">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory to monitor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c568f-186">Компонент не будет наблюдать за указанный каталог до <xref:System.IO.FileSystemWatcher.Path%2A> имеет значение, и <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> является `true`.</span><span class="sxs-lookup"><span data-stu-id="c568f-186">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="c568f-187">Компонент может отслеживать файлы на свой персональный компьютер, сетевой диск или удаленном компьютере.</span><span class="sxs-lookup"><span data-stu-id="c568f-187">The component can watch files on your personal computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="c568f-188">Не может отслеживать удаленный компьютер не поддерживает Windows NT или Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="c568f-188">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="c568f-189">Не может отслеживать удаленный компьютер Windows NT 4.0 с компьютера Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="c568f-189">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span> <span data-ttu-id="c568f-190"><xref:System.IO.FileSystemWatcher.Filter%2A> Свойство имеет значение по умолчанию для просмотра всех файлов.</span><span class="sxs-lookup"><span data-stu-id="c568f-190">The <xref:System.IO.FileSystemWatcher.Filter%2A> property is set by default to watch all files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c568f-191">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-191">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c568f-192">The <paramref name="path" /> parameter is an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-192">The <paramref name="path" /> parameter is an empty string ("").</span>
          </span>
          <span data-ttu-id="c568f-193">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-193">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c568f-194">
            <paramref name="path" /> is too long.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-194">
              <paramref name="path" /> is too long.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="c568f-195">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-195">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c568f-196">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-196">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher (string path, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher(System::String ^ path, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.IO.FileSystemWatcher : string * string -&gt; System.IO.FileSystemWatcher" Usage="new System.IO.FileSystemWatcher (path, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c568f-197">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-197">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="c568f-198">The type of files to watch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-198">The type of files to watch.</span>
          </span>
          <span data-ttu-id="c568f-199">For example, "\*.txt" watches for changes to all text files.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-199">For example, "\*.txt" watches for changes to all text files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c568f-200">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory and type of files to monitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-200">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory and type of files to monitor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c568f-201">Компонент не будет наблюдать за указанный каталог до <xref:System.IO.FileSystemWatcher.Path%2A> имеет значение, и <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> является `true`.</span><span class="sxs-lookup"><span data-stu-id="c568f-201">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="c568f-202">Компонент может отслеживать файлы на свой персональный компьютер, сетевой диск или удаленном компьютере.</span><span class="sxs-lookup"><span data-stu-id="c568f-202">The component can watch files on your personal computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="c568f-203">Не может отслеживать удаленный компьютер не поддерживает Windows NT или Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="c568f-203">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="c568f-204">Не может отслеживать удаленный компьютер Windows NT 4.0 с компьютера Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="c568f-204">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c568f-205">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-205">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c568f-206">-or-  The <paramref name="filter" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-206">-or-  The <paramref name="filter" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c568f-207">The <paramref name="path" /> parameter is an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-207">The <paramref name="path" /> parameter is an empty string ("").</span>
          </span>
          <span data-ttu-id="c568f-208">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-208">-or-  The path specified through the <paramref name="path" /> parameter does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c568f-209">
            <paramref name="path" /> is too long.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-209">
              <paramref name="path" /> is too long.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="c568f-210">для полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-210">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c568f-211">Этот член не может быть использован частично доверенным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-211">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="fileSystemWatcher.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c568f-212">Begins the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-212">Begins the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="c568f-213">The initialization occurs at run time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-213">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-214">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Разработки, среда использует этот метод для запуска инициализации компонента, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="c568f-214">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component used on a form or used by another component.</span></span> <span data-ttu-id="c568f-215"><xref:System.IO.FileSystemWatcher.EndInit%2A> Метод завершает инициализацию.</span><span class="sxs-lookup"><span data-stu-id="c568f-215">The <xref:System.IO.FileSystemWatcher.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="c568f-216">В следующем примере создается <xref:System.IO.FileSystemWatcher.BeginInit%2A> и задает его <xref:System.IO.FileSystemWatcher.EndInit%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c568f-216">Using the <xref:System.IO.FileSystemWatcher.BeginInit%2A> and <xref:System.IO.FileSystemWatcher.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : System.IO.FileSystemEventHandler " Usage="member this.Changed : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory change matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-217">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-217">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-218"><xref:System.IO.FileSystemWatcher.Changed> Событие возникает при изменении размера, системных атрибутов, последней записи времени, время последнего доступа или разрешения безопасности файла или каталога в контролируемом.</span><span class="sxs-lookup"><span data-stu-id="c568f-218">The <xref:System.IO.FileSystemWatcher.Changed> event is raised when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-219">Общие операции файловой системы может вызвать несколько событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-219">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="c568f-220">Например, при перемещении файла из одной папки в другую несколько <xref:System.IO.FileSystemWatcher.OnChanged%2A> и некоторые <xref:System.IO.FileSystemWatcher.OnCreated%2A> и <xref:System.IO.FileSystemWatcher.OnDeleted%2A> события могут вызываться.</span><span class="sxs-lookup"><span data-stu-id="c568f-220">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="c568f-221">Перемещение файла — это сложная операция, состоит из нескольких простых операций, поэтому создание нескольких событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-221">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="c568f-222">Аналогично некоторые приложения (например, антивирусное программное обеспечение) могут вызывать дополнительные события файловой системы, которые определяются <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-222">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
 <span data-ttu-id="c568f-223">Используйте <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> ограничить количество уведомлений, создаваемых при обработке этого события.</span><span class="sxs-lookup"><span data-stu-id="c568f-223">Use <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> to restrict the number of notifications raised when this event is handled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-224"><xref:System.IO.FileSystemWatcher.Changed> Событие возникает неожиданно, когда файл переименовывается, но не возникает при переименовании каталога.</span><span class="sxs-lookup"><span data-stu-id="c568f-224">The <xref:System.IO.FileSystemWatcher.Changed> event is raised unexpectedly when a file is renamed, but is not raised when a directory is renamed.</span></span> <span data-ttu-id="c568f-225">Чтобы отслеживать изменение имени, используйте <xref:System.IO.FileSystemWatcher.Renamed> событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-225">To watch for renaming, use the <xref:System.IO.FileSystemWatcher.Renamed> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-226">Порядок, в котором <xref:System.IO.FileSystemWatcher.Changed> события по отношению к другой <xref:System.IO.FileSystemWatcher> события может измениться при <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> свойство не является `null`.</span><span class="sxs-lookup"><span data-stu-id="c568f-226">The order in which the <xref:System.IO.FileSystemWatcher.Changed> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c568f-227">В следующем примере используется <xref:System.IO.FileSystemWatcher.Changed> события на консоли отображается путь к файлу каждый раз, когда изменения контролируемых файла.</span><span class="sxs-lookup"><span data-stu-id="c568f-227">The following example uses the <xref:System.IO.FileSystemWatcher.Changed> event to display the file path to the console whenever the watched file is changed.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Created;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Created" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Created" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Created As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Created;" />
      <MemberSignature Language="F#" Value="member this.Created : System.IO.FileSystemEventHandler " Usage="member this.Created : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory creation matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-228">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-228">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-229">Некоторые распространенные процессы, такие как копирование или перемещение файла или каталога, не соответствуют непосредственно к событию, но они приводят к возникновению событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-229">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="c568f-230">При копировании файла или каталога, система вызывает <xref:System.IO.FileSystemWatcher.Created> события в каталоге, в которую был скопирован файл, если просматривается в этом каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-230">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="c568f-231">Если каталог, из которого производится копирование, контролируется другой экземпляр <xref:System.IO.FileSystemWatcher>, событие не возникнет.</span><span class="sxs-lookup"><span data-stu-id="c568f-231">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="c568f-232">Например, создайте два экземпляра модуля <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-232">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="c568f-233">FileSystemWatcher1 установлено наблюдение «C:\My документы», а FileSystemWatcher2 установлено наблюдение «C:\Your документы».</span><span class="sxs-lookup"><span data-stu-id="c568f-233">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="c568f-234">При копировании файла из «Мои документы» на «Свой документов», <xref:System.IO.FileSystemWatcher.Created> событие будет вызываться по FileSystemWatcher2, но не события для FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="c568f-234">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="c568f-235">В отличие от копирования, перемещение файла или каталога приведет к возникновению двух событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-235">Unlike copying, moving a file or directory would raise two events.</span></span> <span data-ttu-id="c568f-236">Из предыдущего примера, если файл перенесен из «Мои документы» на «Your документы» <xref:System.IO.FileSystemWatcher.Created> событие будет генерироваться FileSystemWatcher2 и <xref:System.IO.FileSystemWatcher.Deleted> по FileSystemWatcher1 должно порождаться событие.</span><span class="sxs-lookup"><span data-stu-id="c568f-236">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-237">Общие операции файловой системы может вызвать несколько событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-237">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="c568f-238">Например, при перемещении файла из одной папки в другую несколько <xref:System.IO.FileSystemWatcher.OnChanged%2A> и некоторые <xref:System.IO.FileSystemWatcher.OnCreated%2A> и <xref:System.IO.FileSystemWatcher.OnDeleted%2A> события могут вызываться.</span><span class="sxs-lookup"><span data-stu-id="c568f-238">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="c568f-239">Перемещение файла — это сложная операция, состоит из нескольких простых операций, поэтому создание нескольких событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-239">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="c568f-240">Аналогично некоторые приложения (например, антивирусное программное обеспечение) могут вызывать дополнительные события файловой системы, которые определяются <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-240">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-241">Порядок, в котором <xref:System.IO.FileSystemWatcher.Created> события по отношению к другой <xref:System.IO.FileSystemWatcher> события может измениться при <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> свойство не является `null`.</span><span class="sxs-lookup"><span data-stu-id="c568f-241">The order in which the <xref:System.IO.FileSystemWatcher.Created> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
 <span data-ttu-id="c568f-242"><xref:System.IO.FileSystemWatcher.OnCreated%2A> События сразу же после создания файла.</span><span class="sxs-lookup"><span data-stu-id="c568f-242">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="c568f-243">Значение, если файл копируется или перемещается в контролируемом каталоге, <xref:System.IO.FileSystemWatcher.OnCreated%2A> событие будет вызываться немедленно, за одним или несколькими <xref:System.IO.FileSystemWatcher.OnChanged%2A> события.</span><span class="sxs-lookup"><span data-stu-id="c568f-243">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c568f-244">В следующем примере используется <xref:System.IO.FileSystemWatcher.Created> события на консоли отображается путь к файлу при контролируемом файла.</span><span class="sxs-lookup"><span data-stu-id="c568f-244">The following example uses the <xref:System.IO.FileSystemWatcher.Created> event to display the file path to the console whenever the watched file is created.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.IO.FileSystemEventHandler " Usage="member this.Deleted : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory deletion matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-245">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is deleted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-245">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-246">Некоторые распространенные процессы, такие как копирование или перемещение файла или каталога, не соответствуют непосредственно к событию, но они приводят к возникновению событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-246">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="c568f-247">При копировании файла или каталога, система вызывает <xref:System.IO.FileSystemWatcher.Created> события в каталоге, в которую был скопирован файл, если просматривается в этом каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-247">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="c568f-248">Если каталог, из которого производится копирование, контролируется другой экземпляр <xref:System.IO.FileSystemWatcher>, событие не возникнет.</span><span class="sxs-lookup"><span data-stu-id="c568f-248">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="c568f-249">Например, создайте два экземпляра модуля <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-249">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="c568f-250">FileSystemWatcher1 установлено наблюдение «C:\My документы», а FileSystemWatcher2 установлено наблюдение «C:\Your документы».</span><span class="sxs-lookup"><span data-stu-id="c568f-250">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="c568f-251">При копировании файла из «Мои документы» на «Свой документов», <xref:System.IO.FileSystemWatcher.Created> событие будет вызываться по FileSystemWatcher2, но не события для FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="c568f-251">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="c568f-252">В отличие от копирования, перемещение файла или каталога приведет к возникновению двух событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-252">Unlike copying, moving a file or directory would raise two events.</span></span> <span data-ttu-id="c568f-253">Из предыдущего примера, если файл перенесен из «Мои документы» на «Your документы» <xref:System.IO.FileSystemWatcher.Created> событие будет генерироваться FileSystemWatcher2 и <xref:System.IO.FileSystemWatcher.Deleted> по FileSystemWatcher1 должно порождаться событие.</span><span class="sxs-lookup"><span data-stu-id="c568f-253">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-254">Общие операции файловой системы может вызвать несколько событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-254">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="c568f-255">Например, при перемещении файла из одной папки в другую несколько <xref:System.IO.FileSystemWatcher.OnChanged%2A> и некоторые <xref:System.IO.FileSystemWatcher.OnCreated%2A> и <xref:System.IO.FileSystemWatcher.OnDeleted%2A> события могут вызываться.</span><span class="sxs-lookup"><span data-stu-id="c568f-255">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="c568f-256">Перемещение файла — это сложная операция, состоит из нескольких простых операций, поэтому создание нескольких событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-256">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="c568f-257">Аналогично некоторые приложения (например, антивирусное программное обеспечение) могут вызывать дополнительные события файловой системы, которые определяются <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-257">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-258">Порядок, в котором <xref:System.IO.FileSystemWatcher.Deleted> события по отношению к другой <xref:System.IO.FileSystemWatcher> события может измениться при <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> свойство не является `null`.</span><span class="sxs-lookup"><span data-stu-id="c568f-258">The order in which the <xref:System.IO.FileSystemWatcher.Deleted> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c568f-259">В следующем примере используется <xref:System.IO.FileSystemWatcher.Deleted> события на консоли отображается путь к файлу каждый раз, когда контролируемом файл удаляется.</span><span class="sxs-lookup"><span data-stu-id="c568f-259">The following example uses the <xref:System.IO.FileSystemWatcher.Deleted> event to display the file path to the console whenever the watched file is deleted.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="fileSystemWatcher.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileSystemWatcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c568f-260">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-260">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c568f-261">Releases the unmanaged resources used by the <see cref="T:System.IO.FileSystemWatcher" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-261">Releases the unmanaged resources used by the <see cref="T:System.IO.FileSystemWatcher" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-262">Этот метод вызывается открытым <xref:System.ComponentModel.Component.Dispose%2A> метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="c568f-262">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="c568f-263"><xref:System.ComponentModel.Component.Dispose%2A> вызывает защищенный <xref:System.IO.FileSystemWatcher.Dispose%2A> метод с `disposing` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="c568f-263"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.FileSystemWatcher.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="c568f-264"><xref:System.Object.Finalize%2A> вызывает <xref:System.IO.FileSystemWatcher.Dispose%2A> с `disposing` присвоено `false`.</span><span class="sxs-lookup"><span data-stu-id="c568f-264"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.FileSystemWatcher.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="c568f-265">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.IO.Compression.DeflateStream>.</span><span class="sxs-lookup"><span data-stu-id="c568f-265">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references.</span></span> <span data-ttu-id="c568f-266">Этот метод вызывает метод <xref:System.ComponentModel.Component.Dispose%2A> каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="c568f-266">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c568f-267">
            <para>
              <see cref="M:System.ComponentModel.Component.Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами <see cref="M:System.ComponentModel.Component.Dispose" />. Дополнительные сведения о том, как реализовать <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />, см. в разделе [реализация Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Дополнительные сведения о <see cref="M:System.ComponentModel.Component.Dispose" /> и <see cref="M:System.Object.Finalize" />, см. в разделе [очистки копии неуправляемого Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-267">
              <para>
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />. For more information about how to implement <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EnableRaisingEvents">
      <MemberSignature Language="C#" Value="public bool EnableRaisingEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRaisingEvents" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.EnableRaisingEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRaisingEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRaisingEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRaisingEvents : bool with get, set" Usage="System.IO.FileSystemWatcher.EnableRaisingEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate if this instance is active")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-268">Gets or sets a value indicating whether the component is enabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-268">Gets or sets a value indicating whether the component is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c568f-269">Значение <see langword="true" />, если данный компонент разрешен; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-269">
              <see langword="true" /> if the component is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c568f-270">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-270">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c568f-271">Если при использовании этого компонента в конструкторе в [! По умолчанию используется include[vsprvslong](~/includes/vsprvslong-MD.MD)] <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-271">If you are using the component on a designer in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], the default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-272">Компонент не будет вызывать события, если не задать <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> для `true`.</span><span class="sxs-lookup"><span data-stu-id="c568f-272">The component will not raise events unless you set <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-273">Компонент не будет наблюдать за указанный каталог до <xref:System.IO.FileSystemWatcher.Path%2A> свойства и <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> является `true`.</span><span class="sxs-lookup"><span data-stu-id="c568f-273">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> property has been set and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="c568f-274"><xref:System.IO.FileSystemWatcher.WaitForChanged%2A> Метод позволяет обработчики событий, вызываемый для реагирования на изменения файла, даже если это свойство имеет значение `false`.</span><span class="sxs-lookup"><span data-stu-id="c568f-274">The <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> method allows event handlers to be invoked to respond to file changes even if this property is set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c568f-275">В следующем примере создается <xref:System.IO.FileSystemWatcher> Чтобы просмотреть каталог, указанный во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="c568f-275">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="c568f-276">Этот компонент настроен для отслеживания изменений в `LastWrite` и `LastAccess` время создания, удаления или переименования текстовых файлов в каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-276">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="c568f-277">Если файл изменен, создана или удалена, путь к файлу выводит на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-277">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="c568f-278">При переименовании файла, старые и новые пути вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-278">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="c568f-279">Используйте <xref:System.Diagnostics> и <xref:System.IO> пространства имен для этого примера.</span><span class="sxs-lookup"><span data-stu-id="c568f-279">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c568f-280">The <see cref="T:System.IO.FileSystemWatcher" /> object has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-280">The <see cref="T:System.IO.FileSystemWatcher" /> object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="c568f-281">The current operating system is not Microsoft Windows NT or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-281">The current operating system is not Microsoft Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="c568f-282">The directory specified in <see cref="P:System.IO.FileSystemWatcher.Path" /> could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-282">The directory specified in <see cref="P:System.IO.FileSystemWatcher.Path" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c568f-283">
            <see cref="P:System.IO.FileSystemWatcher.Path" /> has not been set or is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-283">
              <see cref="P:System.IO.FileSystemWatcher.Path" /> has not been set or is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="fileSystemWatcher.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c568f-284">Ends the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-284">Ends the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="c568f-285">The initialization occurs at run time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-285">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-286">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] Разработки, среда использует этот метод для завершения инициализации компонента, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="c568f-286">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component used on a form or used by another component.</span></span> <span data-ttu-id="c568f-287">В следующем примере <xref:System.IO.FileSystemWatcher.BeginInit%2A> для сортировки таблицы по двум столбцам.</span><span class="sxs-lookup"><span data-stu-id="c568f-287">The <xref:System.IO.FileSystemWatcher.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="c568f-288">В следующем примере создается <xref:System.IO.FileSystemWatcher.BeginInit%2A> и задает его <xref:System.IO.FileSystemWatcher.EndInit%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c568f-288">Using the <xref:System.IO.FileSystemWatcher.BeginInit%2A> and <xref:System.IO.FileSystemWatcher.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event System.IO.ErrorEventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.ErrorEventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As ErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::ErrorEventHandler ^ Error;" />
      <MemberSignature Language="F#" Value="member this.Error : System.IO.ErrorEventHandler " Usage="member this.Error : System.IO.ErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.ErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-289">Occurs when the instance of <see cref="T:System.IO.FileSystemWatcher" /> is unable to continue monitoring changes or when the internal buffer overflows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-289">Occurs when the instance of <see cref="T:System.IO.FileSystemWatcher" /> is unable to continue monitoring changes or when the internal buffer overflows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-290">Это событие возникает каждый раз, когда что-то предотвращает <xref:System.IO.FileSystemWatcher> объект из отслеживания изменений.</span><span class="sxs-lookup"><span data-stu-id="c568f-290">This event is raised whenever something prevents the <xref:System.IO.FileSystemWatcher> object from monitoring changes.</span></span> <span data-ttu-id="c568f-291">Например, если объект является отслеживание изменений в удаленном каталоге и подключение к этому каталогу теряется <xref:System.IO.FileSystemWatcher.Error> события.</span><span class="sxs-lookup"><span data-stu-id="c568f-291">For example, if the object is monitoring changes in a remote directory and the connection to that directory is lost, the <xref:System.IO.FileSystemWatcher.Error> event is raised.</span></span>  
  
 <span data-ttu-id="c568f-292">Система уведомляет вас об изменениях файлов и сохраняет эти изменения в буфере, который компонент создает и передает к интерфейсам API.</span><span class="sxs-lookup"><span data-stu-id="c568f-292">The system notifies you of file changes, and it stores those changes in a buffer that the component creates and passes to the APIs.</span></span> <span data-ttu-id="c568f-293">Если за короткое время большое количество изменений, буфер может переполниться.</span><span class="sxs-lookup"><span data-stu-id="c568f-293">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="c568f-294">В результате этот компонент сможет отслеживать изменения в каталоге, и он будет давать только общие уведомления.</span><span class="sxs-lookup"><span data-stu-id="c568f-294">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="c568f-295">Увеличение размера буфера является сложным, так как он поступает не из разбитых на страницы памяти, который не может быть переключен на диск, поэтому имейте буфера как можно меньшего размера.</span><span class="sxs-lookup"><span data-stu-id="c568f-295">Increasing the size of the buffer is expensive, because it comes from non paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</span></span> <span data-ttu-id="c568f-296">Чтобы избежать переполнения буфера, используйте <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.Filter%2A>, и <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> свойства для фильтрации ненужных уведомлений об изменениях.</span><span class="sxs-lookup"><span data-stu-id="c568f-296">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.Filter%2A>, and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties to filter out unwanted change notifications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-297">Общие операции файловой системы может вызвать несколько событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-297">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="c568f-298">Например, при перемещении файла из одной папки в другую несколько <xref:System.IO.FileSystemWatcher.OnChanged%2A> и некоторые <xref:System.IO.FileSystemWatcher.OnCreated%2A> и <xref:System.IO.FileSystemWatcher.OnDeleted%2A> события могут вызываться.</span><span class="sxs-lookup"><span data-stu-id="c568f-298">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="c568f-299">Перемещение файла — это сложная операция, состоит из нескольких простых операций, поэтому создание нескольких событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-299">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="c568f-300">Аналогично некоторые приложения (например, антивирусное программное обеспечение) могут вызывать дополнительные события файловой системы, которые определяются <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-300">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.ErrorEventArgs" />
        <altmember cref="T:System.IO.ErrorEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.IO.FileSystemWatcher.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("*.*")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("File name filter pattern")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-301">Gets or sets the filter string used to determine what files are monitored in a directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-301">Gets or sets the filter string used to determine what files are monitored in a directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c568f-302">Строка фильтра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-302">The filter string.</span>
          </span>
          <span data-ttu-id="c568f-303">По умолчанию используется «*. \*«(Отслеживаются все файлы.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-303">The default is "*.\*" (Watches all files.)</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-304">Для отслеживания изменений во всех файлах установите <xref:System.IO.FileSystemWatcher.Filter%2A> присваивается пустая строка (»»).</span><span class="sxs-lookup"><span data-stu-id="c568f-304">To watch changes in all files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to an empty string ("").</span></span> <span data-ttu-id="c568f-305">Для отслеживания определенного файла, установите <xref:System.IO.FileSystemWatcher.Filter%2A> свойство имени файла.</span><span class="sxs-lookup"><span data-stu-id="c568f-305">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span> <span data-ttu-id="c568f-306">Например, чтобы отслеживать изменения в файле MyDoc.txt, задайте <xref:System.IO.FileSystemWatcher.Filter%2A> свойства «MyDoc.txt».</span><span class="sxs-lookup"><span data-stu-id="c568f-306">For example, to watch for changes in the file MyDoc.txt, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "MyDoc.txt".</span></span> <span data-ttu-id="c568f-307">Кроме того, можно также наблюдать за изменениями в файл определенного типа.</span><span class="sxs-lookup"><span data-stu-id="c568f-307">You can also watch for changes in a certain type of file.</span></span> <span data-ttu-id="c568f-308">Например, чтобы отслеживать изменения в текстовых файлах, задайте <xref:System.IO.FileSystemWatcher.Filter%2A> свойства «\*.txt».</span><span class="sxs-lookup"><span data-stu-id="c568f-308">For example, to watch for changes in any text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt".</span></span> <span data-ttu-id="c568f-309">Использование нескольких фильтров, такие как "\*.txt&#124;\*.doc» не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="c568f-309">Use of multiple filters such as "\*.txt&#124;\*.doc" is not supported.</span></span>  
  
 <span data-ttu-id="c568f-310"><xref:System.IO.FileSystemWatcher.Filter%2A> Свойство может быть изменено после <xref:System.IO.FileSystemWatcher> объект основные сведения о получении событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-310">The <xref:System.IO.FileSystemWatcher.Filter%2A> property can be changed after the <xref:System.IO.FileSystemWatcher> object has started receiving events.</span></span>  
  
 <span data-ttu-id="c568f-311">Дополнительные сведения о фильтрации нежелательных уведомлений, см. в разделе <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, и <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="c568f-311">For more information about filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
 <span data-ttu-id="c568f-312"><xref:System.IO.FileSystemWatcher.Filter%2A> принимает подстановочные знаки для сопоставления файлов, как показано в следующих примерах.</span><span class="sxs-lookup"><span data-stu-id="c568f-312"><xref:System.IO.FileSystemWatcher.Filter%2A> accepts wildcards for matching files, as shown in the following examples.</span></span>  
  
|<span data-ttu-id="c568f-313">Строка фильтра</span><span class="sxs-lookup"><span data-stu-id="c568f-313">Filter string</span></span>|<span data-ttu-id="c568f-314">Отслеживает следующие файлы</span><span class="sxs-lookup"><span data-stu-id="c568f-314">Watches the following files</span></span>|  
|-------------------|---------------------------------|  
|<span data-ttu-id="c568f-315">*.\*</span><span class="sxs-lookup"><span data-stu-id="c568f-315">*.\*</span></span>|<span data-ttu-id="c568f-316">Все файлы (по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="c568f-316">All files (default).</span></span> <span data-ttu-id="c568f-317">Пустая строка ("») также отслеживает все файлы.</span><span class="sxs-lookup"><span data-stu-id="c568f-317">An empty string ("") also watches all files.</span></span>|  
|<span data-ttu-id="c568f-318">\*.txt</span><span class="sxs-lookup"><span data-stu-id="c568f-318">\*.txt</span></span>|<span data-ttu-id="c568f-319">Все файлы с расширением «txt».</span><span class="sxs-lookup"><span data-stu-id="c568f-319">All files with a "txt" extension.</span></span>|  
|<span data-ttu-id="c568f-320">\*recipe.doc</span><span class="sxs-lookup"><span data-stu-id="c568f-320">\*recipe.doc</span></span>|<span data-ttu-id="c568f-321">Все файлы, заканчивающиеся на «recipe» с расширением «doc».</span><span class="sxs-lookup"><span data-stu-id="c568f-321">All files ending in "recipe" with a "doc" extension.</span></span>|  
|<span data-ttu-id="c568f-322">Win\*.XML</span><span class="sxs-lookup"><span data-stu-id="c568f-322">win\*.xml</span></span>|<span data-ttu-id="c568f-323">Все файлы, начинающиеся с «win» с расширением «xml».</span><span class="sxs-lookup"><span data-stu-id="c568f-323">All files beginning with "win" with an "xml" extension.</span></span>|  
|<span data-ttu-id="c568f-324">Продажи \* 200?. xls</span><span class="sxs-lookup"><span data-stu-id="c568f-324">Sales\*200?.xls</span></span>|<span data-ttu-id="c568f-325">Соответствует следующим:</span><span class="sxs-lookup"><span data-stu-id="c568f-325">Matches the following:</span></span><br /><br /> <span data-ttu-id="c568f-326">Продажи июля 2001.xlsSales августа 2002.xlsSales марта 2004.xls</span><span class="sxs-lookup"><span data-stu-id="c568f-326">Sales July 2001.xlsSales Aug 2002.xlsSales March 2004.xls</span></span><br /><br /> <span data-ttu-id="c568f-327">но не соответствует:</span><span class="sxs-lookup"><span data-stu-id="c568f-327">but does not match:</span></span><br /><br /> <span data-ttu-id="c568f-328">1999.xls продаж ноября</span><span class="sxs-lookup"><span data-stu-id="c568f-328">Sales Nov 1999.xls</span></span>|  
|<span data-ttu-id="c568f-329">MyReport.Doc</span><span class="sxs-lookup"><span data-stu-id="c568f-329">MyReport.Doc</span></span>|<span data-ttu-id="c568f-330">Отслеживает только MyReport.doc</span><span class="sxs-lookup"><span data-stu-id="c568f-330">Watches only MyReport.doc</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c568f-331">В следующем примере создается <xref:System.IO.FileSystemWatcher> Чтобы просмотреть каталог, указанный во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="c568f-331">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="c568f-332">Этот компонент настроен для отслеживания изменений в `LastWrite` и `LastAccess` время создания, удаления или переименования текстовых файлов в каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-332">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="c568f-333">Если файл изменен, создана или удалена, путь к файлу выводит на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-333">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="c568f-334">При переименовании файла, старые и новые пути вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-334">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="c568f-335">Используйте <xref:System.Diagnostics> и <xref:System.IO> пространства имен для этого примера.</span><span class="sxs-lookup"><span data-stu-id="c568f-335">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FileSystemWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FileSystemWatcher ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="fileSystemWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeSubdirectories">
      <MemberSignature Language="C#" Value="public bool IncludeSubdirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeSubdirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeSubdirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeSubdirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeSubdirectories : bool with get, set" Usage="System.IO.FileSystemWatcher.IncludeSubdirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate we want to watch subdirectories")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-336">Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-336">Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c568f-337">Значение <see langword="true" />, если требуется контроль вложенных каталогов; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-337">
              <see langword="true" /> if you want to monitor subdirectories; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c568f-338">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-338">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-339">Задайте <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> для `true` при необходимости просмотрите уведомления об изменениях для файлов и каталогов, содержащихся в каталоге, заданном через <xref:System.IO.FileSystemWatcher.Path%2A> свойство и его подкаталогах.</span><span class="sxs-lookup"><span data-stu-id="c568f-339">Set <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> to `true` when you want to watch for change notifications for files and directories contained within the directory specified through the <xref:System.IO.FileSystemWatcher.Path%2A> property, and its subdirectories.</span></span> <span data-ttu-id="c568f-340">Установка <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> свойства `false` помогает снизить число уведомлений, отправляемых на внутренний буфер.</span><span class="sxs-lookup"><span data-stu-id="c568f-340">Setting the <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> property to `false` helps reduce the number of notifications sent to the internal buffer.</span></span> <span data-ttu-id="c568f-341">Дополнительные сведения о фильтрации нежелательных уведомлений см. в разделе <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> и <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="c568f-341">For more information on filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
 <span data-ttu-id="c568f-342">Когда `true`, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> рекурсивное всего поддерева, не только непосредственные дочерние каталоги.</span><span class="sxs-lookup"><span data-stu-id="c568f-342">When `true`, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> is recursive through the entire sub tree, not just the immediate child directories.</span></span> <span data-ttu-id="c568f-343">Возвращает относительный путь к файлу или каталогу в ветви в <xref:System.IO.FileSystemEventArgs.Name%2A> свойство <xref:System.IO.FileSystemEventArgs> и <xref:System.IO.RenamedEventArgs.OldName%2A> свойство <xref:System.IO.RenamedEventArgs>, в зависимости от отслеживаемых изменений.</span><span class="sxs-lookup"><span data-stu-id="c568f-343">The relative path to a file or directory within the sub tree returns in the <xref:System.IO.FileSystemEventArgs.Name%2A> property of <xref:System.IO.FileSystemEventArgs> and the <xref:System.IO.RenamedEventArgs.OldName%2A> property of <xref:System.IO.RenamedEventArgs>, depending on changes you are watching for.</span></span> <span data-ttu-id="c568f-344">Можно получить полный путь от <xref:System.IO.FileSystemEventArgs.FullPath%2A> свойство <xref:System.IO.FileSystemEventArgs> и <xref:System.IO.RenamedEventArgs.OldFullPath%2A> свойство <xref:System.IO.RenamedEventArgs>, в зависимости от отслеживаемых изменений.</span><span class="sxs-lookup"><span data-stu-id="c568f-344">You can get the fully qualified path from the <xref:System.IO.FileSystemEventArgs.FullPath%2A> property of <xref:System.IO.FileSystemEventArgs> and the <xref:System.IO.RenamedEventArgs.OldFullPath%2A> property of <xref:System.IO.RenamedEventArgs>, depending on the changes you are watching for.</span></span>  
  
 <span data-ttu-id="c568f-345">Каталог, созданный в дерево каталога, просмотре, и <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> является `true`, этот каталог будет автоматически отслеживаться.</span><span class="sxs-lookup"><span data-stu-id="c568f-345">If a directory is created in the sub tree of the directory you are watching, and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> is `true`, that directory will automatically be watched.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemEventArgs.FullPath" />
        <altmember cref="P:System.IO.RenamedEventArgs.OldFullPath" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
        <altmember cref="P:System.IO.FileSystemEventArgs.Name" />
        <altmember cref="P:System.IO.RenamedEventArgs.OldName" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InternalBufferSize">
      <MemberSignature Language="C#" Value="public int InternalBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InternalBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property InternalBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InternalBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.InternalBufferSize : int with get, set" Usage="System.IO.FileSystemWatcher.InternalBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-346">Gets or sets the size (in bytes) of the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-346">Gets or sets the size (in bytes) of the internal buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c568f-347">Размер внутреннего буфера в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-347">The internal buffer size in bytes.</span>
          </span>
          <span data-ttu-id="c568f-348">Значение по умолчанию — 8192 (8 КБ).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-348">The default is 8192 (8 KB).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-349">Можно задать буфер размером 4 КБ или большего размера, но оно не должно превышать 64 КБ.</span><span class="sxs-lookup"><span data-stu-id="c568f-349">You can set the buffer to 4 KB or larger, but it must not exceed 64 KB.</span></span> <span data-ttu-id="c568f-350">При попытке задать <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> свойство до менее 4096 байт, значение удаляется и <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> свойство имеет значение 4 096 байт.</span><span class="sxs-lookup"><span data-stu-id="c568f-350">If you try to set the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property to less than 4096 bytes, your value is discarded and the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property is set to 4096 bytes.</span></span> <span data-ttu-id="c568f-351">Для наилучшей производительности используйте кратным 4 КБ на компьютерах с процессорами Intel.</span><span class="sxs-lookup"><span data-stu-id="c568f-351">For best performance, use a multiple of 4 KB on Intel-based computers.</span></span>  
  
 <span data-ttu-id="c568f-352">Система уведомляет компонент об изменениях файлов и сохраняет эти изменения в буфере компонент создает и передает в API-интерфейсы.</span><span class="sxs-lookup"><span data-stu-id="c568f-352">The system notifies the component of file changes, and it stores those changes in a buffer the component creates and passes to the APIs.</span></span> <span data-ttu-id="c568f-353">Каждое событие можно использовать до 16 байтов памяти, не включая имя файла.</span><span class="sxs-lookup"><span data-stu-id="c568f-353">Each event can use up to 16 bytes of memory, not including the file name.</span></span> <span data-ttu-id="c568f-354">Если за короткое время большое количество изменений, буфер может переполниться.</span><span class="sxs-lookup"><span data-stu-id="c568f-354">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="c568f-355">В результате этот компонент сможет отслеживать изменения в каталоге, и он будет давать только общие уведомления.</span><span class="sxs-lookup"><span data-stu-id="c568f-355">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="c568f-356">Увеличение размера буфера может предотвратить отсутствует файловой системы событий изменения.</span><span class="sxs-lookup"><span data-stu-id="c568f-356">Increasing the size of the buffer can prevent missing file system change events.</span></span> <span data-ttu-id="c568f-357">Тем не менее увеличение размера буфера расходуется, так как он поступает из невыгружаемой памяти, который не может быть переключен на диск, поэтому имейте буфера как можно меньшего размера.</span><span class="sxs-lookup"><span data-stu-id="c568f-357">However, increasing buffer size is expensive, because it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</span></span> <span data-ttu-id="c568f-358">Чтобы избежать переполнения буфера, используйте <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> и <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> свойства для фильтрации ненужных уведомлений об изменениях.</span><span class="sxs-lookup"><span data-stu-id="c568f-358">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties to filter out unwanted change notifications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
      </Docs>
    </Member>
    <Member MemberName="NotifyFilter">
      <MemberSignature Language="C#" Value="public System.IO.NotifyFilters NotifyFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.NotifyFilters NotifyFilter" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.NotifyFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyFilter As NotifyFilters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::NotifyFilters NotifyFilter { System::IO::NotifyFilters get(); void set(System::IO::NotifyFilters value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyFilter : System.IO.NotifyFilters with get, set" Usage="System.IO.FileSystemWatcher.NotifyFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate which change event we want to monitor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.NotifyFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-359">Gets or sets the type of changes to watch for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-359">Gets or sets the type of changes to watch for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c568f-360">Одно из значений <see cref="T:System.IO.NotifyFilters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-360">One of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          </span>
          <span data-ttu-id="c568f-361">По умолчанию это побитовое сочетание OR-значений <see langword="LastWrite" />, <see langword="FileName" /> и <see langword="DirectoryName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-361">The default is the bitwise OR combination of <see langword="LastWrite" />, <see langword="FileName" />, and <see langword="DirectoryName" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-362">Можно объединить элементы <xref:System.IO.NotifyFilters> перечисления для наблюдения за более чем один тип изменения за раз.</span><span class="sxs-lookup"><span data-stu-id="c568f-362">You can combine the members of the <xref:System.IO.NotifyFilters> enumeration to watch for more than one type of change at a time.</span></span> <span data-ttu-id="c568f-363">Например, можно отслеживать изменения размера файла, а также для изменения в `LastWrite` времени.</span><span class="sxs-lookup"><span data-stu-id="c568f-363">For example, you can watch for changes in size of a file, and for changes in the `LastWrite` time.</span></span> <span data-ttu-id="c568f-364">Это событие каждый раз, когда есть изменения в размере файла или папки, или изменение `LastWrite` времени для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="c568f-364">This raises an event anytime there is a change in file or folder size, or a change in the `LastWrite` time of the file or folder.</span></span>  
  
 <span data-ttu-id="c568f-365">Это один из способов фильтрации нежелательных уведомлений.</span><span class="sxs-lookup"><span data-stu-id="c568f-365">This is one way to filter out unwanted notifications.</span></span> <span data-ttu-id="c568f-366">Дополнительные сведения о фильтрации нежелательных уведомлений см. в разделе <xref:System.IO.FileSystemWatcher.Filter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, и <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="c568f-366">For more information on filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.Filter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c568f-367">В следующем примере создается <xref:System.IO.FileSystemWatcher> Чтобы просмотреть каталог, указанный во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="c568f-367">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="c568f-368">Этот компонент настроен для отслеживания изменений в `LastWrite` и `LastAccess` время создания, удаления или переименования текстовых файлов в каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-368">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="c568f-369">Если файл изменен, создана или удалена, путь к файлу выводит на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-369">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="c568f-370">При переименовании файла, старые и новые пути вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-370">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="c568f-371">Используйте <xref:System.Diagnostics> и <xref:System.IO> пространства имен для этого примера.</span><span class="sxs-lookup"><span data-stu-id="c568f-371">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c568f-372">The value is not a valid bitwise OR combination of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-372">The value is not a valid bitwise OR combination of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="c568f-373">The value that is being set is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-373">The value that is being set is not valid.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnChanged : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c568f-374">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-374">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c568f-375">Raises the <see cref="E:System.IO.FileSystemWatcher.Changed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-375">Raises the <see cref="E:System.IO.FileSystemWatcher.Changed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-376"><xref:System.IO.FileSystemWatcher.OnChanged%2A> вызывается при изменении размера, системных атрибутов, времени последнего сохранения, время последнего доступа или разрешения безопасности файла или каталога в контролируемом.</span><span class="sxs-lookup"><span data-stu-id="c568f-376"><xref:System.IO.FileSystemWatcher.OnChanged%2A> is called when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</span></span>  
  
 <span data-ttu-id="c568f-377">Используйте <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> ограничивает число событий вызывается, когда <xref:System.IO.FileSystemWatcher.Changed> событие обрабатывается.</span><span class="sxs-lookup"><span data-stu-id="c568f-377">Use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> property to restrict the number of events raised when the <xref:System.IO.FileSystemWatcher.Changed> event is handled.</span></span>  
  
 <span data-ttu-id="c568f-378"><xref:System.IO.FileSystemWatcher.OnCreated%2A> События сразу же после создания файла.</span><span class="sxs-lookup"><span data-stu-id="c568f-378">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="c568f-379">Значение, если файл копируется или перемещается в контролируемом каталоге, <xref:System.IO.FileSystemWatcher.OnCreated%2A> событие будет вызываться немедленно, за одним или несколькими <xref:System.IO.FileSystemWatcher.OnChanged%2A> события.</span><span class="sxs-lookup"><span data-stu-id="c568f-379">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
 <span data-ttu-id="c568f-380">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="c568f-380">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c568f-381">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c568f-381">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c568f-382">
            <para>При переопределении метода <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-382">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Changed" />
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnCreated">
      <MemberSignature Language="C#" Value="protected void OnCreated (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnCreated(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnCreated (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnCreated(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnCreated : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c568f-383">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-383">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c568f-384">Raises the <see cref="E:System.IO.FileSystemWatcher.Created" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-384">Raises the <see cref="E:System.IO.FileSystemWatcher.Created" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-385"><xref:System.IO.FileSystemWatcher.OnCreated%2A> вызывается при создании файла или каталога в контролируемом.</span><span class="sxs-lookup"><span data-stu-id="c568f-385"><xref:System.IO.FileSystemWatcher.OnCreated%2A> is called when a file or directory is created in the directory being monitored.</span></span>  
  
 <span data-ttu-id="c568f-386">Некоторые распространенные процессы, такие как копирование или перемещение файла или каталога, не соответствуют непосредственно к событию, но они приводят к возникновению событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-386">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="c568f-387">При копировании файла или каталога, система вызывает <xref:System.IO.FileSystemWatcher.Created> события в каталоге, в которую был скопирован файл, если просматривается в этом каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-387">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="c568f-388">Если каталог, из которого производится копирование, контролируется другой экземпляр <xref:System.IO.FileSystemWatcher>, событие не возникнет.</span><span class="sxs-lookup"><span data-stu-id="c568f-388">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="c568f-389">Например, создайте два экземпляра модуля <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-389">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="c568f-390">FileSystemWatcher1 установлено наблюдение «C:\My документы», а FileSystemWatcher2 установлено наблюдение «C:\Your документы».</span><span class="sxs-lookup"><span data-stu-id="c568f-390">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="c568f-391">При копировании файла из «Мои документы» и вставьте его в «Your документы», <xref:System.IO.FileSystemWatcher.Created> событие будет вызываться в FileSystemWatcher2, но не события для FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="c568f-391">If you copy a file from "My Documents" and paste it into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised in FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="c568f-392">В отличие от копирования, перемещения, файл или каталог вызывает два события.</span><span class="sxs-lookup"><span data-stu-id="c568f-392">Unlike copying, moving a file or directory raises two events.</span></span> <span data-ttu-id="c568f-393">Из предыдущего примера, если файл перенесен из «Мои документы» на «Your документы» <xref:System.IO.FileSystemWatcher.Created> событие будет вызываться в FileSystemWatcher2 и <xref:System.IO.FileSystemWatcher.Deleted> в FileSystemWatcher1 должно порождаться событие.</span><span class="sxs-lookup"><span data-stu-id="c568f-393">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised in FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised in FileSystemWatcher1.</span></span>  
  
 <span data-ttu-id="c568f-394"><xref:System.IO.FileSystemWatcher.OnCreated%2A> События сразу же после создания файла.</span><span class="sxs-lookup"><span data-stu-id="c568f-394">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="c568f-395">Значение, если файл копируется или перемещается в контролируемом каталоге, <xref:System.IO.FileSystemWatcher.OnCreated%2A> событие будет вызываться немедленно, за одним или несколькими <xref:System.IO.FileSystemWatcher.OnChanged%2A> события.</span><span class="sxs-lookup"><span data-stu-id="c568f-395">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
 <span data-ttu-id="c568f-396">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="c568f-396">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c568f-397">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c568f-397">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c568f-398">
            <para>При переопределении метода <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-398">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected void OnDeleted (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnDeleted(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnDeleted (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnDeleted(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnDeleted : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c568f-399">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-399">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c568f-400">Raises the <see cref="E:System.IO.FileSystemWatcher.Deleted" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-400">Raises the <see cref="E:System.IO.FileSystemWatcher.Deleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-401"><xref:System.IO.FileSystemWatcher.OnDeleted%2A> вызывается при удалении файла или каталога в контролируемом.</span><span class="sxs-lookup"><span data-stu-id="c568f-401"><xref:System.IO.FileSystemWatcher.OnDeleted%2A> is called when a file or directory, within the directory being monitored, is deleted.</span></span>  
  
 <span data-ttu-id="c568f-402">Некоторые распространенные процессы, такие как копирование или перемещение файла или каталога, не соответствуют непосредственно к событию, но они приводят к возникновению событий.</span><span class="sxs-lookup"><span data-stu-id="c568f-402">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="c568f-403">При копировании файла или каталога, система вызывает <xref:System.IO.FileSystemWatcher.Created> события в каталоге, в которую был скопирован файл, если просматривается в этом каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-403">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="c568f-404">Если каталог, из которого производится копирование, контролируется другой экземпляр <xref:System.IO.FileSystemWatcher>, событие не возникнет.</span><span class="sxs-lookup"><span data-stu-id="c568f-404">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="c568f-405">Например, создайте два экземпляра модуля <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-405">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="c568f-406">FileSystemWatcher1 установлено наблюдение «C:\My документы», а FileSystemWatcher2 установлено наблюдение «C:\Your документы».</span><span class="sxs-lookup"><span data-stu-id="c568f-406">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="c568f-407">При копировании файла из «Мои документы» на «Свой документов», <xref:System.IO.FileSystemWatcher.Created> событие будет вызываться по FileSystemWatcher2, но не события для FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="c568f-407">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="c568f-408">В отличие от копирования, перемещения, файл или каталог вызывает два события.</span><span class="sxs-lookup"><span data-stu-id="c568f-408">Unlike copying, moving a file or directory raises two events.</span></span> <span data-ttu-id="c568f-409">Из предыдущего примера, если файл перенесен из «Мои документы» на «Your документы» <xref:System.IO.FileSystemWatcher.Created> событие будет генерироваться FileSystemWatcher2 и <xref:System.IO.FileSystemWatcher.Deleted> по FileSystemWatcher1 должно порождаться событие.</span><span class="sxs-lookup"><span data-stu-id="c568f-409">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
 <span data-ttu-id="c568f-410">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="c568f-410">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c568f-411">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c568f-411">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c568f-412">
            <para>При переопределении метода <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-412">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="protected void OnError (System.IO.ErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnError(class System.IO.ErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnError (e As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnError(System::IO::ErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnError : System.IO.ErrorEventArgs -&gt; unit" Usage="fileSystemWatcher.OnError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c568f-413">An <see cref="T:System.IO.ErrorEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-413">An <see cref="T:System.IO.ErrorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c568f-414">Raises the <see cref="E:System.IO.FileSystemWatcher.Error" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-414">Raises the <see cref="E:System.IO.FileSystemWatcher.Error" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-415"><xref:System.IO.FileSystemWatcher.OnError%2A> вызывается при возникновении ошибки.</span><span class="sxs-lookup"><span data-stu-id="c568f-415"><xref:System.IO.FileSystemWatcher.OnError%2A> is called when an error occurs.</span></span>  
  
 <span data-ttu-id="c568f-416">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="c568f-416">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c568f-417">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c568f-417">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c568f-418">
            <para>При переопределении метода <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-418">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Error" />
        <altmember cref="T:System.IO.ErrorEventArgs" />
        <altmember cref="T:System.IO.ErrorEventHandler" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
      </Docs>
    </Member>
    <Member MemberName="OnRenamed">
      <MemberSignature Language="C#" Value="protected void OnRenamed (System.IO.RenamedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnRenamed(class System.IO.RenamedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnRenamed (e As RenamedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnRenamed(System::IO::RenamedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnRenamed : System.IO.RenamedEventArgs -&gt; unit" Usage="fileSystemWatcher.OnRenamed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.RenamedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c568f-419">A <see cref="T:System.IO.RenamedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-419">A <see cref="T:System.IO.RenamedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c568f-420">Raises the <see cref="E:System.IO.FileSystemWatcher.Renamed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-420">Raises the <see cref="E:System.IO.FileSystemWatcher.Renamed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-421"><xref:System.IO.FileSystemWatcher.OnRenamed%2A> вызывается при переименовании файла или каталога в контролируемом.</span><span class="sxs-lookup"><span data-stu-id="c568f-421"><xref:System.IO.FileSystemWatcher.OnRenamed%2A> is called when a file or directory within the directory being monitored is renamed.</span></span> <span data-ttu-id="c568f-422">Его <xref:System.IO.RenamedEventArgs> аргумент содержит сведения об операции переименования, такие как тип изменений, путь старое и новое и старое и новое имя.</span><span class="sxs-lookup"><span data-stu-id="c568f-422">Its <xref:System.IO.RenamedEventArgs> argument contains information about the renaming operation, such as the type of change, the old and new path, and the old and new name.</span></span> <span data-ttu-id="c568f-423">Обратите внимание, что его <xref:System.IO.FileSystemEventArgs.Name> свойство может иметь значение null, если для событий переименования, если <xref:System.IO.FileSystemWatcher> не получить сопоставление старых и новых имен событий из операционной системы.</span><span class="sxs-lookup"><span data-stu-id="c568f-423">Note that its <xref:System.IO.FileSystemEventArgs.Name> property may be null for renamed events if the <xref:System.IO.FileSystemWatcher> does not get matching old and new name events from the operating system.</span></span> 
  
 <span data-ttu-id="c568f-424">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="c568f-424">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c568f-425">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c568f-425">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c568f-426">
            <para>При переопределении метода <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-426">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Renamed" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IO.FileSystemWatcher.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.FSWPathEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("The directory to monitor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-427">Gets or sets the path of the directory to watch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-427">Gets or sets the path of the directory to watch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c568f-428">Путь для отслеживания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-428">The path to monitor.</span>
          </span>
          <span data-ttu-id="c568f-429">Значение по умолчанию — пустая строка ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-429">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-430">Это полный путь к каталогу.</span><span class="sxs-lookup"><span data-stu-id="c568f-430">This is a fully qualified path to a directory.</span></span> <span data-ttu-id="c568f-431">Если <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> свойство `true`, этот каталог является корневым, по которому система отслеживает изменения; в противном случае это единственный отслеживаемый каталог.</span><span class="sxs-lookup"><span data-stu-id="c568f-431">If the <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> property is `true`, this directory is the root at which the system watches for changes; otherwise it is the only directory watched.</span></span> <span data-ttu-id="c568f-432">Для отслеживания определенного файла, установите <xref:System.IO.FileSystemWatcher.Path%2A> свойство в каталог полное, верно и <xref:System.IO.FileSystemWatcher.Filter%2A> свойство имени файла.</span><span class="sxs-lookup"><span data-stu-id="c568f-432">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Path%2A> property to the fully qualified, correct directory, and the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span>  
  
 <span data-ttu-id="c568f-433"><xref:System.IO.FileSystemWatcher.Path%2A> Свойство поддерживает пути с универсальными именами (UNC).</span><span class="sxs-lookup"><span data-stu-id="c568f-433">The <xref:System.IO.FileSystemWatcher.Path%2A> property supports Universal Naming Convention (UNC) paths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-434">Это свойство должно иметь значение, прежде чем компонента можно наблюдать за изменениями.</span><span class="sxs-lookup"><span data-stu-id="c568f-434">This property must be set before the component can watch for changes.</span></span>  
  
 <span data-ttu-id="c568f-435">При переименовании каталога <xref:System.IO.FileSystemWatcher> автоматически перестраивается на только что переименованный элемент.</span><span class="sxs-lookup"><span data-stu-id="c568f-435">When a directory is renamed, the <xref:System.IO.FileSystemWatcher> automatically reattaches itself to the newly renamed item.</span></span> <span data-ttu-id="c568f-436">Например, если задать <xref:System.IO.FileSystemWatcher.Path%2A> свойства «C:\My документы» и затем вручную имя папки «Документы C:\Your», компонент продолжает прослушивать уведомления об изменениях в папке.</span><span class="sxs-lookup"><span data-stu-id="c568f-436">For example, if you set the <xref:System.IO.FileSystemWatcher.Path%2A> property to "C:\My Documents" and then manually rename the directory to "C:\Your Documents", the component continues listening for change notifications on the newly renamed directory.</span></span> <span data-ttu-id="c568f-437">Тем не менее, при запросе <xref:System.IO.FileSystemWatcher.Path%2A> свойство, он содержит старый путь.</span><span class="sxs-lookup"><span data-stu-id="c568f-437">However, when you ask for the <xref:System.IO.FileSystemWatcher.Path%2A> property, it contains the old path.</span></span> <span data-ttu-id="c568f-438">Это происходит, поскольку компонент определяет контролируемый каталог на основе дескриптор, а не имя каталога.</span><span class="sxs-lookup"><span data-stu-id="c568f-438">This happens because the component determines what directory watches based on the handle, rather than the name of the directory.</span></span> <span data-ttu-id="c568f-439">Переименование не влияет на дескриптор.</span><span class="sxs-lookup"><span data-stu-id="c568f-439">Renaming does not affect the handle.</span></span> <span data-ttu-id="c568f-440">Таким образом, при уничтожении этого компонента, а затем создайте его повторно без обновления <xref:System.IO.FileSystemWatcher.Path%2A> свойства приложения завершится ошибкой, поскольку каталог больше не существует.</span><span class="sxs-lookup"><span data-stu-id="c568f-440">So, if you destroy the component, and then recreate it without updating the <xref:System.IO.FileSystemWatcher.Path%2A> property, your application will fail because the directory no longer exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c568f-441">В следующем примере создается <xref:System.IO.FileSystemWatcher> Чтобы просмотреть каталог, указанный во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="c568f-441">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="c568f-442">Этот компонент настроен для отслеживания изменений в `LastWrite` и `LastAccess` время создания, удаления или переименования текстовых файлов в каталоге.</span><span class="sxs-lookup"><span data-stu-id="c568f-442">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="c568f-443">Если файл изменен, создана или удалена, путь к файлу выводит на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-443">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="c568f-444">При переименовании файла, старые и новые пути вывода на консоль.</span><span class="sxs-lookup"><span data-stu-id="c568f-444">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="c568f-445">Используйте <xref:System.Diagnostics> и <xref:System.IO> пространства имен для этого примера.</span><span class="sxs-lookup"><span data-stu-id="c568f-445">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c568f-446">The specified path does not exist or could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-446">The specified path does not exist or could not be found.</span>
          </span>
          <span data-ttu-id="c568f-447">-or-  The specified path contains wildcard characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-447">-or-  The specified path contains wildcard characters.</span>
          </span>
          <span data-ttu-id="c568f-448">-or-  The specified path contains invalid path characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-448">-or-  The specified path contains invalid path characters.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
      </Docs>
    </Member>
    <Member MemberName="Renamed">
      <MemberSignature Language="C#" Value="public event System.IO.RenamedEventHandler Renamed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.RenamedEventHandler Renamed" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Renamed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Renamed As RenamedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::RenamedEventHandler ^ Renamed;" />
      <MemberSignature Language="F#" Value="member this.Renamed : System.IO.RenamedEventHandler " Usage="member this.Renamed : System.IO.RenamedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory rename matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.RenamedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-449">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is renamed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-449">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is renamed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-450">`Renamed` Событие <xref:System.IO.RenamedEventHandler> делегат, который имеет следующую сигнатуру:</span><span class="sxs-lookup"><span data-stu-id="c568f-450">The `Renamed` event is an <xref:System.IO.RenamedEventHandler> delegate that has the following signature:</span></span>

 ```csharp
public delegate void Renamed(object sender, RenamedEventArgs e);
 ```
 ```vb
Public Delegate Sub RenamedEventHandler(sender As Object, e As RenamedEventArgs)
 ```
 <span data-ttu-id="c568f-451"><xref:System.IO.RenamedEventArgs> Объект предоставляет сведения об операции переименования, такие как тип переименования ( <xref:System.IO.FileSystemEventArgs.ChangeType> свойство), старое и новое имя и старый и новый путь.</span><span class="sxs-lookup"><span data-stu-id="c568f-451">The <xref:System.IO.RenamedEventArgs> object provides information about the renaming operation, such as the type of the rename (the <xref:System.IO.FileSystemEventArgs.ChangeType> property), the old and new name, and the old and new path.</span></span> <span data-ttu-id="c568f-452">Обратите внимание, что <xref:System.IO.FileSystemEventArgs.Name> свойство может иметь значение null, если для событий переименования, если <xref:System.IO.FileSystemWatcher> не получить сопоставление старых и новых имен событий из операционной системы.</span><span class="sxs-lookup"><span data-stu-id="c568f-452">Note that the <xref:System.IO.FileSystemEventArgs.Name> property may be null for renamed events if the <xref:System.IO.FileSystemWatcher> does not get matching old and new name events from the operating system.</span></span>

 <span data-ttu-id="c568f-453">При переименовании каталога, в которой хранятся проверяемые не будет создано уведомление.</span><span class="sxs-lookup"><span data-stu-id="c568f-453">Renaming the directory you are watching will not raise a notification.</span></span> <span data-ttu-id="c568f-454">Только для записи в каталоге, в которой хранятся проверяемые будут создаваться уведомления.</span><span class="sxs-lookup"><span data-stu-id="c568f-454">Notifications are only raised for entries inside the directory you are watching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c568f-455">В следующем примере используется <xref:System.IO.FileSystemWatcher.Renamed> события на консоли отображается путь к файлу каждый раз, когда контролируемом файл переименовывается.</span><span class="sxs-lookup"><span data-stu-id="c568f-455">The following example uses the <xref:System.IO.FileSystemWatcher.Renamed> event to display the file path to the console whenever the watched file is renamed.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.IO.FileSystemWatcher.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-456">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-456">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c568f-457">Интерфейс <see cref="T:System.ComponentModel.ISite" /> для <see cref="T:System.IO.FileSystemWatcher" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-457">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-458">Узлы связывают <xref:System.ComponentModel.Component> для <xref:System.ComponentModel.Design.IDesignerHost.Container%2A> и обеспечения взаимодействия между ними, а также предоставляют способ для управления компонентами контейнера.</span><span class="sxs-lookup"><span data-stu-id="c568f-458">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Design.IDesignerHost.Container%2A> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.IO.FileSystemWatcher.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("The object used to marshal the event handler calls resulting from a directory change")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-459">Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-459">Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c568f-460">
            <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, который описывает объект, используемый для маршалинга вызовов обработчика событий, инициированных в результате изменения каталога.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-460">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> that represents the object used to marshal the event handler calls issued as a result of a directory change.</span>
          </span>
          <span data-ttu-id="c568f-461">Значение по умолчанию — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-461">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-462">Когда <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> — `null`, методы, обрабатывающие <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, и <xref:System.IO.FileSystemWatcher.Renamed> события вызываются в потоке из пула потоков системы.</span><span class="sxs-lookup"><span data-stu-id="c568f-462">When <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> is `null`, methods handling the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events are called on a thread from the system thread pool.</span></span> <span data-ttu-id="c568f-463">Дополнительные сведения о системе пулов потоков, см. в разделе <xref:System.Threading.ThreadPool>.</span><span class="sxs-lookup"><span data-stu-id="c568f-463">For more information on system thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="c568f-464">Когда <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, и <xref:System.IO.FileSystemWatcher.Renamed> события обрабатываются с помощью визуального компонента Windows Forms, такие как <xref:System.Windows.Forms.Button>, обращение к компоненту через пул потоков системы могут работать неправильно, или может привести к исключению.</span><span class="sxs-lookup"><span data-stu-id="c568f-464">When the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events are handled by a visual Windows Forms component, such as a <xref:System.Windows.Forms.Button>, accessing the component through the system thread pool might not work, or may result in an exception.</span></span> <span data-ttu-id="c568f-465">Избежать этого, задав <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> в компонент Windows Forms, который вызывает методы, обрабатывающие <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, и <xref:System.IO.FileSystemWatcher.Renamed> событий, вызываемый в том же потоке, в котором был создан компонент.</span><span class="sxs-lookup"><span data-stu-id="c568f-465">Avoid this by setting <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> to a Windows Forms component, which causes the methods that handle the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events to be called on the same thread on which the component was created.</span></span>  
  
 <span data-ttu-id="c568f-466">Если <xref:System.IO.FileSystemWatcher> используется внутри [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] в конструкторе Windows Forms, <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> автоматически устанавливает на элементе управления, содержащий <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="c568f-466">If the <xref:System.IO.FileSystemWatcher> is used inside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] in a Windows Forms designer, <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> automatically sets to the control that contains the <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="c568f-467">Например, если вы поместите <xref:System.IO.FileSystemWatcher> в конструкторе Form1 (который наследуется от <xref:System.Windows.Forms.Form>) <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> свойство <xref:System.IO.FileSystemWatcher> присваивается экземпляр Form1.</span><span class="sxs-lookup"><span data-stu-id="c568f-467">For example, if you place a <xref:System.IO.FileSystemWatcher> on a designer for Form1 (which inherits from <xref:System.Windows.Forms.Form>) the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property of <xref:System.IO.FileSystemWatcher> is set to the instance of Form1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForChanged">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c568f-468">A synchronous method that returns a structure that contains specific information on the change that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-468">A synchronous method that returns a structure that contains specific information on the change that occurred.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForChanged">
      <MemberSignature Language="C#" Value="public System.IO.WaitForChangedResult WaitForChanged (System.IO.WatcherChangeTypes changeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.WaitForChangedResult WaitForChanged(valuetype System.IO.WatcherChangeTypes changeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChanged (changeType As WatcherChangeTypes) As WaitForChangedResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::WaitForChangedResult WaitForChanged(System::IO::WatcherChangeTypes changeType);" />
      <MemberSignature Language="F#" Value="member this.WaitForChanged : System.IO.WatcherChangeTypes -&gt; System.IO.WaitForChangedResult" Usage="fileSystemWatcher.WaitForChanged changeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.WaitForChangedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
      </Parameters>
      <Docs>
        <param name="changeType">
          <span data-ttu-id="c568f-469">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-469">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c568f-470">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-470">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c568f-471">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-471">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-472">Этот метод ожидает неопределенное время, пока не происходит первого изменения, а затем возвращает.</span><span class="sxs-lookup"><span data-stu-id="c568f-472">This method waits indefinitely until the first change occurs and then returns.</span></span> <span data-ttu-id="c568f-473">Так же, как это <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> с `timeout` равным-1.</span><span class="sxs-lookup"><span data-stu-id="c568f-473">This is the same as using <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> with the `timeout` parameter set to -1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-474">Этот метод позволяет обработчик событий, вызываемый для ответа изменения файла, даже если <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> свойству `false`.</span><span class="sxs-lookup"><span data-stu-id="c568f-474">This method allows an event handler to be invoked to respond to file changes even if the <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="c568f-475">В некоторых системах <xref:System.IO.FileSystemWatcher> сообщает об изменениях в файлы с помощью короткий формат имени файла 8.3.</span><span class="sxs-lookup"><span data-stu-id="c568f-475">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="c568f-476">Например, изменение «LongFileName.LongExtension» может отображаться как «LongFi ~. Lon».</span><span class="sxs-lookup"><span data-stu-id="c568f-476">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.WaitForChangedResult" />
      </Docs>
    </Member>
    <Member MemberName="WaitForChanged">
      <MemberSignature Language="C#" Value="public System.IO.WaitForChangedResult WaitForChanged (System.IO.WatcherChangeTypes changeType, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.WaitForChangedResult WaitForChanged(valuetype System.IO.WatcherChangeTypes changeType, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChanged (changeType As WatcherChangeTypes, timeout As Integer) As WaitForChangedResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::WaitForChangedResult WaitForChanged(System::IO::WatcherChangeTypes changeType, int timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForChanged : System.IO.WatcherChangeTypes * int -&gt; System.IO.WaitForChangedResult" Usage="fileSystemWatcher.WaitForChanged (changeType, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.WaitForChangedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changeType">
          <span data-ttu-id="c568f-477">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-477">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c568f-478">The time (in milliseconds) to wait before timing out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-478">The time (in milliseconds) to wait before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c568f-479">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-479">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c568f-480">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c568f-480">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c568f-481">Этот метод ожидает, пока происходит изменение, или истечет время. Значение -1 для `timeout` параметра означает неограниченное время ожидания.</span><span class="sxs-lookup"><span data-stu-id="c568f-481">This method waits until a change occurs or it has timed out. A value of -1 for the `timeout` parameter means wait indefinitely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c568f-482">Этот метод позволяет обработчик событий, вызываемый для ответа изменения файла, даже если <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> свойству `false`.</span><span class="sxs-lookup"><span data-stu-id="c568f-482">This method allows an event handler to be invoked to respond to file changes even if the <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="c568f-483">В некоторых системах <xref:System.IO.FileSystemWatcher> сообщает об изменениях в файлы с помощью короткий формат имени файла 8.3.</span><span class="sxs-lookup"><span data-stu-id="c568f-483">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="c568f-484">Например, изменение «LongFileName.LongExtension» может отображаться как «LongFi ~. Lon».</span><span class="sxs-lookup"><span data-stu-id="c568f-484">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.WaitForChangedResult" />
      </Docs>
    </Member>
  </Members>
</Type>