<Type Name="Stream" FullName="System.IO.Stream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4568f892f5b7d17d7b27e180e0f3f0087bd2650b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Stream : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Stream extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Stream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Stream&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stream abstract : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ba1c5-101">Предоставляет универсальное представление последовательности байтов.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba1c5-101">Provides a generic view of a sequence of bytes.</span>
      </span>
      <span data-ttu-id="ba1c5-102">Этот класс является абстрактным.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba1c5-102">This is an abstract class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-103"><xref:System.IO.Stream> — Абстрактный базовый класс для всех потоков.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-103"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span> <span data-ttu-id="ba1c5-104">Поток - это абстракция последовательности байтов, например файла, устройства ввода-вывода, межпроцессного канала связи или сокета TCP/IP.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-104">A stream is an abstraction of a sequence of bytes, such as a file, an input/output device, an inter-process communication pipe, or a TCP/IP socket.</span></span> <span data-ttu-id="ba1c5-105"><xref:System.IO.Stream> Класс и его производные классы обеспечивают универсальное представление различных типов ввода и вывода, а также изолируют программиста от конкретных особенностей операционной системы и базовых устройств.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-105">The <xref:System.IO.Stream> class and its derived classes provide a generic view of these different types of input and output, and isolate the programmer from the specific details of the operating system and the underlying devices.</span></span>  
  
 <span data-ttu-id="ba1c5-106">Потоки включают три основные операции:</span><span class="sxs-lookup"><span data-stu-id="ba1c5-106">Streams involve three fundamental operations:</span></span>  
  
-   <span data-ttu-id="ba1c5-107">Чтение из потока.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-107">You can read from streams.</span></span> <span data-ttu-id="ba1c5-108">Чтение — перенос данных из потока в структуру данных, например в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-108">Reading is the transfer of data from a stream into a data structure, such as an array of bytes.</span></span>  
  
-   <span data-ttu-id="ba1c5-109">Запись в поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-109">You can write to streams.</span></span> <span data-ttu-id="ba1c5-110">Запись — это перенос данных из структуры данных в поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-110">Writing is the transfer of data from a data structure into a stream.</span></span>  
  
-   <span data-ttu-id="ba1c5-111">Потоки могут поддерживать поиск.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-111">Streams can support seeking.</span></span> <span data-ttu-id="ba1c5-112">Поиск ссылается запросов и изменение текущей позиции внутри потока.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-112">Seeking refers to querying and modifying the current position within a stream.</span></span> <span data-ttu-id="ba1c5-113">Поиск возможностей зависит от вида резервного хранилища потока.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-113">Seek capability depends on the kind of backing store a stream has.</span></span> <span data-ttu-id="ba1c5-114">Например сетевые потоки отсутствует унифицированное представление текущего положения и поэтому обычно не поддерживает поиск.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-114">For example, network streams have no unified concept of a current position, and therefore typically do not support seeking.</span></span>  
  
 <span data-ttu-id="ba1c5-115">Некоторые из наиболее часто используемых потоков, которые наследуют от <xref:System.IO.Stream> , <xref:System.IO.FileStream>, и <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-115">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 <span data-ttu-id="ba1c5-116">В зависимости от базового источника данных или репозиторий потоки могут поддерживать только некоторые из этих возможностей.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-116">Depending on the underlying data source or repository, streams might support only some of these capabilities.</span></span> <span data-ttu-id="ba1c5-117">Можно запрашивать возможности потока с помощью <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, и <xref:System.IO.Stream.CanSeek%2A> свойства <xref:System.IO.Stream> класса.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-117">You can query a stream for its capabilities by using the <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, and <xref:System.IO.Stream.CanSeek%2A> properties of the <xref:System.IO.Stream> class.</span></span>  
  
 <span data-ttu-id="ba1c5-118"><xref:System.IO.Stream.Read%2A> И <xref:System.IO.Stream.Write%2A> методы чтения и записи данных в различных форматах.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-118">The <xref:System.IO.Stream.Read%2A> and <xref:System.IO.Stream.Write%2A> methods read and write data in a variety of formats.</span></span> <span data-ttu-id="ba1c5-119">Потоки, которые поддерживает поиск, используйте <xref:System.IO.Stream.Seek%2A> и <xref:System.IO.Stream.SetLength%2A> методы и <xref:System.IO.Stream.Position%2A> и <xref:System.IO.Stream.Length%2A> свойства, чтобы запрашивать и изменять текущую позицию и длину потока.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-119">For streams that support seeking, use the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods and the <xref:System.IO.Stream.Position%2A> and <xref:System.IO.Stream.Length%2A> properties to query and modify the current position and length of a stream.</span></span>  
  
 <span data-ttu-id="ba1c5-120">Этот тип реализует <xref:System.IDisposable> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-120">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="ba1c5-121">После завершения с помощью типа следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-121">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="ba1c5-122">Для удаления типа непосредственно вызвать его <xref:System.IDisposable.Dispose%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-122">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="ba1c5-123">Чтобы удалить ее косвенно, использовать языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ba1c5-123">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="ba1c5-124">Дополнительные сведения см. в разделе «С помощью объекта, реализует интерфейс IDisposable» в <xref:System.IDisposable> разделе интерфейса.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-124">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="ba1c5-125">Освобождение <xref:System.IO.Stream> объект очищает запись всех буферизованных данных и фактически вызывает <xref:System.IO.Stream.Flush%2A> способ.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-125">Disposing a <xref:System.IO.Stream> object flushes any buffered data, and essentially calls the <xref:System.IO.Stream.Flush%2A> method for you.</span></span> <span data-ttu-id="ba1c5-126"><xref:System.IO.Stream.Dispose%2A> также освобождает ресурсы операционной системы, таких как дескрипторы файлов, сетевые подключения или память, используемая для внутренней буферизации.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-126"><xref:System.IO.Stream.Dispose%2A> also releases operating system resources such as file handles, network connections, or memory used for any internal buffering.</span></span> <span data-ttu-id="ba1c5-127"><xref:System.IO.BufferedStream> Класс предоставляет возможность создания оболочки в буферизованный поток вокруг другого потока, чтобы улучшить чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-127">The <xref:System.IO.BufferedStream> class provides the capability of wrapping a buffered stream around another stream in order to improve read and write performance.</span></span>  
  
 <span data-ttu-id="ba1c5-128">Начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.IO.Stream> класс включает в себя асинхронные методы для упрощения асинхронных операций.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-128">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Stream> class includes async methods to simplify asynchronous operations.</span></span> <span data-ttu-id="ba1c5-129">Асинхронный метод содержит `Async` в его имени, таких как <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, и <xref:System.IO.Stream.FlushAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-129">An async method contains `Async` in its name, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>.</span></span> <span data-ttu-id="ba1c5-130">Эти методы позволяют выполнять ресурсоемких операций ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-130">These methods enable you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="ba1c5-131">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-131">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="ba1c5-132">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-132">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="ba1c5-133">При использовании в [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложения, <xref:System.IO.Stream> включает в себя два метода расширения: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> и <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-133">When used in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, <xref:System.IO.Stream> includes two extension methods: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span></span> <span data-ttu-id="ba1c5-134">Эти методы преобразуют <xref:System.IO.Stream> объекта в поток в [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ba1c5-134">These methods convert a <xref:System.IO.Stream> object to a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)].</span></span> <span data-ttu-id="ba1c5-135">Также можно преобразовать в поток [!INCLUDE[wrt](~/includes/wrt-md.md)] для <xref:System.IO.Stream> объектов с помощью <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> и <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-135">You can also convert a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)] to a <xref:System.IO.Stream> object by using the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> methods.</span></span> <span data-ttu-id="ba1c5-136">Дополнительные сведения см. в разделе [как: преобразование между потоками .NET Framework и потоками среды выполнения Windows](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span><span class="sxs-lookup"><span data-stu-id="ba1c5-136">For more information, see [How to: Convert Between .NET Framework Streams and Windows Runtime Streams](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span></span>  
  
 <span data-ttu-id="ba1c5-137">Некоторые реализации потоков выполняют локальную буферизацию основных данных для улучшения производительности.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-137">Some stream implementations perform local buffering of the underlying data to improve performance.</span></span> <span data-ttu-id="ba1c5-138">Для таких потоков, можно использовать <xref:System.IO.Stream.Flush%2A> или <xref:System.IO.Stream.FlushAsync%2A> способ удаления внутренних буферов и обеспечения записи всех данных в базовый источник данных или репозиторий.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-138">For such streams, you can use the <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.FlushAsync%2A> method to clear any internal buffers and ensure that all data has been written to the underlying data source or repository.</span></span>  
  
 <span data-ttu-id="ba1c5-139">Если необходим поток без резервного хранилища (также известный как корзины) использовать <xref:System.IO.Stream.Null> поле, чтобы получить экземпляр потока, который специально для этой цели.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-139">If you need a stream with no backing store (also known as a bit bucket), use the <xref:System.IO.Stream.Null> field to retrieve an instance of a stream that is designed for this purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1c5-140">Следующий пример демонстрирует использование двух <xref:System.IO.FileStream> объектов для асинхронного копирования файлов из одного каталога в другой каталог.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-140">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another directory.</span></span> <span data-ttu-id="ba1c5-141">Класс <xref:System.IO.FileStream> является производным от класса <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-141">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span> <span data-ttu-id="ba1c5-142">Обратите внимание, что обработчик событий <xref:System.Web.UI.WebControls.Button.Click> для элемента управления <xref:System.Windows.Controls.Button> помечается с помощью модификатора `async` , так как вызывает асинхронный метод.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-142">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="ba1c5-143">При реализации производным классом от <see cref="T:System.IO.Stream" />, должны предоставлять реализации для <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> и <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> методы.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ba1c5-143">When you implement a derived class of <see cref="T:System.IO.Stream" />, you must provide implementations for the <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> methods.</span>
        </span>
        <span data-ttu-id="ba1c5-144">Асинхронные методы <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, и <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> использовать синхронные методы <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> и <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> в их реализации.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ba1c5-144">The asynchronous methods <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, and <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> use the synchronous methods <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> in their implementations.</span>
        </span>
        <span data-ttu-id="ba1c5-145">Таким образом, реализации методов <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> и <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> будет правильно работать с асинхронными методами.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ba1c5-145">Therefore, your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> will work correctly with the asynchronous methods.</span>
        </span>
        <span data-ttu-id="ba1c5-146">Реализация по умолчанию <see cref="M:System.IO.Stream.ReadByte" /> и <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> создать новый массив одноэлементных байт, а затем вызвать реализации методов <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> и <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ba1c5-146">The default implementations of <see cref="M:System.IO.Stream.ReadByte" /> and <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> create a new single-element byte array, and then call your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
        </span>
        <span data-ttu-id="ba1c5-147">При наследовании от <see cref="T:System.IO.Stream" />, рекомендуется переопределять эти методы для доступа к к внутреннему буферу и, если она есть, существенно повысить производительность.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ba1c5-147">When you derive from <see cref="T:System.IO.Stream" />, we recommend that you override these methods to access your internal buffer, if you have one, for substantially better performance.</span>
        </span>
        <span data-ttu-id="ba1c5-148">Предоставьте реализации <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, и <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ba1c5-148">You must also provide implementations of <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, and <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.</span>
        </span>
        <span data-ttu-id="ba1c5-149">Не следует переопределять <see cref="M:System.IO.Stream.Close" /> метод, вместо этого поместите все <see cref="T:System.IO.Stream" /> логика очистки в <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> метод.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ba1c5-149">Do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all the <see cref="T:System.IO.Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
        </span>
        <span data-ttu-id="ba1c5-150">Дополнительные сведения см. в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
        <span class="sxs-lookup">
          <span data-stu-id="ba1c5-150">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.MemoryStream" />
    <altmember cref="T:System.IO.BufferedStream" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Stream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Stream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-151">Инициализирует новый экземпляр класса <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-151">Initializes a new instance of the <see cref="T:System.IO.Stream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-152"><xref:System.IO.Stream> — Абстрактный базовый класс для всех потоков.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-152"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span>  
  
 <span data-ttu-id="ba1c5-153">Некоторые из наиболее часто используемых потоков, которые наследуют от <xref:System.IO.Stream> , <xref:System.IO.FileStream>, и <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-153">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ba1c5-154">Буфер, в который необходимо считать данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-154">The buffer to read the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="ba1c5-155">Смещение байтов в <c>buffer</c>, с которого начинается запись данных, считанных из потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-155">The byte offset in <c>buffer</c> at which to begin writing data read from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ba1c5-156">Максимальное число байтов, предназначенных для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-156">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="ba1c5-157">Дополнительный асинхронный обратный вызов по завершении чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-157">An optional asynchronous callback, to be called when the read is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ba1c5-158">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронное чтение от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-158">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-159">Начинает операцию асинхронного чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-159">Begins an asynchronous read operation.</span>
          </span>
          <span data-ttu-id="ba1c5-160">(Рекомендуется использовать <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-160">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-161">
            <see cref="T:System.IAsyncResult" /> представляет асинхронное чтение, которое все еще может быть отложено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-161">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-162">В платформе .NET Framework 4 и более ранних версий для реализации операций асинхронного ввода-вывода необходимо использовать такие методы, как <xref:System.IO.Stream.BeginRead%2A> и <xref:System.IO.Stream.EndRead%2A> .</span><span class="sxs-lookup"><span data-stu-id="ba1c5-162">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="ba1c5-163">Эти методы по-прежнему доступны в [!INCLUDE[net_v45](~/includes/net-v45-md.md)] для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, и <xref:System.IO.Stream.FlushAsync%2A>, более легко реализации асинхронных операций ввода-вывода справки.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-163">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="ba1c5-164">Реализация по умолчанию `BeginRead` в потоке вызовы <xref:System.IO.Stream.Read%2A> метод синхронно, означающее, что `Read` может блокироваться на некоторых потоков.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-164">The default implementation of `BeginRead` on a stream calls the <xref:System.IO.Stream.Read%2A> method synchronously, which means that `Read` might block on some streams.</span></span> <span data-ttu-id="ba1c5-165">Однако экземпляры классов, таких как `FileStream` и `NetworkStream` полностью поддерживают асинхронные операции, если экземпляры были открыты асинхронно.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-165">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="ba1c5-166">Таким образом, вызовы `BeginRead` не будет блокировать этих потоков.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-166">Therefore, calls to `BeginRead` will not block on those streams.</span></span> <span data-ttu-id="ba1c5-167">Можно переопределить `BeginRead` (с помощью асинхронных делегатов) для предоставления асинхронного поведения.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-167">You can override `BeginRead` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="ba1c5-168">Передайте `IAsyncResult` возвращаемое значение для <xref:System.IO.Stream.EndRead%2A> метод потока, чтобы определить, сколько байтов, считанных и освобождаются ресурсы операционной системы, используемый для чтения.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-168">Pass the `IAsyncResult` return value to the <xref:System.IO.Stream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="ba1c5-169"><xref:System.IO.Stream.EndRead%2A> должен вызываться по одному разу для каждого вызова <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-169"><xref:System.IO.Stream.EndRead%2A> must be called once for every call to <xref:System.IO.Stream.BeginRead%2A>.</span></span> <span data-ttu-id="ba1c5-170">Это можно сделать либо с помощью того же код, который вызвал `BeginRead` или с помощью обратного вызова, передаваемый `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-170">You can do this either by using the same code that called `BeginRead` or in a callback passed to `BeginRead`.</span></span>  
  
 <span data-ttu-id="ba1c5-171">Текущее положение в потоке обновляется во время асинхронного чтения или записи, не по завершении операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-171">The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="ba1c5-172">Несколько одновременных асинхронных запросов отрисовки неопределенное порядок выполнения запроса.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-172">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="ba1c5-173">Используйте <xref:System.IO.Stream.CanRead%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр чтение.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-173">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="ba1c5-174">Если поток закрыт или передается неверный аргумент, исключения создаются немедленно из `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-174">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginRead`.</span></span> <span data-ttu-id="ba1c5-175">Ошибки, возникающие при запросе асинхронного чтения, например ошибка диска в процессе запроса ввода-вывода, возникают в потоке пула потоков и создают исключения при вызове `EndRead`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-175">Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndRead`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-176">Попытка выполнить чтение в асинхронном режиме за пределами конца потока или ошибка диска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-176">Attempted an asynchronous read past the end of the stream, or a disk error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba1c5-177">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-177">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-178">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-178">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-179">Текущая реализация класса <see langword="Stream" /> не поддерживает операцию чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-179">The current <see langword="Stream" /> implementation does not support the read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ba1c5-180">Буфер, из которого записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-180">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="ba1c5-181">Смещение байтов в <c>buffer</c>, с которого следует начать запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-181">The byte offset in <c>buffer</c> from which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ba1c5-182">Максимальное число байтов для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-182">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="ba1c5-183">Дополнительный асинхронный обратный вызов по завершении записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-183">An optional asynchronous callback, to be called when the write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ba1c5-184">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронную запись от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-184">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-185">Начинает операцию асинхронной записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-185">Begins an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="ba1c5-186">(Рекомендуется использовать <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-186">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-187">
            <see langword="IAsyncResult" /> представляет асинхронную запись, которая все еще может быть отложена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-187">An <see langword="IAsyncResult" /> that represents the asynchronous write, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-188">В платформе .NET Framework 4 и более ранних версий для реализации операций асинхронного ввода-вывода необходимо использовать такие методы, как <xref:System.IO.Stream.BeginWrite%2A> и <xref:System.IO.Stream.EndWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-188">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="ba1c5-189">Эти методы по-прежнему доступны в [!INCLUDE[net_v45](~/includes/net-v45-md.md)] для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, и <xref:System.IO.Stream.FlushAsync%2A>, более легко реализации асинхронных операций ввода-вывода справки.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-189">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="ba1c5-190">Реализация по умолчанию `BeginWrite` в потоке вызовы <xref:System.IO.Stream.Write%2A> метод синхронно, означающее, что `Write` может блокироваться на некоторых потоков.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-190">The default implementation of `BeginWrite` on a stream calls the <xref:System.IO.Stream.Write%2A> method synchronously, which means that `Write` might block on some streams.</span></span> <span data-ttu-id="ba1c5-191">Однако экземпляры классов, таких как `FileStream` и `NetworkStream` полностью поддерживают асинхронные операции, если экземпляры были открыты асинхронно.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-191">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="ba1c5-192">Таким образом, вызовы `BeginWrite` не будет блокировать этих потоков.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-192">Therefore, calls to `BeginWrite` will not block on those streams.</span></span> <span data-ttu-id="ba1c5-193">Можно переопределить `BeginWrite` (с помощью асинхронных делегатов) для предоставления асинхронного поведения.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-193">You can override `BeginWrite` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="ba1c5-194">Передайте `IAsyncResult` возвращаемый текущим методом <xref:System.IO.Stream.EndWrite%2A> чтобы обеспечить завершение записи и правильное освобождение ресурсов.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-194">Pass the `IAsyncResult` returned by the current method to <xref:System.IO.Stream.EndWrite%2A> to ensure that the write completes and frees resources appropriately.</span></span> <span data-ttu-id="ba1c5-195"><xref:System.IO.Stream.EndWrite%2A> должен вызываться по одному разу для каждого вызова <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-195"><xref:System.IO.Stream.EndWrite%2A> must be called once for every call to <xref:System.IO.Stream.BeginWrite%2A>.</span></span> <span data-ttu-id="ba1c5-196">Это можно сделать либо с помощью того же код, который вызвал `BeginWrite` или с помощью обратного вызова, передаваемый `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-196">You can do this either by using the same code that called `BeginWrite` or in a callback passed to `BeginWrite`.</span></span> <span data-ttu-id="ba1c5-197">При возникновении ошибки во время асинхронной записи, исключение не будет создано до `EndWrite` вызывается с `IAsyncResult` возвращаемый этим методом.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-197">If an error occurs during an asynchronous write, an exception will not be thrown until `EndWrite` is called with the `IAsyncResult` returned by this method.</span></span>  
  
 <span data-ttu-id="ba1c5-198">Если поток доступен для записи, запись в конец потока расширяет поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-198">If a stream is writable, writing at the end of the stream expands the stream.</span></span>  
  
 <span data-ttu-id="ba1c5-199">Текущее положение в потоке обновляется при выполнении асинхронного чтения или записи, не по завершении операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-199">The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</span></span> <span data-ttu-id="ba1c5-200">Несколько одновременных асинхронных запросов отрисовки неопределенное порядок выполнения запроса.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-200">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="ba1c5-201">Используйте <xref:System.IO.Stream.CanWrite%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр запись.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-201">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="ba1c5-202">Если поток закрыт или передается неверный аргумент, исключения создаются немедленно из `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-202">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginWrite`.</span></span> <span data-ttu-id="ba1c5-203">Ошибки, возникающие при выполнении запроса асинхронной записи, например ошибка диска в процессе запроса ввода-вывода, возникают в потоке пула потоков и создают исключения при вызове `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-203">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-204">Попытка выполнить запись в асинхронном режиме за пределами конца потока или ошибка диска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-204">Attempted an asynchronous write past the end of the stream, or a disk error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba1c5-205">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-205">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-206">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-206">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-207">Текущая реализация класса <see langword="Stream" /> не поддерживает операцию записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-207">The current <see langword="Stream" /> implementation does not support the write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <altmember cref="P:System.IO.Stream.CanWrite" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-208">При переопределении в производном классе возвращает значение, показывающее, поддерживает ли текущий поток возможность чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-208">When overridden in a derived class, gets a value indicating whether the current stream supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1c5-209">Значение <see langword="true" />, если поток поддерживает чтение; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-209">
              <see langword="true" /> if the stream supports reading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-210">Если класс, производный от <xref:System.IO.Stream> не поддерживает чтение, при вызове <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, и <xref:System.IO.Stream.BeginRead%2A> методы создают исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-210">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, and <xref:System.IO.Stream.BeginRead%2A> methods throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="ba1c5-211">Если поток закрыт, это свойство возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-211">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1c5-212">Ниже приведен пример использования `CanRead` свойство.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-212">The following is an example of using the `CanRead` property.</span></span>  
  
 [!code-cpp[Classic FileStream.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public abstract bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-213">При переопределении в производном классе возвращает значение, которое показывает, поддерживается ли в текущем потоке возможность поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-213">When overridden in a derived class, gets a value indicating whether the current stream supports seeking.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1c5-214">Значение <see langword="true" />, если поток поддерживает поиск; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-214">
              <see langword="true" /> if the stream supports seeking; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-215">Если класс, производный от <xref:System.IO.Stream> не поддерживает поиск, при вызове <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, и <xref:System.IO.Stream.Seek%2A> throw <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-215">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, and <xref:System.IO.Stream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="ba1c5-216">Если поток закрыт, это свойство возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-216">If the stream is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public virtual bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-217">Возвращает значение, которое показывает, может ли для данного потока истечь время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-217">Gets a value that determines whether the current stream can time out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1c5-218">Значение, которое показывает, может ли для данного потока истечь время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-218">A value that determines whether the current stream can time out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-219">Свойство <xref:System.IO.Stream.CanTimeout%2A> всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-219">The <xref:System.IO.Stream.CanTimeout%2A> property always returns `false`.</span></span> <span data-ttu-id="ba1c5-220">Некоторые реализации потоков требуется другое поведение, например <xref:System.Net.Sockets.NetworkStream>, что время ожидания, если сетевое подключение разорвано или потеряно.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-220">Some stream implementations require different behavior, such as <xref:System.Net.Sockets.NetworkStream>, which times out if network connectivity is interrupted or lost.</span></span> <span data-ttu-id="ba1c5-221">При реализации в поток, который должен иметь возможность времени ожидания, следует переопределить это свойство для возврата `true`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-221">If you are implementing a stream that must be able to time out, this property should be overridden to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.ReadTimeout" />
        <altmember cref="P:System.IO.Stream.WriteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-222">При переопределении в производном классе возвращает значение, которое показывает, поддерживает ли текущий поток возможность записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-222">When overridden in a derived class, gets a value indicating whether the current stream supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1c5-223">Значение <see langword="true" />, если поток поддерживает запись; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-223">
              <see langword="true" /> if the stream supports writing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-224">Если класс, производный от <xref:System.IO.Stream> не поддерживает запись, при вызове <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, или <xref:System.IO.Stream.WriteByte%2A> вызывает <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-224">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, or <xref:System.IO.Stream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="ba1c5-225">Если поток закрыт, это свойство возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-225">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1c5-226">Ниже приведен пример использования `CanWrite` свойство.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-226">The following is an example of using the `CanWrite` property.</span></span>  
  
 [!code-cpp[Classic Stream.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-227">Закрывает текущий поток и отключает все ресурсы (например, сокеты и файловые дескрипторы), связанные с текущим потоком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-227">Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.</span>
          </span>
          <span data-ttu-id="ba1c5-228">Вместо вызова данного метода, убедитесь в том, что поток надлежащим образом ликвидирован.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-228">Instead of calling this method, ensure that the stream is properly disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-229">Этот метод вызывает метод <xref:System.IO.Stream.Dispose%2A>, указав `true` для освобождения всех ресурсов.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-229">This method calls <xref:System.IO.Stream.Dispose%2A>, specifying `true` to release all resources.</span></span> <span data-ttu-id="ba1c5-230">Необходимо явно вызывать <xref:System.IO.Stream.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-230">You do not have to specifically call the <xref:System.IO.Stream.Close%2A> method.</span></span> <span data-ttu-id="ba1c5-231">Вместо этого, убедитесь, что каждый <xref:System.IO.Stream> объект надлежащим образом ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-231">Instead, ensure that every <xref:System.IO.Stream> object is properly disposed.</span></span> <span data-ttu-id="ba1c5-232">Можно объявить <xref:System.IO.Stream> объекты в пределах `using` блока (или `Using` блока в Visual Basic) для убедитесь, что при удалении из потока и его ресурсы или можно явно вызывать <xref:System.IO.Stream.Dispose%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-232">You can declare <xref:System.IO.Stream> objects within a `using` block (or `Using` block in Visual Basic) to ensure that the stream and all of its resources are disposed, or you can explicitly call the <xref:System.IO.Stream.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="ba1c5-233">Сброс потока его основной кодировщик не очищается, если только явным образом вызвать реализацию <xref:System.IO.Stream.Flush%2A> или `Close`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-233">Flushing the stream will not flush its underlying encoder unless you explicitly call an implementation of <xref:System.IO.Stream.Flush%2A> or `Close`.</span></span> <span data-ttu-id="ba1c5-234">Установка <xref:System.IO.StreamWriter.AutoFlush%2A> для `true` означает, что данные будут сброшены из буфера в поток, но состояние кодировщика при этом не сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-234">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="ba1c5-235">Это позволяет кодировщику сохранить свое состояние (частичные символы), чтобы правильно выполнить кодировку следующего блока знаков.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-235">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="ba1c5-236">Этот сценарий влияет на кодировки UTF8 и UTF7, в которых определенные символы кодируются только после кодировщик получает соседние знаки.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-236">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="ba1c5-237">Попытка работы с потоком после закрытия потока может создавать <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-237">Attempts to manipulate the stream after the stream has been closed might throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ba1c5-238">В производных классах, не переопределяйте <see cref="M:System.IO.Stream.Close" /> метод, вместо этого поместите все <see langword="Stream" /> логика очистки в <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> метод.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-238">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the <see langword="Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
            </span>
            <span data-ttu-id="ba1c5-239">Дополнительные сведения см. в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-239">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-240">Считывает байты из текущего потока и записывает их в другой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-240">Reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="ba1c5-241">Поток, в который будет скопировано содержимое текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-241">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-242">Считывает байты из текущего потока и записывает их в другой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-242">Reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-243">Копирование начинается с текущей позиции в текущем потоке, а не сбрасывает позицию целевой поток после завершения операции копирования.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-243">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1c5-244">Следующий пример копирует содержимое <xref:System.IO.FileStream> для <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-244">The following example copies the contents of a <xref:System.IO.FileStream> to a <xref:System.IO.MemoryStream>.</span></span>  
  
 [!code-csharp[System.IO.Stream.CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stream.copyto/cs/program.cs#1)]
 [!code-vb[System.IO.Stream.CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stream.copyto/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-245">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-245">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-246">Текущий поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-246">The current stream does not support reading.</span>
          </span>
          <span data-ttu-id="ba1c5-247">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-247">-or-</span>
          </span>
          <span data-ttu-id="ba1c5-248">Параметр <paramref name="destination" /> не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-248">
              <paramref name="destination" /> does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-249">Текущий поток или параметр <paramref name="destination" /> был закрыт до вызова метода <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-249">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-250">Ошибка ввода/вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-250">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="ba1c5-251">Поток, в который будет скопировано содержимое текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-251">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="ba1c5-252">Размер буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-252">The size of the buffer.</span>
          </span>
          <span data-ttu-id="ba1c5-253">Это значение должно быть больше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-253">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="ba1c5-254">Размер по умолчанию — 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-254">The default size is 81920.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-255">Считывает байты из текущего потока и записывает их в другой поток, используя указанный размер буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-255">Reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-256">Копирование начинается с текущей позиции в текущем потоке, а не сбрасывает позицию целевой поток после завершения операции копирования.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-256">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-257">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-257">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba1c5-258">Параметр <paramref name="bufferSize" /> имеет отрицательное значение или равен нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-258">
              <paramref name="bufferSize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-259">Текущий поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-259">The current stream does not support reading.</span>
          </span>
          <span data-ttu-id="ba1c5-260">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-260">-or-</span>
          </span>
          <span data-ttu-id="ba1c5-261">Параметр <paramref name="destination" /> не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-261">
              <paramref name="destination" /> does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-262">Текущий поток или параметр <paramref name="destination" /> был закрыт до вызова метода <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-262">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-263">Ошибка ввода/вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-263">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-264">Асинхронно считывает байты из текущего потока и записывает их в другой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-264">Asynchronously reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="ba1c5-265">Поток, в который будет скопировано содержимое текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-265">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-266">Асинхронно считывает байты из текущего потока и записывает их в другой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-266">Asynchronously reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-267">Задача, представляющая асинхронную операцию копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-267">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-268"><xref:System.IO.Stream.CopyToAsync%2A> Метод позволяет выполнять ресурсоемких операций ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-268">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="ba1c5-269">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-269">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="ba1c5-270">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-270">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="ba1c5-271">Копирование начинается с текущей позиции в текущем потоке.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-271">Copying begins at the current position in the current stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1c5-272">Следующий пример демонстрирует использование двух <xref:System.IO.FileStream> объектов для асинхронного копирования файлов из одного каталога в другой.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-272">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another.</span></span> <span data-ttu-id="ba1c5-273">Класс <xref:System.IO.FileStream> является производным от класса <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-273">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span>  <span data-ttu-id="ba1c5-274">Обратите внимание, что <xref:System.Web.UI.WebControls.Button.Click> обработчик событий для <xref:System.Windows.Controls.Button> управления помечается `async` модификатор тем, что вызывает асинхронный метод</span><span class="sxs-lookup"><span data-stu-id="ba1c5-274">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-275">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-275">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-276">Текущий поток или поток назначения удаляется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-276">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-277">Текущий поток не поддерживает чтение или поток назначения не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-277">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream, bufferSize As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="ba1c5-278">Поток, в который будет скопировано содержимое текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-278">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="ba1c5-279">Размер (в байтах) буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-279">The size, in bytes, of the buffer.</span>
          </span>
          <span data-ttu-id="ba1c5-280">Это значение должно быть больше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-280">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="ba1c5-281">Размер по умолчанию — 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-281">The default size is 81920.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-282">Асинхронно считывает байты из текущего потока и записывает их в другой поток, используя указанный размер буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-282">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-283">Задача, представляющая асинхронную операцию копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-283">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-284"><xref:System.IO.Stream.CopyToAsync%2A> Метод позволяет выполнять ресурсоемких операций ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-284">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="ba1c5-285">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-285">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="ba1c5-286">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-286">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="ba1c5-287">Копирование начинается с текущей позиции в текущем потоке.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-287">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="ba1c5-288">Пример копирования между двумя потоками см <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-288">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-289">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-289">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba1c5-290">Параметр <paramref name="buffersize" /> имеет отрицательное значение или равен нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-290">
              <paramref name="buffersize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-291">Текущий поток или поток назначения удаляется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-291">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-292">Текущий поток не поддерживает чтение или поток назначения не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-292">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="ba1c5-293">Поток, в который будет скопировано содержимое текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-293">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="ba1c5-294">Размер (в байтах) буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-294">The size, in bytes, of the buffer.</span>
          </span>
          <span data-ttu-id="ba1c5-295">Это значение должно быть больше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-295">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="ba1c5-296">Размер по умолчанию — 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-296">The default size is 81920.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba1c5-297">Токен для отслеживания запросов отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-297">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="ba1c5-298">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-298">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-299">Асинхронно считывает байты из текущего потока и записывает их в другой поток, используя указанный размер буфера и токен отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-299">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-300">Задача, представляющая асинхронную операцию копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-300">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-301"><xref:System.IO.Stream.CopyToAsync%2A> Метод позволяет выполнять ресурсоемких операций ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-301">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="ba1c5-302">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-302">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="ba1c5-303">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-303">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="ba1c5-304">Если операция отменена до ее завершения, возвращаемая задача содержит <xref:System.Threading.Tasks.TaskStatus.Canceled> значение <xref:System.Threading.Tasks.Task.Status%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-304">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="ba1c5-305">Копирование начинается с текущей позиции в текущем потоке.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-305">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="ba1c5-306">Пример копирования между двумя потоками см <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-306">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-307">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-307">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba1c5-308">Параметр <paramref name="buffersize" /> имеет отрицательное значение или равен нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-308">
              <paramref name="buffersize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-309">Текущий поток или поток назначения удаляется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-309">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-310">Текущий поток не поддерживает чтение или поток назначения не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-310">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWaitHandle">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.WaitHandle CreateWaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.WaitHandle CreateWaitHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CreateWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWaitHandle () As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::WaitHandle ^ CreateWaitHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-311">Выделяет объект <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-311">Allocates a <see cref="T:System.Threading.WaitHandle" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-312">Ссылка на выделенный объект <see langword="WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-312">A reference to the allocated <see langword="WaitHandle" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-313">При первом вызове текущий метод создает `WaitHandle` объекта и возвращает его.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-313">When called for the first time, the current method creates a `WaitHandle` object and returns it.</span></span> <span data-ttu-id="ba1c5-314">При последующих вызовах `CreateWaitHandle` возвращает ссылку на новый дескриптор ожидания.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-314">On subsequent calls, `CreateWaitHandle` returns a reference to a new wait handle.</span></span>  
  
 <span data-ttu-id="ba1c5-315">Используйте этот метод при реализации асинхронных методов и требуется способ блокировки в <xref:System.IO.Stream.EndRead%2A> или <xref:System.IO.Stream.EndWrite%2A> до завершения асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-315">Use this method if you implement the asynchronous methods and require a way of blocking in <xref:System.IO.Stream.EndRead%2A> or <xref:System.IO.Stream.EndWrite%2A> until the asynchronous operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-316">Освобождает все ресурсы, используемые объектом <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-316">Releases all resources used by the <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-317">Освобождает все ресурсы, занятые модулем <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-317">Releases all resources used by the <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-318">Этот метод удаляет поток, путем написания любые изменения в резервное хранилище и закрытия потока для освобождения ресурсов.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-318">This method disposes the stream, by writing any changes to the backing store and closing the stream to release resources.</span></span>  
  
 <span data-ttu-id="ba1c5-319">Вызов `Dispose` позволяет ресурсы, используемые <xref:System.IO.Stream> перераспределить для других целей.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-319">Calling `Dispose` allows the resources used by the <xref:System.IO.Stream> to be reallocated for other purposes.</span></span> <span data-ttu-id="ba1c5-320">Дополнительные сведения о `Dispose`, в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="ba1c5-320">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ba1c5-321">Поместите все логика очистки для объекта потока в <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-321">Place all cleanup logic for your stream object in <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            </span>
            <span data-ttu-id="ba1c5-322">Не следует переопределять <see cref="M:System.IO.Stream.Close" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-322">Do not override <see cref="M:System.IO.Stream.Close" />.</span>
            </span>
            <span data-ttu-id="ba1c5-323">Обратите внимание, что реализация этого метода из-за требований обратной совместимости, отличается от рекомендации для схемы Dispose.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-323">Note that because of backward compatibility requirements, this method's implementation differs from the recommended guidance for the Dispose pattern.</span>
            </span>
            <span data-ttu-id="ba1c5-324">Этот метод вызывает метод <see cref="M:System.IO.Stream.Close" />, который затем вызывает <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-324">This method calls <see cref="M:System.IO.Stream.Close" />, which then calls <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ba1c5-325">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-325">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-326">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.Stream" />, а при необходимости освобождает также управляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-326">Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-327">Должен освободить все ресурсы, указав `true` для `disposing`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-327">You should release all resources by specifying `true` for `disposing`.</span></span> <span data-ttu-id="ba1c5-328">Когда `disposing` — `true`, поток может обеспечить записывается на базовый буфер данных и доступа к другим объектам.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-328">When `disposing` is `true`, the stream can also ensure data is flushed to the underlying buffer, and access other finalizable objects.</span></span>  <span data-ttu-id="ba1c5-329">Это может оказаться невозможным, при вызове из метода завершения, из-за отсутствия порядка между методов завершения.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-329">This may not be possible when called from a finalizer due a lack of ordering among finalizers.</span></span>  
  
 <span data-ttu-id="ba1c5-330">Если для взаимодействия со своим источником потока использует дескриптор операционной системы, рассмотрите возможность использования подкласс <xref:System.Runtime.InteropServices.SafeHandle> для этой цели.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-330">If your stream is using an operating system handle to communicate with its source, consider using a subclass of <xref:System.Runtime.InteropServices.SafeHandle> for this purpose.</span></span>  
  
 <span data-ttu-id="ba1c5-331">Этот метод вызывается методом открытые <xref:System.ComponentModel.Component.Dispose%2A> метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-331">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="ba1c5-332"><xref:System.ComponentModel.Component.Dispose%2A> вызывает защищенный <xref:System.IO.Stream.Dispose%2A> метод с `disposing` равным `true`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-332"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Stream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ba1c5-333"><xref:System.Object.Finalize%2A> вызывает <xref:System.IO.Stream.Dispose%2A> с `disposing` значение `false`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-333"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Stream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ba1c5-334">В производных классах, не переопределяйте <see cref="M:System.IO.Stream.Close" /> метод, вместо этого поместите все логика очистки потока в <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> метод.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-334">In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the Stream cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.</span>
            </span>
            <span data-ttu-id="ba1c5-335">Метод <see cref="M:System.ComponentModel.Component.Dispose" /> может вызываться несколько раз другими объектами.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-335">
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="ba1c5-336">При переопределении метода <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see cref="M:System.ComponentModel.Component.Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-336">When overriding <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span>
            </span>
            <span data-ttu-id="ba1c5-337">Дополнительные сведения о реализации <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-337">For more information about how to implement <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="ba1c5-338">Дополнительные сведения о <see cref="M:System.ComponentModel.Component.Dispose" /> и <see cref="M:System.Object.Finalize" />, в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-338">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public virtual int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="ba1c5-339">Ссылка на отложенный асинхронный запрос, который необходимо завершить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-339">The reference to the pending asynchronous request to finish.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-340">Ожидает завершения отложенного асинхронного чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-340">Waits for the pending asynchronous read to complete.</span>
          </span>
          <span data-ttu-id="ba1c5-341">(Рекомендуется использовать <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-341">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-342">Количество байтов, считанных из потока, от нуля (0) до количества запрошенных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-342">The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</span>
          </span>
          <span data-ttu-id="ba1c5-343">Потоки возвращают нуль (0) только в конце. В противном случае они должны блокироваться до тех пор, пока доступен хотя бы один байт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-343">Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-344">В платформе .NET Framework 4 и более ранних версий для реализации операций асинхронного ввода-вывода необходимо использовать такие методы, как <xref:System.IO.Stream.BeginRead%2A> и <xref:System.IO.Stream.EndRead%2A> .</span><span class="sxs-lookup"><span data-stu-id="ba1c5-344">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="ba1c5-345">Эти методы по-прежнему доступны в [!INCLUDE[net_v45](~/includes/net-v45-md.md)] для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, и <xref:System.IO.Stream.FlushAsync%2A>, более легко реализации асинхронных операций ввода-вывода справки.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-345">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="ba1c5-346">Вызовите `EndRead` , чтобы определить, сколько байтов, считанных из потока.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-346">Call `EndRead` to determine how many bytes were read from the stream.</span></span>  
  
 <span data-ttu-id="ba1c5-347">`EndRead` может быть вызван один раз на каждый <xref:System.IAsyncResult> из <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-347">`EndRead` can be called once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="ba1c5-348">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-348">This method blocks until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-349">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-349">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba1c5-350">Обработчик отложенной операции считывания не доступен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-350">A handle to the pending read operation is not available.</span>
          </span>
          <span data-ttu-id="ba1c5-351">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-351">-or-</span>
          </span>
          <span data-ttu-id="ba1c5-352">Ожидающая операция не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-352">The pending operation does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba1c5-353">
            <paramref name="asyncResult" /> не происходит из метода <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> в текущем потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-353">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-354">Поток закрыт, или произошла внутренняя ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-354">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public virtual void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="ba1c5-355">Ссылка на невыполненный асинхронный запрос ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-355">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-356">Заканчивает операцию асинхронной записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-356">Ends an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="ba1c5-357">(Рекомендуется использовать <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-357">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-358">В платформе .NET Framework 4 и более ранних версий для реализации операций асинхронного ввода-вывода необходимо использовать такие методы, как <xref:System.IO.Stream.BeginWrite%2A> и <xref:System.IO.Stream.EndWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-358">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="ba1c5-359">Эти методы по-прежнему доступны в [!INCLUDE[net_v45](~/includes/net-v45-md.md)] для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, и <xref:System.IO.Stream.FlushAsync%2A>, более легко реализации асинхронных операций ввода-вывода справки.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-359">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="ba1c5-360">`EndWrite` должен вызываться ровно по одному разу для каждого <xref:System.IAsyncResult> из <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-360">`EndWrite` must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="ba1c5-361">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-361">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="ba1c5-362">Ошибки, возникающие при выполнении запроса асинхронной записи, например ошибка диска в процессе запроса ввода-вывода, возникают в потоке пула потоков и отображаются при вызове `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-362">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to `EndWrite`.</span></span> <span data-ttu-id="ba1c5-363">При вызове исключения, вызванные пула потоков не будут видны `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-363">Exceptions thrown by the thread pool thread will not be visible when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-364">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-364">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba1c5-365">Обработчик отложенной операции записи не доступен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-365">A handle to the pending write operation is not available.</span>
          </span>
          <span data-ttu-id="ba1c5-366">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-366">-or-</span>
          </span>
          <span data-ttu-id="ba1c5-367">Ожидающая операция не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-367">The pending operation does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba1c5-368">
            <paramref name="asyncResult" /> не происходит из метода <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> в текущем потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-368">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-369">Поток закрыт, или произошла внутренняя ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-369">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-370">При переопределении в производном классе очищает все буферы данного потока и вызывает запись данных буферов в базовое устройство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-370">When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-371">Переопределить `Flush` для потоков, которые реализуют буфер.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-371">Override `Flush` on streams that implement a buffer.</span></span> <span data-ttu-id="ba1c5-372">Этот метод можно используйте для перемещения сведений из основного буфера в место назначения, очистить буфер или оба.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-372">Use this method to move any information from an underlying buffer to its destination, clear the buffer, or both.</span></span> <span data-ttu-id="ba1c5-373">В зависимости от состояния объекта может потребоваться изменить текущее положение в потоке (например, если основной поток поддерживает поиск).</span><span class="sxs-lookup"><span data-stu-id="ba1c5-373">Depending upon the state of the object, you might have to modify the current position within the stream (for example, if the underlying stream supports seeking).</span></span> <span data-ttu-id="ba1c5-374">Дополнительные сведения см. в разделе <xref:System.IO.Stream.CanSeek%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-374">For additional information see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  
  
 <span data-ttu-id="ba1c5-375">При использовании <xref:System.IO.StreamWriter> или <xref:System.IO.BinaryWriter> класса, не выполнить сброс базовый <xref:System.IO.Stream> объекта.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-375">When using the <xref:System.IO.StreamWriter> or <xref:System.IO.BinaryWriter> class, do not flush the base <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="ba1c5-376">Вместо этого используйте класс <xref:System.IO.Stream.Flush%2A> или <xref:System.IO.Stream.Close%2A> метод, который гарантирует, что данные сначала записываются в основной поток и затем записать в файл.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-376">Instead, use the class's <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method, which makes sure that the data is flushed to the underlying stream first and then written to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-377">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-377">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FlushAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-378">Асинхронно очищает все буферы для этого потока и вызывает запись всех буферизованных данных в базовое устройство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-378">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-379">Асинхронно очищает все буферы для этого потока и вызывает запись всех буферизованных данных в базовое устройство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-379">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-380">Задача, представляющая асинхронную операцию очистки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-380">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-381">Если в производном классе, такие как <xref:System.IO.Compression.DeflateStream> или <xref:System.IO.Compression.GZipStream>, не сбрасывает буфера в своей реализации <xref:System.IO.Stream.Flush%2A> метод, <xref:System.IO.Stream.FlushAsync%2A> метод буфер не очищается.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-381">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-382">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-382">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="ba1c5-383">Токен для отслеживания запросов отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-383">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="ba1c5-384">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-384">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-385">Асинхронно очищает все буферы данного потока, вызывает запись буферизованных данных в базовое устройство и отслеживает запросы отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-385">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-386">Задача, представляющая асинхронную операцию очистки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-386">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-387">Если операция отменена до ее завершения, возвращаемая задача содержит <xref:System.Threading.Tasks.TaskStatus.Canceled> значение <xref:System.Threading.Tasks.Task.Status%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-387">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="ba1c5-388">Если в производном классе, такие как <xref:System.IO.Compression.DeflateStream> или <xref:System.IO.Compression.GZipStream>, не сбрасывает буфера в своей реализации <xref:System.IO.Stream.Flush%2A> метод, <xref:System.IO.Stream.FlushAsync%2A> метод буфер не очищается.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-388">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-389">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-389">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public abstract long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Length" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-390">При переопределении в производном классе получает длину потока в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-390">When overridden in a derived class, gets the length in bytes of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1c5-391">Длинное значение, представляющее длину потока в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-391">A long value representing the length of the stream in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-392">Класс, созданный на основе класса <see langword="Stream" />, не поддерживает возможность поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-392">A class derived from <see langword="Stream" /> does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-393">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-393">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.Stream Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.Stream Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.Stream.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As Stream " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::Stream ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-394">Объект <see langword="Stream" /> без резервного хранилища.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-394">A <see langword="Stream" /> with no backing store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-395">Используйте `Null` перенаправлять выходные данные в поток, который не использует ресурсы операционной системы.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-395">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span> <span data-ttu-id="ba1c5-396">При методы `Stream` , обеспечивающие вызванную записи `Null`, просто возвращается и данные не записываются.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-396">When the methods of `Stream` that provide writing are invoked on `Null`, the call simply returns, and no data is written.</span></span> <span data-ttu-id="ba1c5-397">`Null` также реализует `Read` метод, который возвращает ноль, не считывая данные.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-397">`Null` also implements a `Read` method that returns zero without reading data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectInvariant">
      <MemberSignature Language="C#" Value="protected virtual void ObjectInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ObjectInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ObjectInvariant" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ObjectInvariant ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ObjectInvariant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Do not call or override this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-398">Обеспечивает поддержку для <see cref="T:System.Diagnostics.Contracts.Contract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-398">Provides support for a <see cref="T:System.Diagnostics.Contracts.Contract" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-399">При переопределении в производном классе получает или задает позицию в текущем потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-399">When overridden in a derived class, gets or sets the position within the current stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1c5-400">Текущее положение в потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-400">The current position within the stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-401">Поток должен поддерживать поиск требуется получить или задать положение.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-401">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="ba1c5-402">Используйте <xref:System.IO.Stream.CanSeek%2A> свойство, чтобы определить, поддерживает ли поток поиск.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-402">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="ba1c5-403">Поддерживается поиск в любом месте за пределами длины потока.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-403">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 <span data-ttu-id="ba1c5-404">`Position` Свойства не хранить список число байтов из потока, который были использованы, пропущена, или оба.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-404">The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-405">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-405">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-406">Поток не поддерживает поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-406">The stream does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-407">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-407">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;System::Byte&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ba1c5-408">Массив байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-408">An array of bytes.</span>
          </span>
          <span data-ttu-id="ba1c5-409">После завершения выполнения данного метода буфер содержит указанный массив байтов, в котором значения в интервале между <c>offset</c> и величиной "<c>offset</c> + <c>count</c> – 1" заменены байтами, считанными из текущего источника.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-409">When this method returns, the buffer contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c> - 1) replaced by the bytes read from the current source.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="ba1c5-410">Смещение байтов (начиная с нуля) в <c>buffer</c>, с которого начинается сохранение данных, считанных из текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-410">The zero-based byte offset in <c>buffer</c> at which to begin storing the data read from the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ba1c5-411">Максимальное количество байтов, которое должно быть считано из текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-411">The maximum number of bytes to be read from the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-412">При переопределении в производном классе считывает последовательность байтов из текущего потока и перемещает позицию в потоке на число считанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-412">When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-413">Общее количество байтов, считанных в буфер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-413">The total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="ba1c5-414">Это число может быть меньше количества запрошенных байтов, если столько байтов в настоящее время недоступно, а также равняться нулю (0), если был достигнут конец потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-414">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-415">Используйте <xref:System.IO.Stream.CanRead%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр чтение.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-415">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="ba1c5-416">Используйте <xref:System.IO.Stream.ReadAsync%2A> метод для асинхронного чтения из текущего потока.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-416">Use the <xref:System.IO.Stream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>  
  
 <span data-ttu-id="ba1c5-417">Реализации этого метода считывают максимальное количество `count` байтов из текущего потока и сохраняет их в `buffer` начиная `offset`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-417">Implementations of this method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="ba1c5-418">Текущее положение в потоке увеличивается на число считанных байтов; Однако при возникновении исключения текущее положение в потоке не изменяется.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-418">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="ba1c5-419">Реализации возвращают число считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-419">Implementations return the number of bytes read.</span></span> <span data-ttu-id="ba1c5-420">Реализация будет блокироваться до могут считываться хотя бы один байт данных, в случае, если данные недоступны.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-420">The implementation will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="ba1c5-421"><xref:System.IO.Stream.Read%2A> Возвращает 0 только в том случае, если нет дополнительных данных в потоке и больше не ожидается (например сокет закрыт или конца файла).</span><span class="sxs-lookup"><span data-stu-id="ba1c5-421"><xref:System.IO.Stream.Read%2A> returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="ba1c5-422">Реализация может вернуть меньше байтов, чем было запрошено, даже если не достигнут конец потока.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-422">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="ba1c5-423">Используйте <xref:System.IO.BinaryReader> для чтения простых типов данных.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-423">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1c5-424">В следующем примере показано, как использовать <xref:System.IO.Stream.Read%2A> для чтения блока данных.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-424">The following example shows how to use <xref:System.IO.Stream.Read%2A> to read a block of data.</span></span>  
  
 [!code-cpp[Classic Stream.Read Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.Read Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba1c5-425">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-425">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-426">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-426">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba1c5-427">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-427">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-428">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-428">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-429">Поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-429">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-430">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-430">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-431">Асинхронно считывает последовательность байтов из текущего потока и перемещает позицию внутри потока на число считанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-431">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Memory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (buffer As Byte(), offset As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ba1c5-432">Буфер, в который записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-432">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="ba1c5-433">Смещение байтов в <c>buffer</c>, с которого начинается запись данных, считанных из потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-433">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ba1c5-434">Максимальное число байтов, предназначенных для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-434">The maximum number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-435">Асинхронно считывает последовательность байтов из текущего потока и перемещает позицию внутри потока на число считанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-435">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-436">Задача, представляющая асинхронную операцию чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-436">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="ba1c5-437">Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-437">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="ba1c5-438">Значение результата может быть меньше запрошенного числа байтов, если число доступных в данный момент байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-438">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-439"><xref:System.IO.Stream.ReadAsync%2A> Метод позволяет выполнять ресурсоемких операций ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-439">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="ba1c5-440">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-440">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="ba1c5-441">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-441">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="ba1c5-442">Используйте <xref:System.IO.Stream.CanRead%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр чтение.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-442">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1c5-443">В следующем примере показано, как для асинхронного чтения из файла.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-443">The following example shows how to read from a file asynchronously.</span></span> <span data-ttu-id="ba1c5-444">В этом примере <xref:System.IO.FileStream> класс, который является производным от <xref:System.IO.Stream> класса.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-444">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#4](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example4.cs#4)]
 [!code-vb[Asynchronous_File_IO_async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-445">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-445">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba1c5-446">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-446">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba1c5-447">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-447">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-448">Поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-448">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-449">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-449">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba1c5-450">Поток в настоящее время используется предыдущей операцией чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-450">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ba1c5-451">Буфер, в который записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-451">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="ba1c5-452">Смещение байтов в <c>buffer</c>, с которого начинается запись данных, считанных из потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-452">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ba1c5-453">Максимальное число байтов, предназначенных для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-453">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba1c5-454">Токен для отслеживания запросов отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-454">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="ba1c5-455">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-455">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-456">Асинхронно считывает последовательность байтов из текущего потока, перемещает позицию в потоке на число считанных байтов и отслеживает запросы отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-456">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-457">Задача, представляющая асинхронную операцию чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-457">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="ba1c5-458">Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-458">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="ba1c5-459">Значение результата может быть меньше запрошенного числа байтов, если число доступных в данный момент байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-459">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-460"><xref:System.IO.Stream.ReadAsync%2A> Метод позволяет выполнять ресурсоемких операций ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-460">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="ba1c5-461">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-461">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="ba1c5-462">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-462">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="ba1c5-463">Используйте <xref:System.IO.Stream.CanRead%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр чтение.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-463">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="ba1c5-464">Если операция отменена до ее завершения, возвращаемая задача содержит <xref:System.Threading.Tasks.TaskStatus.Canceled> значение <xref:System.Threading.Tasks.Task.Status%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-464">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="ba1c5-465">Пример см. в разделе <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-465">For an example, see the <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-466">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-466">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba1c5-467">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-467">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba1c5-468">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-468">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-469">Поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-469">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-470">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-470">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba1c5-471">Поток в настоящее время используется предыдущей операцией чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-471">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-472">Считывает байт из потока и перемещает позицию в потоке на один байт или возвращает -1, если достигнут конец потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-472">Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-473">Байт без знака, приведенный к <see langword="Int32" />, или значение -1, если достигнут конец потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-473">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-474">Используйте <xref:System.IO.Stream.CanRead%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр чтение.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-474">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="ba1c5-475">Попытка работы с потоком после закрытия потока может создавать <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-475">Attempts to manipulate the stream after the stream has been closed could throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-476">Поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-476">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-477">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-477">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ba1c5-478">Реализация по умолчанию в <see langword="Stream" /> создает новый однобайтовый массив и вызывает <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-478">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />.</span>
            </span>
            <span data-ttu-id="ba1c5-479">Это формально верно, но неэффективно.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-479">While this is formally correct, it is inefficient.</span>
            </span>
            <span data-ttu-id="ba1c5-480">Любой поток с внутренним буфером следует переопределить этот метод и предоставить гораздо более эффективную версию, которая непосредственного чтения буфера, как избежать дополнительное размещение массива при каждом вызове.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-480">Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public virtual int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-481">Возвращает или задает значение в миллисекундах, определяющее период, в течение которого поток будет пытаться выполнить операцию чтения, прежде чем истечет время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-481">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1c5-482">Значение в миллисекундах, определяющее период, в течение которого поток будет пытаться выполнить операцию чтения, прежде чем истечет время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-482">A value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba1c5-483">Метод <see cref="P:System.IO.Stream.ReadTimeout" /> всегда создает исключение <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-483">The <see cref="P:System.IO.Stream.ReadTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ba1c5-484">
              <see cref="P:System.IO.Stream.ReadTimeout" /> Свойство должно переопределяться для предоставления соответствующего расширения функциональности для потока.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-484">The <see cref="P:System.IO.Stream.ReadTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span>
            </span>
            <span data-ttu-id="ba1c5-485">Если поток не поддерживает истечения времени ожидания, это свойство необходимо вызвать <see cref="T:System.InvalidOperationException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-485">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public abstract long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="ba1c5-486">Смещение в байтах относительно параметра <c>origin</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-486">A byte offset relative to the <c>origin</c> parameter.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="ba1c5-487">Значение типа <see cref="T:System.IO.SeekOrigin" />, указывающее точку ссылки, которая используется для получения новой позиции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-487">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-488">При переопределении в производном классе задает позицию в текущем потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-488">When overridden in a derived class, sets the position within the current stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-489">Новая позиция в текущем потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-489">The new position within the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-490">Используйте <xref:System.IO.Stream.CanSeek%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр поиск.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-490">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the current instance supports seeking.</span></span>  
  
 <span data-ttu-id="ba1c5-491">Если `offset` является отрицательным, новая позиция должна предшествовать позиции, заданной параметром `origin` на число байтов, указанное в `offset`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-491">If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="ba1c5-492">Если `offset` равно нулю (0), новая позиция должна быть задано с помощью `origin`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-492">If `offset` is zero (0), the new position is required to be the position specified by `origin`.</span></span> <span data-ttu-id="ba1c5-493">Если `offset` положительное, новое положение должно следовать за позиции, указанной параметром `origin` на число байтов, указанное в `offset`.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-493">If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="ba1c5-494">Классы, производные от `Stream` , поддерживающего поиск должен переопределять этот метод для предоставления функциональных возможностей, описанных выше.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-494">Classes derived from `Stream` that support seeking must override this method to provide the functionality described above.</span></span>  
  
 <span data-ttu-id="ba1c5-495">Поддерживается поиск в любом месте за пределами длины потока.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-495">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-496">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-496">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-497">Поток не поддерживает поиск, если поток создан на основе канала или вывода консоли.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-497">The stream does not support seeking, such as if the stream is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-498">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-498">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public abstract void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ba1c5-499">Нужная длина текущего потока в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-499">The desired length of the current stream in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-500">При переопределении в производном классе задает длину текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-500">When overridden in a derived class, sets the length of the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-501">Если указанное значение меньше текущей длины потока, поток сокращается.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-501">If the specified value is less than the current length of the stream, the stream is truncated.</span></span> <span data-ttu-id="ba1c5-502">Если указанное значение больше текущей длины потока, поток расширяется.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-502">If the specified value is larger than the current length of the stream, the stream is expanded.</span></span> <span data-ttu-id="ba1c5-503">Если поток расширяется, содержимое потока между старой и новой длиной не определены.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-503">If the stream is expanded, the contents of the stream between the old and the new length are not defined.</span></span>  
  
 <span data-ttu-id="ba1c5-504">Поток должен поддерживать запись и поиск для `SetLength` для работы.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-504">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
 <span data-ttu-id="ba1c5-505">Используйте <xref:System.IO.Stream.CanWrite%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр запись и <xref:System.IO.Stream.CanSeek%2A> свойства, чтобы определить, поддерживается ли поиск.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-505">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing, and the <xref:System.IO.Stream.CanSeek%2A> property to determine whether seeking is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-506">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-506">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-507">Поток не поддерживает ни поиск, ни запись, например, если поток создан на основе канала или вывода консоли.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-507">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-508">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-508">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.Stream Synchronized (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream Synchronized(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Synchronized(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ Synchronized(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="ba1c5-509">Синхронизируемый объект <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-509">The <see cref="T:System.IO.Stream" /> object to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-510">Создает потокобезопасную (синхронизированную) оболочку для заданного объекта <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-510">Creates a thread-safe (synchronized) wrapper around the specified <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-511">Потокобезопасный объект <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-511">A thread-safe <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-512">Этот метод возвращает класс, который создает оболочку для заданного <xref:System.IO.Stream> объекта и ограничивает доступ к нему из нескольких потоков.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-512">This method returns a class that wraps the specified <xref:System.IO.Stream> object and restricts access to it from multiple threads.</span></span> <span data-ttu-id="ba1c5-513">Любой доступ к <xref:System.IO.Stream> объект будет потокобезопасным.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-513">All access to the <xref:System.IO.Stream> object will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-514">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-514">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ba1c5-515">Массив байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-515">An array of bytes.</span>
          </span>
          <span data-ttu-id="ba1c5-516">Этот метод копирует <c>count</c> байтов из <c>buffer</c> в текущий поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-516">This method copies <c>count</c> bytes from <c>buffer</c> to the current stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="ba1c5-517">Отсчитываемое от нуля смещение байтов в буфере <c>buffer</c>, с которого начинается копирование байтов в текущий поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-517">The zero-based byte offset in <c>buffer</c> at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ba1c5-518">Количество байтов, которое необходимо записать в текущий поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-518">The number of bytes to be written to the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-519">При переопределении в производном классе записывает последовательность байтов в текущий поток и перемещает текущую позицию в нем вперед на число записанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-519">When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-520">Используйте <xref:System.IO.Stream.CanWrite%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр запись.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-520">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="ba1c5-521">Используйте <xref:System.IO.Stream.WriteAsync%2A> метод асинхронная запись в текущий поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-521">Use the <xref:System.IO.Stream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>  
  
 <span data-ttu-id="ba1c5-522">Если операция записи прошла успешно, положение в потоке увеличивается число записанных байтов.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-522">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="ba1c5-523">Если возникает исключение, положение в потоке остается без изменений.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-523">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba1c5-524">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-524">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-525">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-525">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba1c5-526">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-526">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-527">Произошла ошибка ввода-вывода, например, связанная с тем, что не удается найти указанный файл.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-527">An I/O error occured, such as the specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-528">Поток не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-528">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-529">Метод <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> был вызван после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-529">
              <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> was called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-530">Асинхронно записывает последовательность байтов в текущий поток и перемещает текущую позицию внутри потока на число записанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-530">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;byte&gt; source, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Byte(), offset As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ba1c5-531">Буфер, из которого записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-531">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="ba1c5-532">Смещение байтов (начиная с нуля) в <c>buffer</c>, с которого начинается копирование байтов в поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-532">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ba1c5-533">Максимальное число байтов для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-533">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-534">Асинхронно записывает последовательность байтов в текущий поток и перемещает текущую позицию внутри потока на число записанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-534">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-535">Задача, представляющая асинхронную операцию записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-535">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-536"><xref:System.IO.Stream.WriteAsync%2A> Метод позволяет выполнять ресурсоемких операций ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-536">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="ba1c5-537">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-537">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="ba1c5-538">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-538">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="ba1c5-539">Используйте <xref:System.IO.Stream.CanWrite%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр запись.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-539">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1c5-540">В следующем примере показано, как асинхронно записывать в файл.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-540">The following example shows how to write asynchronously to a file.</span></span> <span data-ttu-id="ba1c5-541">В этом примере <xref:System.IO.FileStream> класс, который является производным от <xref:System.IO.Stream> класса.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-541">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-542">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-542">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba1c5-543">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-543">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba1c5-544">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-544">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-545">Поток не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-545">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-546">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-546">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba1c5-547">Поток в настоящее время используется предыдущей операцией записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-547">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="ba1c5-548">Буфер, из которого записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-548">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="ba1c5-549">Смещение байтов (начиная с нуля) в <c>buffer</c>, с которого начинается копирование байтов в поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-549">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="ba1c5-550">Максимальное число байтов для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-550">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ba1c5-551">Токен для отслеживания запросов отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-551">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="ba1c5-552">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-552">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-553">Асинхронно записывает последовательность байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-553">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1c5-554">Задача, представляющая асинхронную операцию записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-554">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-555"><xref:System.IO.Stream.WriteAsync%2A> Метод позволяет выполнять ресурсоемких операций ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-555">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="ba1c5-556">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-556">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="ba1c5-557">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-557">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="ba1c5-558">Используйте <xref:System.IO.Stream.CanWrite%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр запись.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-558">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="ba1c5-559">Если операция отменена до ее завершения, возвращаемая задача содержит <xref:System.Threading.Tasks.TaskStatus.Canceled> значение <xref:System.Threading.Tasks.Task.Status%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-559">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="ba1c5-560">Пример см. в разделе <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-560">For an example, see the <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba1c5-561">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-561">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba1c5-562">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-562">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba1c5-563">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-563">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-564">Поток не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-564">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-565">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-565">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba1c5-566">Поток в настоящее время используется предыдущей операцией записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-566">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public virtual void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteByte(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ba1c5-567">Байт, записываемый в поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-567">The byte to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1c5-568">Записывает байт в текущее положение в потоке и перемещает позицию в потоке вперед на один байт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-568">Writes a byte to the current position in the stream and advances the position within the stream by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1c5-569">Используйте <xref:System.IO.Stream.CanWrite%2A> свойство, чтобы определить, поддерживает ли текущий экземпляр запись.</span><span class="sxs-lookup"><span data-stu-id="ba1c5-569">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ba1c5-570">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-570">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ba1c5-571">Поток не поддерживает запись или был закрыт до начала операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-571">The stream does not support writing, or the stream is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ba1c5-572">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-572">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ba1c5-573">Реализация по умолчанию в <see langword="Stream" /> создает новый однобайтовый массив и вызывает <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-573">The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />.</span>
            </span>
            <span data-ttu-id="ba1c5-574">Это формально верно, но неэффективно.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-574">While this is formally correct, it is inefficient.</span>
            </span>
            <span data-ttu-id="ba1c5-575">Любой поток с внутренним буфером следует переопределить этот метод и предоставить гораздо более эффективную версию, которая записывает их в буфер напрямую, как избежать дополнительное размещение массива при каждом вызове.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-575">Any stream with an internal buffer should override this method and provide a much more efficient version that writes to the buffer directly, avoiding the extra array allocation on every call.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public virtual int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1c5-576">Возвращает или задает значение в миллисекундах, определяющее период, в течение которого поток будет пытаться выполнить операцию записи, прежде чем истечет время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-576">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1c5-577">Значение в миллисекундах, определяющее период, в течение которого поток будет пытаться выполнить операцию записи, прежде чем истечет время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-577">A value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba1c5-578">Метод <see cref="P:System.IO.Stream.WriteTimeout" /> всегда создает исключение <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1c5-578">The <see cref="P:System.IO.Stream.WriteTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ba1c5-579">
              <see cref="P:System.IO.Stream.WriteTimeout" /> Свойство должно переопределяться для предоставления соответствующего расширения функциональности для потока.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-579">The <see cref="P:System.IO.Stream.WriteTimeout" /> property should be overridden to provide the appropriate behavior for the stream.</span>
            </span>
            <span data-ttu-id="ba1c5-580">Если поток не поддерживает истечения времени ожидания, это свойство необходимо вызвать <see cref="T:System.InvalidOperationException" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba1c5-580">If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>