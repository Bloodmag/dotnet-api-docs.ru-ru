<Type Name="Stream" FullName="System.IO.Stream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e126d4a1c2b7491f506aeaf53d62a461fee5276" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40449534" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Stream : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Stream extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Stream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Stream&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stream abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Stream = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8b31b-101">Предоставляет универсальное представление последовательности байтов.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b31b-101">Provides a generic view of a sequence of bytes.</span>
      </span>
      <span data-ttu-id="8b31b-102">Этот класс является абстрактным.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b31b-102">This is an abstract class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-103"><xref:System.IO.Stream> является абстрактным базовым классом всех потоков.</span><span class="sxs-lookup"><span data-stu-id="8b31b-103"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span> <span data-ttu-id="8b31b-104">Поток - это абстракция последовательности байтов, например файла, устройства ввода-вывода, межпроцессного канала связи или сокета TCP/IP.</span><span class="sxs-lookup"><span data-stu-id="8b31b-104">A stream is an abstraction of a sequence of bytes, such as a file, an input/output device, an inter-process communication pipe, or a TCP/IP socket.</span></span> <span data-ttu-id="8b31b-105"><xref:System.IO.Stream> Класс и его производные классы обеспечивают универсальное представление различных типов ввода и вывода и изолируют программиста от конкретных особенностей операционной системы и базовых устройств.</span><span class="sxs-lookup"><span data-stu-id="8b31b-105">The <xref:System.IO.Stream> class and its derived classes provide a generic view of these different types of input and output, and isolate the programmer from the specific details of the operating system and the underlying devices.</span></span>  
  
 <span data-ttu-id="8b31b-106">Потоки включают три основные операции:</span><span class="sxs-lookup"><span data-stu-id="8b31b-106">Streams involve three fundamental operations:</span></span>  
  
-   <span data-ttu-id="8b31b-107">Возможность чтения из потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-107">You can read from streams.</span></span> <span data-ttu-id="8b31b-108">Чтение — это перенос данных из потока в структуру данных, например массив байтов.</span><span class="sxs-lookup"><span data-stu-id="8b31b-108">Reading is the transfer of data from a stream into a data structure, such as an array of bytes.</span></span>  
  
-   <span data-ttu-id="8b31b-109">Возможность записи в поток.</span><span class="sxs-lookup"><span data-stu-id="8b31b-109">You can write to streams.</span></span> <span data-ttu-id="8b31b-110">— Это передача данных из структуры данных в поток.</span><span class="sxs-lookup"><span data-stu-id="8b31b-110">Writing is the transfer of data from a data structure into a stream.</span></span>  
  
-   <span data-ttu-id="8b31b-111">Потоки могут поддерживать поиск.</span><span class="sxs-lookup"><span data-stu-id="8b31b-111">Streams can support seeking.</span></span> <span data-ttu-id="8b31b-112">Поиск ссылается на запрос и изменение текущей позиции внутри потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-112">Seeking refers to querying and modifying the current position within a stream.</span></span> <span data-ttu-id="8b31b-113">Поиск возможность зависит от вида резервного хранилища, в потоке.</span><span class="sxs-lookup"><span data-stu-id="8b31b-113">Seek capability depends on the kind of backing store a stream has.</span></span> <span data-ttu-id="8b31b-114">Например сетевые потоки отсутствует унифицированное представление текущего положения и поэтому обычно не поддерживает поиск.</span><span class="sxs-lookup"><span data-stu-id="8b31b-114">For example, network streams have no unified concept of a current position, and therefore typically do not support seeking.</span></span>  
  
 <span data-ttu-id="8b31b-115">Некоторые из наиболее часто используемые потоков, которые наследуют от <xref:System.IO.Stream> являются <xref:System.IO.FileStream>, и <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-115">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 <span data-ttu-id="8b31b-116">В зависимости от базового источника данных или репозиторий потоки могут поддерживать только некоторые из этих возможностей.</span><span class="sxs-lookup"><span data-stu-id="8b31b-116">Depending on the underlying data source or repository, streams might support only some of these capabilities.</span></span> <span data-ttu-id="8b31b-117">Поток для его возможности можно запросить с помощью <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, и <xref:System.IO.Stream.CanSeek%2A> свойства <xref:System.IO.Stream> класса.</span><span class="sxs-lookup"><span data-stu-id="8b31b-117">You can query a stream for its capabilities by using the <xref:System.IO.Stream.CanRead%2A>, <xref:System.IO.Stream.CanWrite%2A>, and <xref:System.IO.Stream.CanSeek%2A> properties of the <xref:System.IO.Stream> class.</span></span>  
  
 <span data-ttu-id="8b31b-118"><xref:System.IO.Stream.Read%2A> И <xref:System.IO.Stream.Write%2A> методы чтения и записи данных в различных форматах.</span><span class="sxs-lookup"><span data-stu-id="8b31b-118">The <xref:System.IO.Stream.Read%2A> and <xref:System.IO.Stream.Write%2A> methods read and write data in a variety of formats.</span></span> <span data-ttu-id="8b31b-119">Для потоков, поддерживающих поиск, используйте <xref:System.IO.Stream.Seek%2A> и <xref:System.IO.Stream.SetLength%2A> методы и <xref:System.IO.Stream.Position%2A> и <xref:System.IO.Stream.Length%2A> свойства, чтобы запрашивать и изменять текущее положение и длину потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-119">For streams that support seeking, use the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods and the <xref:System.IO.Stream.Position%2A> and <xref:System.IO.Stream.Length%2A> properties to query and modify the current position and length of a stream.</span></span>  
  
 <span data-ttu-id="8b31b-120">Этот тип реализует <xref:System.IDisposable> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="8b31b-120">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="8b31b-121">Когда вы закончите, используя тип, следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="8b31b-121">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="8b31b-122">Чтобы удалить тип напрямую, вызовите его <xref:System.IDisposable.Dispose%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-122">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="8b31b-123">Чтобы избавиться от его косвенно, используйте языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8b31b-123">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="8b31b-124">Дополнительные сведения см. в разделе «С помощью объекта, реализует IDisposable» <xref:System.IDisposable> разделу интерфейса.</span><span class="sxs-lookup"><span data-stu-id="8b31b-124">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="8b31b-125">Удаление <xref:System.IO.Stream> объект очищает запись всех буферизованных данных и по сути вызывает <xref:System.IO.Stream.Flush%2A> метод для вас.</span><span class="sxs-lookup"><span data-stu-id="8b31b-125">Disposing a <xref:System.IO.Stream> object flushes any buffered data, and essentially calls the <xref:System.IO.Stream.Flush%2A> method for you.</span></span> <span data-ttu-id="8b31b-126"><xref:System.IO.Stream.Dispose%2A> также освобождает ресурсы операционной системы, такие как дескрипторы файлов, сетевые подключения или память, используемая для внутренней буферизации.</span><span class="sxs-lookup"><span data-stu-id="8b31b-126"><xref:System.IO.Stream.Dispose%2A> also releases operating system resources such as file handles, network connections, or memory used for any internal buffering.</span></span> <span data-ttu-id="8b31b-127"><xref:System.IO.BufferedStream> Класс предоставляет возможность создания вокруг другого потока, чтобы улучшить чтения и записи производительности оболочки в буферизованный поток.</span><span class="sxs-lookup"><span data-stu-id="8b31b-127">The <xref:System.IO.BufferedStream> class provides the capability of wrapping a buffered stream around another stream in order to improve read and write performance.</span></span>  
  
 <span data-ttu-id="8b31b-128">Начиная с [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.IO.Stream> класс включает в себя асинхронные методы для упрощения асинхронных операций.</span><span class="sxs-lookup"><span data-stu-id="8b31b-128">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Stream> class includes async methods to simplify asynchronous operations.</span></span> <span data-ttu-id="8b31b-129">Асинхронный метод содержит `Async` в своем имени, таких как <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, и <xref:System.IO.Stream.FlushAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-129">An async method contains `Async` in its name, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>.</span></span> <span data-ttu-id="8b31b-130">Эти методы позволяют выполнять ресурсоемкие операции ввода-вывода без блокировки основного потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-130">These methods enable you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="8b31b-131">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="8b31b-131">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="8b31b-132">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="8b31b-132">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="8b31b-133">При использовании в [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложения, <xref:System.IO.Stream> включает два метода расширения: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> и <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-133">When used in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, <xref:System.IO.Stream> includes two extension methods: <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>.</span></span> <span data-ttu-id="8b31b-134">Эти методы преобразуют <xref:System.IO.Stream> объекта в поток в [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8b31b-134">These methods convert a <xref:System.IO.Stream> object to a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)].</span></span> <span data-ttu-id="8b31b-135">Также можно преобразовать в поток в [!INCLUDE[wrt](~/includes/wrt-md.md)] для <xref:System.IO.Stream> объекта с помощью <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> и <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="8b31b-135">You can also convert a stream in the [!INCLUDE[wrt](~/includes/wrt-md.md)] to a <xref:System.IO.Stream> object by using the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> methods.</span></span> <span data-ttu-id="8b31b-136">Дополнительные сведения см. в разделе [как: преобразование между потоками .NET Framework и потоками среды выполнения Windows](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span><span class="sxs-lookup"><span data-stu-id="8b31b-136">For more information, see [How to: Convert Between .NET Framework Streams and Windows Runtime Streams](~/docs/standard/io/how-to-convert-between-dotnet-streams-and-winrt-streams.md)</span></span>  
  
 <span data-ttu-id="8b31b-137">Некоторые реализации потоков выполняют локальную буферизацию базовых данных для повышения производительности.</span><span class="sxs-lookup"><span data-stu-id="8b31b-137">Some stream implementations perform local buffering of the underlying data to improve performance.</span></span> <span data-ttu-id="8b31b-138">Для таких потоков, можно использовать <xref:System.IO.Stream.Flush%2A> или <xref:System.IO.Stream.FlushAsync%2A> метод для удаления внутренних буферов и обеспечения записи всех данных в базовый источник данных или репозиторий.</span><span class="sxs-lookup"><span data-stu-id="8b31b-138">For such streams, you can use the <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.FlushAsync%2A> method to clear any internal buffers and ensure that all data has been written to the underlying data source or repository.</span></span>  
  
 <span data-ttu-id="8b31b-139">Если необходим поток без резервного хранилища (также известный как корзины), используйте <xref:System.IO.Stream.Null> поле, чтобы получить экземпляр потока, который предназначен для этой цели.</span><span class="sxs-lookup"><span data-stu-id="8b31b-139">If you need a stream with no backing store (also known as a bit bucket), use the <xref:System.IO.Stream.Null> field to retrieve an instance of a stream that is designed for this purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b31b-140">Следующий пример демонстрирует использование двух <xref:System.IO.FileStream> объектов для асинхронного копирования файлов из одного каталога в другой каталог.</span><span class="sxs-lookup"><span data-stu-id="8b31b-140">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another directory.</span></span> <span data-ttu-id="8b31b-141">Класс <xref:System.IO.FileStream> является производным от класса <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-141">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span> <span data-ttu-id="8b31b-142">Обратите внимание, что обработчик событий <xref:System.Web.UI.WebControls.Button.Click> для элемента управления <xref:System.Windows.Controls.Button> помечается с помощью модификатора `async` , так как вызывает асинхронный метод.</span><span class="sxs-lookup"><span data-stu-id="8b31b-142">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="8b31b-143">
        <para>При реализации производным от класса <see cref="T:System.IO.Stream" />, обязаны предоставлять реализацию для <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> и <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> методы. Асинхронные методы <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, и <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> используют синхронные методы <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> и <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> в их реализации. Таким образом, реализации методов <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> и <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> будет правильно работать с асинхронными методами. Реализация по умолчанию <see cref="M:System.IO.Stream.ReadByte" /> и <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> создать массив одноэлементных байт, а затем вызвать реализации методов <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> и <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />. При наследовании от <see cref="T:System.IO.Stream" />, рекомендуется переопределять эти методы, чтобы доступ к внутреннему буферу, в том случае, если она есть, значительно повысить производительность. Необходимо также указать реализации <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, и <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.  Не следует переопределять <see cref="M:System.IO.Stream.Close" /> метод, вместо этого поместите все <see cref="T:System.IO.Stream" /> логика очистки в <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> метод. Дополнительные сведения см. в разделе [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="8b31b-143">
          <para>When you implement a derived class of <see cref="T:System.IO.Stream" />, you must provide implementations for the <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> methods. The asynchronous methods <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />, <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />, and <see cref="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" /> use the synchronous methods <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> in their implementations. Therefore, your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> will work correctly with the asynchronous methods. The default implementations of <see cref="M:System.IO.Stream.ReadByte" /> and <see cref="M:System.IO.Stream.WriteByte(System.Byte)" /> create a new single-element byte array, and then call your implementations of <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />. When you derive from <see cref="T:System.IO.Stream" />, we recommend that you override these methods to access your internal buffer, if you have one, for substantially better performance. You must also provide implementations of <see cref="P:System.IO.Stream.CanRead" />, <see cref="P:System.IO.Stream.CanSeek" />, <see cref="P:System.IO.Stream.CanWrite" />, <see cref="M:System.IO.Stream.Flush" />, <see cref="P:System.IO.Stream.Length" />, <see cref="P:System.IO.Stream.Position" />, <see cref="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />, and <see cref="M:System.IO.Stream.SetLength(System.Int64)" />.  Do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all the <see cref="T:System.IO.Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method. For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.MemoryStream" />
    <altmember cref="T:System.IO.BufferedStream" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Stream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Stream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-144">Инициализирует новый экземпляр класса <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-144">Initializes a new instance of the <see cref="T:System.IO.Stream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-145"><xref:System.IO.Stream> является абстрактным базовым классом всех потоков.</span><span class="sxs-lookup"><span data-stu-id="8b31b-145"><xref:System.IO.Stream> is the abstract base class of all streams.</span></span>  
  
 <span data-ttu-id="8b31b-146">Некоторые из наиболее часто используемые потоков, которые наследуют от <xref:System.IO.Stream> являются <xref:System.IO.FileStream>, и <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-146">Some of the more commonly used streams that inherit from <xref:System.IO.Stream> are <xref:System.IO.FileStream>, and <xref:System.IO.MemoryStream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="stream.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8b31b-147">Буфер, в который необходимо считать данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-147">The buffer to read the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8b31b-148">Смещение байтов в <c>buffer</c>, с которого начинается запись данных, считанных из потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-148">The byte offset in <c>buffer</c> at which to begin writing data read from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8b31b-149">Максимальное число байтов, предназначенных для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-149">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8b31b-150">Дополнительный асинхронный обратный вызов по завершении чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-150">An optional asynchronous callback, to be called when the read is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8b31b-151">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронное чтение от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-151">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-152">Начинает операцию асинхронного чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-152">Begins an asynchronous read operation.</span>
          </span>
          <span data-ttu-id="8b31b-153">(Рекомендуется использовать <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-153">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-154">
            <see cref="T:System.IAsyncResult" /> представляет асинхронное чтение, которое все еще может быть отложено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-154">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-155">В платформе .NET Framework 4 и более ранних версий для реализации операций асинхронного ввода-вывода необходимо использовать такие методы, как <xref:System.IO.Stream.BeginRead%2A> и <xref:System.IO.Stream.EndRead%2A> .</span><span class="sxs-lookup"><span data-stu-id="8b31b-155">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="8b31b-156">Эти методы по-прежнему доступны в [!INCLUDE[net_v45](~/includes/net-v45-md.md)] для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, и <xref:System.IO.Stream.FlushAsync%2A>, справки, более легко реализации асинхронных операций ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8b31b-156">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="8b31b-157">Реализация по умолчанию `BeginRead` к потоку, вызовы <xref:System.IO.Stream.Read%2A> метод синхронно, означающее, что `Read` блокируют для некоторых потоков.</span><span class="sxs-lookup"><span data-stu-id="8b31b-157">The default implementation of `BeginRead` on a stream calls the <xref:System.IO.Stream.Read%2A> method synchronously, which means that `Read` might block on some streams.</span></span> <span data-ttu-id="8b31b-158">Однако экземпляры классов, таких как `FileStream` и `NetworkStream` полностью поддерживают асинхронные операции, если экземпляры были открыты асинхронно.</span><span class="sxs-lookup"><span data-stu-id="8b31b-158">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="8b31b-159">Таким образом, вызовы `BeginRead` не будет блокировать этих потоков.</span><span class="sxs-lookup"><span data-stu-id="8b31b-159">Therefore, calls to `BeginRead` will not block on those streams.</span></span> <span data-ttu-id="8b31b-160">Можно переопределить `BeginRead` (с помощью асинхронных делегатов) для предоставления асинхронного поведения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-160">You can override `BeginRead` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="8b31b-161">Передайте `IAsyncResult` возвращаемое значение для <xref:System.IO.Stream.EndRead%2A> метод потока, чтобы определить, сколько байт было считано, так и для освобождения ресурсов операционной системы, используемый для чтения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-161">Pass the `IAsyncResult` return value to the <xref:System.IO.Stream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="8b31b-162"><xref:System.IO.Stream.EndRead%2A> должен вызываться один раз для каждого вызова к <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-162"><xref:System.IO.Stream.EndRead%2A> must be called once for every call to <xref:System.IO.Stream.BeginRead%2A>.</span></span> <span data-ttu-id="8b31b-163">Это можно сделать с помощью тот же код, который вызвал `BeginRead` или в обратный вызов, переданный `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-163">You can do this either by using the same code that called `BeginRead` or in a callback passed to `BeginRead`.</span></span>  
  
 <span data-ttu-id="8b31b-164">Текущую позицию в потоке обновляется во время асинхронного чтения или записи, то не в том случае, при завершении операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8b31b-164">The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="8b31b-165">Несколько одновременных асинхронных запросов визуализации порядок завершения запроса нужной информации.</span><span class="sxs-lookup"><span data-stu-id="8b31b-165">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="8b31b-166">Используйте <xref:System.IO.Stream.CanRead%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции чтения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-166">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="8b31b-167">Если поток закрыт или передается неверный аргумент, исключения создаются немедленно из `BeginRead`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-167">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginRead`.</span></span> <span data-ttu-id="8b31b-168">Ошибки, возникающие при запросе асинхронного чтения, например ошибка диска в процессе запроса ввода-вывода, возникают в потоке пула потоков и вызывать исключения при вызове `EndRead`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-168">Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndRead`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-169">Попытка выполнить чтение в асинхронном режиме за пределами конца потока или ошибка диска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-169">Attempted an asynchronous read past the end of the stream, or a disk error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b31b-170">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-170">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-171">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-171">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-172">Текущая реализация класса <see langword="Stream" /> не поддерживает операцию чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-172">The current <see langword="Stream" /> implementation does not support the read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="stream.BeginWrite (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8b31b-173">Буфер, из которого записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-173">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8b31b-174">Смещение байтов в <c>buffer</c>, с которого следует начать запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-174">The byte offset in <c>buffer</c> from which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8b31b-175">Максимальное число байтов для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-175">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8b31b-176">Дополнительный асинхронный обратный вызов по завершении записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-176">An optional asynchronous callback, to be called when the write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8b31b-177">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронную запись от других запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-177">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-178">Начинает операцию асинхронной записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-178">Begins an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="8b31b-179">(Рекомендуется использовать <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-179">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-180">
            <see langword="IAsyncResult" /> представляет асинхронную запись, которая все еще может быть отложена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-180">An <see langword="IAsyncResult" /> that represents the asynchronous write, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-181">В платформе .NET Framework 4 и более ранних версий для реализации операций асинхронного ввода-вывода необходимо использовать такие методы, как <xref:System.IO.Stream.BeginWrite%2A> и <xref:System.IO.Stream.EndWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-181">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="8b31b-182">Эти методы по-прежнему доступны в [!INCLUDE[net_v45](~/includes/net-v45-md.md)] для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, и <xref:System.IO.Stream.FlushAsync%2A>, справки, более легко реализации асинхронных операций ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8b31b-182">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="8b31b-183">Реализация по умолчанию `BeginWrite` к потоку, вызовы <xref:System.IO.Stream.Write%2A> метод синхронно, означающее, что `Write` блокируют для некоторых потоков.</span><span class="sxs-lookup"><span data-stu-id="8b31b-183">The default implementation of `BeginWrite` on a stream calls the <xref:System.IO.Stream.Write%2A> method synchronously, which means that `Write` might block on some streams.</span></span> <span data-ttu-id="8b31b-184">Однако экземпляры классов, таких как `FileStream` и `NetworkStream` полностью поддерживают асинхронные операции, если экземпляры были открыты асинхронно.</span><span class="sxs-lookup"><span data-stu-id="8b31b-184">However, instances of classes such as `FileStream` and `NetworkStream` fully support asynchronous operations if the instances have been opened asynchronously.</span></span> <span data-ttu-id="8b31b-185">Таким образом, вызовы `BeginWrite` не будет блокировать этих потоков.</span><span class="sxs-lookup"><span data-stu-id="8b31b-185">Therefore, calls to `BeginWrite` will not block on those streams.</span></span> <span data-ttu-id="8b31b-186">Можно переопределить `BeginWrite` (с помощью асинхронных делегатов) для предоставления асинхронного поведения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-186">You can override `BeginWrite` (by using async delegates, for example) to provide asynchronous behavior.</span></span>  
  
 <span data-ttu-id="8b31b-187">Передайте `IAsyncResult` возвращаемый текущим методом <xref:System.IO.Stream.EndWrite%2A> чтобы обеспечить завершение записи и правильное освобождение ресурсов.</span><span class="sxs-lookup"><span data-stu-id="8b31b-187">Pass the `IAsyncResult` returned by the current method to <xref:System.IO.Stream.EndWrite%2A> to ensure that the write completes and frees resources appropriately.</span></span> <span data-ttu-id="8b31b-188"><xref:System.IO.Stream.EndWrite%2A> должен вызываться один раз для каждого вызова к <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-188"><xref:System.IO.Stream.EndWrite%2A> must be called once for every call to <xref:System.IO.Stream.BeginWrite%2A>.</span></span> <span data-ttu-id="8b31b-189">Это можно сделать с помощью тот же код, который вызвал `BeginWrite` или в обратный вызов, переданный `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-189">You can do this either by using the same code that called `BeginWrite` or in a callback passed to `BeginWrite`.</span></span> <span data-ttu-id="8b31b-190">При возникновении ошибки во время асинхронной записи, исключение не возникает до `EndWrite` вызывается с `IAsyncResult` возвращаемого этим методом.</span><span class="sxs-lookup"><span data-stu-id="8b31b-190">If an error occurs during an asynchronous write, an exception will not be thrown until `EndWrite` is called with the `IAsyncResult` returned by this method.</span></span>  
  
 <span data-ttu-id="8b31b-191">Если поток доступен для записи, запись в конец потока расширяет поток.</span><span class="sxs-lookup"><span data-stu-id="8b31b-191">If a stream is writable, writing at the end of the stream expands the stream.</span></span>  
  
 <span data-ttu-id="8b31b-192">Текущую позицию в потоке обновляется при выполнении асинхронного чтения или записи, не в том случае, при завершении операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8b31b-192">The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</span></span> <span data-ttu-id="8b31b-193">Несколько одновременных асинхронных запросов визуализации порядок завершения запроса нужной информации.</span><span class="sxs-lookup"><span data-stu-id="8b31b-193">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="8b31b-194">Используйте <xref:System.IO.Stream.CanWrite%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции записи.</span><span class="sxs-lookup"><span data-stu-id="8b31b-194">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="8b31b-195">Если поток закрыт или передается неверный аргумент, исключения создаются немедленно из `BeginWrite`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-195">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from `BeginWrite`.</span></span> <span data-ttu-id="8b31b-196">Ошибки, возникающие при выполнении запроса асинхронной записи, например ошибка диска в процессе запроса ввода-вывода, возникают в потоке пула потоков и вызывать исключения при вызове `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-196">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-197">Попытка выполнить запись в асинхронном режиме за пределами конца потока или ошибка диска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-197">Attempted an asynchronous write past the end of the stream, or a disk error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b31b-198">Один или несколько аргументов являются недопустимыми.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-198">One or more of the arguments is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-199">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-199">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-200">Текущая реализация класса <see langword="Stream" /> не поддерживает операцию записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-200">The current <see langword="Stream" /> implementation does not support the write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <altmember cref="P:System.IO.Stream.CanWrite" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.Stream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-201">При переопределении в производном классе возвращает значение, показывающее, поддерживает ли текущий поток возможность чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-201">When overridden in a derived class, gets a value indicating whether the current stream supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b31b-202">Значение <see langword="true" />, если поток поддерживает чтение; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-202">
              <see langword="true" /> if the stream supports reading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-203">Если класс, производный от <xref:System.IO.Stream> не поддерживает чтение, вызовы функций <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, и <xref:System.IO.Stream.BeginRead%2A> методы вызывают исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-203">If a class derived from <xref:System.IO.Stream> does not support reading, calls to the <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, and <xref:System.IO.Stream.BeginRead%2A> methods throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="8b31b-204">Если поток закрыт, это свойство возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-204">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b31b-205">Ниже приведен пример использования `CanRead` свойство.</span><span class="sxs-lookup"><span data-stu-id="8b31b-205">The following is an example of using the `CanRead` property.</span></span>  
  
 [!code-cpp[Classic FileStream.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileStream.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic FileStream.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileStream.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public abstract bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.Stream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-206">При переопределении в производном классе возвращает значение, которое показывает, поддерживается ли в текущем потоке возможность поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-206">When overridden in a derived class, gets a value indicating whether the current stream supports seeking.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b31b-207">Значение <see langword="true" />, если поток поддерживает поиск; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-207">
              <see langword="true" /> if the stream supports seeking; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-208">Если класс, производный от <xref:System.IO.Stream> не поддерживает поиск, вызовы функций <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, и <xref:System.IO.Stream.Seek%2A> throw <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-208">If a class derived from <xref:System.IO.Stream> does not support seeking, calls to <xref:System.IO.Stream.Length%2A>, <xref:System.IO.Stream.SetLength%2A>, <xref:System.IO.Stream.Position%2A>, and <xref:System.IO.Stream.Seek%2A> throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="8b31b-209">Если поток закрыт, это свойство возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-209">If the stream is closed, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public virtual bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.IO.Stream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-210">Возвращает значение, которое показывает, может ли для данного потока истечь время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-210">Gets a value that determines whether the current stream can time out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b31b-211">Значение, которое показывает, может ли для данного потока истечь время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-211">A value that determines whether the current stream can time out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-212">Свойство <xref:System.IO.Stream.CanTimeout%2A> всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-212">The <xref:System.IO.Stream.CanTimeout%2A> property always returns `false`.</span></span> <span data-ttu-id="8b31b-213">Некоторые реализации потоков требуется другое поведение, такие как <xref:System.Net.Sockets.NetworkStream>, что время ожидания, если сетевое подключение разорвано или потеряно.</span><span class="sxs-lookup"><span data-stu-id="8b31b-213">Some stream implementations require different behavior, such as <xref:System.Net.Sockets.NetworkStream>, which times out if network connectivity is interrupted or lost.</span></span> <span data-ttu-id="8b31b-214">Если вы реализуете поток, который должен иметь возможность времени ожидания, следует переопределить это свойство для возврата `true`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-214">If you are implementing a stream that must be able to time out, this property should be overridden to return `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.ReadTimeout" />
        <altmember cref="P:System.IO.Stream.WriteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.Stream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-215">При переопределении в производном классе возвращает значение, которое показывает, поддерживает ли текущий поток возможность записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-215">When overridden in a derived class, gets a value indicating whether the current stream supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b31b-216">Значение <see langword="true" />, если поток поддерживает запись; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-216">
              <see langword="true" /> if the stream supports writing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-217">Если класс, производный от <xref:System.IO.Stream> не поддерживает запись, при вызове <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, или <xref:System.IO.Stream.WriteByte%2A> вызывает <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-217">If a class derived from <xref:System.IO.Stream> does not support writing, a call to <xref:System.IO.Stream.Write%2A>, <xref:System.IO.Stream.BeginWrite%2A>, or <xref:System.IO.Stream.WriteByte%2A> throws a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="8b31b-218">В таких случаях <xref:System.IO.Stream.Flush%2A> обычно реализуется в виде пустой метод для обеспечения полной совместимости с другими <xref:System.IO.Stream> типов, так как допускается удалять поток только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-218">In such cases, <xref:System.IO.Stream.Flush%2A> is typically implemented as an empty method to ensure full compatibility with other <xref:System.IO.Stream> types since it's valid to flush a read-only stream.</span></span>
  
 <span data-ttu-id="8b31b-219">Если поток закрыт, это свойство возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-219">If the stream is closed, this property returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b31b-220">Ниже приведен пример использования `CanWrite` свойство.</span><span class="sxs-lookup"><span data-stu-id="8b31b-220">The following is an example of using the `CanWrite` property.</span></span>  
  
 [!code-cpp[Classic Stream.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="stream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-221">Закрывает текущий поток и отключает все ресурсы (например, сокеты и файловые дескрипторы), связанные с текущим потоком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-221">Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.</span>
          </span>
          <span data-ttu-id="8b31b-222">Вместо вызова данного метода, убедитесь в том, что поток надлежащим образом ликвидирован.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-222">Instead of calling this method, ensure that the stream is properly disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-223">Этот метод вызывает метод <xref:System.IO.Stream.Dispose%2A>, указав `true` освобождения всех ресурсов.</span><span class="sxs-lookup"><span data-stu-id="8b31b-223">This method calls <xref:System.IO.Stream.Dispose%2A>, specifying `true` to release all resources.</span></span> <span data-ttu-id="8b31b-224">У вас нет специально вызывать <xref:System.IO.Stream.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8b31b-224">You do not have to specifically call the <xref:System.IO.Stream.Close%2A> method.</span></span> <span data-ttu-id="8b31b-225">Вместо этого, убедитесь, что каждый <xref:System.IO.Stream> объект надлежащим образом ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="8b31b-225">Instead, ensure that every <xref:System.IO.Stream> object is properly disposed.</span></span> <span data-ttu-id="8b31b-226">Можно объявить <xref:System.IO.Stream> объектов в рамках `using` блока (или `Using` блока в Visual Basic), чтобы убедиться, что поток и все ее ресурсы удаляются, или можно явно вызывать <xref:System.IO.Stream.Dispose%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8b31b-226">You can declare <xref:System.IO.Stream> objects within a `using` block (or `Using` block in Visual Basic) to ensure that the stream and all of its resources are disposed, or you can explicitly call the <xref:System.IO.Stream.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="8b31b-227">Сброс потока его основной кодировщик не очищается только явным образом при вызове реализации <xref:System.IO.Stream.Flush%2A> или `Close`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-227">Flushing the stream will not flush its underlying encoder unless you explicitly call an implementation of <xref:System.IO.Stream.Flush%2A> or `Close`.</span></span> <span data-ttu-id="8b31b-228">Установка <xref:System.IO.StreamWriter.AutoFlush%2A> для `true` означает, что данные будут сброшены из буфера в поток, но состояние кодировщика не сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="8b31b-228">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="8b31b-229">Это позволяет кодировщику сохранить свое состояние (частичные символы), чтобы правильно выполнить кодировку следующего блока символов.</span><span class="sxs-lookup"><span data-stu-id="8b31b-229">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="8b31b-230">Этот сценарий влияет на UTF8 и UTF7, в которых определенные символы кодируются только после того, как кодировщик получает смежные символ или символы.</span><span class="sxs-lookup"><span data-stu-id="8b31b-230">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="8b31b-231">Попытка работы с потоком, после закрытия потока может создавать <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-231">Attempts to manipulate the stream after the stream has been closed might throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b31b-232">
            <para>В производных классах, не переопределяющих <see cref="M:System.IO.Stream.Close" /> метод, вместо этого поместите все <see langword="Stream" /> логика очистки в <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> метод. Дополнительные сведения см. в разделе [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-232">
              <para>In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the <see langword="Stream" /> cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method. For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-233">Считывает байты из текущего потока и записывает их в другой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-233">Reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.IO.Stream -&gt; unit" Usage="stream.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="8b31b-234">Поток, в который будет скопировано содержимое текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-234">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-235">Считывает байты из текущего потока и записывает их в другой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-235">Reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-236">Копирование начинается с текущей позиции в текущем потоке и не приводит к сбросу позицию в потоке назначения, после завершения операции копирования.</span><span class="sxs-lookup"><span data-stu-id="8b31b-236">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b31b-237">Следующий пример копирует содержимое <xref:System.IO.FileStream> для <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-237">The following example copies the contents of a <xref:System.IO.FileStream> to a <xref:System.IO.MemoryStream>.</span></span>  
  
 [!code-csharp[System.IO.Stream.CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stream.copyto/cs/program.cs#1)]
 [!code-vb[System.IO.Stream.CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stream.copyto/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-238">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-238">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-239">Текущий поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-239">The current stream does not support reading.</span>
          </span>
          <span data-ttu-id="8b31b-240">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-240">-or-</span>
          </span>
          <span data-ttu-id="8b31b-241">Параметр <paramref name="destination" /> не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-241">
              <paramref name="destination" /> does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-242">Текущий поток или параметр <paramref name="destination" /> был закрыт до вызова метода <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-242">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-243">Ошибка ввода/вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-243">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.IO.Stream * int -&gt; unit" Usage="stream.CopyTo (destination, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="8b31b-244">Поток, в который будет скопировано содержимое текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-244">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="8b31b-245">Размер буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-245">The size of the buffer.</span>
          </span>
          <span data-ttu-id="8b31b-246">Это значение должно быть больше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-246">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="8b31b-247">Размер по умолчанию — 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-247">The default size is 81920.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-248">Считывает байты из текущего потока и записывает их в другой поток, используя указанный размер буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-248">Reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-249">Копирование начинается с текущей позиции в текущем потоке и не приводит к сбросу позицию в потоке назначения, после завершения операции копирования.</span><span class="sxs-lookup"><span data-stu-id="8b31b-249">Copying begins at the current position in the current stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-250">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-250">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8b31b-251">Параметр <paramref name="bufferSize" /> имеет отрицательное значение или равен нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-251">
              <paramref name="bufferSize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-252">Текущий поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-252">The current stream does not support reading.</span>
          </span>
          <span data-ttu-id="8b31b-253">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-253">-or-</span>
          </span>
          <span data-ttu-id="8b31b-254">Параметр <paramref name="destination" /> не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-254">
              <paramref name="destination" /> does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-255">Текущий поток или параметр <paramref name="destination" /> был закрыт до вызова метода <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-255">Either the current stream or <paramref name="destination" /> were closed before the <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-256">Ошибка ввода/вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-256">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-257">Асинхронно считывает байты из текущего потока и записывает их в другой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-257">Asynchronously reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="8b31b-258">Поток, в который будет скопировано содержимое текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-258">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-259">Асинхронно считывает байты из текущего потока и записывает их в другой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-259">Asynchronously reads the bytes from the current stream and writes them to another stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-260">Задача, представляющая асинхронную операцию копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-260">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-261"><xref:System.IO.Stream.CopyToAsync%2A> Метод позволяет выполнять ресурсоемкие операции ввода-вывода без блокировки основного потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-261">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="8b31b-262">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="8b31b-262">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="8b31b-263">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="8b31b-263">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="8b31b-264">Копирование начинается с текущей позиции в текущем потоке.</span><span class="sxs-lookup"><span data-stu-id="8b31b-264">Copying begins at the current position in the current stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b31b-265">Следующий пример демонстрирует использование двух <xref:System.IO.FileStream> объектов для асинхронного копирования файлов из одного каталога в другой.</span><span class="sxs-lookup"><span data-stu-id="8b31b-265">The following example demonstrates how to use two <xref:System.IO.FileStream> objects to asynchronously copy the files from one directory to another.</span></span> <span data-ttu-id="8b31b-266">Класс <xref:System.IO.FileStream> является производным от класса <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-266">The <xref:System.IO.FileStream> class derives from the <xref:System.IO.Stream> class.</span></span>  <span data-ttu-id="8b31b-267">Обратите внимание, что <xref:System.Web.UI.WebControls.Button.Click> обработчик событий для <xref:System.Windows.Controls.Button> управления помечается `async` модификатор, так как он вызывает асинхронный метод</span><span class="sxs-lookup"><span data-stu-id="8b31b-267">Notice that the <xref:System.Web.UI.WebControls.Button.Click> event handler for the <xref:System.Windows.Controls.Button> control is marked with the `async` modifier because it calls an asynchronous method</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#1](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example.cs#1)]
 [!code-vb[Asynchronous_File_IO_async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-268">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-268">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-269">Текущий поток или поток назначения удаляется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-269">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-270">Текущий поток не поддерживает чтение или поток назначения не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-270">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (destination As Stream, bufferSize As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream * int -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync (destination, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="8b31b-271">Поток, в который будет скопировано содержимое текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-271">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="8b31b-272">Размер (в байтах) буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-272">The size, in bytes, of the buffer.</span>
          </span>
          <span data-ttu-id="8b31b-273">Это значение должно быть больше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-273">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="8b31b-274">Размер по умолчанию — 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-274">The default size is 81920.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-275">Асинхронно считывает байты из текущего потока и записывает их в другой поток, используя указанный размер буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-275">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-276">Задача, представляющая асинхронную операцию копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-276">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-277"><xref:System.IO.Stream.CopyToAsync%2A> Метод позволяет выполнять ресурсоемкие операции ввода-вывода без блокировки основного потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-277">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="8b31b-278">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="8b31b-278">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="8b31b-279">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="8b31b-279">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="8b31b-280">Копирование начинается с текущей позиции в текущем потоке.</span><span class="sxs-lookup"><span data-stu-id="8b31b-280">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="8b31b-281">Пример копирования между двумя потоками, см. в разделе <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="8b31b-281">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-282">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-282">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8b31b-283">Параметр <paramref name="buffersize" /> имеет отрицательное значение или равен нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-283">
              <paramref name="buffersize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-284">Текущий поток или поток назначения удаляется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-284">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-285">Текущий поток не поддерживает чтение или поток назначения не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-285">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CopyToAsync : System.IO.Stream * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyToAsync : System.IO.Stream * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.CopyToAsync (destination, bufferSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="8b31b-286">Поток, в который будет скопировано содержимое текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-286">The stream to which the contents of the current stream will be copied.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="8b31b-287">Размер (в байтах) буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-287">The size, in bytes, of the buffer.</span>
          </span>
          <span data-ttu-id="8b31b-288">Это значение должно быть больше нуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-288">This value must be greater than zero.</span>
          </span>
          <span data-ttu-id="8b31b-289">Размер по умолчанию — 81920.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-289">The default size is 81920.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8b31b-290">Токен для отслеживания запросов отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-290">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="8b31b-291">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-291">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-292">Асинхронно считывает байты из текущего потока и записывает их в другой поток, используя указанный размер буфера и токен отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-292">Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-293">Задача, представляющая асинхронную операцию копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-293">A task that represents the asynchronous copy operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-294"><xref:System.IO.Stream.CopyToAsync%2A> Метод позволяет выполнять ресурсоемкие операции ввода-вывода без блокировки основного потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-294">The <xref:System.IO.Stream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="8b31b-295">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="8b31b-295">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="8b31b-296">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="8b31b-296">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="8b31b-297">Если операция отменена до ее завершения, возвращаемая задача содержит <xref:System.Threading.Tasks.TaskStatus.Canceled> значение <xref:System.Threading.Tasks.Task.Status%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="8b31b-297">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="8b31b-298">Копирование начинается с текущей позиции в текущем потоке.</span><span class="sxs-lookup"><span data-stu-id="8b31b-298">Copying begins at the current position in the current stream.</span></span>  
  
 <span data-ttu-id="8b31b-299">Пример копирования между двумя потоками, см. в разделе <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="8b31b-299">For an example of copying between two streams, see the <xref:System.IO.Stream.CopyToAsync%28System.IO.Stream%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-300">Свойство <paramref name="destination" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-300">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8b31b-301">Параметр <paramref name="buffersize" /> имеет отрицательное значение или равен нулю.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-301">
              <paramref name="buffersize" /> is negative or zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-302">Текущий поток или поток назначения удаляется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-302">Either the current stream or the destination stream is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-303">Текущий поток не поддерживает чтение или поток назначения не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-303">The current stream does not support reading, or the destination stream does not support writing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWaitHandle">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.WaitHandle CreateWaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.WaitHandle CreateWaitHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.CreateWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWaitHandle () As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::WaitHandle ^ CreateWaitHandle();" />
      <MemberSignature Language="F#" Value="abstract member CreateWaitHandle : unit -&gt; System.Threading.WaitHandle&#xA;override this.CreateWaitHandle : unit -&gt; System.Threading.WaitHandle" Usage="stream.CreateWaitHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-304">Выделяет объект <see cref="T:System.Threading.WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-304">Allocates a <see cref="T:System.Threading.WaitHandle" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-305">Ссылка на выделенный объект <see langword="WaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-305">A reference to the allocated <see langword="WaitHandle" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-306">При вызове в первый раз, текущий метод создает `WaitHandle` объекта и возвращает его.</span><span class="sxs-lookup"><span data-stu-id="8b31b-306">When called for the first time, the current method creates a `WaitHandle` object and returns it.</span></span> <span data-ttu-id="8b31b-307">При последующих вызовах `CreateWaitHandle` возвращает ссылку на новый дескриптор ожидания.</span><span class="sxs-lookup"><span data-stu-id="8b31b-307">On subsequent calls, `CreateWaitHandle` returns a reference to a new wait handle.</span></span>  
  
 <span data-ttu-id="8b31b-308">Используйте этот метод, если реализации асинхронных методов и требуется способ блокировки в <xref:System.IO.Stream.EndRead%2A> или <xref:System.IO.Stream.EndWrite%2A> до завершения асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="8b31b-308">Use this method if you implement the asynchronous methods and require a way of blocking in <xref:System.IO.Stream.EndRead%2A> or <xref:System.IO.Stream.EndWrite%2A> until the asynchronous operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-309">Освобождает все ресурсы, используемые объектом <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-309">Releases all resources used by the <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="stream.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-310">Освобождает все ресурсы, занятые модулем <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-310">Releases all resources used by the <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-311">Этот метод удаляет поток, путем написания любые изменения в резервное хранилище и закрытия потока для освобождения ресурсов.</span><span class="sxs-lookup"><span data-stu-id="8b31b-311">This method disposes the stream, by writing any changes to the backing store and closing the stream to release resources.</span></span>  
  
 <span data-ttu-id="8b31b-312">Вызов `Dispose` позволяет ресурсы, используемые <xref:System.IO.Stream> перераспределить для других целей.</span><span class="sxs-lookup"><span data-stu-id="8b31b-312">Calling `Dispose` allows the resources used by the <xref:System.IO.Stream> to be reallocated for other purposes.</span></span> <span data-ttu-id="8b31b-313">Дополнительные сведения о `Dispose`, см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="8b31b-313">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b31b-314">
            <para>Поместить всю логику очистки для объекта stream в <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />. Не следует переопределять <see cref="M:System.IO.Stream.Close" />.  Обратите внимание на то, что из-за требований обратной совместимости, реализацию этого метода отличается от указанных в руководстве для шаблона удаления.  Этот метод вызывает метод <see cref="M:System.IO.Stream.Close" />, который затем вызывает <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-314">
              <para>Place all cleanup logic for your stream object in <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />. Do not override <see cref="M:System.IO.Stream.Close" />.  Note that because of backward compatibility requirements, this method's implementation differs from the recommended guidance for the Dispose pattern.  This method calls <see cref="M:System.IO.Stream.Close" />, which then calls <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="stream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8b31b-315">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-315">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-316">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.Stream" />, а при необходимости освобождает также управляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-316">Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-317">Должен освободить все ресурсы, указав `true` для `disposing`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-317">You should release all resources by specifying `true` for `disposing`.</span></span> <span data-ttu-id="8b31b-318">Когда `disposing` является `true`, также можно обеспечить поток данных в базовый буфер очищается и доступ к другим объектам.</span><span class="sxs-lookup"><span data-stu-id="8b31b-318">When `disposing` is `true`, the stream can also ensure data is flushed to the underlying buffer, and access other finalizable objects.</span></span>  <span data-ttu-id="8b31b-319">Это может оказаться невозможным, при вызове из метода завершения из-за отсутствия порядку среди методов завершения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-319">This may not be possible when called from a finalizer due a lack of ordering among finalizers.</span></span>  
  
 <span data-ttu-id="8b31b-320">Если ваш поток использует дескриптор операционной системы для взаимодействия со своим источником, рассмотрите возможность использования подкласс <xref:System.Runtime.InteropServices.SafeHandle> для этой цели.</span><span class="sxs-lookup"><span data-stu-id="8b31b-320">If your stream is using an operating system handle to communicate with its source, consider using a subclass of <xref:System.Runtime.InteropServices.SafeHandle> for this purpose.</span></span>  
  
 <span data-ttu-id="8b31b-321">Этот метод вызывается открытым <xref:System.ComponentModel.Component.Dispose%2A> метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8b31b-321">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8b31b-322"><xref:System.ComponentModel.Component.Dispose%2A> вызывает защищенный <xref:System.IO.Stream.Dispose%2A> метод с `disposing` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-322"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Stream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8b31b-323"><xref:System.Object.Finalize%2A> вызывает <xref:System.IO.Stream.Dispose%2A> с `disposing` присвоено `false`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-323"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Stream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b31b-324">
            <para>В производных классах, не переопределяющих <see cref="M:System.IO.Stream.Close" /> метод, вместо этого поместите вся логика очистки Stream в <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> метод.  <see cref="M:System.ComponentModel.Component.Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see cref="M:System.ComponentModel.Component.Dispose" />. Дополнительные сведения о том, как реализовать <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, см. в разделе [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  Дополнительные сведения о <see cref="M:System.ComponentModel.Component.Dispose" /> и <see cref="M:System.Object.Finalize" />, см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-324">
              <para>In derived classes, do not override the <see cref="M:System.IO.Stream.Close" /> method, instead, put all of the Stream cleanup logic in the <see cref="M:System.IO.Stream.Dispose(System.Boolean)" /> method.  <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />. For more information about how to implement <see cref="M:System.IO.Stream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public virtual int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndRead : IAsyncResult -&gt; int&#xA;override this.EndRead : IAsyncResult -&gt; int" Usage="stream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8b31b-325">Ссылка на отложенный асинхронный запрос, который необходимо завершить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-325">The reference to the pending asynchronous request to finish.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-326">Ожидает завершения отложенного асинхронного чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-326">Waits for the pending asynchronous read to complete.</span>
          </span>
          <span data-ttu-id="8b31b-327">(Рекомендуется использовать <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-327">(Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-328">Количество байтов, считанных из потока, от нуля (0) до количества запрошенных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-328">The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</span>
          </span>
          <span data-ttu-id="8b31b-329">Потоки возвращают нуль (0) только в конце. В противном случае они должны блокироваться до тех пор, пока доступен хотя бы один байт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-329">Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-330">В платформе .NET Framework 4 и более ранних версий для реализации операций асинхронного ввода-вывода необходимо использовать такие методы, как <xref:System.IO.Stream.BeginRead%2A> и <xref:System.IO.Stream.EndRead%2A> .</span><span class="sxs-lookup"><span data-stu-id="8b31b-330">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="8b31b-331">Эти методы по-прежнему доступны в [!INCLUDE[net_v45](~/includes/net-v45-md.md)] для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, и <xref:System.IO.Stream.FlushAsync%2A>, справки, более легко реализации асинхронных операций ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8b31b-331">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="8b31b-332">Вызовите `EndRead` для определения числа байтов, считанных из потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-332">Call `EndRead` to determine how many bytes were read from the stream.</span></span>  
  
 <span data-ttu-id="8b31b-333">`EndRead` может вызываться один раз на каждые <xref:System.IAsyncResult> из <xref:System.IO.Stream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-333">`EndRead` can be called once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="8b31b-334">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8b31b-334">This method blocks until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-335">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-335">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b31b-336">Обработчик отложенной операции считывания не доступен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-336">A handle to the pending read operation is not available.</span>
          </span>
          <span data-ttu-id="8b31b-337">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-337">-or-</span>
          </span>
          <span data-ttu-id="8b31b-338">Ожидающая операция не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-338">The pending operation does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b31b-339">
            <paramref name="asyncResult" /> не происходит из метода <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> в текущем потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-339">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-340">Поток закрыт, или произошла внутренняя ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-340">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public virtual void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndWrite : IAsyncResult -&gt; unit&#xA;override this.EndWrite : IAsyncResult -&gt; unit" Usage="stream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="8b31b-341">Ссылка на невыполненный асинхронный запрос ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-341">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-342">Заканчивает операцию асинхронной записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-342">Ends an asynchronous write operation.</span>
          </span>
          <span data-ttu-id="8b31b-343">(Рекомендуется использовать <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-343">(Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> instead.)</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-344">В платформе .NET Framework 4 и более ранних версий для реализации операций асинхронного ввода-вывода необходимо использовать такие методы, как <xref:System.IO.Stream.BeginWrite%2A> и <xref:System.IO.Stream.EndWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-344">In the .NET Framework 4 and earlier versions, you have to use methods such as <xref:System.IO.Stream.BeginWrite%2A> and <xref:System.IO.Stream.EndWrite%2A> to implement asynchronous I/O operations.</span></span> <span data-ttu-id="8b31b-345">Эти методы по-прежнему доступны в [!INCLUDE[net_v45](~/includes/net-v45-md.md)] для поддержки устаревшего кода; тем не менее, новых асинхронных методов, таких как <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, и <xref:System.IO.Stream.FlushAsync%2A>, справки, более легко реализации асинхронных операций ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8b31b-345">These methods are still available in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, the new async methods, such as <xref:System.IO.Stream.ReadAsync%2A>, <xref:System.IO.Stream.WriteAsync%2A>, <xref:System.IO.Stream.CopyToAsync%2A>, and <xref:System.IO.Stream.FlushAsync%2A>, help you implement asynchronous I/O operations more easily.</span></span>  
  
 <span data-ttu-id="8b31b-346">`EndWrite` должен быть вызван только один раз для каждого <xref:System.IAsyncResult> из <xref:System.IO.Stream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-346">`EndWrite` must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.Stream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="8b31b-347">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8b31b-347">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="8b31b-348">Ошибки, возникающие при выполнении запроса асинхронной записи, например ошибка диска в процессе запроса ввода-вывода, возникают в потоке пула потоков и отображаются при вызове `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-348">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to `EndWrite`.</span></span> <span data-ttu-id="8b31b-349">При вызове исключения, создаваемые поток пула потоков не будут видны `EndWrite`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-349">Exceptions thrown by the thread pool thread will not be visible when calling `EndWrite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-350">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-350">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b31b-351">Обработчик отложенной операции записи не доступен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-351">A handle to the pending write operation is not available.</span>
          </span>
          <span data-ttu-id="8b31b-352">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-352">-or-</span>
          </span>
          <span data-ttu-id="8b31b-353">Ожидающая операция не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-353">The pending operation does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b31b-354">
            <paramref name="asyncResult" /> не происходит из метода <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> в текущем потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-354">
              <paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-355">Поток закрыт, или произошла внутренняя ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-355">The stream is closed or an internal error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="stream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-356">При переопределении в производном классе очищает все буферы данного потока и вызывает запись данных буферов в базовое устройство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-356">When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-357">Переопределить `Flush` в потоках, которые реализуют буфер.</span><span class="sxs-lookup"><span data-stu-id="8b31b-357">Override `Flush` on streams that implement a buffer.</span></span> <span data-ttu-id="8b31b-358">Этот метод позволяет переместить сведения из базового буфера в место назначения, очистить буфер, или оба.</span><span class="sxs-lookup"><span data-stu-id="8b31b-358">Use this method to move any information from an underlying buffer to its destination, clear the buffer, or both.</span></span> <span data-ttu-id="8b31b-359">В зависимости от состояния объекта, может потребоваться изменить текущую позицию внутри потока (например, если основной поток поддерживает поиск).</span><span class="sxs-lookup"><span data-stu-id="8b31b-359">Depending upon the state of the object, you might have to modify the current position within the stream (for example, if the underlying stream supports seeking).</span></span> <span data-ttu-id="8b31b-360">Дополнительные сведения см. в разделе <xref:System.IO.Stream.CanSeek%2A>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-360">For additional information see <xref:System.IO.Stream.CanSeek%2A>.</span></span>  

 <span data-ttu-id="8b31b-361">В классе, производном от <xref:System.IO.Stream> , не поддерживает запись, <xref:System.IO.Stream.Flush%2A> обычно реализуется в виде пустой метод для обеспечения полной совместимости с другими <xref:System.IO.Stream> типов, так как допускается удалять поток только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-361">In a class derived from <xref:System.IO.Stream> that doesn't support writing, <xref:System.IO.Stream.Flush%2A> is typically implemented as an empty method to ensure full compatibility with other <xref:System.IO.Stream> types since it's valid to flush a read-only stream.</span></span>

 <span data-ttu-id="8b31b-362">При использовании <xref:System.IO.StreamWriter> или <xref:System.IO.BinaryWriter> класса, не выполнить сброс базовый <xref:System.IO.Stream> объекта.</span><span class="sxs-lookup"><span data-stu-id="8b31b-362">When using the <xref:System.IO.StreamWriter> or <xref:System.IO.BinaryWriter> class, do not flush the base <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="8b31b-363">Вместо этого используйте класс <xref:System.IO.Stream.Flush%2A> или <xref:System.IO.Stream.Close%2A> метод, который гарантирует, что данные сначала записываются в основной поток и затем записываются в файл.</span><span class="sxs-lookup"><span data-stu-id="8b31b-363">Instead, use the class's <xref:System.IO.Stream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method, which makes sure that the data is flushed to the underlying stream first and then written to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-364">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-364">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FlushAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-365">Асинхронно очищает все буферы для этого потока и вызывает запись всех буферизованных данных в базовое устройство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-365">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="stream.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-366">Асинхронно очищает все буферы для этого потока и вызывает запись всех буферизованных данных в базовое устройство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-366">Asynchronously clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-367">Задача, представляющая асинхронную операцию очистки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-367">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-368">Если в производном классе, такие как <xref:System.IO.Compression.DeflateStream> или <xref:System.IO.Compression.GZipStream>, не очистить буфер, в своей реализации <xref:System.IO.Stream.Flush%2A> метод, <xref:System.IO.Stream.FlushAsync%2A> метод не будет очистить буфер.</span><span class="sxs-lookup"><span data-stu-id="8b31b-368">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-369">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-369">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="8b31b-370">Токен для отслеживания запросов отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-370">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="8b31b-371">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-371">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-372">Асинхронно очищает все буферы данного потока, вызывает запись буферизованных данных в базовое устройство и отслеживает запросы отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-372">Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-373">Задача, представляющая асинхронную операцию очистки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-373">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-374">Если операция отменена до ее завершения, возвращаемая задача содержит <xref:System.Threading.Tasks.TaskStatus.Canceled> значение <xref:System.Threading.Tasks.Task.Status%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="8b31b-374">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="8b31b-375">Если в производном классе, такие как <xref:System.IO.Compression.DeflateStream> или <xref:System.IO.Compression.GZipStream>, не очистить буфер, в своей реализации <xref:System.IO.Stream.Flush%2A> метод, <xref:System.IO.Stream.FlushAsync%2A> метод не будет очистить буфер.</span><span class="sxs-lookup"><span data-stu-id="8b31b-375">If a derived class, such as <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream>, does not flush the buffer in its implementation of the <xref:System.IO.Stream.Flush%2A> method, the <xref:System.IO.Stream.FlushAsync%2A> method will not flush the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-376">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-376">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public abstract long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Length" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.Stream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-377">При переопределении в производном классе получает длину потока в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-377">When overridden in a derived class, gets the length in bytes of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b31b-378">Длинное значение, представляющее длину потока в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-378">A long value representing the length of the stream in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-379">Класс, созданный на основе класса <see langword="Stream" />, не поддерживает возможность поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-379">A class derived from <see langword="Stream" /> does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-380">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-380">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.Stream Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.Stream Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.Stream.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As Stream " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::Stream ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.Stream" Usage="System.IO.Stream.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-381">Объект <see langword="Stream" /> без резервного хранилища.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-381">A <see langword="Stream" /> with no backing store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-382">Используйте `Null` перенаправить выходные данные в поток, который не использует ресурсы операционной системы.</span><span class="sxs-lookup"><span data-stu-id="8b31b-382">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span> <span data-ttu-id="8b31b-383">При методы `Stream` , которые предоставляют записи вызываются на `Null`, вызов просто возвращает и данные не записываются.</span><span class="sxs-lookup"><span data-stu-id="8b31b-383">When the methods of `Stream` that provide writing are invoked on `Null`, the call simply returns, and no data is written.</span></span> <span data-ttu-id="8b31b-384">`Null` также реализует `Read` метод, который возвращает ноль, не считывая данные.</span><span class="sxs-lookup"><span data-stu-id="8b31b-384">`Null` also implements a `Read` method that returns zero without reading data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectInvariant">
      <MemberSignature Language="C#" Value="protected virtual void ObjectInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ObjectInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ObjectInvariant" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ObjectInvariant ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ObjectInvariant();" />
      <MemberSignature Language="F#" Value="abstract member ObjectInvariant : unit -&gt; unit&#xA;override this.ObjectInvariant : unit -&gt; unit" Usage="stream.ObjectInvariant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Do not call or override this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-385">Обеспечивает поддержку для <see cref="T:System.Diagnostics.Contracts.Contract" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-385">Provides support for a <see cref="T:System.Diagnostics.Contracts.Contract" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.Stream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-386">При переопределении в производном классе получает или задает позицию в текущем потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-386">When overridden in a derived class, gets or sets the position within the current stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b31b-387">Текущее положение в потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-387">The current position within the stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-388">Поток должен поддерживать поиск для получения или задания позиции.</span><span class="sxs-lookup"><span data-stu-id="8b31b-388">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="8b31b-389">Используйте <xref:System.IO.Stream.CanSeek%2A> свойства, чтобы определить, поддерживает ли поток поиск.</span><span class="sxs-lookup"><span data-stu-id="8b31b-389">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="8b31b-390">Поддерживается поиск в любом месте за пределами длины потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-390">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 <span data-ttu-id="8b31b-391">`Position` Свойство не хранить список число байтов из потока, который были использованы, пропущена, или оба.</span><span class="sxs-lookup"><span data-stu-id="8b31b-391">The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-392">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-392">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-393">Поток не поддерживает поиск.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-393">The stream does not support seeking.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-394">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-394">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;byte&gt; -&gt; int&#xA;override this.Read : Span&lt;byte&gt; -&gt; int" Usage="stream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : byte[] * int * int -&gt; int" Usage="stream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8b31b-395">Массив байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-395">An array of bytes.</span>
          </span>
          <span data-ttu-id="8b31b-396">После завершения выполнения данного метода буфер содержит указанный массив байтов, в котором значения в интервале между <c>offset</c> и величиной "<c>offset</c> + <c>count</c> – 1" заменены байтами, считанными из текущего источника.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-396">When this method returns, the buffer contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c> - 1) replaced by the bytes read from the current source.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8b31b-397">Смещение байтов (начиная с нуля) в <c>buffer</c>, с которого начинается сохранение данных, считанных из текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-397">The zero-based byte offset in <c>buffer</c> at which to begin storing the data read from the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8b31b-398">Максимальное количество байтов, которое должно быть считано из текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-398">The maximum number of bytes to be read from the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-399">При переопределении в производном классе считывает последовательность байтов из текущего потока и перемещает позицию в потоке на число считанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-399">When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-400">Общее количество байтов, считанных в буфер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-400">The total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="8b31b-401">Это число может быть меньше количества запрошенных байтов, если столько байтов в настоящее время недоступно, а также равняться нулю (0), если был достигнут конец потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-401">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-402">Используйте <xref:System.IO.Stream.CanRead%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции чтения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-402">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="8b31b-403">Используйте <xref:System.IO.Stream.ReadAsync%2A> метод для асинхронного чтения из текущего потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-403">Use the <xref:System.IO.Stream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>  
  
 <span data-ttu-id="8b31b-404">Реализации этого метода прочитать не `count` байтов из текущего потока и сохраняет их в `buffer` начиная `offset`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-404">Implementations of this method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="8b31b-405">— Сложные текущую позицию внутри потока на число считанных байтов; Тем не менее при возникновении исключения, текущая позиция в потоке не изменяется.</span><span class="sxs-lookup"><span data-stu-id="8b31b-405">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="8b31b-406">Реализации возвращают число считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="8b31b-406">Implementations return the number of bytes read.</span></span> <span data-ttu-id="8b31b-407">Реализация будет блокироваться до могут считываться хотя бы один байт данных, в случае, если данные недоступны.</span><span class="sxs-lookup"><span data-stu-id="8b31b-407">The implementation will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="8b31b-408"><xref:System.IO.Stream.Read%2A> Возвращает 0 только в том случае, если нет дополнительных данных в потоке и больше не ожидается (например, сокет закрыт или конец файла).</span><span class="sxs-lookup"><span data-stu-id="8b31b-408"><xref:System.IO.Stream.Read%2A> returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="8b31b-409">Реализация может вернуть меньше байтов, чем было запрошено, даже если не был достигнут конец потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-409">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="8b31b-410">Используйте <xref:System.IO.BinaryReader> для чтения простых типов данных.</span><span class="sxs-lookup"><span data-stu-id="8b31b-410">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b31b-411">В следующем примере показано, как использовать <xref:System.IO.Stream.Read%2A> считывание блока данных.</span><span class="sxs-lookup"><span data-stu-id="8b31b-411">The following example shows how to use <xref:System.IO.Stream.Read%2A> to read a block of data.</span></span>  
  
 [!code-cpp[Classic Stream.Read Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stream.Read Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stream.Read Example/CS/source.cs#1)]
 [!code-vb[Classic Stream.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stream.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b31b-412">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-412">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-413">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-413">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8b31b-414">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-414">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-415">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-415">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-416">Поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-416">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-417">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-417">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-418">Асинхронно считывает последовательность байтов из текущего потока и перемещает позицию внутри потока на число считанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-418">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (buffer As Byte(), offset As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stream.ReadAsync (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8b31b-419">Буфер, в который записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-419">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8b31b-420">Смещение байтов в <c>buffer</c>, с которого начинается запись данных, считанных из потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-420">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8b31b-421">Максимальное число байтов, предназначенных для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-421">The maximum number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-422">Асинхронно считывает последовательность байтов из текущего потока и перемещает позицию внутри потока на число считанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-422">Asynchronously reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-423">Задача, представляющая асинхронную операцию чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-423">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="8b31b-424">Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-424">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="8b31b-425">Значение результата может быть меньше запрошенного числа байтов, если число доступных в данный момент байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-425">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-426"><xref:System.IO.Stream.ReadAsync%2A> Метод позволяет выполнять ресурсоемкие операции ввода-вывода без блокировки основного потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-426">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="8b31b-427">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="8b31b-427">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="8b31b-428">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="8b31b-428">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="8b31b-429">Используйте <xref:System.IO.Stream.CanRead%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции чтения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-429">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b31b-430">В следующем примере показано, как для асинхронного чтения из файла.</span><span class="sxs-lookup"><span data-stu-id="8b31b-430">The following example shows how to read from a file asynchronously.</span></span> <span data-ttu-id="8b31b-431">В примере используется <xref:System.IO.FileStream> класс, который является производным от <xref:System.IO.Stream> класса.</span><span class="sxs-lookup"><span data-stu-id="8b31b-431">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#4](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example4.cs#4)]
 [!code-vb[Asynchronous_File_IO_async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-432">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-432">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8b31b-433">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-433">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b31b-434">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-434">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-435">Поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-435">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-436">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-436">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b31b-437">Поток в настоящее время используется предыдущей операцией чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-437">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8b31b-438">Буфер, в который записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-438">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8b31b-439">Смещение байтов в <c>buffer</c>, с которого начинается запись данных, считанных из потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-439">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8b31b-440">Максимальное число байтов, предназначенных для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-440">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8b31b-441">Токен для отслеживания запросов отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-441">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="8b31b-442">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-442">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-443">Асинхронно считывает последовательность байтов из текущего потока, перемещает позицию в потоке на число считанных байтов и отслеживает запросы отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-443">Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-444">Задача, представляющая асинхронную операцию чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-444">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="8b31b-445">Значение параметра <paramref name="TResult" /> содержит общее число байтов, считанных в буфер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-445">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="8b31b-446">Значение результата может быть меньше запрошенного числа байтов, если число доступных в данный момент байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-446">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-447"><xref:System.IO.Stream.ReadAsync%2A> Метод позволяет выполнять ресурсоемкие операции ввода-вывода без блокировки основного потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-447">The <xref:System.IO.Stream.ReadAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="8b31b-448">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="8b31b-448">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="8b31b-449">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="8b31b-449">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="8b31b-450">Используйте <xref:System.IO.Stream.CanRead%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции чтения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-450">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="8b31b-451">Если операция отменена до ее завершения, возвращаемая задача содержит <xref:System.Threading.Tasks.TaskStatus.Canceled> значение <xref:System.Threading.Tasks.Task.Status%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="8b31b-451">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="8b31b-452">Например, см. в разделе <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="8b31b-452">For an example, see the <xref:System.IO.Stream.ReadAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-453">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-453">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8b31b-454">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-454">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b31b-455">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-455">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-456">Поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-456">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-457">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-457">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b31b-458">Поток в настоящее время используется предыдущей операцией чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-458">The stream is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadByte();" />
      <MemberSignature Language="F#" Value="abstract member ReadByte : unit -&gt; int&#xA;override this.ReadByte : unit -&gt; int" Usage="stream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-459">Считывает байт из потока и перемещает позицию в потоке на один байт или возвращает -1, если достигнут конец потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-459">Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-460">Байт без знака, приведенный к <see langword="Int32" />, или значение -1, если достигнут конец потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-460">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-461">Используйте <xref:System.IO.Stream.CanRead%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции чтения.</span><span class="sxs-lookup"><span data-stu-id="8b31b-461">Use the <xref:System.IO.Stream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 <span data-ttu-id="8b31b-462">Попытка работы с потоком, после закрытия потока может создавать <xref:System.ObjectDisposedException>.</span><span class="sxs-lookup"><span data-stu-id="8b31b-462">Attempts to manipulate the stream after the stream has been closed could throw an <xref:System.ObjectDisposedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-463">Поток не поддерживает чтение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-463">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-464">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-464">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b31b-465">
            <para>Реализация по умолчанию в <see langword="Stream" /> создает новый массив однобайтовых, а затем вызывает <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />. Это формально верно, но неэффективно. Любой поток с внутренним буфером следует переопределить этот метод и предоставляют гораздо более эффективную версию, которая считывает буфера напрямую, как избежать дополнительное размещение массива при каждом вызове.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-465">
              <para>The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />. While this is formally correct, it is inefficient. Any stream with an internal buffer should override this method and provide a much more efficient version that reads the buffer directly, avoiding the extra array allocation on every call.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public virtual int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.IO.Stream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-466">Возвращает или задает значение в миллисекундах, определяющее период, в течение которого поток будет пытаться выполнить операцию чтения, прежде чем истечет время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-466">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b31b-467">Значение в миллисекундах, определяющее период, в течение которого поток будет пытаться выполнить операцию чтения, прежде чем истечет время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-467">A value, in miliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b31b-468">Метод <see cref="P:System.IO.Stream.ReadTimeout" /> всегда создает исключение <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-468">The <see cref="P:System.IO.Stream.ReadTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b31b-469">
            <para>
              <see cref="P:System.IO.Stream.ReadTimeout" /> Свойство должно переопределяться для предоставления соответствующего расширения функциональности для потока. Если поток поддерживает время ожидания, это свойство следует вызвать <see cref="T:System.InvalidOperationException" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-469">
              <para>The <see cref="P:System.IO.Stream.ReadTimeout" /> property should be overridden to provide the appropriate behavior for the stream. If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public abstract long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="abstract member Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="stream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="8b31b-470">Смещение в байтах относительно параметра <c>origin</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-470">A byte offset relative to the <c>origin</c> parameter.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="8b31b-471">Значение типа <see cref="T:System.IO.SeekOrigin" />, указывающее точку ссылки, которая используется для получения новой позиции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-471">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-472">При переопределении в производном классе задает позицию в текущем потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-472">When overridden in a derived class, sets the position within the current stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-473">Новая позиция в текущем потоке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-473">The new position within the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-474">Используйте <xref:System.IO.Stream.CanSeek%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр поиск.</span><span class="sxs-lookup"><span data-stu-id="8b31b-474">Use the <xref:System.IO.Stream.CanSeek%2A> property to determine whether the current instance supports seeking.</span></span>  
  
 <span data-ttu-id="8b31b-475">Если `offset` является отрицательным, новая позиция должна предшествовать позиции, заданной параметром `origin` на число байтов, заданному параметром `offset`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-475">If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="8b31b-476">Если `offset` равно нулю (0), новая позиция должна быть позицией, заданной параметром `origin`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-476">If `offset` is zero (0), the new position is required to be the position specified by `origin`.</span></span> <span data-ttu-id="8b31b-477">Если `offset` является положительным, новая позиция — это должно следовать за позицией, заданной параметром `origin` на число байтов, заданному параметром `offset`.</span><span class="sxs-lookup"><span data-stu-id="8b31b-477">If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="8b31b-478">Классы, производные от `Stream` , поддерживающего поиск необходимо переопределить этот метод для предоставления функций, описанных выше.</span><span class="sxs-lookup"><span data-stu-id="8b31b-478">Classes derived from `Stream` that support seeking must override this method to provide the functionality described above.</span></span>  
  
 <span data-ttu-id="8b31b-479">Поддерживается поиск в любом месте за пределами длины потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-479">Seeking to any location beyond the length of the stream is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-480">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-480">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-481">Поток не поддерживает поиск, если поток создан на основе канала или вывода консоли.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-481">The stream does not support seeking, such as if the stream is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-482">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-482">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public abstract void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetLength(long value);" />
      <MemberSignature Language="F#" Value="abstract member SetLength : int64 -&gt; unit" Usage="stream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8b31b-483">Нужная длина текущего потока в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-483">The desired length of the current stream in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-484">При переопределении в производном классе задает длину текущего потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-484">When overridden in a derived class, sets the length of the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-485">Если указанное значение меньше текущей длины потока, поток сокращается.</span><span class="sxs-lookup"><span data-stu-id="8b31b-485">If the specified value is less than the current length of the stream, the stream is truncated.</span></span> <span data-ttu-id="8b31b-486">Если заданное значение больше текущей длины потока, поток будет расширен.</span><span class="sxs-lookup"><span data-stu-id="8b31b-486">If the specified value is larger than the current length of the stream, the stream is expanded.</span></span> <span data-ttu-id="8b31b-487">Если поток расширяется, содержимое потока между старой и новой длиной не определены.</span><span class="sxs-lookup"><span data-stu-id="8b31b-487">If the stream is expanded, the contents of the stream between the old and the new length are not defined.</span></span>  
  
 <span data-ttu-id="8b31b-488">Поток должен поддерживать запись и поиск для `SetLength` для работы.</span><span class="sxs-lookup"><span data-stu-id="8b31b-488">A stream must support both writing and seeking for `SetLength` to work.</span></span>  
  
 <span data-ttu-id="8b31b-489">Используйте <xref:System.IO.Stream.CanWrite%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции записи и <xref:System.IO.Stream.CanSeek%2A> свойства, чтобы определить, поддерживается ли поиск.</span><span class="sxs-lookup"><span data-stu-id="8b31b-489">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing, and the <xref:System.IO.Stream.CanSeek%2A> property to determine whether seeking is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-490">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-490">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-491">Поток не поддерживает ни поиск, ни запись, например, если поток создан на основе канала или вывода консоли.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-491">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-492">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-492">Methods were called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.Stream Synchronized (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream Synchronized(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Synchronized(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ Synchronized(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.Stream -&gt; System.IO.Stream" Usage="System.IO.Stream.Synchronized stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="8b31b-493">Синхронизируемый объект <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-493">The <see cref="T:System.IO.Stream" /> object to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-494">Создает потокобезопасную (синхронизированную) оболочку для заданного объекта <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-494">Creates a thread-safe (synchronized) wrapper around the specified <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-495">Потокобезопасный объект <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-495">A thread-safe <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-496">Этот метод возвращает класс, который заключает в оболочку заданный <xref:System.IO.Stream> объекта и ограничивает доступ к нему из нескольких потоков.</span><span class="sxs-lookup"><span data-stu-id="8b31b-496">This method returns a class that wraps the specified <xref:System.IO.Stream> object and restricts access to it from multiple threads.</span></span> <span data-ttu-id="8b31b-497">Любой доступ к <xref:System.IO.Stream> объект будет поточно-ориентированным.</span><span class="sxs-lookup"><span data-stu-id="8b31b-497">All access to the <xref:System.IO.Stream> object will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-498">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-498">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;byte&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="stream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * int -&gt; unit" Usage="stream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8b31b-499">Массив байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-499">An array of bytes.</span>
          </span>
          <span data-ttu-id="8b31b-500">Этот метод копирует <c>count</c> байтов из <c>buffer</c> в текущий поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-500">This method copies <c>count</c> bytes from <c>buffer</c> to the current stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8b31b-501">Отсчитываемое от нуля смещение байтов в буфере <c>buffer</c>, с которого начинается копирование байтов в текущий поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-501">The zero-based byte offset in <c>buffer</c> at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8b31b-502">Количество байтов, которое необходимо записать в текущий поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-502">The number of bytes to be written to the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-503">При переопределении в производном классе записывает последовательность байтов в текущий поток и перемещает текущую позицию в нем вперед на число записанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-503">When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-504">Используйте <xref:System.IO.Stream.CanWrite%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции записи.</span><span class="sxs-lookup"><span data-stu-id="8b31b-504">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="8b31b-505">Используйте <xref:System.IO.Stream.WriteAsync%2A> метод для асинхронной записи в текущий поток.</span><span class="sxs-lookup"><span data-stu-id="8b31b-505">Use the <xref:System.IO.Stream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>  
  
 <span data-ttu-id="8b31b-506">При успешном выполнении операции записи позицию в потоке перемещается вперед на число записанных байтов.</span><span class="sxs-lookup"><span data-stu-id="8b31b-506">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="8b31b-507">При возникновении исключения, положение в потоке остается неизменным.</span><span class="sxs-lookup"><span data-stu-id="8b31b-507">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b31b-508">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-508">The sum of <paramref name="offset" /> and <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-509">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-509">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8b31b-510">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-510">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-511">Произошла ошибка ввода-вывода, например, связанная с тем, что не удается найти указанный файл.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-511">An I/O error occured, such as the specified file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-512">Поток не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-512">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-513">Метод <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> был вызван после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-513">
              <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" /> was called after the stream was closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-514">Асинхронно записывает последовательность байтов в текущий поток и перемещает текущую позицию внутри потока на число записанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-514">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&#xA;override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="stream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Byte(), offset As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stream.WriteAsync (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8b31b-515">Буфер, из которого записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-515">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8b31b-516">Смещение байтов (начиная с нуля) в <c>buffer</c>, с которого начинается копирование байтов в поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-516">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8b31b-517">Максимальное число байтов для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-517">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-518">Асинхронно записывает последовательность байтов в текущий поток и перемещает текущую позицию внутри потока на число записанных байтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-518">Asynchronously writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-519">Задача, представляющая асинхронную операцию записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-519">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-520"><xref:System.IO.Stream.WriteAsync%2A> Метод позволяет выполнять ресурсоемкие операции ввода-вывода без блокировки основного потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-520">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="8b31b-521">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="8b31b-521">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="8b31b-522">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="8b31b-522">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="8b31b-523">Используйте <xref:System.IO.Stream.CanWrite%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции записи.</span><span class="sxs-lookup"><span data-stu-id="8b31b-523">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b31b-524">В следующем примере показано, как асинхронно записать в файл.</span><span class="sxs-lookup"><span data-stu-id="8b31b-524">The following example shows how to write asynchronously to a file.</span></span> <span data-ttu-id="8b31b-525">В примере используется <xref:System.IO.FileStream> класс, который является производным от <xref:System.IO.Stream> класса.</span><span class="sxs-lookup"><span data-stu-id="8b31b-525">The example uses the <xref:System.IO.FileStream> class, which derives from the <xref:System.IO.Stream> class.</span></span>  
  
 [!code-csharp[Asynchronous_File_IO_async#3](~/samples/snippets/csharp/VS_Snippets_CLR/Asynchronous_File_IO_async/cs/example3.cs#3)]
 [!code-vb[Asynchronous_File_IO_async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Asynchronous_File_IO_async/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-526">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-526">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8b31b-527">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-527">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b31b-528">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-528">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-529">Поток не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-529">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-530">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-530">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b31b-531">Поток в настоящее время используется предыдущей операцией записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-531">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="8b31b-532">Буфер, из которого записываются данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-532">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="8b31b-533">Смещение байтов (начиная с нуля) в <c>buffer</c>, с которого начинается копирование байтов в поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-533">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8b31b-534">Максимальное число байтов для записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-534">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="8b31b-535">Токен для отслеживания запросов отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-535">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="8b31b-536">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-536">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-537">Асинхронно записывает последовательность байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-537">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b31b-538">Задача, представляющая асинхронную операцию записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-538">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-539"><xref:System.IO.Stream.WriteAsync%2A> Метод позволяет выполнять ресурсоемкие операции ввода-вывода без блокировки основного потока.</span><span class="sxs-lookup"><span data-stu-id="8b31b-539">The <xref:System.IO.Stream.WriteAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="8b31b-540">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)], где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="8b31b-540">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="8b31b-541">Асинхронные методы используются в сочетании с `async` и `await` ключевые слова в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="8b31b-541">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>  
  
 <span data-ttu-id="8b31b-542">Используйте <xref:System.IO.Stream.CanWrite%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции записи.</span><span class="sxs-lookup"><span data-stu-id="8b31b-542">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 <span data-ttu-id="8b31b-543">Если операция отменена до ее завершения, возвращаемая задача содержит <xref:System.Threading.Tasks.TaskStatus.Canceled> значение <xref:System.Threading.Tasks.Task.Status%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="8b31b-543">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled> value for the <xref:System.Threading.Tasks.Task.Status%2A> property.</span></span>  
  
 <span data-ttu-id="8b31b-544">Например, см. в разделе <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="8b31b-544">For an example, see the <xref:System.IO.Stream.WriteAsync%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8b31b-545">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-545">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8b31b-546">
            <paramref name="offset" /> или <paramref name="count" /> является отрицательным значением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-546">
              <paramref name="offset" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8b31b-547">Сумма <paramref name="offset" /> и <paramref name="count" /> больше, чем длина буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-547">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-548">Поток не поддерживает запись.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-548">The stream does not support writing.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-549">Поток был удален.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-549">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b31b-550">Поток в настоящее время используется предыдущей операцией записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-550">The stream is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public virtual void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Stream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="abstract member WriteByte : byte -&gt; unit&#xA;override this.WriteByte : byte -&gt; unit" Usage="stream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="8b31b-551">Байт, записываемый в поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-551">The byte to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b31b-552">Записывает байт в текущее положение в потоке и перемещает позицию в потоке вперед на один байт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-552">Writes a byte to the current position in the stream and advances the position within the stream by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b31b-553">Используйте <xref:System.IO.Stream.CanWrite%2A> свойства, чтобы определить, поддерживает ли текущий экземпляр операции записи.</span><span class="sxs-lookup"><span data-stu-id="8b31b-553">Use the <xref:System.IO.Stream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8b31b-554">Ошибка ввода-вывода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-554">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b31b-555">Поток не поддерживает запись или был закрыт до начала операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-555">The stream does not support writing, or the stream is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8b31b-556">Методы были вызваны после закрытия потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-556">Methods were called after the stream was closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b31b-557">
            <para>Реализация по умолчанию в <see langword="Stream" /> создает новый массив однобайтовых, а затем вызывает <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />. Это формально верно, но неэффективно. Любой поток с внутренним буфером следует переопределить этот метод и предоставляют гораздо более эффективную версию, которая записывает в буфер напрямую, как избежать дополнительное размещение массива при каждом вызове.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-557">
              <para>The default implementation on <see langword="Stream" /> creates a new single-byte array and then calls <see cref="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />. While this is formally correct, it is inefficient. Any stream with an internal buffer should override this method and provide a much more efficient version that writes to the buffer directly, avoiding the extra array allocation on every call.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public virtual int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Stream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.IO.Stream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8b31b-558">Возвращает или задает значение в миллисекундах, определяющее период, в течение которого поток будет пытаться выполнить операцию записи, прежде чем истечет время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-558">Gets or sets a value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8b31b-559">Значение в миллисекундах, определяющее период, в течение которого поток будет пытаться выполнить операцию записи, прежде чем истечет время ожидания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-559">A value, in miliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b31b-560">Метод <see cref="P:System.IO.Stream.WriteTimeout" /> всегда создает исключение <see cref="T:System.InvalidOperationException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-560">The <see cref="P:System.IO.Stream.WriteTimeout" /> method always throws an <see cref="T:System.InvalidOperationException" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="8b31b-561">
            <para>
              <see cref="P:System.IO.Stream.WriteTimeout" /> Свойство должно переопределяться для предоставления соответствующего расширения функциональности для потока. Если поток поддерживает время ожидания, это свойство следует вызвать <see cref="T:System.InvalidOperationException" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8b31b-561">
              <para>The <see cref="P:System.IO.Stream.WriteTimeout" /> property should be overridden to provide the appropriate behavior for the stream. If the stream does not support timing out, this property should raise an <see cref="T:System.InvalidOperationException" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>