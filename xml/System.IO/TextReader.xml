<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextReader.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c6862423f98168f7a3dfd8baa4b6dabc6629b49d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6862423f98168f7a3dfd8baa4b6dabc6629b49d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.TextReader">
          <source>Represents a reader that can read a sequential series of characters.</source>
          <target state="translated">Представляет средство чтения, позволяющее считывать последовательные наборы символов.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source><ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> is the abstract base class of <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph>, which read characters from streams and strings, respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> является абстрактным базовым классом для <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> и <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph>, которые считывают знаки из потоков и строк, соответственно.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>Use these derived classes to open a text file for reading a specified range of characters, or to create a reader based on an existing stream.</source>
          <target state="translated">Чтобы открыть текстовый файл для чтения указанного диапазона символов или создать средство чтения на основе существующего потока, используйте эти производные классы.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Этот тип реализует <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">После завершения с помощью любого типа, производного от этого типа следует освободить его прямо или косвенно.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Для удаления типа непосредственно вызвать его <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%2A&gt;</ph> метод в <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> блока.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Чтобы удалить ее косвенно, использовать языковой конструкции, такие как <ph id="ph1">`using`</ph> (в C#) или <ph id="ph2">`Using`</ph> (в Visual Basic).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Дополнительные сведения см. в разделе Dispose и в разделе «С помощью объекта, реализует интерфейс IDisposable» <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> разделе интерфейса.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class is an abstract class.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> является абстрактным.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Следовательно, в коде экземпляр этого объекта не создается.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> class derives from <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> and provides implementations of the members for reading from a stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> Класс является производным от <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> и предоставляет реализации членов для чтения из потока.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>The following example shows how to read all the characters in a file by using the <ph id="ph1">&lt;xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Приведенный ниже показано, как прочитать все символы в файле с помощью <ph id="ph1">&lt;xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated">Он проверяет, является ли каждый символ буквы, цифры или символы-разделители перед добавлением символ экземпляр <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextReader">
          <source>A derived class must minimally implement the <ph id="ph1">&lt;see cref="M:System.IO.TextReader.Peek" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.IO.TextReader.Read" /&gt;</ph> methods to make a useful instance of <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Производный класс должен быть реализован минимально <ph id="ph1">&lt;see cref="M:System.IO.TextReader.Peek" /&gt;</ph> и <ph id="ph2">&lt;see cref="M:System.IO.TextReader.Read" /&gt;</ph> методов, которые обеспечивают полезные экземпляр <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.#ctor">
          <source>Use this constructor for derived classes.</source>
          <target state="translated">Этот конструктор используется для производных классов.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> and releases any system resources associated with the <ph id="ph2">&lt;see langword="TextReader" /&gt;</ph>.</source>
          <target state="translated">Закрывает <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> и освобождает все системные ресурсы, связанные с <ph id="ph2">&lt;see langword="TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Close">
          <source>This implementation of <ph id="ph1">`Close`</ph> calls the <ph id="ph2">&lt;xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method and passes it a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">Эта реализация <ph id="ph1">`Close`</ph> вызовы <ph id="ph2">&lt;xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> метод и передает его <ph id="ph3">`true`</ph> значение.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Close">
          <source>Flushing the text reader will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Close`</ph>.</source>
          <target state="translated">Списание средства чтения текста его основной кодировщик не очищается, пока не будет явно вызван метод <ph id="ph1">`Close`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Close">
          <source>Setting the <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Установка <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> свойства <ph id="ph2">`true`</ph> означает, что данные будут сброшены из буфера в поток, но состояние кодировщика при этом не сбрасывается.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Это позволяет кодировщику сохранить свое состояние (частичные символы), чтобы правильно выполнить кодировку следующего блока знаков.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Этот сценарий влияет на кодировки UTF8 и UTF7, в которых определенные символы кодируются только после кодировщик получает соседние знаки.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Close">
          <source>In derived classes, do not override the <ph id="ph1">&lt;xref:System.IO.TextReader.Close%2A&gt;</ph> method.</source>
          <target state="translated">В производных классах, не переопределяйте <ph id="ph1">&lt;xref:System.IO.TextReader.Close%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Close">
          <source>Instead, override the <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method to add code for releasing resources.</source>
          <target state="translated">Вместо этого Переопределите <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> метод, чтобы добавить код для освобождения ресурсов.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.IO.TextReader">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object.</source>
          <target state="translated">Освобождает все ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object.</source>
          <target state="translated">Освобождает все ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Вызовите метод <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%2A&gt;</ph> по окончании использования класса <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> in an unusable state.</source>
          <target state="translated">Метод <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%2A&gt;</ph> оставляет класс <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> в непригодном для использования состоянии.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph> was occupying.</source>
          <target state="translated">После вызова метода <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%2A&gt;</ph>, необходимо освободить все ссылки на <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph> , сборщик мусора мог освободить память, <ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph> занимаемую.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> и <bpt id="p2">[</bpt>метода<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Всегда вызывайте метод <ph id="ph1">&lt;xref:System.IO.TextReader.Dispose%2A&gt;</ph> перед освобождением последней ссылки на класс <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> метод <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph> освобождает только неуправляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Освобождает неуправляемые ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, а при необходимости освобождает также управляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Этот метод вызывается методом открытые <ph id="ph1">`Dispose`</ph> метод и <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source>By default, this method specifies the <ph id="ph1">`disposing`</ph> parameter as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">По умолчанию этот метод задает <ph id="ph1">`disposing`</ph> параметр как <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> specifies the <ph id="ph2">`disposing`</ph> parameter as <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> Указывает <ph id="ph2">`disposing`</ph> параметр как <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph> references.</source>
          <target state="translated">Если параметр <ph id="ph1">`disposing`</ph> имеет значение <ph id="ph2">`true`</ph>, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Этот метод вызывает метод <ph id="ph1">`Dispose`</ph> каждого объекта, на который есть ссылка.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> может вызываться несколько раз другими объектами.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">При переопределении этого метода следует избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source>For more information about how to implement this method, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о реализации этого метода см. в разделе <bpt id="p1">[</bpt>метода<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> и <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.IO.TextReader.Null">
          <source>Provides a <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> with no data to read from.</source>
          <target state="translated">Предоставляет <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> без данных, доступных для чтения.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextReader.Null">
          <source>Reading from the <ph id="ph1">&lt;xref:System.IO.TextReader.Null&gt;</ph> text reader is similar to reading from the end of a stream:</source>
          <target state="translated">Чтение из <ph id="ph1">&lt;xref:System.IO.TextReader.Null&gt;</ph> чтения текста похож на чтение с конца потока:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextReader.Null">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.TextReader.Peek%2A&gt;</ph> methods return -1.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph> И <ph id="ph2">&lt;xref:System.IO.TextReader.Peek%2A&gt;</ph> методы возвращают значение -1.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextReader.Null">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader.ReadBlock%2A&gt;</ph> method returns zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextReader.ReadBlock%2A&gt;</ph> Метод возвращает ноль.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextReader.Null">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLine%2A&gt;</ph> method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextReader.ReadLine%2A&gt;</ph> Возвращает <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextReader.Null">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader.ReadToEnd%2A&gt;</ph> method returns an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextReader.ReadToEnd%2A&gt;</ph> Метод возвращает пустую строку.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Peek">
          <source>Reads the next character without changing the state of the reader or the character source.</source>
          <target state="translated">Выполняет чтение следующего символа, не изменяя состояние средства чтения или источника символа.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Peek">
          <source>Returns the next available character without actually reading it from the reader.</source>
          <target state="translated">Возвращает следующий доступный символ, фактически не считывая его из средства чтения.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Peek">
          <source>An integer representing the next character to be read, or -1 if no more characters are available or the reader does not support seeking.</source>
          <target state="translated">Целое число, представляющее следующий символ, чтение которого необходимо выполнить, или значение -1, если доступных символов больше нет или средство чтения не поддерживает поиск.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Peek">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader.Peek%2A&gt;</ph> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextReader.Peek%2A&gt;</ph> Метод возвращает целочисленное значение, чтобы определить, произошла ли конец файла или другой ошибки.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Peek">
          <source>This allows a user to first check if the returned value is -1 before casting it to a <ph id="ph1">&lt;xref:System.Char&gt;</ph> type.</source>
          <target state="translated">Это позволяет пользователям, сначала проверьте, является ли возвращенное значение -1 до приведения его в <ph id="ph1">&lt;xref:System.Char&gt;</ph> типа.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Peek">
          <source>The current position of the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> is not changed by this operation.</source>
          <target state="translated">Текущее положение <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> при этой операции не изменяется.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Peek">
          <source>The returned value is -1 if no more characters are available.</source>
          <target state="translated">Возвращаемое значение равно -1, если доступных символов больше нет.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Peek">
          <source>The default implementation returns -1.</source>
          <target state="translated">Реализация по умолчанию возвращает значение -1.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Peek">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class is an abstract class.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> является абстрактным.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Peek">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Следовательно, в коде экземпляр этого объекта не создается.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Peek">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextReader.Peek%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Пример использования <ph id="ph1">&lt;xref:System.IO.TextReader.Peek%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> is closed.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> закрыт.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Peek">
          <source>An I/O error occurs.</source>
          <target state="translated">Ошибка ввода-вывода.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.IO.TextReader">
          <source>Reads data from the text reader.</source>
          <target state="translated">Считывает данные из средства чтения текста.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read">
          <source>Reads the next character from the text reader and advances the character position by one character.</source>
          <target state="translated">Выполняет чтение следующего символа из средства чтения текста и перемещает положение символа на одну позицию вперед.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read">
          <source>The next character from the text reader, or -1 if no more characters are available.</source>
          <target state="translated">Следующий символ из средства чтения текста или значение -1, если доступных символов больше нет.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read">
          <source>The default implementation returns -1.</source>
          <target state="translated">Реализация по умолчанию возвращает значение -1.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Read">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class is an abstract class.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> является абстрактным.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Read">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Следовательно, в коде экземпляр этого объекта не создается.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Read">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Пример использования <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> is closed.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> закрыт.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read">
          <source>An I/O error occurs.</source>
          <target state="translated">Ошибка ввода-вывода.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified character array with the values between <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the characters read from the current source.</source>
          <target state="translated">При возвращении этого метода содержит заданный массив символов, в котором значения в интервале от <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> до (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> – 1) заменены символами, считанными из текущего источника.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated">Позиция в массиве <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, с которой начинается запись.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to read.</source>
          <target state="translated">Максимальное число считываемых символов.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>If the end of the reader is reached before the specified number of characters is read into the buffer, the method returns.</source>
          <target state="translated">Если конец средства чтения достигнут, прежде чем в буфер считано указанное количество символов, метод возвращает управление.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Reads a specified maximum number of characters from the current reader and writes the data to a buffer, beginning at the specified index.</source>
          <target state="translated">Считывает указанное максимальное количество символов из текущего средства чтения и записывает данные в буфер, начиная с заданного индекса.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters that have been read.</source>
          <target state="translated">Количество считанных символов.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The number will be less than or equal to <ph id="ph1">&lt;paramref name="count" /&gt;</ph>, depending on whether the data is available within the reader.</source>
          <target state="translated">Количество будет меньше или равно <ph id="ph1">&lt;paramref name="count" /&gt;</ph> в зависимости от доступности данных в средстве чтения.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This method returns 0 (zero) if it is called when no more characters are left to read.</source>
          <target state="translated">Этот метод возвращает 0 (нуль), если его вызвать при отсутствии символов, доступных для чтения.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This method returns after either <ph id="ph1">`count`</ph> characters are read or the end of the file is reached.</source>
          <target state="translated">Этот метод возвращает после того, как <ph id="ph1">`count`</ph> символы доступны для чтения или не будет достигнут конец файла.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.TextReader.ReadBlock%2A&gt;</ph> is a blocking version of this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextReader.ReadBlock%2A&gt;</ph> — блокировки версия этого метода.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class is an abstract class.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> является абстрактным.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Следовательно, в коде экземпляр этого объекта не создается.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Пример использования <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Длина буфера минус <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> is closed.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> закрыт.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ошибка ввода-вывода.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified character array with the values between <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the characters read from the current source.</source>
          <target state="translated">При возвращении этого метода содержит заданный массив символов, в котором значения в интервале от <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> до (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> – 1) заменены символами, считанными из текущего источника.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated">Позиция в массиве <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, с которой начинается запись.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to read.</source>
          <target state="translated">Максимальное число считываемых символов.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</source>
          <target state="translated">Если конец текста достигнут, прежде чем указанное количество символов считывается в буфер, текущий метод возвращает управление.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</source>
          <target state="translated">Асинхронно считывает указанное максимальное количество символов из текущего средства чтения текста и записывает данные в буфер, начиная с указанного индекса.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию чтения.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> содержит общее число байтов, считанных в буфер.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</source>
          <target state="translated">Значение результата может быть меньше запрошенного числа байтов, если число текущих доступных байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец текста.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task completes after either the number of characters specified by the <ph id="ph1">`count`</ph> parameter are read or the end of the file is reached.</source>
          <target state="translated">Задача завершается после того, как число знаков, указанное в <ph id="ph1">`count`</ph> параметра доступны для чтения или не будет достигнут конец файла.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class is an abstract class.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> является абстрактным.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Следовательно, в коде экземпляр этого объекта не создается.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Пример использования <ph id="ph1">&lt;xref:System.IO.TextReader.ReadAsync%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated">Сумма <ph id="ph1">&lt;paramref name="index" /&gt;</ph> и <ph id="ph2">&lt;paramref name="count" /&gt;</ph> больше, чем длина буфера.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text reader has been disposed.</source>
          <target state="translated">Удалено средство чтения текста.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">Модуль чтения в настоящее время используется предыдущей операцией чтения.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>When this method returns, this parameter contains the specified character array with the values between <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> -1) replaced by the characters read from the current source.</source>
          <target state="translated">При возвращении этого метода данный параметр содержит заданный массив символов, в котором значения в интервале от <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> до (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> – 1) заменены символами, считанными из текущего источника.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>The position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated">Позиция в массиве <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, с которой начинается запись.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to read.</source>
          <target state="translated">Максимальное число считываемых символов.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>Reads a specified maximum number of characters from the current text reader and writes the data to a buffer, beginning at the specified index.</source>
          <target state="translated">Считывает указанное максимальное количество символов из текущего средства чтения текста и записывает данные в буфер, начиная с заданного индекса.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters that have been read.</source>
          <target state="translated">Количество считанных символов.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>The number will be less than or equal to <ph id="ph1">&lt;paramref name="count" /&gt;</ph>, depending on whether all input characters have been read.</source>
          <target state="translated">Число будет меньше или равно значению <ph id="ph1">&lt;paramref name="count" /&gt;</ph>, в зависимости от того, считаны ли все входящие символы.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>The position of the underlying text reader is advanced by the number of characters that were read into <ph id="ph1">`buffer`</ph>.</source>
          <target state="translated">Положение базового средства чтения текста увеличивается число символов, считанных в <ph id="ph1">`buffer`</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>The method blocks until either <ph id="ph1">`count`</ph> characters are read, or all characters have been read.</source>
          <target state="translated">Метод блокируется, пока не будет <ph id="ph1">`count`</ph> при чтении или все символы считаны.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>This is a blocking version of <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph>.</source>
          <target state="translated">Это блокировки версия <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Длина буфера минус <ph id="ph1">&lt;paramref name="index" /&gt;</ph> меньше <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> is closed.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> закрыт.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Ошибка ввода-вывода.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified character array with the values between <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the characters read from the current source.</source>
          <target state="translated">При возвращении этого метода содержит заданный массив символов, в котором значения в интервале от <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> до (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> – 1) заменены символами, считанными из текущего источника.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated">Позиция в массиве <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>, с которой начинается запись.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to read.</source>
          <target state="translated">Максимальное число считываемых символов.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</source>
          <target state="translated">Если конец текста достигнут, прежде чем указанное количество символов считывается в буфер, текущий метод возвращает управление.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</source>
          <target state="translated">Асинхронно считывает указанное максимальное количество символов из текущего средства чтения текста и записывает данные в буфер, начиная с указанного индекса.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию чтения.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> содержит общее число байтов, считанных в буфер.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</source>
          <target state="translated">Значение результата может быть меньше запрошенного числа байтов, если число текущих доступных байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец текста.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task does not complete until either the number of characters specified by the <ph id="ph1">`count`</ph> parameter are read, or the end of the text has been reached.</source>
          <target state="translated">Задача не завершается до либо число знаков, указанное в <ph id="ph1">`count`</ph> параметра доступны для чтения, или достигнут конец текста.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> или <ph id="ph2">&lt;paramref name="count" /&gt;</ph> является отрицательным значением.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated">Сумма <ph id="ph1">&lt;paramref name="index" /&gt;</ph> и <ph id="ph2">&lt;paramref name="count" /&gt;</ph> больше, чем длина буфера.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text reader has been disposed.</source>
          <target state="translated">Удалено средство чтения текста.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">Модуль чтения в настоящее время используется предыдущей операцией чтения.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLine">
          <source>Reads a line of characters from the text reader and returns the data as a string.</source>
          <target state="translated">Выполняет чтение строки символов из средства чтения текста и возвращает данные в виде строки.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLine">
          <source>The next line from the reader, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if all characters have been read.</source>
          <target state="translated">Следующая строка из средства чтения или значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>, если все символы считаны.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLine">
          <source>A line is defined as a sequence of characters followed by a carriage return (0x000d), a line feed (0x000a), a carriage return followed by a line feed, <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph>, or the end-of-stream marker.</source>
          <target state="translated">Строка определяется как последовательность символов, после чего символ возврата каретки (0x000d), перевод строки (0x000a), возврат каретки и с помощью строки, <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph>, или маркер конец потока.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLine">
          <source>The string that is returned does not contain the terminating carriage return or line feed.</source>
          <target state="translated">Возвращаемая строка не содержит завершающий символ возврата каретки или перевода строки.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLine">
          <source>The return value is <ph id="ph1">`null`</ph> if the end of the input stream has been reached.</source>
          <target state="translated">Возвращает значение <ph id="ph1">`null`</ph> , если достигнут конец входного потока.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLine">
          <source>If the method throws an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, the reader's position in the underlying <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <ph id="ph3">&lt;xref:System.IO.TextReader.ReadLine%2A&gt;</ph> buffer are discarded.</source>
          <target state="translated">Если метод вызывает <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> исключение, позиция средства чтения в основном потоке <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> увеличивается число знаков, которое может считывать метод, но символы, которые уже были считаны во внутренний <ph id="ph3">&lt;xref:System.IO.TextReader.ReadLine%2A&gt;</ph> являются буфера удаляются.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLine">
          <source>Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> object.</source>
          <target state="translated">Так как невозможно изменить позицию средства чтения в потоке, символы, которые уже были считаны восстановление и доступны только при повторной инициализации <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLine">
          <source>If the initial position within the stream is unknown or the stream does not support seeking, the underlying <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> also needs to be reinitialized.</source>
          <target state="translated">Если начальная позиция в потоке неизвестна или поток не поддерживает поиск, базовый <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> также необходимо инициализировать повторно.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLine">
          <source>To avoid such a situation and produce robust code you should use the <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph> method and store the read characters in a preallocated buffer.</source>
          <target state="translated">Чтобы избежать такой ситуации и создать надежный код, следует использовать <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph> метод и хранилище считанные знаки в заранее выделенном буфере.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLine">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class is an abstract class.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> является абстрактным.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLine">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Следовательно, в коде экземпляр этого объекта не создается.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLine">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLine%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Пример использования <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLine%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLine">
          <source>An I/O error occurs.</source>
          <target state="translated">Ошибка ввода-вывода.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLine">
          <source>There is insufficient memory to allocate a buffer for the returned string.</source>
          <target state="translated">Не хватает памяти для выделения буфера под возвращаемую строку.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLine">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> is closed.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> закрыт.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLine">
          <source>The number of characters in the next line is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph></source>
          <target state="translated">Количество символов в следующей строке больше <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLineAsync">
          <source>Reads a line of characters asynchronously and returns the data as a string.</source>
          <target state="translated">Асинхронно считывает строку символов и возвращает данные в виде строки.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLineAsync">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию чтения.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLineAsync">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the next line from the text reader, or is <ph id="ph2">&lt;see langword="null" /&gt;</ph> if all of the characters have been read.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> содержит следующую строку из средства чтения текста или значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>, если все символы считаны.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLineAsync">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class is an abstract class.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> является абстрактным.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLineAsync">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Следовательно, в коде экземпляр этого объекта не создается.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLineAsync">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Пример использования <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadLineAsync">
          <source>If the current <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> represents the standard input stream returned by the <ph id="ph2">&lt;xref:System.Console.In%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph3">&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;</ph> method executes synchronously rather than asynchronously.</source>
          <target state="translated">Если текущий <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> представляет стандартный входной поток, возвращенный <ph id="ph2">&lt;xref:System.Console.In%2A?displayProperty=nameWithType&gt;</ph> свойства <ph id="ph3">&lt;xref:System.IO.TextReader.ReadLineAsync%2A&gt;</ph> метод выполняется синхронно, а не асинхронно.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLineAsync">
          <source>The number of characters in the next line is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Количество символов в следующей строке больше <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLineAsync">
          <source>The text reader has been disposed.</source>
          <target state="translated">Удалено средство чтения текста.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadLineAsync">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">Модуль чтения в настоящее время используется предыдущей операцией чтения.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEnd">
          <source>Reads all characters from the current position to the end of the text reader and returns them as one string.</source>
          <target state="translated">Считывает все символы, начиная с текущей позиции до конца средства чтения текста, и возвращает их в виде одной строки.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEnd">
          <source>A string that contains all characters from the current position to the end of the text reader.</source>
          <target state="translated">Строка, содержащая все символы, начиная с текущей позиции до конца средства чтения текста.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadToEnd">
          <source>If the method throws an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> exception, the reader's position in the underlying <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <ph id="ph3">&lt;xref:System.IO.TextReader.ReadToEnd%2A&gt;</ph> buffer are discarded.</source>
          <target state="translated">Если метод вызывает <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> исключение, позиция средства чтения в основном потоке <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> увеличивается число знаков, которое может считывать метод, но символы, которые уже были считаны во внутренний <ph id="ph3">&lt;xref:System.IO.TextReader.ReadToEnd%2A&gt;</ph> являются буфера удаляются.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadToEnd">
          <source>Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Так как невозможно изменить позицию средства чтения в потоке, символы, которые уже были считаны восстановление и доступны только при повторной инициализации <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadToEnd">
          <source>If the initial position within the stream is unknown or the stream does not support seeking, the underlying <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> also needs to be reinitialized.</source>
          <target state="translated">Если начальная позиция в потоке неизвестна или поток не поддерживает поиск, базовый <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> также необходимо инициализировать повторно.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadToEnd">
          <source>To avoid such a situation and produce robust code you should use the <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph> method and store the read characters in a preallocated buffer.</source>
          <target state="translated">Чтобы избежать такой ситуации и создать надежный код, следует использовать <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A&gt;</ph> метод и хранилище считанные знаки в заранее выделенном буфере.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadToEnd">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class is an abstract class.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> является абстрактным.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadToEnd">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Следовательно, в коде экземпляр этого объекта не создается.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadToEnd">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadToEnd%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Пример использования <ph id="ph1">&lt;xref:System.IO.TextReader.ReadToEnd%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEnd">
          <source>An I/O error occurs.</source>
          <target state="translated">Ошибка ввода-вывода.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEnd">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> is closed.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> закрыт.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEnd">
          <source>There is insufficient memory to allocate a buffer for the returned string.</source>
          <target state="translated">Не хватает памяти для выделения буфера под возвращаемую строку.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEnd">
          <source>The number of characters in the next line is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph></source>
          <target state="translated">Количество символов в следующей строке больше <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEndAsync">
          <source>Reads all characters from the current position to the end of the text reader asynchronously and returns them as one string.</source>
          <target state="translated">Асинхронно считывает все символы с текущей позиции до конца средства чтения текста и возвращает их в виде одной строки.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEndAsync">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">Задача, представляющая асинхронную операцию чтения.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEndAsync">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains a string with the characters from the current position to the end of the text reader.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> содержит строку с символами от текущего положения до конца средства чтения текста.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadToEndAsync">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class is an abstract class.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> является абстрактным.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadToEndAsync">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">Следовательно, в коде экземпляр этого объекта не создается.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.ReadToEndAsync">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadToEndAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Пример использования <ph id="ph1">&lt;xref:System.IO.TextReader.ReadToEndAsync%2A&gt;</ph> метода, в разделе <ph id="ph2">&lt;xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEndAsync">
          <source>The number of characters is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Количество символов больше <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEndAsync">
          <source>The text reader has been disposed.</source>
          <target state="translated">Удалено средство чтения текста.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.ReadToEndAsync">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">Модуль чтения в настоящее время используется предыдущей операцией чтения.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Synchronized(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> to synchronize.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>, которую требуется синхронизировать.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Synchronized(System.IO.TextReader)">
          <source>Creates a thread-safe wrapper around the specified <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>.</source>
          <target state="translated">Создает потокобезопасную оболочку для указанного объекта <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Synchronized(System.IO.TextReader)">
          <source>A thread-safe <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Потокобезопасный объект <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Synchronized(System.IO.TextReader)">
          <source>The current method returns a class that wraps around the specified <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> instance and restricts access to it by multiple threads.</source>
          <target state="translated">Текущий метод возвращает класс-оболочку вокруг указанного <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> экземпляра и ограничивает доступ к нему из нескольких потоков.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextReader.Synchronized(System.IO.TextReader)">
          <source>All reads from the returned wrapper will be thread safe.</source>
          <target state="translated">Все операции чтения из возвращенной оболочки будут потокобезопасными.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.TextReader.Synchronized(System.IO.TextReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>