<Type Name="IAuthorizationPolicy" FullName="System.IdentityModel.Policy.IAuthorizationPolicy">
  <TypeSignature Language="C#" Value="public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationPolicy implements class System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationPolicy&#xA;Implements IAuthorizationComponent" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationPolicy : System::IdentityModel::Policy::IAuthorizationComponent" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Policy.IAuthorizationComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0320f-101">Определяет набор правил авторизации пользователя, используя набор утверждений.</span><span class="sxs-lookup"><span data-stu-id="0320f-101">Defines a set of rules for authorizing a user, given a set of claims.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0320f-102">Реализует интерфейс <xref:System.IdentityModel.Policy.IAuthorizationPolicy> для добавления одного набора утверждений в другой набор или для сопоставления между ними.</span><span class="sxs-lookup"><span data-stu-id="0320f-102">Implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface to add or map one set of claims to another.</span></span> <span data-ttu-id="0320f-103">Политика авторизации проверяет набор утверждений и добавляет дополнительные утверждения на основании текущего набора.</span><span class="sxs-lookup"><span data-stu-id="0320f-103">An authorization policy examines a set of claims and adds additional claims based on the current set.</span></span> <span data-ttu-id="0320f-104">Например, политика авторизации может проанализировать утверждение, содержащее дату рождения пользователя, и добавить утверждение о том, что возраст пользователя превышает 21 год, добавив утверждение Over21 в объект <xref:System.IdentityModel.Policy.EvaluationContext>.</span><span class="sxs-lookup"><span data-stu-id="0320f-104">For example, an authorization policy might evaluate a claim that contains the date of birth and add a claim that asserts that the user is over 21 years old and add an Over21 claim to the <xref:System.IdentityModel.Policy.EvaluationContext>.</span></span>  
  
 <span data-ttu-id="0320f-105">Классы, реализующие интерфейс <xref:System.IdentityModel.Policy.IAuthorizationPolicy>, не авторизуют пользователей, но они обеспечивают возможность авторизации пользователей с помощью класса <xref:System.ServiceModel.ServiceAuthorizationManager>.</span><span class="sxs-lookup"><span data-stu-id="0320f-105">Classes that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the <xref:System.ServiceModel.ServiceAuthorizationManager> class to do so.</span></span> <span data-ttu-id="0320f-106">Объект <xref:System.ServiceModel.ServiceAuthorizationManager> вызывает метод <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> для каждой действующей политики авторизации.</span><span class="sxs-lookup"><span data-stu-id="0320f-106">The <xref:System.ServiceModel.ServiceAuthorizationManager> calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect.</span></span> <span data-ttu-id="0320f-107">Метод <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> определяет на основании текущего контекста, следует ли добавить дополнительные утверждения для пользователя.</span><span class="sxs-lookup"><span data-stu-id="0320f-107">The <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user, based on the current context.</span></span> <span data-ttu-id="0320f-108">Метод политики авторизации <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> может быть вызван несколько раз в случае добавления утверждений в объект <xref:System.IdentityModel.Policy.EvaluationContext> другими политиками авторизации.</span><span class="sxs-lookup"><span data-stu-id="0320f-108">An authorization policy's <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext> by other authorization policies.</span></span> <span data-ttu-id="0320f-109">После выполнения всех действующих политик авторизации класс <xref:System.ServiceModel.ServiceAuthorizationManager> принимает решения об авторизации на основании окончательного набора утверждений.</span><span class="sxs-lookup"><span data-stu-id="0320f-109">When all authorization policies in effect are done, the <xref:System.ServiceModel.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims.</span></span> <span data-ttu-id="0320f-110">Затем класс <xref:System.ServiceModel.ServiceAuthorizationManager> создает объект <xref:System.IdentityModel.Policy.AuthorizationContext>, содержащий неизменяемый набор утверждений, отражающий эти решения об авторизации.</span><span class="sxs-lookup"><span data-stu-id="0320f-110">The <xref:System.ServiceModel.ServiceAuthorizationManager> class then creates an <xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions.</span></span>  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#1)]
 [!code-vb[C_IAuthorizationPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Evaluate(class System.IdentityModel.Policy.EvaluationContext evaluationContext, object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Evaluate(System::IdentityModel::Policy::EvaluationContext ^ evaluationContext, System::Object ^ % state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationContext" Type="System.IdentityModel.Policy.EvaluationContext" />
        <Parameter Name="state" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="evaluationContext"><span data-ttu-id="0320f-111">Объект <see cref="T:System.IdentityModel.Policy.EvaluationContext" />, содержащий набор утверждений, оцениваемый политикой авторизации.</span><span class="sxs-lookup"><span data-stu-id="0320f-111">An <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> that contains the claim set that the authorization policy evaluates.</span></span></param>
        <param name="state"><span data-ttu-id="0320f-112">Передаваемый по ссылке объект <see cref="T:System.Object" />, представляющий пользовательское состояние для этой политики авторизации.</span><span class="sxs-lookup"><span data-stu-id="0320f-112">A <see cref="T:System.Object" />, passed by reference that represents the custom state for this authorization policy.</span></span></param>
        <summary><span data-ttu-id="0320f-113">Определяет, соответствует ли пользователь требованиям этой политики авторизации.</span><span class="sxs-lookup"><span data-stu-id="0320f-113">Evaluates whether a user meets the requirements for this authorization policy.</span></span></summary>
        <returns>
          <span data-ttu-id="0320f-114">Значение <see langword="false" />, если метод <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> этой политики авторизации необходимо вызывать при добавлении утверждений в объект <paramref name="evaluationContext" /> другими политиками авторизации. В противном случае — значение <see langword="true" />, указывающее, что эта политика авторизации не требует дополнительной проверки.</span><span class="sxs-lookup"><span data-stu-id="0320f-114"><see langword="false" /> if the <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> method for this authorization policy must be called if additional claims are added by other authorization policies to <paramref name="evaluationContext" />; otherwise, <see langword="true" /> to state no additional evaluation is required by this authorization policy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0320f-115">При реализации интерфейса <xref:System.IdentityModel.Policy.IAuthorizationPolicy> следует учитывать, что метод <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> будет вызван несколько раз различными потоками.</span><span class="sxs-lookup"><span data-stu-id="0320f-115">Implementers of the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface should expect the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method to be called multiple times by different threads.</span></span>  
  
 <span data-ttu-id="0320f-116">При реализации интерфейса <xref:System.IdentityModel.Policy.IAuthorizationPolicy> можно использовать параметр `state` для отслеживания состояния между вызовами метода <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>.</span><span class="sxs-lookup"><span data-stu-id="0320f-116">Implementers of the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface can use the `state` parameter to track state between calls to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method.</span></span> <span data-ttu-id="0320f-117">Если объект состояния задан в пределах определенного вызова метода <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A>, тот же экземпляр объекта передается при каждом последующем вызове метода <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> в рамках текущего процесса оценки.</span><span class="sxs-lookup"><span data-stu-id="0320f-117">If a state object is set inside a given call to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method, the same object instance is passed to each and every subsequent call to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method in the current evaluation process.</span></span>  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#2)]
 [!code-vb[C_IAuthorizationPolicy#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Claims.ClaimSet Issuer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Claims.ClaimSet Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Issuer As ClaimSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Claims::ClaimSet ^ Issuer { System::IdentityModel::Claims::ClaimSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.ClaimSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0320f-118">Возвращает объект, представляющий издателя политики авторизации.</span><span class="sxs-lookup"><span data-stu-id="0320f-118">Gets a claim set that represents the issuer of the authorization policy.</span></span></summary>
        <value><span data-ttu-id="0320f-119">Объект <see cref="T:System.IdentityModel.Claims.ClaimSet" />, представляющий издателя политики авторизации.</span><span class="sxs-lookup"><span data-stu-id="0320f-119">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of the authorization policy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>