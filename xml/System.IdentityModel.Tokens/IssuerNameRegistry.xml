<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a225e68f793277ffff772b6148f50d2f6f4d235" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36557751" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type IssuerNameRegistry = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="3432f-101">Абстрактный базовый класс для реестра имен издателей.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3432f-101">The abstract base class for an issuer name registry.</span>
      </span>
      <span data-ttu-id="3432f-102">Реестр имени издателя используется для сопоставления мнемонического имени с криптографическим материалом, необходимым для проверки подписей токенов, выдаваемых соответствующим издателем.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3432f-102">An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer.</span>
      </span>
      <span data-ttu-id="3432f-103">Реестр имен издателей ведет список издателей, которым доверяет приложение проверяющей стороны (RP).</span>
      <span class="sxs-lookup">
        <span data-stu-id="3432f-103">The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3432f-104">Реестр имен поставщиков позволяет связать имя, назначенный криптографические материалы, необходимые для проверки подписи токенов, созданных соответствующего поставщика.</span><span class="sxs-lookup"><span data-stu-id="3432f-104">The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="3432f-105">Затем это имя используется для задания <xref:System.Security.Claims.Claim.Issuer%2A> или <xref:System.Security.Claims.Claim.OriginalIssuer%2A> свойство утверждения.</span><span class="sxs-lookup"><span data-stu-id="3432f-105">This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim.</span></span> <span data-ttu-id="3432f-106">Методы, предоставляемые <xref:System.IdentityModel.Tokens.IssuerNameRegistry> класса вызываются обработчик маркеров безопасности, обрабатывающий маркер из конвейера.</span><span class="sxs-lookup"><span data-stu-id="3432f-106">The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="3432f-107">Токены, подписанные материал, который не сопоставлен с реестр имен поставщиков не учитываются как не имеющий доверия.</span><span class="sxs-lookup"><span data-stu-id="3432f-107">Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted.</span></span> <span data-ttu-id="3432f-108">Имя, возвращенное имя поставщика реестра должно быть уникальным в контексте приложения проверяющей Стороны.</span><span class="sxs-lookup"><span data-stu-id="3432f-108">The name returned by the issuer name registry should be unique within the context of an RP application.</span></span>  
  
 <span data-ttu-id="3432f-109">В коде, можно указать имя поставщика реестра с помощью параметра <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="3432f-109">In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3432f-110">В файле конфигурации можно указать имя поставщика реестра, указав [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) элемента под [ &lt;securityTokenHandlerConfiguration &gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) элемента.</span><span class="sxs-lookup"><span data-stu-id="3432f-110">In a configuration file, the issuer name registry can be specified by specifying the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element under the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element.</span></span>  
  
 <span data-ttu-id="3432f-111">Windows Identity Foundation (WIF) предоставляет реализацию <xref:System.IdentityModel.Tokens.IssuerNameRegistry> класса вне ящика: <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> класса.</span><span class="sxs-lookup"><span data-stu-id="3432f-111">Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class.</span></span> <span data-ttu-id="3432f-112">При использовании этой реализации можно указать в файле конфигурации приложения проверяющей Стороны, в список доверенных издателей [ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) элемент, который является дочерним элементом элемента `<issuerNameRegistry>`элемент при <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class упоминается в этом элементе `type` атрибута.</span><span class="sxs-lookup"><span data-stu-id="3432f-112">When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [&lt;trustedIssuers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that element’s `type` attribute.</span></span> <span data-ttu-id="3432f-113">В разделе `<trustedIssuers>` элемент, имя каждого издателя сопоставлен сертификат X.509, который должен использоваться для проверки подписи.</span><span class="sxs-lookup"><span data-stu-id="3432f-113">Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.</span></span>  
  
 <span data-ttu-id="3432f-114">Чтобы создать в реестре имя пользовательского поставщика, необходимо переопределить <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="3432f-114">To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3432f-115">Этот метод возвращает имя издателя для заданного маркера безопасности.</span><span class="sxs-lookup"><span data-stu-id="3432f-115">This method returns the issuer name for the specified security token.</span></span> <span data-ttu-id="3432f-116">При необходимости можно переопределить <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> метод, чтобы предоставить механизм хинтинга при извлечении имен издателей и <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> метод, если вы хотите сформировать маркеры имя издателя для Windows, который отличается от <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span><span class="sxs-lookup"><span data-stu-id="3432f-116">You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span> <span data-ttu-id="3432f-117">Переопределить <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> способ включения реестр имя издателя, чтобы инициализировать из файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="3432f-117">Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3432f-118">Следующий код показывает реализацию <xref:System.IdentityModel.Tokens.IssuerNameRegistry> класс, который принимает только издателей, которые используют сертификаты с субъектом «CN = localhost».</span><span class="sxs-lookup"><span data-stu-id="3432f-118">The following code shows an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class that only accepts issuers that use certificates with subject "CN=localhost".</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="3432f-119">Следующий код является исключительно для демонстрационных целей.</span><span class="sxs-lookup"><span data-stu-id="3432f-119">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="3432f-120">Проверка сертификатов на основе имени субъекта не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="3432f-120">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="3432f-121">Этот код не должен использоваться как в производственной среде.</span><span class="sxs-lookup"><span data-stu-id="3432f-121">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 <span data-ttu-id="3432f-122">Ниже показан XML необходимо настроить приложение в реестре имя надежного издателя.</span><span class="sxs-lookup"><span data-stu-id="3432f-122">The following shows the XML necessary to configure an application with the trusted issuer name registry.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3432f-123">Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-123">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3432f-124">При переопределении в производном классе возвращает имя поставщика для указанного токена безопасности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-124">When overridden in a derived class, returns the issuer name for the specified security token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3432f-125">Вызывается из конвейера обработки обработчиком маркера безопасности, который обрабатывает маркер.</span><span class="sxs-lookup"><span data-stu-id="3432f-125">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="3432f-126">Метод должен возвращать уникальное имя для издателя в контексте приложения проверяющей Стороны.</span><span class="sxs-lookup"><span data-stu-id="3432f-126">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="issuerNameRegistry.GetIssuerName securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="3432f-127">Токен безопасности, для которого требуется вернуть имя издателя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-127">The security token for which to return the issuer name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3432f-128">При переопределении в производном классе возвращает имя поставщика указанного токена безопасности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-128">When overridden in a derived class, returns the name of the issuer of the specified security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3432f-129">Имя издателя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-129">The issuer name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3432f-130">Реализация должна возвращать ненулевой и непустой строку, идентифицирующую распознаваемым издателя или строку null для идентификации Неизвестный издатель.</span><span class="sxs-lookup"><span data-stu-id="3432f-130">Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.</span></span>  
  
 <span data-ttu-id="3432f-131">Вызывается из конвейера обработки обработчиком маркера безопасности, который обрабатывает маркер.</span><span class="sxs-lookup"><span data-stu-id="3432f-131">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="3432f-132">Метод должен возвращать уникальное имя для издателя в контексте приложения проверяющей Стороны.</span><span class="sxs-lookup"><span data-stu-id="3432f-132">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3432f-133">В следующем коде показано <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> метод реестр имен поставщиков.</span><span class="sxs-lookup"><span data-stu-id="3432f-133">The following code shows the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> method for an issuer name registry.</span></span> <span data-ttu-id="3432f-134">Полный образец находится в <xref:System.IdentityModel.Tokens.IssuerNameRegistry> класса раздела.</span><span class="sxs-lookup"><span data-stu-id="3432f-134">The full sample is in the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class overview topic.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="3432f-135">Следующий код является исключительно для демонстрационных целей.</span><span class="sxs-lookup"><span data-stu-id="3432f-135">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="3432f-136">Проверка сертификатов на основе имени субъекта не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="3432f-136">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="3432f-137">Этот код не должен использоваться как в производственной среде.</span><span class="sxs-lookup"><span data-stu-id="3432f-137">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string&#xA;override this.GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string" Usage="issuerNameRegistry.GetIssuerName (securityToken, requestedIssuerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="3432f-138">Токен безопасности, для которого требуется вернуть имя издателя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-138">The security token for which to return the issuer name.</span>
          </span>
        </param>
        <param name="requestedIssuerName">
          <span data-ttu-id="3432f-139">Имя издателя, которые следует учитывать в запросе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-139">An issuer name to consider in the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3432f-140">При переопределении в производном классе возвращает имя поставщика указанного токена безопасности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-140">When overridden in a derived class, returns the name of the issuer of the specified security token.</span>
          </span>
          <span data-ttu-id="3432f-141">Указанное имя издателя может учитываться при определении возвращаемого имени издателя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-141">The specified issuer name may be considered in determining the issuer name to return.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3432f-142">Имя издателя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-142">The issuer name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3432f-143">Реализация по умолчанию не обрабатывает `requestedIssuerName` параметр и просто вызывает метод <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="3432f-143">The default implementation ignores the `requestedIssuerName` parameter and simply calls the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="3432f-144">Вызывается из конвейера обработки обработчиком маркера безопасности, который обрабатывает маркер.</span><span class="sxs-lookup"><span data-stu-id="3432f-144">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="3432f-145">Метод должен возвращать уникальное имя для издателя в контексте приложения проверяющей Стороны.</span><span class="sxs-lookup"><span data-stu-id="3432f-145">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetWindowsIssuerName : unit -&gt; string&#xA;override this.GetWindowsIssuerName : unit -&gt; string" Usage="issuerNameRegistry.GetWindowsIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3432f-146">Возвращает имя издателя по умолчанию, используемое для утверждений Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-146">Returns the default issuer name to be used for Windows claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3432f-147">Имя издателя по умолчанию для утверждений Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-147">The default issuer name for Windows claims.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3432f-148">Реализация по умолчанию возвращает значение <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span><span class="sxs-lookup"><span data-stu-id="3432f-148">The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span>  
  
 <span data-ttu-id="3432f-149">Вызывается из конвейера обработки обработчиком маркера безопасности, который обрабатывает маркер.</span><span class="sxs-lookup"><span data-stu-id="3432f-149">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="3432f-150">Метод должен возвращать уникальное имя для издателя в контексте приложения проверяющей Стороны.</span><span class="sxs-lookup"><span data-stu-id="3432f-150">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="issuerNameRegistry.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">
          <span data-ttu-id="3432f-151">XML-элемент конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-151">The configuration XML elements.</span>
          </span>
          <span data-ttu-id="3432f-152">Каждый узел в списке имеет тип <see cref="T:System.Xml.XmlElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-152">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3432f-153">При переопределении в производном классе загружает пользовательскую конфигурацию из XML-кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3432f-153">When overridden in a derived class, loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3432f-154"><xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> Метод вызывается инфраструктурой конфигурации.</span><span class="sxs-lookup"><span data-stu-id="3432f-154">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="3432f-155">При вызове этого метода `nodelist` будет содержать верхнего уровня дочерних элементов [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) элемент из файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="3432f-155">When this method is called, the `nodelist` will contain the top-level child elements of the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file.</span></span> <span data-ttu-id="3432f-156">Каждый из них может в свою очередь, содержат атрибуты или дочерние элементы в зависимости от схемы конфигурации, определенных для производного класса.</span><span class="sxs-lookup"><span data-stu-id="3432f-156">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="3432f-157">Реализация по умолчанию создает <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="3432f-157">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="3432f-158">Переопределите этот метод в производном классе позволяет включить инициализацию реестра имя издателя из файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="3432f-158">Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>