<Type Name="SecurityTokenHandler" FullName="System.IdentityModel.Tokens.SecurityTokenHandler">
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenHandler : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenHandler extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenHandler&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenHandler abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8e31d-101">Абстрактный базовый класс для обработчиков токенов безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-101">The abstract base class for security token handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-102"><xref:System.IdentityModel.Tokens.SecurityTokenHandler> Класс — это базовый класс, производными от которого все параметры безопасности обработчиков маркеров.</span><span class="sxs-lookup"><span data-stu-id="8e31d-102">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class is the base class from which all security token handlers derive.</span></span> <span data-ttu-id="8e31d-103">Обработчик маркеров безопасности отвечает за:</span><span class="sxs-lookup"><span data-stu-id="8e31d-103">A security token handler is responsible for:</span></span>  
  
-   <span data-ttu-id="8e31d-104">Проверку маркеров безопасности (<xref:System.IdentityModel.Tokens.SecurityToken>) типа, он предназначен для процесса и утверждения, содержащиеся в маркере в упаковку <xref:System.Security.Claims.ClaimsIdentity> объекта.</span><span class="sxs-lookup"><span data-stu-id="8e31d-104">Validating security tokens (<xref:System.IdentityModel.Tokens.SecurityToken>) of the type it is designed to process and packaging the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity> object.</span></span>  
  
-   <span data-ttu-id="8e31d-105">Сериализацию и десериализацию маркеров безопасности типа он предназначен для обработки.</span><span class="sxs-lookup"><span data-stu-id="8e31d-105">Serializing and deserializing security tokens of the type it is designed to process.</span></span>  
  
-   <span data-ttu-id="8e31d-106">Сериализация и десериализация предложений идентификатора ключа (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>), указывают на маркеры предназначен для обработки в и из типа `<wsse:SecurityTokenReference>` элементов.</span><span class="sxs-lookup"><span data-stu-id="8e31d-106">Serializing and deserializing key identifier clauses (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that refer to tokens of the type it is designed to process to and from `<wsse:SecurityTokenReference>` elements.</span></span>  
  
-   <span data-ttu-id="8e31d-107">Создание токены безопасности от <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> объекта, передаваемого по реализации <xref:System.IdentityModel.SecurityTokenService> класса.</span><span class="sxs-lookup"><span data-stu-id="8e31d-107">Creating security tokens from a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> object passed by implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
-   <span data-ttu-id="8e31d-108">Создание предложений идентификатора ключа с токеном безопасности для реализации <xref:System.IdentityModel.SecurityTokenService> класса.</span><span class="sxs-lookup"><span data-stu-id="8e31d-108">Creating key identifier clauses from a security token for implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="8e31d-109">Windows Identity Foundation (WIF) поставляется следующие обработчики токенов безопасности без дополнительной настройки:</span><span class="sxs-lookup"><span data-stu-id="8e31d-109">Windows Identity Foundation (WIF) ships the following security token handlers out of the box:</span></span>  
  
-   <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>  
  
 <span data-ttu-id="8e31d-110">Большинство из этих классов предоставляют дополнительные элементы, которые реализуют функции, связанные с обработкой токены, для которых класс предназначен.</span><span class="sxs-lookup"><span data-stu-id="8e31d-110">Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed.</span></span> <span data-ttu-id="8e31d-111">Во многих случаях может быть лучше являются производными от одного из этих классов, а не непосредственно из <xref:System.IdentityModel.Tokens.SecurityTokenHandler> класса.</span><span class="sxs-lookup"><span data-stu-id="8e31d-111">In many cases it may be better to derive from one of these classes rather than directly from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span>  
  
 <span data-ttu-id="8e31d-112">Обработчик маркеров безопасности можно добавлять или удалять из коллекции, обработчик маркеров, указав [ &lt;добавить&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [ &lt;удалить&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), или [ &lt;снимите&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) элементы [ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) элемент в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-112">A security token handler can be added or removed from  a token handler collection by specifying the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), or [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elements under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element in a configuration file.</span></span> <span data-ttu-id="8e31d-113"><xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> Объект, содержащий параметры конфигурации в коллекцию обработчиков может осуществляться через <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> свойство и коллекцию обработчиков, членом которых является обработчик токенов может осуществляться из <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8e31d-113">The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> object that contains the configuration settings for the handler collection can be accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property and the handler collection that the token handler is a member of can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> property.</span></span> <span data-ttu-id="8e31d-114">Можно переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> метод для обработки все пользовательские элементы конфигурации, который принимает обработчиком.</span><span class="sxs-lookup"><span data-stu-id="8e31d-114">You can override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method to process any custom configuration elements that your handler takes.</span></span>  
  
 <span data-ttu-id="8e31d-115"><xref:System.IdentityModel.Tokens.SecurityTokenHandler> Класс предоставляет несколько свойств и методов.</span><span class="sxs-lookup"><span data-stu-id="8e31d-115">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class exposes several other properties and methods.</span></span> <span data-ttu-id="8e31d-116">В зависимости от реализации функциональных возможностей можно переопределить некоторые или все из этих элементов.</span><span class="sxs-lookup"><span data-stu-id="8e31d-116">Depending on the functionality that you choose to implement, you may override some or all of these members.</span></span>  
  
 <span data-ttu-id="8e31d-117">Необходимо переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> свойство и <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> метод для предоставления инфраструктуры WIF со сведениями о тип маркера безопасности, класс предназначен для обработки.</span><span class="sxs-lookup"><span data-stu-id="8e31d-117">You must override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.</span></span>  
  
 <span data-ttu-id="8e31d-118">Проверка, сериализации и десериализации функциональность предоставляется через свойства или методы, которые указывают, может ли обработчик выполнять определенную функцию в сочетании с метод или методы, которые реализуют функции.</span><span class="sxs-lookup"><span data-stu-id="8e31d-118">Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality.</span></span> <span data-ttu-id="8e31d-119">Следующий список пар свойства или методы, которые указывают на функции с методами, которые реализуют эти функциональные возможности:</span><span class="sxs-lookup"><span data-stu-id="8e31d-119">The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:</span></span>  
  
-   <span data-ttu-id="8e31d-120"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> Свойство и <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метод: проверяет токен и пакеты утверждений, содержащихся в маркере в <xref:System.Security.Claims.ClaimsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="8e31d-120">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property and  the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method: Validates a token and packages the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity>.</span></span>  
  
-   <span data-ttu-id="8e31d-121"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> Свойство и <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> методов: токен сериализации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-121">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods: Token serialization.</span></span>  
  
-   <span data-ttu-id="8e31d-122"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> Методы и <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> методов: токен десериализации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-122">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> methods and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> methods: Token deserialization.</span></span>  
  
-   <span data-ttu-id="8e31d-123"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> Метод и <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> метод: десериализации предложения идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-123">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method: Deserializing key identifier clauses.</span></span>  
  
-   <span data-ttu-id="8e31d-124"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> Метод и <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> метод: сериализация предложений идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-124">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method: Serializing key identifier clauses.</span></span>  
  
 <span data-ttu-id="8e31d-125"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> И <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> методы вызываются из конвейера в реализациях <xref:System.IdentityModel.SecurityTokenService> класса.</span><span class="sxs-lookup"><span data-stu-id="8e31d-125">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> methods are called from the pipeline in implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="8e31d-126"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> Метод вызывается инфраструктурой WIF, чтобы определить, является ли указанный токен уже получен.</span><span class="sxs-lookup"><span data-stu-id="8e31d-126">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is called by the WIF infrastructure to determine whether the specified token has already been received.</span></span> <span data-ttu-id="8e31d-127">По умолчанию этот метод возвращает `false`, указывающая, что маркер уже не был получен.</span><span class="sxs-lookup"><span data-stu-id="8e31d-127">By default this method returns `false`, which indicates that the token has not already been received.</span></span> <span data-ttu-id="8e31d-128">Можно переопределить метод и предоставить логику для воспроизводимой маркеры.</span><span class="sxs-lookup"><span data-stu-id="8e31d-128">You can override the method and provide logic to detect replayed tokens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-129">В примерах кода во всех <xref:System.IdentityModel.Tokens.SecurityTokenHandler> разделы взяты из `Custom Token` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-129">The code examples in all of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="8e31d-130">В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-130">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="8e31d-131">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-131">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="8e31d-132">Следующий код XML показано, как добавить в коллекцию обработчиков токенов обработчик маркеров SWT.</span><span class="sxs-lookup"><span data-stu-id="8e31d-132">The following XML shows how to add the SWT token handler to the token handlers collection.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration saveBootstrapContext="true">  
    <issuerTokenResolver type="SimpleWebToken.CustomIssuerTokenResolver, SimpleWebToken">  
      <AddAudienceKeyPair  symmetricKey="wAVkldQiFypTQ+kdNdGWCYCHRcee8XmXxOvgmak8vSY=" audience="http://localhost:19851/" />  
    </issuerTokenResolver>  
    <issuerNameRegistry type="RelyingParty.TrustedIssuerNameRegistry, RelyingParty"/>  
    <audienceUris>  
      <add value="http://localhost:19851/"/>  
    </audienceUris>  
    <securityTokenHandlers>  
      <add type="SimpleWebToken.SimpleWebTokenHandler, SimpleWebToken" />  
    </securityTokenHandlers>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e31d-133">Вызывается из конструкторов в производных классах для инициализации класса <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-133">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="8e31d-134">Средство чтения XML, размещаемое на начальном элементе.</span><span class="sxs-lookup"><span data-stu-id="8e31d-134">An XML reader positioned at the start element.</span></span> <span data-ttu-id="8e31d-135">Средство чтения не должно предваряться этим методом.</span><span class="sxs-lookup"><span data-stu-id="8e31d-135">The reader should not be advanced by this method.</span></span></param>
        <summary><span data-ttu-id="8e31d-136">Возвращает значение, указывающее, является ли элемент xml, на которое ссылается указанное средство чтения XML, предложением идентификатора ключа, которое может десериализоваться этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8e31d-136">Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="8e31d-137">Значение <see langword="true" />, если метод <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> может считывать элемент; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-137"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8e31d-138">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-138">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-139">Реализация по умолчанию возвращает `false` для указания, что не удается прочитать предложение идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-139">The default implementation returns `false` to indicate that the key identifier clause cannot be read.</span></span>  
  
 <span data-ttu-id="8e31d-140">Производном классе проверяет элемент, который ссылается средство чтения, чтобы определить, может ли экземпляр выполнить десериализацию конструкции идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-140">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</span></span> <span data-ttu-id="8e31d-141">Обычно это выполняется путем вызова <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> метод с соответствующие строки элемента и пространства имен указан.</span><span class="sxs-lookup"><span data-stu-id="8e31d-141">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="8e31d-142">При переопределении <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, необходимо также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> метод для предоставления логики для десериализации предложения идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-142">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e31d-143">Возвращает значение, показывающее, может ли указанный токен десериализоваться как токен типа, обработанного этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8e31d-143">Returns a value that indicates whether the specified token can be deserialized as a token of the type processed by this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (tokenString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::String ^ tokenString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString"><span data-ttu-id="8e31d-144">Строка токена для чтения</span><span class="sxs-lookup"><span data-stu-id="8e31d-144">The token string to read.</span></span></param>
        <summary><span data-ttu-id="8e31d-145">Возвращает значение, показывающее, может ли указанная строка десериализоваться как токен типа, обработанного этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8e31d-145">Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="8e31d-146">Значение <see langword="true" />, если метод <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> может считывать элемент; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-146"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8e31d-147">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-147">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-148">Реализация по умолчанию всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="8e31d-148">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="8e31d-149">При переопределении этого метода необходимо также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> метод для предоставления логики для десериализации маркер.</span><span class="sxs-lookup"><span data-stu-id="8e31d-149">If you override this method, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="8e31d-150">Средство чтения XML, размещаемое на начальном элементе.</span><span class="sxs-lookup"><span data-stu-id="8e31d-150">An XML reader positioned at a start element.</span></span> <span data-ttu-id="8e31d-151">Средство чтения не должно предваряться этим методом.</span><span class="sxs-lookup"><span data-stu-id="8e31d-151">The reader should not be advanced by this method.</span></span></param>
        <summary><span data-ttu-id="8e31d-152">Возвращает значение, указывающее, является ли элемент xml, на которое ссылается указанное средство чтения XML, считываемым, как токен типа, обрабатываемого этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8e31d-152">Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="8e31d-153">Значение <see langword="true" />, если метод <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> может считывать элемент; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-153"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8e31d-154">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-154">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-155">Реализация по умолчанию всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="8e31d-155">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="8e31d-156">Производном классе проверяет элемент, который ссылается средство чтения, чтобы определить, является ли экземпляр может десериализовать маркер безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-156">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</span></span> <span data-ttu-id="8e31d-157">Обычно это выполняется путем вызова <xref:System.Xml.XmlReader.IsStartElement%2A> метод с соответствующие строки элемента и пространства имен указан.</span><span class="sxs-lookup"><span data-stu-id="8e31d-157">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="8e31d-158">При переопределении <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, необходимо также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> метода или <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> метод для предоставления логики для десериализации предложения идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-158">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method or the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-159">Следующий код показывает, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> метод, чтобы определить, можно ли выполнить считывание токена обработчиком.</span><span class="sxs-lookup"><span data-stu-id="8e31d-159">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> method to determine whether a token can be read by a handler.</span></span> <span data-ttu-id="8e31d-160">Код будет браться из `Custom Token` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-160">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="8e31d-161">В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-161">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="8e31d-162">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-162">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public virtual bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e31d-163">Получает значение, указывающее, может ли этот обработчик поддерживать проверку токенов безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-163">Gets a value that indicates whether the handler supports validation of security tokens.</span></span></summary>
        <value>
          <span data-ttu-id="8e31d-164">Значение <see langword="true" />, если класс может проверять токены безопасности; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-164"><see langword="true" /> if the class is capable of validating security tokens; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8e31d-165">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-165">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-166">Для проверки реализации в производном классе, переопределять это свойство для возврата `true` и Переопределите <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метод, чтобы реализовать логику проверки.</span><span class="sxs-lookup"><span data-stu-id="8e31d-166">To implement validation in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method to implement the validation logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-167">Следующий код показывает, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> свойство для указания пользовательского обработчика можно проверить правильность токенов.</span><span class="sxs-lookup"><span data-stu-id="8e31d-167">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property to indicate that a custom handler can validate tokens.</span></span> <span data-ttu-id="8e31d-168">Код будет браться из `Custom Token` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-168">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="8e31d-169">В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-169">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="8e31d-170">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-170">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="8e31d-171">Предложение идентификатора ключа для проверки.</span><span class="sxs-lookup"><span data-stu-id="8e31d-171">The key identifier clause to be checked.</span></span></param>
        <summary><span data-ttu-id="8e31d-172">Возвращает значение, показывающее, может ли указанная конструкция идентификатора ключа быть сериализована этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8e31d-172">Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="8e31d-173">Значение <see langword="true" />, если можно сериализовать конструкцию идентификатора ключа; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-173"><see langword="true" /> if the key identifier clause can be serialized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8e31d-174">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-174">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-175">Реализация по умолчанию всегда возвращает значение `false`.</span><span class="sxs-lookup"><span data-stu-id="8e31d-175">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="8e31d-176">При переопределении <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, необходимо также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> метод для предоставления логики для сериализации конструкции идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-176">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method to provide the logic to serialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e31d-177">Получает значение, указывающее, может ли этот обработчик сериализовать токены безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-177">Gets a value that indicates whether the handler can serialize security tokens.</span></span></summary>
        <value>
          <span data-ttu-id="8e31d-178"><see langword="true" />, если класс может выполнять сериализацию токенов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-178"><see langword="true" /> if the class is capable of serializing tokens; otherwise <see langword="false" />.</span></span> <span data-ttu-id="8e31d-179">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-179">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-180">Для сериализации реализации в производном классе, переопределять это свойство для возврата `true` и Переопределите <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> методы для реализации логики сериализации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-180">To implement serialization in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods to implement the serialization logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-181">Следующий код показывает, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> свойство, указывающее, что пользовательский обработчик может сериализовать маркеры.</span><span class="sxs-lookup"><span data-stu-id="8e31d-181">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property to indicate that a custom handler can serialize tokens.</span></span> <span data-ttu-id="8e31d-182">Код будет браться из `Custom Token` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-182">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="8e31d-183">В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-183">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="8e31d-184">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-184">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public Property Configuration As SecurityTokenHandlerConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ Configuration { System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e31d-185">Получает или задает объект <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />, который предоставляет конфигурацию для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="8e31d-185">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> object that provides configuration for the current instance.</span></span></summary>
        <value><span data-ttu-id="8e31d-186">Объект конфигурации для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="8e31d-186">The configuration object for the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-187"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> Свойство обычно задается с помощью конфигурации инфраструктуры из [ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) элемент в файле конфигурации во время применения запуска.</span><span class="sxs-lookup"><span data-stu-id="8e31d-187">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property is typically set by the configuration infrastructure from the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in the configuration file during application start up.</span></span>  
  
 <span data-ttu-id="8e31d-188">В производных классах, используйте <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> свойство для доступа к параметрам конфигурации, например реестр имен поставщиков для использования в <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метод может осуществляться из <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> свойства объекта конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-188">In derived classes, you use the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property to access configuration settings; for example, the issuer name registry to use in the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property of the configuration object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingCollection">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingCollection As SecurityTokenHandlerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ ContainingCollection { System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e31d-189">Получает коллекцию обработчиков токена, содержащую текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="8e31d-189">Gets the token handler collection that contains the current instance.</span></span></summary>
        <value><span data-ttu-id="8e31d-190">коллекция обработчиков токена, содержащая текущий экземпляр.</span><span class="sxs-lookup"><span data-stu-id="8e31d-190">The token handler collection that contains the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-191">При добавлении обработчика токенов <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> экземпляра, это свойство автоматически устанавливается.</span><span class="sxs-lookup"><span data-stu-id="8e31d-191">When the token handler is added to a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instance, this property is automatically set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenReference">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference(class System.IdentityModel.Tokens.SecurityToken token, bool attached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenReference (token As SecurityToken, attached As Boolean) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateSecurityTokenReference(System::IdentityModel::Tokens::SecurityToken ^ token, bool attached);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="attached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="8e31d-192">Токен, для которого требуется создать ссылку.</span><span class="sxs-lookup"><span data-stu-id="8e31d-192">The token for which the reference is to be created.</span></span></param>
        <param name="attached">
          <span data-ttu-id="8e31d-193">Значение <see langword="true" />, если должна быть создана присоединенная ссылка; значение <see langword="false" />, если должна быть создана неприсоединенная ссылка.</span><span class="sxs-lookup"><span data-stu-id="8e31d-193"><see langword="true" /> if an attached reference should be created; <see langword="false" /> if an unattached reference should be created.</span></span></param>
        <summary><span data-ttu-id="8e31d-194">При переопределении в производном классе создает ссылку токена безопасности для токенов, обрабатываемых этим классом.</span><span class="sxs-lookup"><span data-stu-id="8e31d-194">When overridden in a derived class, creates the security token reference for tokens processed by that class.</span></span> <span data-ttu-id="8e31d-195">Этот метод обычно вызывается службой токенов безопасности (STS).</span><span class="sxs-lookup"><span data-stu-id="8e31d-195">This method is typically called by a security token service (STS).</span></span></summary>
        <returns><span data-ttu-id="8e31d-196">Предложение идентификатора ключа, ссылающееся на указанный токен.</span><span class="sxs-lookup"><span data-stu-id="8e31d-196">A key identifier clause that references the specified token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-197">По умолчанию этот метод создает исключение <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-197">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="8e31d-198">Производные классы переопределять этот метод для возврата конструкции идентификатора ключа (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>), может быть использован для создания `<wsse:SecurityTokenReference>` элемента для указанного токена.</span><span class="sxs-lookup"><span data-stu-id="8e31d-198">Derived classes override this method to return a key identifier clause (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that can be used to create a `<wsse:SecurityTokenReference>` element for the specified token.</span></span>  
  
 <span data-ttu-id="8e31d-199">Вызывается из реализации <xref:System.IdentityModel.SecurityTokenService> класса.</span><span class="sxs-lookup"><span data-stu-id="8e31d-199">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="8e31d-200">Как правило <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> не нужно будет использовать только при создании пользовательской службы маркеров безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-200">Typically, a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="8e31d-201">Когда служба маркеров безопасности возвращает маркер безопасности, выданный маркер безопасности содержит ссылки на прикрепленные и неприкрепленные маркеры безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-201">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="8e31d-202">Прикрепленные ссылки указывают на маркеры безопасности, содержащиеся в заголовке безопасности сообщения SOAP, а неприкрепленные ссылки указывают на маркеры безопасности, не входящие в заголовок безопасности сообщения SOAP.</span><span class="sxs-lookup"><span data-stu-id="8e31d-202">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="8e31d-203">Обычно эти ссылки подтверждают подлинность выданного маркера безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-203">These references typically affirm the authenticity of the issued security token.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-204">Следующий код показывает, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> метод, чтобы создать предложение идентификатора ключа с указанным токеном.</span><span class="sxs-lookup"><span data-stu-id="8e31d-204">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> method to create a key identifier clause from the specified token.</span></span> <span data-ttu-id="8e31d-205">Код будет браться из `Custom Token` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-205">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="8e31d-206">В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-206">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="8e31d-207">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-207">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="8e31d-208">Дескриптор токена безопасности, на основании которого создается токен.</span><span class="sxs-lookup"><span data-stu-id="8e31d-208">The security token descriptor from which the token is to be created.</span></span> <span data-ttu-id="8e31d-209">Свойства дескриптора токена задаются до вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="8e31d-209">Properties of the token descriptor are set before this method is called.</span></span></param>
        <summary><span data-ttu-id="8e31d-210">При переопределении в производном классе создает токен безопасности с помощью заданного дескриптора токена.</span><span class="sxs-lookup"><span data-stu-id="8e31d-210">When overridden in a derived class, creates a security token using the specified token descriptor.</span></span> <span data-ttu-id="8e31d-211">Этот метод вызывается службой токенов безопасности (STS).</span><span class="sxs-lookup"><span data-stu-id="8e31d-211">This method is called by a security token service (STS).</span></span></summary>
        <returns><span data-ttu-id="8e31d-212">токен безопасности, соответствующий свойствам дескриптора токена.</span><span class="sxs-lookup"><span data-stu-id="8e31d-212">A security token that matches the properties of the token descriptor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-213">По умолчанию этот метод создает исключение <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-213">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="8e31d-214">Вызывается из реализации <xref:System.IdentityModel.SecurityTokenService> класса.</span><span class="sxs-lookup"><span data-stu-id="8e31d-214">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-215">Следующий код показывает, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> метод для создания и возвращает маркер из маркера дескриптора.</span><span class="sxs-lookup"><span data-stu-id="8e31d-215">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> method to create and return a token from a token descriptor.</span></span> <span data-ttu-id="8e31d-216">Код будет браться из `Custom Token` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-216">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="8e31d-217">В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-217">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="8e31d-218">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-218">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplayedToken">
      <MemberSignature Language="C#" Value="protected virtual void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DetectReplayedToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DetectReplayedToken (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DetectReplayedToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="8e31d-219">Токен для проверки воспроизведения.</span><span class="sxs-lookup"><span data-stu-id="8e31d-219">The token to check for replay.</span></span></param>
        <summary><span data-ttu-id="8e31d-220">При переопределении в производном классе вызывает исключение, если обнаруживается, что указанный токен используется повторно.</span><span class="sxs-lookup"><span data-stu-id="8e31d-220">When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-221">Реализация по умолчанию не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="8e31d-221">The default implementation does nothing.</span></span>  
  
 <span data-ttu-id="8e31d-222">Производные классы должны вызывать <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> Если токен уже используется.</span><span class="sxs-lookup"><span data-stu-id="8e31d-222">Derived classes should throw a <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> if the token has already been used.</span></span>  
  
 <span data-ttu-id="8e31d-223">Windows Identity Foundation (WIF) предоставляет <xref:System.IdentityModel.Tokens.TokenReplayCache> какие воспроизведения кэши могут быть производными от класса и [ &lt;tokenReplayCache&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) элемента конфигурации, который можно использовать для настройки кэш воспроизведения, используемых обработчиков маркеров в приложении; Тем не менее конкретная реализация данных <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> метод зависит от конструктора производного класса.</span><span class="sxs-lookup"><span data-stu-id="8e31d-223">Windows Identity Foundation (WIF) provides the <xref:System.IdentityModel.Tokens.TokenReplayCache> class from which replay caches may be derived and the [&lt;tokenReplayCache&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is up to the designer of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public abstract string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e31d-224">При переопределении в производном классе возвращает набор универсальных кодов ресурса (URI), которые используются в запросах для идентификации токена обрабатываемого этим классом типа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-224">When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="8e31d-225">Набор универсальных кодов ресурсов (URI), определяющих тип токенов, поддерживаемый этим обработчиком.</span><span class="sxs-lookup"><span data-stu-id="8e31d-225">The set of URIs that identify the token type that this handler supports.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-226"><xref:System.Type> Токена, обрабатываемым текущим экземпляром осуществляется с помощью <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8e31d-226">The <xref:System.Type> of the token processed by the current instance is accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property.</span></span> <span data-ttu-id="8e31d-227"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> Метод возвращает набор допустимых идентификаторов, которые могут использоваться в сообщениях для ссылки на тип маркера.</span><span class="sxs-lookup"><span data-stu-id="8e31d-227">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</span></span> <span data-ttu-id="8e31d-228">Например, значение URI используется в `<wst:TokenType>` элемента под `<wst:RequestSecurityToken>` элемент для запроса определенного типа маркера (представленного <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> свойства в модели объектов).</span><span class="sxs-lookup"><span data-stu-id="8e31d-228">For example, the URI value used in the `<wst:TokenType>` element under the `<wst:RequestSecurityToken>` element to request a specific kind of token (represented by the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> property in the object model).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-229">Следующий код показывает, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> метод для возврата идентификаторов тип маркера для пользовательского маркера.</span><span class="sxs-lookup"><span data-stu-id="8e31d-229">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to return the token type identifiers for a custom token.</span></span> <span data-ttu-id="8e31d-230">Код будет браться из `Custom Token` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-230">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="8e31d-231">В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-231">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="8e31d-232">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-232">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#17](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#17)]  
[!code-csharp[WifRcCustomToken#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="8e31d-233">XML-элемент конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-233">The configuration XML elements.</span></span> <span data-ttu-id="8e31d-234">Каждый узел в списке имеет тип <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="8e31d-234">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span></span></param>
        <summary><span data-ttu-id="8e31d-235">При переопределении в производном классе загружает пользовательскую конфигурацию из XML-кода.</span><span class="sxs-lookup"><span data-stu-id="8e31d-235">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-236"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> Метод вызывается инфраструктурой конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-236">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="8e31d-237">При вызове этого метода `nodelist` будет содержать верхнего уровня дочерних элементов этого обработчика токенов [ &lt;добавить&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) элемент из файла конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-237">When this method is called, the `nodelist` will contain the top-level child elements of the token handler’s [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element from the configuration file.</span></span> <span data-ttu-id="8e31d-238">Каждый из них может в свою очередь, содержат атрибуты или дочерние элементы в зависимости от схемы конфигурации, определенных для производного класса.</span><span class="sxs-lookup"><span data-stu-id="8e31d-238">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="8e31d-239">Реализация по умолчанию создает <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="8e31d-239">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="8e31d-240">Переопределите этот метод в производном классе позволяет включить инициализацию из файла конфигурации обработчика маркеров безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-240">Override this method in your derived class to enable initialization of your security token handler from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="8e31d-241">Средство чтения XML, расположенный в начальном элементе XML, который десериализуется в предложение идентификатора ключа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-241">An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="8e31d-242">При переопределении в производном классе десериализует XML-код, на который имеется ссылка в указанном модуле чтения XML, в конструкцию идентификатора ключа, который ссылается на токен, обрабатываемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="8e31d-242">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="8e31d-243">Предложение идентификатора ключа, десериализованное из XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-243">The key identifier clause that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-244">По умолчанию этот метод создает исключение <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-244">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="8e31d-245">Переопределите этот метод, чтобы предоставить логику для десериализации предложения идентификатора ключа из XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-245">Override this method to provide the logic to deserialize a key identifier clause from XML.</span></span> <span data-ttu-id="8e31d-246">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="8e31d-246">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e31d-247">При переопределении в производном классе десериализует заданный XML-код в токен обрабатываемого этим производным классом типа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-247">When overridden in a derived class, deserializes the specified XML to a token of the type processed by the derived class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (tokenString As String) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::String ^ tokenString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString"><span data-ttu-id="8e31d-248">Строка, подлежащая десериализации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-248">The string to be deserialized.</span></span></param>
        <summary><span data-ttu-id="8e31d-249">При переопределении в производном классе десериализует заданную строку в токен обрабатываемого этим производным классом типа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-249">When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="8e31d-250">Токен безопасности, который был десериализован из указанной строки.</span><span class="sxs-lookup"><span data-stu-id="8e31d-250">The security token that was deserialized from the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8e31d-251">Вызов этого метода с недоверенными данными представляет угрозу безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-251">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="8e31d-252">Этот метод используется только с надежными данными.</span><span class="sxs-lookup"><span data-stu-id="8e31d-252">Call this method only with trusted data.</span></span> <span data-ttu-id="8e31d-253">Дополнительные сведения см. в разделе [проверки данных](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="8e31d-253">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="8e31d-254">По умолчанию этот метод создает исключение <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-254">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="8e31d-255">Переопределите этот метод для предоставления функциональных возможностей, который может десериализовать маркер безопасности из строки.</span><span class="sxs-lookup"><span data-stu-id="8e31d-255">Override this method to provide functionality that can deserialize a security token from a string.</span></span> <span data-ttu-id="8e31d-256">При переопределении, этот метод необходимо переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="8e31d-256">If you override, this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="8e31d-257">Средство чтения XML, размещаемое на начальном элементе токена.</span><span class="sxs-lookup"><span data-stu-id="8e31d-257">An XML reader positioned at the start element of the token.</span></span></param>
        <summary><span data-ttu-id="8e31d-258">При переопределении в производном классе десериализует десериализует XML-код, на который имеется ссылка в указанном модуле чтения XML, в токен обрабатываемого этим производным классом типа.</span><span class="sxs-lookup"><span data-stu-id="8e31d-258">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="8e31d-259">Токен безопасности, который был десериализован из XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-259">The security token that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8e31d-260">Вызов этого метода с недоверенными данными представляет угрозу безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-260">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="8e31d-261">Этот метод используется только с надежными данными.</span><span class="sxs-lookup"><span data-stu-id="8e31d-261">Call this method only with trusted data.</span></span> <span data-ttu-id="8e31d-262">Дополнительные сведения см. в разделе [проверки данных](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="8e31d-262">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="8e31d-263">По умолчанию этот метод создает исключение <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-263">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="8e31d-264">Переопределите этот метод, чтобы предоставить логику для десериализации маркера безопасности из XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-264">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="8e31d-265">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="8e31d-265">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8e31d-266">Как правило, в производных классах, если метод не удается выполнить десериализацию маркера из XML, на которую указывает ссылка, он выдает <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="8e31d-266">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-267">Следующий код показывает, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> метод для чтения пользовательский маркер из указанного средства чтения XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-267">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> method to read a custom token from the specified XML reader.</span></span> <span data-ttu-id="8e31d-268">Код будет браться из `Custom Token` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-268">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="8e31d-269">В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-269">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="8e31d-270">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-270">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#7)]  
[!code-csharp[WifRcCustomToken#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#8)]  
[!code-csharp[WifRcCustomToken#14](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="8e31d-271">Средство чтения XML, размещаемое на начальном элементе токена.</span><span class="sxs-lookup"><span data-stu-id="8e31d-271">An XML reader positioned at the start element of the token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="8e31d-272">сопоставитель токена, содержащий внештатные и кэшированных токены.</span><span class="sxs-lookup"><span data-stu-id="8e31d-272">A token resolver that contains out-of-band and cached tokens.</span></span></param>
        <summary><span data-ttu-id="8e31d-273">При переопределении в производном классе десериализует XML-код, на который имеется ссылка в указанном модуле чтения XML, в токен, обрабатываемый производным классом, путем использования заданного сопоставителя токенов.</span><span class="sxs-lookup"><span data-stu-id="8e31d-273">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</span></span></summary>
        <returns><span data-ttu-id="8e31d-274">Токен безопасности, который был десериализован из XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-274">The security token that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8e31d-275">Вызов этого метода с недоверенными данными представляет угрозу безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-275">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="8e31d-276">Этот метод используется только с надежными данными.</span><span class="sxs-lookup"><span data-stu-id="8e31d-276">Call this method only with trusted data.</span></span> <span data-ttu-id="8e31d-277">Дополнительные сведения см. в разделе [проверки данных](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="8e31d-277">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="8e31d-278">Реализация по умолчанию не обрабатывает `tokenResolver` параметр и делегирует вызов <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="8e31d-278">The default implementation ignores the `tokenResolver` parameter and delegates the call to the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8e31d-279">Переопределите этот метод, чтобы предоставить логику для десериализации маркера безопасности из XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-279">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="8e31d-280">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="8e31d-280">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8e31d-281">Как правило, в производных классах, если метод не удается выполнить десериализацию маркера из XML, на которую указывает ссылка, он выдает <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="8e31d-281">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public abstract Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e31d-282">При переопределении в производном классе получает тип токена безопасности, обрабатываемого этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8e31d-282">When overridden in a derived class, gets the type of the security token that is processed by this instance.</span></span></summary>
        <value><span data-ttu-id="8e31d-283">Тип токена безопасности, обрабатываемого этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="8e31d-283">The type of the security token that is processed by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-284">Необходимо переопределить это свойство в производных классах и вернуть <xref:System.Type> маркера безопасности (<xref:System.IdentityModel.Tokens.SecurityToken>), обрабатываемого производного класса.</span><span class="sxs-lookup"><span data-stu-id="8e31d-284">You must override this property in derived classes and return the <xref:System.Type> of the security token (<xref:System.IdentityModel.Tokens.SecurityToken>) that is processed by the derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-285">Следующий код показывает, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> возвращаемое свойство <xref:System.Type> маркеров безопасности, которые обрабатываются пользовательского обработчика.</span><span class="sxs-lookup"><span data-stu-id="8e31d-285">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property to return the <xref:System.Type> of the security tokens that are processed by a custom handler.</span></span> <span data-ttu-id="8e31d-286">Код будет браться из `Custom Token` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-286">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="8e31d-287">В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-287">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="8e31d-288">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-288">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#18](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationFailure">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationFailure (System.IdentityModel.Tokens.SecurityToken token, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationFailure(class System.IdentityModel.Tokens.SecurityToken token, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationFailure (token As SecurityToken, errorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationFailure(System::IdentityModel::Tokens::SecurityToken ^ token, System::String ^ errorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="8e31d-289">Токен безопасности, который проверяется.</span><span class="sxs-lookup"><span data-stu-id="8e31d-289">The security token that is being validated.</span></span></param>
        <param name="errorMessage"><span data-ttu-id="8e31d-290">Сообщение для записи в трассировку.</span><span class="sxs-lookup"><span data-stu-id="8e31d-290">The message to write to the trace.</span></span></param>
        <summary><span data-ttu-id="8e31d-291">Трассирует событие сбоя во время проверки токенов безопасности, если трассировка включена.</span><span class="sxs-lookup"><span data-stu-id="8e31d-291">Traces the failure event during the validation of security tokens when tracing is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-292">Этот метод следует вызывать из <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метод при сбое проверки токена.</span><span class="sxs-lookup"><span data-stu-id="8e31d-292">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method when validation of the token fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationSuccess">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationSuccess (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationSuccess(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationSuccess (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationSuccess(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="8e31d-293">Проверенный токен.</span><span class="sxs-lookup"><span data-stu-id="8e31d-293">The token that was validated.</span></span></param>
        <summary><span data-ttu-id="8e31d-294">Трассирует успешную проверку событий токен безопасности, если трассировка включена.</span><span class="sxs-lookup"><span data-stu-id="8e31d-294">Traces the successful validation of security tokens event when tracing is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-295">Этот метод следует вызывать из <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метод после успешной проверки токена.</span><span class="sxs-lookup"><span data-stu-id="8e31d-295">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method after the token has been successfully validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="8e31d-296">Токен для проверки.</span><span class="sxs-lookup"><span data-stu-id="8e31d-296">The token to validate.</span></span></param>
        <summary><span data-ttu-id="8e31d-297">При переопределении в производном классе проверяет указанный токен безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-297">When overridden in a derived class, validates the specified security token.</span></span> <span data-ttu-id="8e31d-298">Токен должен иметь тип, обрабатываемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="8e31d-298">The token must be of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="8e31d-299">Идентификаторы, содержащееся в токене.</span><span class="sxs-lookup"><span data-stu-id="8e31d-299">The identities contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-300">По умолчанию этот метод создает исключение <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-300">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="8e31d-301"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Метод вызывается инфраструктурой для проверки и извлечения утверждений из токена десериализованный безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-301">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method is called by the infrastructure to validate and extract the claims from the deserialized security token.</span></span> <span data-ttu-id="8e31d-302">Эти утверждения возвращаются в коллекции <xref:System.Security.Claims.ClaimsIdentity> объекты, возвращаемые этим методом.</span><span class="sxs-lookup"><span data-stu-id="8e31d-302">These claims are returned in the collection of <xref:System.Security.Claims.ClaimsIdentity> objects returned by the method.</span></span> <span data-ttu-id="8e31d-303">В типичных ситуаций эта коллекция будет содержать одно удостоверение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-303">In the typical case, this collection will contain a single identity.</span></span>  
  
 <span data-ttu-id="8e31d-304">В производных классах проверки обычно включает в себя проверка целевая аудитория, указанный в токене для аудитории, кодов URI, заданных в <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> свойства объекта конфигурации обработчика токенов, указанные на <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8e31d-304">In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> property of the token handler configuration object specified on the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="8e31d-305">Эти URI обычно задаются в файле конфигурации в разделе [ &lt;audienceUris&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) элемента.</span><span class="sxs-lookup"><span data-stu-id="8e31d-305">These URIs are typically set in the configuration file under the [&lt;audienceUris&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) element.</span></span> <span data-ttu-id="8e31d-306">Если не удается проверить аудитории, <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> создавалось исключение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-306">If the audience cannot be validated, an <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> exception should be thrown.</span></span>  
  
 <span data-ttu-id="8e31d-307">При обработке лексемы, издателя обычно проверяется путем передачи маркера издателя к одному из <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> методы <xref:System.IdentityModel.Tokens.IssuerNameRegistry> , настроенный для обработчика через <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8e31d-307">When processing the token, the issuer is typically validated by passing the issuer token to one of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> methods on the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> object that is configured for the handler through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="8e31d-308">Реестр имен поставщиков обычно настраивается с помощью [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) элемент в файле конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-308">The issuer name registry is typically configured through the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element in the configuration file.</span></span> <span data-ttu-id="8e31d-309"><xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> Возвращает имя издателя.</span><span class="sxs-lookup"><span data-stu-id="8e31d-309">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns the name of the issuer.</span></span> <span data-ttu-id="8e31d-310">Это имя должно использоваться для задания <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> свойство в утверждения, содержащиеся в маркере.</span><span class="sxs-lookup"><span data-stu-id="8e31d-310">This name should be used to set the <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> property in claims contained in the token.</span></span> <span data-ttu-id="8e31d-311">Если реестр имен поставщиков не содержит запись для маркера издателя <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="8e31d-311">If the issuer name registry does not contain an entry for the issuer token, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns `null`.</span></span> <span data-ttu-id="8e31d-312">В этом случае <xref:System.IdentityModel.Tokens.SecurityTokenException> обычно вызывается в производных классах, но это поведение зависит от конструктора класса.</span><span class="sxs-lookup"><span data-stu-id="8e31d-312">In this case a <xref:System.IdentityModel.Tokens.SecurityTokenException> is typically thrown in derived classes, but this behavior is up to the designer of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-313">В следующем коде показано переопределение <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метод обработчика маркеров безопасности, обрабатывающего простой веб-токены (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-313">The following code shows an override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method for a security token handler that processes simple web tokens (SWT).</span></span> <span data-ttu-id="8e31d-314">Код будет браться из `CustomToken` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-314">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="8e31d-315">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-315">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#9](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#9)]  
  
 <span data-ttu-id="8e31d-316">В следующем коде показано `CreateClaims` метод, вызываемый из переопределение метода <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метод в предыдущем примере.</span><span class="sxs-lookup"><span data-stu-id="8e31d-316">The following code shows `CreateClaims` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the previous example.</span></span> <span data-ttu-id="8e31d-317">Этот метод возвращает <xref:System.Security.Claims.ClaimsIdentity> объект, созданный на основе утверждений в токене.</span><span class="sxs-lookup"><span data-stu-id="8e31d-317">This method returns a <xref:System.Security.Claims.ClaimsIdentity> object that is created from the claims in the token.</span></span> <span data-ttu-id="8e31d-318">Код будет браться из `CustomToken` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-318">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="8e31d-319">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-319">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#15](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#15)]  
  
 <span data-ttu-id="8e31d-320">В следующем коде показано `ValidateSignature` метод, вызываемый из переопределение метода <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метода в обработчик маркеров простой веб.</span><span class="sxs-lookup"><span data-stu-id="8e31d-320">The following code shows `ValidateSignature` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="8e31d-321">Этот метод проверяет подпись токена с помощью настроенного <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span><span class="sxs-lookup"><span data-stu-id="8e31d-321">This method validates the signature on the token by using the configured <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span></span> <span data-ttu-id="8e31d-322">Код будет браться из `CustomToken` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-322">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="8e31d-323">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-323">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#12](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#12)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 <span data-ttu-id="8e31d-324">В следующем коде показано `ValidateAudience` метод, вызываемый из переопределение метода <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> метода в обработчик маркеров простой веб.</span><span class="sxs-lookup"><span data-stu-id="8e31d-324">The following code shows `ValidateAudience` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="8e31d-325">Этот метод проверяет audience, содержащиеся в маркере для аудитории URI, которые были указаны в конфигурации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-325">This method validates the audience contained in the token against the audience URIs that were specified in configuration.</span></span> <span data-ttu-id="8e31d-326">Код будет браться из `CustomToken` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-326">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="8e31d-327">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-327">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#13](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="8e31d-328">Модуль записи XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-328">The XML writer.</span></span></param>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="8e31d-329">Конструкция идентификатора ключа для сериализации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-329">The key identifier clause to serialize.</span></span></param>
        <summary><span data-ttu-id="8e31d-330">При переопределении в производном классе сериализует указанную конструкцию идентификатора ключа в формат XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-330">When overridden in a derived class, serializes the specified key identifier clause to XML.</span></span> <span data-ttu-id="8e31d-331">Предложения идентификатора ключа должно иметь тип, поддерживаемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="8e31d-331">The key identifier clause must be of the type supported by the derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-332">По умолчанию этот метод создает исключение <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-332">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="8e31d-333">Переопределите этот метод, чтобы предоставить логику для сериализации конструкции идентификатора ключа в XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-333">Override this method to provide the logic to serialize a key identifier clause to XML.</span></span> <span data-ttu-id="8e31d-334">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="8e31d-334">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e31d-335">При переопределении в производном классе сериализует указанный токен безопасности.</span><span class="sxs-lookup"><span data-stu-id="8e31d-335">When overridden in a derived class, serializes the specified security token.</span></span> <span data-ttu-id="8e31d-336">Токен должен иметь тип, обрабатываемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="8e31d-336">The token must be of the type processed by the derived class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual string WriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (token As SecurityToken) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="8e31d-337">Токен для сериализации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-337">The token to serialize.</span></span></param>
        <summary><span data-ttu-id="8e31d-338">При переопределении в производном классе сериализует указанный токен безопасности в строку.</span><span class="sxs-lookup"><span data-stu-id="8e31d-338">When overridden in a derived class, serializes the specified security token to a string.</span></span> <span data-ttu-id="8e31d-339">Токен должен иметь тип, обрабатываемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="8e31d-339">The token must be of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="8e31d-340">Сериализованный токен.</span><span class="sxs-lookup"><span data-stu-id="8e31d-340">The serialized token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-341">По умолчанию этот метод создает исключение <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-341">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="8e31d-342">Переопределите этот метод, чтобы предоставить логику для сериализации маркера безопасности в XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-342">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="8e31d-343">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8e31d-343">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="8e31d-344">Модуль записи XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-344">The XML writer.</span></span></param>
        <param name="token"><span data-ttu-id="8e31d-345">Токен для сериализации.</span><span class="sxs-lookup"><span data-stu-id="8e31d-345">The token to serialize.</span></span></param>
        <summary><span data-ttu-id="8e31d-346">При переопределении в производном классе сериализует указанный токен безопасности в формат XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-346">When overridden in a derived class, serializes the specified security token to XML.</span></span> <span data-ttu-id="8e31d-347">Токен должен иметь тип, обрабатываемый производным классом.</span><span class="sxs-lookup"><span data-stu-id="8e31d-347">The token must be of the type processed by the derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e31d-348">По умолчанию этот метод создает исключение <xref:System.NotImplementedException> исключение.</span><span class="sxs-lookup"><span data-stu-id="8e31d-348">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="8e31d-349">Переопределите этот метод, чтобы предоставить логику для сериализации маркера безопасности в XML.</span><span class="sxs-lookup"><span data-stu-id="8e31d-349">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="8e31d-350">При переопределении этого метода следует также переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8e31d-350">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e31d-351">Следующий код показывает, как переопределить <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> метод сериализации пользовательский маркер.</span><span class="sxs-lookup"><span data-stu-id="8e31d-351">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> method to serialize a custom token.</span></span> <span data-ttu-id="8e31d-352">Код будет браться из `Custom Token` образца.</span><span class="sxs-lookup"><span data-stu-id="8e31d-352">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="8e31d-353">В этом примере пользовательские классы, позволяющие обработки токены Simple Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="8e31d-353">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="8e31d-354">Сведения в этом примере и другие примеры для WIF и где можно загрузить их см. в разделе [индекс образцов кода WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="8e31d-354">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#10](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#10)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>