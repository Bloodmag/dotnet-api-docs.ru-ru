<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IGrouping`2.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f6c6e128b37249d8d187d26d1e445628ac08243ee.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c6e128b37249d8d187d26d1e445628ac08243ee</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The type of the key of the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Тип ключа объекта <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The type of the values in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Тип значений объекта <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Linq.IGrouping`2">
          <source>Represents a collection of objects that have a common key.</source>
          <target state="translated">Представляет коллекцию объектов с общим ключом.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>An <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> is an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> that additionally has a key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> — <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> С ключом, кроме того.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The key represents the attribute that is common to each value in the <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</source>
          <target state="translated">Ключ представляет атрибут, общие для каждого значения в <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The values of an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> are accessed much as the elements of an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> are accessed.</source>
          <target state="translated">Значения <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> осуществляется намного как элементы <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> осуществляется.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>For example, you can access the values by using a <ph id="ph1">`foreach`</ph> in Visual C# or <ph id="ph2">`For Each`</ph> in Visual Basic loop to iterate through the <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">Например, значения можно использовать с помощью <ph id="ph1">`foreach`</ph> в Visual C# или <ph id="ph2">`For Each`</ph> in Visual Basic для перебора <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The Example section contains a code example that shows you how to access both the key and the values of an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">Ниже приводится пример кода, который показывает, как получить доступ к ключа и значения <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> type is used by the <ph id="ph2">&lt;xref:System.Linq.Enumerable.GroupBy%2A&gt;</ph> standard query operator methods, which return a sequence of elements of type <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> Тип используется <ph id="ph2">&lt;xref:System.Linq.Enumerable.GroupBy%2A&gt;</ph> методы стандартных операторов запросов, возвращающих последовательности элементов типа <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The following example demonstrates how to work with an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">Следующий пример демонстрирует способы работы с <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>In this example, <ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> is called on the array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects returned by <ph id="ph3">&lt;xref:System.Type.GetMembers%2A&gt;</ph>.</source>
          <target state="translated">В этом примере <ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> будет вызван на массив <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> объектов, возвращенных <ph id="ph3">&lt;xref:System.Type.GetMembers%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source><ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> groups the objects based on the value of their <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> Группирует объекты на основании значения их <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>Each unique value for <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> in the array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects becomes a key for a new <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object, and the <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects that have that key form the <ph id="ph5">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object's sequence of values.</source>
          <target state="translated">Каждое уникальное значение для <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> в массиве <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> объектов становится ключом нового <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта и <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph> объектов, имеющих форму ключа <ph id="ph5">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта последовательности значений.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A&gt;</ph> method is called on the sequence of <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objects to obtain just the first <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">Наконец <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A&gt;</ph> метод будет вызван на последовательность <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объектов для получения только первых <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The example then outputs the key of the <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> property of each value in the <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object's sequence of values.</source>
          <target state="translated">Затем в примере показан вывод ключ <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта и <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> свойство для каждого значения в <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта последовательности значений.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>Notice that to access an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object's sequence of values, you simply use the <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> variable itself.</source>
          <target state="translated">Обратите внимание, что для доступа к <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта последовательность значений, можно просто использовать <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> саму переменную.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Linq.IGrouping`2.Key">
          <source>Gets the key of the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Возвращает ключ объекта <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The key of the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">Ключ объекта <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The key of an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> represents the attribute that is common to each value in the <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</source>
          <target state="translated">Ключ <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> представляет атрибут, общие для каждого значения в <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Linq.IGrouping%602.Key%2A&gt;</ph> property to label each <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object in a sequence of <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objects.</source>
          <target state="translated">В следующем примере демонстрируется использование <ph id="ph1">&lt;xref:System.Linq.IGrouping%602.Key%2A&gt;</ph> свойства для каждой метки <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта в последовательность <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> method is used to obtain a sequence of <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> Метод используется для получения последовательность <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The <ph id="ph1">`foreach`</ph> in Visual C# or <ph id="ph2">`For Each`</ph> in Visual Basic loop then iterates through each <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object, outputting its key and the number of values it contains.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> В Visual C# или <ph id="ph2">`For Each`</ph> в Visual Basic цикла затем выполняется перебор каждого <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> объекта, выводя ключом и количество содержащихся в нем значений.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>