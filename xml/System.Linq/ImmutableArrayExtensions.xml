<Type Name="ImmutableArrayExtensions" FullName="System.Linq.ImmutableArrayExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0fa06b8b78c28e1b5fd916455b66fec856c097a2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36555122" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableArrayExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArrayExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ImmutableArrayExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArrayExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArrayExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableArrayExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a4c17-101">Переопределения методов расширения LINQ, которые более эффективны при работе с объектами <see cref="T:System.Collections.Immutable.ImmutableArray`1" />, чем стандартные методы LINQ **Пакет NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">о неизменяемых коллекциях и способах их установки </see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4c17-101">LINQ extension method overrides that offer greater efficiency for <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> than the standard LINQ methods  **NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Aggregate&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,T,T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Aggregate&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`3&lt;!!T, !!T, !!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of T) (immutableArray As ImmutableArray(Of T), func As Func(Of T, T, T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, T, T&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'T, 'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Aggregate (immutableArray, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;T,T,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-102">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-102">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-103">Коллекция, к которой нужно применить функцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-103">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="a4c17-104">Функция, вызываемая агрегатным образом для каждого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-104">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-105">Агрегатным образом применяет к последовательности элементов функцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-105">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-106">Окончательное значение после применения агрегатной функции ко всем элементам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-106">The final value after the cumulative function has been applied to all elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4c17-107"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> метод упрощает для выполнения вычислений над последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a4c17-107"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="a4c17-108">Этот метод работает путем вызова `func` один раз для каждого элемента в источнике.</span><span class="sxs-lookup"><span data-stu-id="a4c17-108">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="a4c17-109">Каждый раз `func` вызове <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> передает оба элемента последовательности и это статистическое выражение (как первый аргумент func).</span><span class="sxs-lookup"><span data-stu-id="a4c17-109">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="a4c17-110">Значение `seed` используется в качестве начальной статистическое значение.</span><span class="sxs-lookup"><span data-stu-id="a4c17-110">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="a4c17-111">Результат `func` заменяет предыдущее совокупное значение.</span><span class="sxs-lookup"><span data-stu-id="a4c17-111">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="a4c17-112"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Возвращает конечный результат `func`.</span><span class="sxs-lookup"><span data-stu-id="a4c17-112"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,T&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TAccumulate,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TAccumulate, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate)) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'Accumulate * Func&lt;'Accumulate, 'T, 'Accumulate&gt; -&gt; 'Accumulate" Usage="System.Linq.ImmutableArrayExtensions.Aggregate (immutableArray, seed, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate">
          <span data-ttu-id="a4c17-113">Тип агрегатного значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-113">The type of the accumulated value.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="a4c17-114">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-114">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-115">Коллекция, к которой нужно применить функцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-115">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="a4c17-116">Начальное агрегатное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-116">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="a4c17-117">Функция, вызываемая агрегатным образом для каждого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-117">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-118">Агрегатным образом применяет к последовательности элементов функцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-118">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-119">Конечное агрегатное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-119">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4c17-120"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> метод упрощает для выполнения вычислений над последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a4c17-120"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="a4c17-121">Этот метод работает путем вызова `func` один раз для каждого элемента в источнике.</span><span class="sxs-lookup"><span data-stu-id="a4c17-121">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="a4c17-122">Каждый раз `func` вызове <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> передает оба элемента последовательности и это статистическое выражение (как первый аргумент func).</span><span class="sxs-lookup"><span data-stu-id="a4c17-122">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="a4c17-123">Значение `seed` используется в качестве начальной статистическое значение.</span><span class="sxs-lookup"><span data-stu-id="a4c17-123">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="a4c17-124">Результат `func` заменяет предыдущее совокупное значение.</span><span class="sxs-lookup"><span data-stu-id="a4c17-124">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="a4c17-125"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Возвращает конечный результат `func`.</span><span class="sxs-lookup"><span data-stu-id="a4c17-125"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,TResult,T&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TAccumulate,TResult,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TAccumulate, TResult, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, TResult, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename TResult, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'Accumulate * Func&lt;'Accumulate, 'T, 'Accumulate&gt; * Func&lt;'Accumulate, 'Result&gt; -&gt; 'Result" Usage="System.Linq.ImmutableArrayExtensions.Aggregate (immutableArray, seed, func, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate">
          <span data-ttu-id="a4c17-126">Тип агрегатного значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-126">The type of the accumulated value.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="a4c17-127">Тип результата, возвращенного селектором результатов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-127">The type of result returned by the result selector.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="a4c17-128">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-128">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-129">Коллекция, к которой нужно применить функцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-129">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="a4c17-130">Начальное агрегатное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-130">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="a4c17-131">Функция, вызываемая агрегатным образом для каждого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-131">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <param name="resultSelector">To be added.</param>
        <summary>
          <span data-ttu-id="a4c17-132">Агрегатным образом применяет к последовательности элементов функцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-132">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-133">Конечное агрегатное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-133">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4c17-134"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> метод упрощает для выполнения вычислений над последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a4c17-134"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="a4c17-135">Этот метод работает путем вызова `func` один раз для каждого элемента в источнике.</span><span class="sxs-lookup"><span data-stu-id="a4c17-135">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="a4c17-136">Каждый раз `func` вызове <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> передает оба элемента последовательности и это статистическое выражение (как первый аргумент func).</span><span class="sxs-lookup"><span data-stu-id="a4c17-136">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="a4c17-137">Значение `seed` используется в качестве начальной статистическое значение.</span><span class="sxs-lookup"><span data-stu-id="a4c17-137">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="a4c17-138">Результат `func` заменяет предыдущее совокупное значение.</span><span class="sxs-lookup"><span data-stu-id="a4c17-138">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="a4c17-139"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Возвращает конечный результат `func`.</span><span class="sxs-lookup"><span data-stu-id="a4c17-139"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="All&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.All (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-140">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-140">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-141">Проверяемый массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-141">The array to check for matches.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="a4c17-142">Предикат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-142">The predicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-143">Возвращает значение, указывающее, отвечают ли все элементы массива заданному условию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-143">Gets a value indicating whether all elements in this array match a given condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-144">Значение <see langword="true" />, если каждый элемент исходной последовательности прошел проверку, заданную указанным предикатом; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-144">
              <see langword="true" /> if every element of the source sequence passes the test in the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member Any : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.Any immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-145">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-145">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-146">Массив, проверяемый на наличие элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-146">The array to check for elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-147">Возвращает значение, указывающее, содержит ли массив какие-либо элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-147">Gets a value indicating whether the array contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-148">Значение <see langword="true" />, если в массиве содержатся элементы; в противном случае — значение <see langword="false" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-148">
              <see langword="true" /> if the array contains an elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Any : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.Any builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-149">Тип элементов в массиве.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-149">The type of elements in the array.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="a4c17-150">Проверяемый построитель.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-150">The builder to check for matches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-151">Возвращает значение, указывающее, содержит ли коллекция какие-либо элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-151">Returns a value indicating whether this collection contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-152">Значение <see langword="true" />, если в построителе массивов содержатся элементы; в противном случае — значение <see langword="false" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-152">
              <see langword="true" /> if the array builder contains any elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.Any (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-153">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-153">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-154">Массив, проверяемый на наличие элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-154">The array to check for elements.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="a4c17-155">Делегат, определяющий условия проверки элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-155">The delegate that defines the condition to match to an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-156">Возвращает значение, указывающее, содержит ли массив какие-либо элементы, отвечающие заданному условию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-156">Gets a value indicating whether the array contains any elements that match a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-157">Значение <see langword="true" />, если элемент соответствует указанному условию; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-157">
              <see langword="true" /> if an element matches the specified condition; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAt&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAt&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAt(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAt : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.ElementAt (immutableArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-158">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-158">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-159">Массив, в котором нужно найти элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-159">The array to find an element in.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a4c17-160">Индекс извлекаемого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-160">The index for the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-161">Возвращает элемент массива по указанному индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-161">Returns the element at a specified index in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-162">Элемент по заданному индексу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-162">The item at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAtOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAtOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAtOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAtOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.ElementAtOrDefault (immutableArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-163">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-163">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-164">Массив, в котором нужно найти элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-164">The array to find an element in.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a4c17-165">Индекс извлекаемого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-165">The index for the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-166">Возвращает элемент последовательности по указанному индексу или значение по умолчанию, если индекс вне допустимого диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-166">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-167">Элемент по указанному индексу либо значение по умолчанию, если индекс не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-167">The item at the specified index, or the default value if the index is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member First : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.First immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-168">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-168">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-169">Массив, из которого извлекается элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-169">The array to get an item from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-170">Возвращает первый элемент массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-170">Returns the first element in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-171">Первый элемент массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-171">The first item in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4c17-172">Если массив пуст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-172">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member First : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.First builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-173">Тип элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-173">The type of items in the array.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="a4c17-174">Построитель, из которого извлекается элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-174">The builder to retrieve an item from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-175">Возвращает первый элемент коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-175">Returns the first element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-176">Первый элемент списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-176">The first item in the list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4c17-177">Если массив пуст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-177">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member First : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.First (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-178">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-178">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-179">Массив, из которого извлекается элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-179">The array to get an item from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="a4c17-180">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-180">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-181">Возвращает первый элемент последовательности, удовлетворяющий указанному условию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-181">Returns the first element in a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-182">Первый элемент списка, если он соответствует условию <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-182">The first item in the list if it meets the condition specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4c17-183">Если массив пуст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-183">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.FirstOrDefault immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-184">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-184">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-185">Массив, из которого извлекаются элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-185">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-186">Возвращает первый элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-186">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-187">Первый элемент списка, если он найден; в противном случае — значение по умолчанию для данного типа элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-187">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.FirstOrDefault builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-188">Тип элементов построителя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-188">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="a4c17-189">Построитель, из которого извлекается элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-189">The builder to retrieve an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-190">Возвращает первый элемент коллекции либо значение по умолчанию, если коллекция пуста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-190">Returns the first element in the collection, or the default value if the collection is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-191">Первый элемент списка, если он найден; в противном случае — значение по умолчанию для данного типа элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-191">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.FirstOrDefault (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-192">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-192">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-193">Массив, из которого извлекаются элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-193">The array to retrieve elments from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="a4c17-194">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-194">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-195">Возвращает первый элемент последовательности, удовлетворяющий указанному условию, или значение по умолчанию, если ни одного такого элемента не найдено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-195">Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-196">Первый элемент списка, если он найден; в противном случае — значение по умолчанию для данного типа элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-196">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member Last : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Last immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-197">Тип элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-197">The type of element contained by the array.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-198">Массив, из которого извлекаются элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-198">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-199">Возвращает последний элемент массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-199">Returns the last element of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-200">Последний элемент массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-200">The last element in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4c17-201">Возникает, если коллекция пуста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-201">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Last : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Last builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-202">Тип элементов построителя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-202">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="a4c17-203">Построитель, из которого извлекаются элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-203">The builder to retrieve elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-204">Возвращает последний элемент коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-204">Returns the last element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-205">Последний элемент построителя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-205">The last element in the builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4c17-206">Возникает, если коллекция пуста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-206">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Last : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Last (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-207">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-207">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-208">Массив, из которого извлекаются элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-208">The array to retrieve elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="a4c17-209">Делегат, определяющий условия для извлекаемого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-209">The delegate that defines the conditions of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-210">Возвращает последний элемент последовательности, удовлетворяющий указанному условию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-210">Returns the last element of a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-211">Последний элемент массива, удовлетворяющий <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-211">The last element of the array that satisfies the <paramref name="predicate" /> condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4c17-212">Возникает, если коллекция пуста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-212">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.LastOrDefault immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-213">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-213">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-214">Массив, из которого извлекаются элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-214">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-215">Возвращает последний элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-215">Returns the last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-216">Последний элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-216">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.LastOrDefault builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-217">Тип элементов построителя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-217">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="a4c17-218">Построитель, из которого извлекается элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-218">The builder to retrieve an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-219">Возвращает последний элемент коллекции либо значение по умолчанию, если коллекция пуста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-219">Returns the last element in the collection, or the default value if the collection is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-220">Последний элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-220">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.LastOrDefault (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-221">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-221">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-222">Массив, из которого извлекается элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-222">The array to retrieve an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="a4c17-223">Делегат, определяющий условия поиска элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-223">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-224">Возвращает последний элемент последовательности, удовлетворяющий указанному условию, или значение по умолчанию, если ни одного такого элемента не найдено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-224">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-225">Последний элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-225">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; Select&lt;T,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Select&lt;T, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of T, TResult) (immutableArray As ImmutableArray(Of T), selector As Func(Of T, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Select(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Result&gt; -&gt; seq&lt;'Result&gt;" Usage="System.Linq.ImmutableArrayExtensions.Select (immutableArray, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;T,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-226">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-226">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="a4c17-227">Тип результирующего элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-227">The type of the result element.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-228">Неизменяемый массив, из которого нужно выбрать элементы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-228">The immutable array to select items from.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="a4c17-229">Функция преобразования, применяемая к каждому элементу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-229">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-230">Проецирует каждый элемент последовательности в новую форму.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-230">Projects each element of a sequence into a new form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-231">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого получены в результате вызова функции преобразователя для каждого элемента исходного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-231">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result of invoking the transform function on each element of source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; immutableArray, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (immutableArray As ImmutableArray(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ SelectMany(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, seq&lt;'Collection&gt;&gt; * Func&lt;'Source, 'Collection, 'Result&gt; -&gt; seq&lt;'Result&gt;" Usage="System.Linq.ImmutableArrayExtensions.SelectMany (immutableArray, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="a4c17-232">Тип элементов <c>immutableArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-232">The type of the elements of <c>immutableArray</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="a4c17-233">Тип промежуточных элементов собранные <c>collectionSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-233">The type of the intermediate elements collected by <c>collectionSelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="a4c17-234">Тип элементов результирующей последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-234">The type of the elements of the resulting sequence.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-235">Неизменяемый массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-235">The immutable array.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="a4c17-236">Функция преобразования, применяемая к каждому элементу входной последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-236">A transform function to apply to each element of the input sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="a4c17-237">Функция преобразования, применяемая к каждому элементу промежуточной последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-237">A transform function to apply to each element of the intermediate sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-238">Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, объединяет результирующие последовательности в одну и вызывает функцию селектора результата для каждого элемента этой последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-238">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />,             flattens the resulting sequences into one sequence, and invokes a result             selector function on each element therein.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-239">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого получены в результате вызова функции преобразования "один ко многим" <paramref name="collectionSelector" /> для каждого элемента последовательности <paramref name="immutableArray" /> и последующего сопоставления каждого элемента такой промежуточной последовательности и соответствующего ему исходного элемента с результирующим элементом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-239">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result             of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each             element of <paramref name="immutableArray" /> and then mapping each of those sequence elements and their             corresponding source element to a result element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Generic.IEnumerable&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, class System.Collections.Generic.IEnumerable`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As IEnumerable(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Collections.Immutable.ImmutableArray&lt;'Base&gt; * seq&lt;#'Base&gt; * System.Collections.Generic.IEqualityComparer&lt;'Base&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.SequenceEqual (immutableArray, items, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="a4c17-240">Тип элементов сравниваемого массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-240">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="a4c17-241">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-241">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-242">Массив, используемый для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-242">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="a4c17-243">Элементы, используемые для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-243">The items to use for comparison.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a4c17-244">Функция сравнения, которую нужно использовать для проверки на равенство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-244">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-245">Определяет, совпадают ли две последовательности, используя функцию сравнения на равенство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-245">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-246">Значение <see langword="true" />, если последовательности равны; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-246">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Collections.Immutable.ImmutableArray&lt;'Base&gt; * System.Collections.Immutable.ImmutableArray&lt;#'Base&gt; * System.Collections.Generic.IEqualityComparer&lt;'Base&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.SequenceEqual (immutableArray, items, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="a4c17-247">Тип элементов сравниваемого массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-247">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="a4c17-248">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-248">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-249">Массив, используемый для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-249">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="a4c17-250">Элементы, используемые для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-250">The items to use for comparison.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a4c17-251">Функция сравнения, которую нужно использовать для проверки на равенство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-251">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-252">Определяет, совпадают ли две последовательности, используя функцию сравнения на равенство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-252">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-253">Значение <see langword="true" />, если последовательности равны; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-253">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase,TBase,bool&gt; predicate) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Func`3&lt;!!TBase, !!TBase, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), predicate As Func(Of TBase, TBase, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived, typename TBase&gt;&#xA; where TDerived : TBase[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Collections::Immutable::ImmutableArray&lt;TBase&gt; immutableArray, System::Collections::Immutable::ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase, TBase, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Collections.Immutable.ImmutableArray&lt;'Base&gt; * System.Collections.Immutable.ImmutableArray&lt;#'Base&gt; * Func&lt;'Base, 'Base, bool&gt; -&gt; bool" Usage="System.Linq.ImmutableArrayExtensions.SequenceEqual (immutableArray, items, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="predicate" Type="System.Func&lt;TBase,TBase,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="a4c17-254">Тип элементов сравниваемого массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-254">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="a4c17-255">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-255">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-256">Массив, используемый для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-256">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="a4c17-257">Элементы, используемые для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-257">The items to use for comparison.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="a4c17-258">Функция сравнения, которую нужно использовать для проверки на равенство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-258">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-259">Определяет, совпадают ли две последовательности, используя функцию сравнения на равенство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-259">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-260">Значение <see langword="true" />, если последовательности равны; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-260">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member Single : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Single immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-261">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-261">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-262">Массив, из которого извлекается элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-262">The array to retrieve the element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-263">Возвращает единственный элемент последовательности и вызывает исключение, если число элементов последовательности отлично от одного.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-263">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-264">Элемент последовательности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-264">The element in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Single : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.Single (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-265">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-265">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">To be added.</param>
        <param name="predicate">To be added.</param>
        <summary>
          <span data-ttu-id="a4c17-266">Возвращает единственный элемент последовательности, удовлетворяющий указанному условию, и вызывает исключение, если таких элементов больше одного.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-266">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-267">Возвращает <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-267">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.SingleOrDefault immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-268">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-268">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-269">Массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-269">The array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-270">Возвращает единственный элемент массива или значение по умолчанию, если последовательность пуста; если в последовательности более одного элемента, вызывается исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-270">Returns the only element of the array, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-271">Элемент массива либо значение по умолчанию, если массив пуст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-271">The element in the array, or the default value if the array is empty.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4c17-272">
            <paramref name="source" /> содержит больше одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-272">
              <paramref name="source" /> contains more than one element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; 'T" Usage="System.Linq.ImmutableArrayExtensions.SingleOrDefault (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-273">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-273">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-274">Массив, из которого извлекается элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-274">The array to get the element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="a4c17-275">Условие, которому должен удовлетворять элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-275">The condition the element must satisfy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-276">Возвращает единственный элемент последовательности, удовлетворяющий указанному условию, или значение по умолчанию, если такого элемента не существует; если условию удовлетворяет более одного элемента, вызывается исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-276">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-277">Элемент, если он удовлетворяет указанному условию; в противном случае — элемент по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-277">The element if it satisfies the specified condition; otherwise the default element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a4c17-278">Условию предиката <paramref name="predicate" /> удовлетворяет более одного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-278">More than one element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] ToArray&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] ToArray&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of T) (immutableArray As ImmutableArray(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;T&gt; ^ ToArray(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="F#" Value="static member ToArray : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; 'T[]" Usage="System.Linq.ImmutableArrayExtensions.ToArray immutableArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-279">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-279">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">To be added.</param>
        <summary>
          <span data-ttu-id="a4c17-280">Копирует содержимое исходного массива в изменяемый массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-280">Copies the contents of this array to a mutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-281">Новый экземпляр массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-281">The newly instantiated array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'T&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="a4c17-282">Тип ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-282">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="a4c17-283">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-283">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-284">Массив, на основе которого создается словарь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-284">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="a4c17-285">Селектор ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-285">The key selector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-286">Создает словарь на основе содержимого исходного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-286">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-287">Новый инициализированный словарь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-287">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'T&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="a4c17-288">Тип ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-288">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="a4c17-289">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-289">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-290">Массив, на основе которого создается словарь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-290">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="a4c17-291">Селектор ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-291">The key selector.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a4c17-292">Функция сравнения, с помощью инициализируется словарь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-292">The comparer to initialize the dictionary with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-293">Создает словарь на основе содержимого исходного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-293">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-294">Новый инициализированный словарь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-294">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; * Func&lt;'T, 'Element&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="a4c17-295">Тип ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-295">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="a4c17-296">Тип элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-296">The type of the element.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="a4c17-297">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-297">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-298">Массив, на основе которого создается словарь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-298">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="a4c17-299">Селектор ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-299">The key selector.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="a4c17-300">Селектор элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-300">The element selector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-301">Создает словарь на основе содержимого исходного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-301">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-302">Новый инициализированный словарь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-302">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ToDictionary : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, 'Key&gt; * Func&lt;'T, 'Element&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Generic.Dictionary&lt;'Key, 'Element&gt;" Usage="System.Linq.ImmutableArrayExtensions.ToDictionary (immutableArray, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="a4c17-303">Тип ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-303">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="a4c17-304">Тип элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-304">The type of the element.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="a4c17-305">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-305">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-306">Массив, на основе которого создается словарь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-306">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="a4c17-307">Селектор ключей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-307">The key selector.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="a4c17-308">Селектор элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-308">The element selector.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a4c17-309">Функция сравнения, с помощью инициализируется словарь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-309">The comparer to initialize the dictionary with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-310">Создает словарь на основе содержимого исходного массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-310">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-311">Новый инициализированный словарь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-311">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; Where&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; Where&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ Where(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; seq&lt;'T&gt;" Usage="System.Linq.ImmutableArrayExtensions.Where (immutableArray, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="a4c17-312">Тип элементов коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-312">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="a4c17-313">Массив, который нужно отфильтровать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-313">The array to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="a4c17-314">Условие, которое нужно использовать для фильтрации содержимого массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-314">The condition to use for filtering the array content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4c17-315">Выполняет фильтрацию последовательности значений на основе заданного предиката.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-315">Filters a sequence of values based on a predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4c17-316">Возвращает объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, который содержит элементы, удовлетворяющие условию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4c17-316">Returns <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements that meet the condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>