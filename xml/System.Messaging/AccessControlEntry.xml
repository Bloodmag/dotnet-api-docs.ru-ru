<Type Name="AccessControlEntry" FullName="System.Messaging.AccessControlEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c397070501c98ed73167f86342253a01773b2018" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459698" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AccessControlEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessControlEntry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.AccessControlEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessControlEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessControlEntry" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Задает права доступа для доверенного лица (пользователя, группы или компьютера) на выполнение зависящих от приложения реализаций общих задач.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Многие приложения имеют похожие операции, которые доверенного лица могут быть назначены права, например, чтение, запись и удаление объектов. При назначении прав для этих основных операций приложение интерпретирует их в виде определенного для этого приложения. Например служба Message Queuing интерпретирует операцию чтения как получение или считывание сообщений из очереди. <xref:System.Messaging.AccessControlEntry> Класс предоставляет доступ к этим общим правам.  
  
 При работе с записями управления доступом, необходимо указать доверенное лицо, к которому присваиваются права. Необходимо задать хотя бы один из <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, или <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> свойств можно указать, какие права, назначаемые для доверенного лица. Можно задать <xref:System.Messaging.AccessControlEntry.EntryType%2A> для указания прав, можно указать, должно быть предоставлено ли. Тип записи по умолчанию является предоставление прав.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.AccessControlList" />
    <altmember cref="T:System.Messaging.MessageQueueAccessControlEntry" />
    <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.AccessControlEntry" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlEntry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlEntry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.AccessControlEntry" />, который не определяет ни доверенное лицо, ни набор применимых для него прав.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задать <xref:System.Messaging.AccessControlEntry.Trustee%2A> свойство и хотя бы один из <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, или <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> свойства перед использованием этого <xref:System.Messaging.AccessControlEntry> экземпляр, чтобы задать права доступа для доверенного лица.  
  
 При необходимости можно задать <xref:System.Messaging.AccessControlEntry.EntryType%2A> свойства, его значением по умолчанию для `Allow` Если вы решили не.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlEntry (System.Messaging.Trustee trustee);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.Trustee trustee) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlEntry(System::Messaging::Trustee ^ trustee);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trustee" Type="System.Messaging.Trustee" />
      </Parameters>
      <Docs>
        <param name="trustee">Объект <see cref="T:System.Messaging.Trustee" />, задающий пользователя, группу, компьютер, домен или псевдоним.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.AccessControlEntry" />, определяющего доверенное лицо, которому предоставлены права или которому отказано в предоставлении прав.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задать <xref:System.Messaging.AccessControlEntry.EntryType%2A> свойство и хотя бы один из <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, или <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> свойства перед использованием этого <xref:System.Messaging.AccessControlEntry> экземпляр, чтобы задать права доступа для доверенного лица.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="trustee" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Messaging.Trustee" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.GenericAccessRights genericAccessRights, System.Messaging.StandardAccessRights standardAccessRights, System.Messaging.AccessControlEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.Trustee trustee, valuetype System.Messaging.GenericAccessRights genericAccessRights, valuetype System.Messaging.StandardAccessRights standardAccessRights, valuetype System.Messaging.AccessControlEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlEntry(System::Messaging::Trustee ^ trustee, System::Messaging::GenericAccessRights genericAccessRights, System::Messaging::StandardAccessRights standardAccessRights, System::Messaging::AccessControlEntryType entryType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trustee" Type="System.Messaging.Trustee" />
        <Parameter Name="genericAccessRights" Type="System.Messaging.GenericAccessRights" />
        <Parameter Name="standardAccessRights" Type="System.Messaging.StandardAccessRights" />
        <Parameter Name="entryType" Type="System.Messaging.AccessControlEntryType" />
      </Parameters>
      <Docs>
        <param name="trustee">Объект <see cref="T:System.Messaging.Trustee" />, задающий пользователя, группу, компьютер, домен или псевдоним.</param>
        <param name="genericAccessRights">Поразрядное сочетание значений <see cref="T:System.Messaging.GenericAccessRights" />.</param>
        <param name="standardAccessRights">Поразрядное сочетание значений <see cref="T:System.Messaging.StandardAccessRights" />.</param>
        <param name="entryType">Одно из значений <see cref="T:System.Messaging.AccessControlEntryType" />, задающее тип операции с правами: разрешить, отказать в разрешении, установить или отозвать указанные права.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.AccessControlEntry" />, задающего доверенное лицо, присваиваемые права, а также предоставление или отказ в предоставлении этих прав.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка конструктора задает <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> свойства побитовое сочетание `genericAccessRights` и `standardAccessRights` заданных параметров.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="trustee" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметры <paramref name="genericAccessRights" />, <paramref name="standardAccessRights" /> или <paramref name="entryType" /> являются недопустимыми значениями перечисления.</exception>
      </Docs>
    </Member>
    <Member MemberName="CustomAccessRights">
      <MemberSignature Language="C#" Value="protected int CustomAccessRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomAccessRights" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.CustomAccessRights" />
      <MemberSignature Language="VB.NET" Value="Protected Property CustomAccessRights As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int CustomAccessRights { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пользовательские права доступа.</summary>
        <value>Права доступа, зависящие от приложения; обычно определяются как битовые флажки.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Messaging.AccessControlEntry.GenericAccessRights" />
        <altmember cref="P:System.Messaging.AccessControlEntry.StandardAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlEntryType EntryType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AccessControlEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public Property EntryType As AccessControlEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlEntryType EntryType { System::Messaging::AccessControlEntryType get(); void set(System::Messaging::AccessControlEntryType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, каким образом права доступа применяются к доверенному лицу.</summary>
        <value>Одно из значений <see cref="T:System.Messaging.AccessControlEntryType" />, задающее тип операции с правами: разрешить, отказать в разрешении, установить или отозвать указанные права. Значение по умолчанию: <see langword="Allow" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Тип записи не является допустимым значением перечисления <see cref="T:System.Messaging.AccessControlEntryType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenericAccessRights">
      <MemberSignature Language="C#" Value="public System.Messaging.GenericAccessRights GenericAccessRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.GenericAccessRights GenericAccessRights" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.GenericAccessRights" />
      <MemberSignature Language="VB.NET" Value="Public Property GenericAccessRights As GenericAccessRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::GenericAccessRights GenericAccessRights { System::Messaging::GenericAccessRights get(); void set(System::Messaging::GenericAccessRights value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.GenericAccessRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает набор общих прав доступа, которые соответствуют как стандартным, так и зависящим от приложения правам доступа для чтения, записи и выполнения.</summary>
        <value>Поразрядное сочетание значений <see cref="T:System.Messaging.GenericAccessRights" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Защищаемые объекты позволяет указать общие права доступа для четырех старших битов формата маски доступа Windows 2000 и Windows NT. Каждый тип защищаемого объекта отображает эти биты ряд ее стандартных и зависящие от объекта права доступа. Приложения, описывающие закрытый защищаемых объектов также можно использовать общие права доступа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Устанавливаемое значение не является допустимой комбинацией элементов битовых флагов <see cref="T:System.Messaging.GenericAccessRights" />.</exception>
        <altmember cref="P:System.Messaging.AccessControlEntry.StandardAccessRights" />
        <altmember cref="P:System.Messaging.AccessControlEntry.CustomAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="StandardAccessRights">
      <MemberSignature Language="C#" Value="public System.Messaging.StandardAccessRights StandardAccessRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.StandardAccessRights StandardAccessRights" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.StandardAccessRights" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardAccessRights As StandardAccessRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::StandardAccessRights StandardAccessRights { System::Messaging::StandardAccessRights get(); void set(System::Messaging::StandardAccessRights value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.StandardAccessRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает стандартные права доступа, соответствующие операциям, общим для большинства объектов, связанных с защитой.</summary>
        <value>Поразрядное сочетание значений <see cref="T:System.Messaging.StandardAccessRights" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Формат маски доступа Windows 2000 и Windows NT включает набор битов для стандартных прав доступа. Каждый тип защищаемый объект имеет набор прав доступа, которые соответствуют операций, связанных с этим типом объекта. Помимо эти права доступа к конкретным объектом есть набор стандартных прав доступа, соответствующих операциям, общим для большинства типов защищаемых объектов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Устанавливаемое значение не является допустимой комбинацией элементов битовых флагов <see cref="T:System.Messaging.StandardAccessRights" />.</exception>
        <altmember cref="P:System.Messaging.AccessControlEntry.GenericAccessRights" />
        <altmember cref="P:System.Messaging.AccessControlEntry.CustomAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="Trustee">
      <MemberSignature Language="C#" Value="public System.Messaging.Trustee Trustee { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Trustee Trustee" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.Trustee" />
      <MemberSignature Language="VB.NET" Value="Public Property Trustee As Trustee" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Trustee ^ Trustee { System::Messaging::Trustee ^ get(); void set(System::Messaging::Trustee ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Trustee</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пользователя, группу, домен или псевдоним, которым назначаются права доступа.</summary>
        <value>Объект <see cref="T:System.Messaging.Trustee" />, указывающий учетную запись пользователя, учетную запись группы или сеанс входа в систему, к которым применим объект <see cref="T:System.Messaging.AccessControlEntry" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользователи и программы, такие как службы Win32, используйте учетные записи пользователей для входа на локальном компьютере. Учетные записи групп нельзя использовать для входа компьютер, но они полезны в <xref:System.Messaging.AccessControlEntry> экземпляров, чтобы разрешить или запретить набор права доступа на один или несколько учетных записей пользователей.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение свойства <see cref="P:System.Messaging.AccessControlEntry.Trustee" /> — <see langword="null" />.</exception>
        <altmember cref="T:System.Messaging.Trustee" />
      </Docs>
    </Member>
  </Members>
</Type>