<Type Name="DefaultPropertiesToSend" FullName="System.Messaging.DefaultPropertiesToSend">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bdfbb68bf7c221e6d6513cb99055eed18f38d40" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460868" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultPropertiesToSend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultPropertiesToSend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.DefaultPropertiesToSend" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultPropertiesToSend" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultPropertiesToSend" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Задает значения свойств по умолчанию, которые будут использоваться при передаче в очередь сообщений объектов, отличающихся от экземпляра <see cref="T:System.Messaging.Message" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно установить значения по умолчанию для выбранных свойств для отправки сообщений на <xref:System.Messaging.MessageQueue>. <xref:System.Messaging.DefaultPropertiesToSend> используется для задания значений свойств по умолчанию сообщения, отправляемого, если объекты только <xref:System.Messaging.Message> экземпляров отправляются в очередь, например, строку аргумент, переданный в <xref:System.Messaging.MessageQueue.Send%2A> метод во фрагменте кода `myMessageQueue.Send("hello")`. <xref:System.Messaging.Message> Класс имеет соответствующий идентичными именам свойств в <xref:System.Messaging.DefaultPropertiesToSend> , укажите значения, при отправке <xref:System.Messaging.Message> экземпляра. Даже если вы указали <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> для очереди отправки <xref:System.Messaging.Message> объект в эту очередь вызовет значения таким же именем <xref:System.Messaging.Message> свойства для переопределения в очередь <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> значения.  
  
 Свойства, которые явно не задано, по умолчанию значения, указанные с помощью конструктора <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A>.  
  
 Список начальных значений свойств для экземпляра <xref:System.Messaging.DefaultPropertiesToSend>, в разделе <xref:System.Messaging.DefaultPropertiesToSend> конструктор.  
  
   
  
## Examples  
 В следующем примере кода используется приоритет сообщения для определения свойств по умолчанию для отправки сообщения.  
  
 [!code-cpp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CPP/mqdefaultpropertiestosend.cpp#1)]
 [!code-csharp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CS/mqdefaultpropertiestosend.cs#1)]
 [!code-vb[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/VB/mqdefaultpropertiestosend.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultPropertiesToSend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.DefaultPropertiesToSend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultPropertiesToSend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.DefaultPropertiesToSend" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно создать новый экземпляр <xref:System.Messaging.DefaultPropertiesToSend> для определения значений свойств по умолчанию для связи с отправлено в очередь объектов, которые не относятся к типу <xref:System.Messaging.Message>. При работе с <xref:System.Messaging.MessageQueue> объектов, <xref:System.Messaging.DefaultPropertiesToSend> экземпляр создается автоматически и связанные с <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> членом <xref:System.Messaging.MessageQueue>.  
  
 Существует два способа определения свойств по умолчанию очередь для отправки, как показано в следующем коде C#. Можно задать значения для этого экземпляра <xref:System.Messaging.DefaultPropertiesToSend> и связать ее с этой очередью <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> свойство:  
  
```  
DefaultPropertiesToSend myDefaultProperties = new DefaultPropertiesToSend();  
  // Set default values for the properties.  
  myDefaultProperties.Label = "myLabel";  
  myDefaultProperties.Recoverable = false;  
 ...  
  myMessageQueue.DefaultPropertiesToSend = myDefaultProperties;  
  myMessageQueue.Send("hello");  
```  
  
 Или по отдельности можно присваивать значения для <xref:System.Messaging.MessageQueue> экземпляра <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> свойство напрямую:  
  
```  
myMessageQueue.DefaultPropertiesToSend.Label = "myLabel";  
  myMessageQueue.DefaultPropertiesToSend.Recoverable = false;  
...  
  myMessageQueue.Send("hello");  
```  
  
 Если выбрать второй вариант, необходимо вызвать <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A> конструктор явным образом. Может потребоваться создать экземпляры <xref:System.Messaging.DefaultPropertiesToSend>, например, если значения свойств по умолчанию зависят от некоторых критерий отправляемого сообщения. Можно создать несколько <xref:System.Messaging.DefaultPropertiesToSend> экземпляров и назначить их свойству очереди <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> свойство перед отправкой сообщения в очередь.  
  
 Следующей таблице представлены исходные значения свойств для экземпляра класса <xref:System.Messaging.DefaultPropertiesToSend>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeTypes.None`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|0|  
|<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|Массив байтов нулевой длины|  
|<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|Пустая строка (»»)|  
|<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
        <altmember cref="T:System.Messaging.MessagePriority" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AcknowledgeTypes AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As AcknowledgeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AcknowledgeTypes AcknowledgeType { System::Messaging::AcknowledgeTypes get(); void set(System::Messaging::AcknowledgeTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgeType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AcknowledgeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип сообщения подтверждения, которое должно возвращаться приложению, передающему исходное сообщение.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Messaging.AcknowledgeTypes" />. Это значение используется для определения типа сообщений подтверждения, размещаемых системой в очереди администрирования, а также момента, в который подтверждения возвращаются в приложение, передавшее исходное сообщение. Значение по умолчанию: <see langword="AcknowledgeTypes.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> Свойство задает тип сообщений подтверждения, чтобы вернуться в передающее приложение. Например, задать <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> свойство для запроса уведомления при доставке сообщения адресату, при извлечении или ли тайм-аут помешала сообщения или из очереди назначения.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ AdministrationQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAdministrationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает очередь, принимающую сообщения подтверждения, сформированные службой Message Queuing.</summary>
        <value>Класс <see cref="T:System.Messaging.MessageQueue" />, задающий очередь администрирования, используемую для сообщений подтверждения, создаваемых системой. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Очередь, указанная в <xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A> свойство может быть любой нетранзакционную очередь. Подтверждающие сообщения, отправленные в очередь администрирования могут указывать, достигло ли исходное сообщение своей конечной очереди, а также того, является ли оно удалено из очереди.  
  
 Когда <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> свойство имеет любое значение, отличное от `None`, передающее приложение должно указать очереди для использования в качестве очереди администрирования.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppSpecific { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAppSpecific")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает дополнительные сведения, зависящие от приложения.</summary>
        <value>Сведения, зависящие от приложения. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> Свойство содержит дополнительные приложении сведения, который может использоваться для организации различных типов сообщений, например, с помощью индексов, связанных с приложением. Это приложение для интерпретации <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> сведения.  
  
 Если это возможно, данные сообщения должен включаться в тексте сообщения, а не в <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> свойство.  
  
 При работе с внешними очередями используйте <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> свойство для задания свойств сообщения, не относящиеся к очереди сообщений. Как и в <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>, это приложение, чтобы понять содержимое <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.Extension" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
      </Docs>
    </Member>
    <Member MemberName="AttachSenderId">
      <MemberSignature Language="C#" Value="public bool AttachSenderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttachSenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
      <MemberSignature Language="VB.NET" Value="Public Property AttachSenderId As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AttachSenderId { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAttachSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должен ли быть присоединен к сообщению идентификатор отправителя.</summary>
        <value>
          Значение <see langword="true" />, если идентификатор отправителя должен быть присоединен к сообщению; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Идентификатор отправителя представляет собой массив байтов, представляющий идентификатор пользователя, отправившего сообщение. Идентификатор отправителя устанавливается службой Message Queuing и используется принимающим диспетчером очереди для проверки прав доступа к очереди отправителя. Идентификатор отправителя заслуживает только в том случае, если сообщение прошло проверку подлинности, при его поступлении в очередь назначения.  
  
 Если идентификатор отправителя не присоединен к сообщению, передающее приложение указывает, что очереди сообщений не должна проверять отправителя сообщения при отправке сообщения в очередь назначения. Если очередь назначения принимает только проверенные сообщения и либо <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> или <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> — `false`, сообщение будет отклонено при поступлении в очередь.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.SenderId" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionAlgorithm EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionAlgorithm As EncryptionAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionAlgorithm EncryptionAlgorithm { System::Messaging::EncryptionAlgorithm get(); void set(System::Messaging::EncryptionAlgorithm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает алгоритм шифрования, используемый для шифрования тела конфиденциального сообщения.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Messaging.EncryptionAlgorithm" />. Значение по умолчанию: <see langword="RC2" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщение является закрытым, оно шифруется перед отправкой и расшифровывается при получении. <xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A> Свойство задает алгоритм, используемый для шифрования текста конфиденциального сообщения.  
  
 Очередь может потребовать, чтобы входящие сообщения были зашифрованы. Если в незашифрованном (отличным от private) отправляется в очередь, принимающую только конфиденциальные сообщения, или если конфиденциальное сообщение отправляется в очередь, принимающую только неконфиденциальные сообщения, сообщение будет отклонено очередью. Передающее приложение может запросить отрицательное подтверждение возвращаться передающему приложению, если сообщение было отвергнуто.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgExtension")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает дополнительные сведения, связанные с данным сообщением.</summary>
        <value>Байтовый массив, предоставляющий дополнительные, определяемые приложением, сведения, связанные с данным сообщением. По умолчанию задан массив нулевой длины.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> Предоставляет свойства для дополнительных данных приложения, связанный с сообщением, например, большой двоичный объект. Отвечает принимающему приложению интерпретировать содержимое <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>.  
  
 Там, где это возможно, данные сообщения должны быть включены в текст сообщения, а не в расширении.  
  
 При работе с внешними очередями используйте <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> свойство для задания свойств сообщения, не относящиеся к очереди сообщений.  
  
 Внешнюю очередь существует в очереди системы, отличной от Microsoft Message Queuing. Microsoft Message Queuing связывается с другими очередями через приложение-подключатель.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.HashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::HashAlgorithm HashAlgorithm { System::Messaging::HashAlgorithm get(); void set(System::Messaging::HashAlgorithm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgHashAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает алгоритм хэширования, используемый при проверке подлинности сообщений или создании цифровой подписи для сообщения.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Messaging.HashAlgorithm" />. Значение по умолчанию: <see langword="MD5" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A> Свойство задает алгоритм хэширования, используемого MSMQ при проверке подлинности сообщений или при создании цифровой подписи сообщения.  
  
 Служба очереди сообщений на компьютере-источнике использует алгоритм хеширования при создании цифровой подписи сообщения. Целевой диспетчер очереди, затем использует один и тот же алгоритм хэширования для проверки подлинности сообщения при его получении.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgLabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает определяемую приложением строку, описывающую данное сообщение.</summary>
        <value>Метка сообщения. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метку сообщения можно использовать для отображения, например или выборочной обработки сообщений на основе значения метки. Максимальная длина метки сообщения составляет 249 символов Юникода. Метка не обязательно быть уникальным для сообщения.  
  
 Очередь сообщений и метки сообщений представляют определяемые приложением значения, которые могут помочь в идентификации очереди или сообщения в понятных для человека терминах. Это приложение следует интерпретировать содержимое метки; они не имеет внутреннего смысла для приложения Message Queuing.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessagePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MessagePriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePriority Priority { System::Messaging::MessagePriority get(); void set(System::Messaging::MessagePriority value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgPriority")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает приоритет сообщения, используемый для определения места сообщения при его поступлении в очередь.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Messaging.MessagePriority" />, представляющее уровень приоритета нетранзакционного сообщения. Значение по умолчанию: <see langword="Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.Priority%2A> Свойство влияет на метод обработки сообщения очереди сообщений, во время прохождения, а также на размещение сообщения в очереди, при достижении места назначения. Сообщения с более высоким приоритетом отдается предпочтение при маршрутизации и они помещаются ближе к началу очереди. Сообщения, имеющие одинаковый приоритет, помещаются в очередь в порядке поступления.  
  
 Приоритет сообщения может устанавливаться только осмысленно для нетранзакционных сообщений. Автоматически назначается приоритет транзактных сообщений `Lowest`, вследствие чего приоритет транзакционных сообщений пропускаются.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.BasePriority" />
        <altmember cref="P:System.Messaging.Message.Priority" />
        <altmember cref="T:System.Messaging.MessagePriority" />
      </Docs>
    </Member>
    <Member MemberName="Recoverable">
      <MemberSignature Language="C#" Value="public bool Recoverable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recoverable" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Recoverable" />
      <MemberSignature Language="VB.NET" Value="Public Property Recoverable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Recoverable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgRecoverable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, будет ли сообщение гарантированно доставлено в случае отказа компьютера или неисправности в сети.</summary>
        <value>
          Значение <see langword="true" />, если доставка сообщения гарантируется за счет сохранения сообщения на диске на время нахождения на маршруте, и значение <see langword="false" />, если доставка не гарантируется. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> Свойство указывает, гарантируется ли доставка сообщения даже в случае отказа компьютера во время прохождения очереди назначения сообщения.  
  
 Если доставка сообщения гарантируется, оно сохраняется локально на каждом этапе маршрута, пока не будет успешно перенаправлено на следующий компьютер. Установка <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> для `true` на <xref:System.Messaging.DefaultPropertiesToSend> может повлиять на пропускную способность.  
  
 Если сообщение является транзакционной, очереди сообщений автоматически обрабатывает сообщение как восстановимых независимо от того, следует ли <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> равно `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.Recoverable" />
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ ResponseQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgResponseQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает очередь, принимающую ответные сообщения, создаваемые приложением.</summary>
        <value>Очередь сообщений <see cref="T:System.Messaging.MessageQueue" />, в которую возвращаются ответные сообщения, создаваемые приложениями. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A> Свойство идентифицирует очередь, принимающую сформированные ответные сообщения, возвращаемые в передающее приложение принимающим приложением. Очереди ответов указываются передающим приложением при передаче их сообщений. В качестве очереди ответов может быть указана любая доступная очередь.  
  
 Сообщения, возвращаемые в очередь ответов, зависят от приложения. Приложение должно определить, что содержится в этих сообщениях и что делать при получении сообщения.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="TimeToBeReceived">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToBeReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToBeReceived" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToBeReceived As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToBeReceived { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToBeReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает лимит времени, в течение которого сообщение должно быть извлечено из очереди места назначения.</summary>
        <value>Суммарное время в секундах, в течение которого переданное сообщение должно быть получено из очереди места назначения. Значение по умолчанию: <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> Свойство указывает общее время в секундах для отправленного сообщения должно быть получено из очереди назначения. Этот лимит включает время, затраченное на получение к конечной очереди, а также время ожидания в очереди до извлечения сообщения приложением.  
  
> [!CAUTION]
>  При использовании подчиненных клиентских компьютеров, синхронизируйте часы на клиентском компьютере с часами на сервере очереди сообщений. Если пара часов не синхронизированы, может появиться непредсказуемое поведение при передаче сообщений, когда <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> не <xref:System.Messaging.Message.InfiniteTimeout>.  
  
 Если <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> интервал истечения срока действия, прежде чем сообщение будет удалено из очереди, приложение очереди сообщений отклоняет это сообщение. Сообщение является либо передается в очередь недоставленных сообщений, если сообщение <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> свойству `true`, либо игнорируется, если <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> — `false`. Если <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> — меньше, чем <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> имеет более высокий приоритет.  
  
 Сообщение <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> свойство можно задать запрос на что очереди сообщений отправку сообщения о недоставке передающее приложение Если сообщения не получаются, до истечения срока действия таймера.  
  
> [!CAUTION]
>  Если вы задали получаемого <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> отрицательные подтверждения, пользователь не будет получать их при значение <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> меньше, чем значение <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>.  
  
 Несколько сообщений, отправленных в транзакции, очереди сообщений использует значение первого сообщения <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToReachQueue { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToReachQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает лимит времени, в течение которого сообщение должно дойти до очереди.</summary>
        <value>Лимит времени, отсчитываемый в секундах с момента передачи, в течение которого сообщение должно достичь очереди места назначения. Значение по умолчанию: <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> интервал истечения срока действия, прежде чем сообщение достигнет конечной очереди, приложение очереди сообщений отклоняет сообщение. Сообщение является либо передается в очередь недоставленных сообщений, если сообщение <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> свойству `true`, либо игнорируется, если <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> — `false`. Если <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> больше, чем <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> имеет более высокий приоритет.  
  
 Сообщение <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> свойство можно задать запрос на что очереди сообщений отправку сообщения о недоставке передающее приложение, если сообщение не пришло до истечения времени ожидания.  
  
 Если <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> равно 0 секунд, Message Queuing пытается снова передать сообщение получателю, если очередь ожидает сообщения. Если очередь локальная, сообщение всегда достигает очереди.  
  
 Несколько сообщений, отправленных в транзакции, очереди сообщений использует значение первого сообщения <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
      </Docs>
    </Member>
    <Member MemberName="TransactionStatusQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue TransactionStatusQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionStatusQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ TransactionStatusQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionStatusQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает очередь состояний транзакций на компьютере-источнике.</summary>
        <value>Очередь состояний транзакций на компьютере-источнике, используемая для передачи подтверждающих сообщений обратно в передающее приложение. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A> Свойство определяет очередь состояния транзакции на исходном компьютере. Это свойство устанавливается службой Message Queuing и используется приложениями соединителя при извлечении транзакционных сообщений, переданных во внешнюю очередь.  
  
 Внешнюю очередь существует в очереди системы, отличной от Microsoft Message Queuing. Microsoft Message Queuing связывается с другими очередями через приложение-подключатель.  
  
 Приложение-подключатель можно использовать очереди состояния транзакции для отправки подтверждающих сообщений в передающее приложение. Очереди состояния транзакции должна получать эти подтверждения, даже если отправляющее приложение не запрашивает других подтверждений.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseAuthentication">
      <MemberSignature Language="C#" Value="public bool UseAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAuthentication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseAuthentication")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должна ли проводиться проверка подлинности сообщения до его отправки.</summary>
        <value>
          Значение <see langword="true" />, если передающее приложение запрашивает проверку подлинности для данного сообщения; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> Свойство указывает, должна ли сообщение проверку подлинности. Если отправляющее приложение запрашивает проверку подлинности, Message Queuing создает цифровую подпись и использует ее для подписи сообщения при его передаче и для проверки подлинности сообщения при его получении.  
  
 Если сообщение отправляется в очередь, принимающую только сообщения, прошедшие проверку подлинности, оно будет отклонено при поступлении в очередь, если <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> равно `false`.  
  
 Не поддерживается для просмотра свойств сообщения и определить, является ли сообщение не прошел проверку подлинности. Сообщения, не прошедшие проверку подлинности, отбрасываются и не доставляются в очередь.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
      </Docs>
    </Member>
    <Member MemberName="UseDeadLetterQueue">
      <MemberSignature Language="C#" Value="public bool UseDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDeadLetterQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDeadLetterQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должна ли копия сообщения, которое не может быть доставлено, передаваться в очередь недоставленных сообщений.</summary>
        <value>
          Значение <see langword="true" />, если при сбое доставки сообщения его копия направляется в очередь недоставленных сообщений; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> и <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> укажите, каким образом Message Queuing будет отслеживать сообщения. Если <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> — `true`, то в случае сбоя доставки (для нетранзакционных сообщений), сообщение отправлено в нетранзакционную очередь недоставленных сообщений на компьютере, который не удалось доставить сообщение (например, если истечения срока действия таймера сообщения).  
  
 В случае сбоя доставки для транзактных сообщений сообщение отправляется в транзакционную очередь недоставленных сообщений на компьютере-источнике во всех отрицательных или сомнительных случаях.  
  
 Если хранение сообщений в очереди недоставленных сообщений, очистите очереди периодически для удаления сообщений, которые больше не нужны. Сообщения, хранящиеся в очереди недоставленных сообщений, учитываются в размере квоты для компьютера, на котором находится очередь. Квота компьютера устанавливается администратором и определяет общий размер, выделенный для хранения сообщений на компьютере, не только в одной очереди.  
  
 Не создавайте журнал или очередь недоставленных сообщений. Они оба системных очередей, созданные службой Message Queuing.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseEncryption">
      <MemberSignature Language="C#" Value="public bool UseEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property UseEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseEncryption { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseEncryption")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее, является ли сообщение конфиденциальным.</summary>
        <value>
          Значение <see langword="true" />, если требуется, чтобы служба Message Queuing шифровала сообщения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщение является закрытым, его текст шифруется перед отправкой и расшифровывается при получении. Для отправки конфиденциальное сообщение, передающее приложение должно указывать, об использовании шифрования и, при необходимости, алгоритм шифрования для применения.  
  
 При передаче конфиденциальных сообщений не требуется, что приложение будет выполнять шифрование сообщения. Message Queuing может шифровать текст сообщения для вас, когда приложение отправляет сообщения в рамках предприятия Microsoft Windows 2000 при наличии доступа к службе каталогов. При получении конфиденциальных сообщений, всегда является диспетчера принимающей очереди, которое расшифровывает текст сообщения.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseJournalQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должна ли копия сообщения храниться в журнале компьютера, являющегося источником этого сообщения.</summary>
        <value>
          Значение <see langword="true" />, если необходимо, чтобы копия сообщения сохранялась в журнале компьютера-источника после успешной передачи сообщения с компьютера-источника на следующий этап; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> и <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> укажите, каким образом Message Queuing будет отслеживать сообщения. Если <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> — `true`, а затем на каждом шаге передачи сообщения, его копия сохраняется в журнале компьютера на исходном компьютере.  
  
 Переданное сообщение будет скопирован только в очередь журнала, если целевая очередь находится на удаленном компьютере. Если файл находится на локальном компьютере, сообщение отправляется непосредственно в очередь; отсутствуют промежуточные шаги требующих ведения журнала.  
  
 Если хранение сообщений в очереди журнала, очистите очереди периодически для удаления сообщений, которые больше не нужны. Сообщения, хранящиеся в очереди журнала, входят в квоту для компьютера, на котором находится очередь (квота компьютера устанавливается администратором).  
  
 Не создавайте журнал или очередь недоставленных сообщений. Они оба системных очередей, созданные службой Message Queuing.  
  
 Ведение журнала можно указать, сообщения и очереди. Когда <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A?displayProperty=nameWithType> — `true`, сообщение заносится в журнал при его передаче. Когда <xref:System.Messaging.MessageQueue.UseJournalQueue%2A?displayProperty=nameWithType> — `true`, сообщение заносится в журнал при его получении.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseTracing">
      <MemberSignature Language="C#" Value="public bool UseTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTracing" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTracing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseTracing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, нужно ли отслеживать сообщение в процессе его перемещения в очередь места назначения.</summary>
        <value>
          Значение <see langword="true" />, если необходимо, чтобы на каждом промежуточном этапе прохождения сообщения в очередь места назначения создавался отчет, передаваемый в очередь системных отчетов; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A> Свойство указывает, следует ли отслеживать сообщение при его переходе к очереди назначения. Если `true`, отчет, сформированный Message Queuing сообщение отправляется в очередь отчетов при каждом проходе сообщения через сервер маршрутизации очереди сообщений. Очередь отчетов определяется службой Queue Manager источника. Очереди отчетов не ограничиваются отчетами, создаваемыми очереди сообщений. Создаваемые приложением сообщения могут отправляться также очереди отчетов.  
  
 Использование трассировки включает настройку Active Directory и указании очереди отчета службой очередей сообщений. Эти параметры настраиваются администратором.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
  </Members>
</Type>