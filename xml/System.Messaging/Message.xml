<Type Name="Message" FullName="System.Messaging.Message">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbb87d6fdb3c9454f89395e097a6349b6ffda866" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37648415" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Message : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Message extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.Message" />
  <TypeSignature Language="VB.NET" Value="Public Class Message&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Message : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Message = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Messaging.Design.MessageDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bbee3-101">Provides access to the properties needed to define a Message Queuing message.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bbee3-101">Provides access to the properties needed to define a Message Queuing message.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-102">Используйте <xref:System.Messaging.Message> класс для считывания и получения сообщений из очереди, или для детального управления свойствами сообщения при отправке сообщения в очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-102">Use the <xref:System.Messaging.Message> class to peek or receive messages from a queue, or to have fine control over message properties when sending a message to a queue.</span></span>  
  
 <span data-ttu-id="bbee3-103"><xref:System.Messaging.MessageQueue> использует <xref:System.Messaging.Message> класса при чтении или получении сообщений из очереди, так как оба <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=nameWithType> и <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType> методы создают новый экземпляр класса <xref:System.Messaging.Message> класс и установить свойства этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="bbee3-103"><xref:System.Messaging.MessageQueue> uses the <xref:System.Messaging.Message> class when it peeks or receives messages from queues, because both the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=nameWithType> and <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType> methods create a new instance of the <xref:System.Messaging.Message> class and set the instance's properties.</span></span> <span data-ttu-id="bbee3-104"><xref:System.Messaging.Message> Применяются только для чтения свойства класса для извлечения сообщений из очереди, хотя свойства чтения/записи применяются к отправке и получении сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-104">The <xref:System.Messaging.Message> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages.</span></span> <span data-ttu-id="bbee3-105">Когда <xref:System.Messaging.MessageQueue> просматривает или получает сообщение из очереди, его <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> свойство определяет, какие из свойств сообщений извлекаются.</span><span class="sxs-lookup"><span data-stu-id="bbee3-105">When <xref:System.Messaging.MessageQueue> peeks or receives a message from a queue, its <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property determines which of the message's properties are retrieved.</span></span>  
  
 <span data-ttu-id="bbee3-106"><xref:System.Messaging.MessageQueue> Класса <xref:System.Messaging.MessageQueue.Send%2A> метод позволяет указать любой тип объекта для сообщения, отправляемые в эту очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-106">The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Send%2A> method allows you to specify any object type for a message being sent to that queue.</span></span> <span data-ttu-id="bbee3-107">Можно использовать <xref:System.Messaging.MessageQueue> экземпляра <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> свойство, чтобы указать параметры для универсального сообщения, отправленные в очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-107">You can use the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property to specify settings for generic messages sent to the queue.</span></span> <span data-ttu-id="bbee3-108">Типы параметров включают модуль форматирования, меток, шифрования и проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="bbee3-108">The types of settings include formatter, label, encryption, and authentication.</span></span> <span data-ttu-id="bbee3-109">Можно также указать значения для соответствующих <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> членов при координации приложения обмена сообщениями для ответа на сообщения подтверждения и отчетов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-109">You can also specify values for the appropriate <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> members when you coordinate your messaging application to respond to acknowledgment and report messages.</span></span> <span data-ttu-id="bbee3-110">С помощью <xref:System.Messaging.Message> экземпляру отправлять сообщения в очередь обеспечивает гибкость доступа и изменения, многие из этих свойств — для одного сообщения, либо на основе сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-110">Using a <xref:System.Messaging.Message> instance to send a message to the queue gives you the flexibility to access and modify many of these properties—either for a single message or on a message-by-message basis.</span></span> <span data-ttu-id="bbee3-111"><xref:System.Messaging.Message> свойства имеют приоритет над <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-111"><xref:System.Messaging.Message> properties take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</span></span>  
  
 <span data-ttu-id="bbee3-112">Данные сообщения хранятся в <xref:System.Messaging.Message.Body%2A> свойства и в меньшей степени <xref:System.Messaging.Message.AppSpecific%2A> и <xref:System.Messaging.Message.Extension%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="bbee3-112">Message data is stored in the <xref:System.Messaging.Message.Body%2A> property and to a lesser extent, the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties.</span></span> <span data-ttu-id="bbee3-113">Когда данные сообщения зашифрованы, сериализации или десериализации, только содержимое <xref:System.Messaging.Message.Body%2A> влияет свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-113">When message data is encrypted, serialized, or deserialized, only the contents of the <xref:System.Messaging.Message.Body%2A> property are affected.</span></span>  
  
 <span data-ttu-id="bbee3-114">Содержание <xref:System.Messaging.Message.Body%2A> свойства сериализуются в том случае, когда сообщение отправляется с помощью <xref:System.Messaging.Message.Formatter%2A> свойству.</span><span class="sxs-lookup"><span data-stu-id="bbee3-114">The contents of the <xref:System.Messaging.Message.Body%2A> property are serialized when the message is sent, using the <xref:System.Messaging.Message.Formatter%2A> property you specify.</span></span> <span data-ttu-id="bbee3-115">Сериализованное содержимое находится в <xref:System.Messaging.Message.BodyStream%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-115">The serialized contents are found in the <xref:System.Messaging.Message.BodyStream%2A> property.</span></span> <span data-ttu-id="bbee3-116">Можно также задать <xref:System.Messaging.Message.BodyStream%2A> свойства напрямую, например, чтобы отправить файл как содержимое данных сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-116">You can also set the <xref:System.Messaging.Message.BodyStream%2A> property directly, for example, to send a file as the data content of a message.</span></span> <span data-ttu-id="bbee3-117">Вы можете изменить <xref:System.Messaging.Message.Body%2A> или <xref:System.Messaging.Message.Formatter%2A> в любое время перед отправкой сообщения и данные будут сериализованы свойства соответствующим образом при вызове <xref:System.Messaging.MessageQueue.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-117">You can change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> properties at any time before sending the message, and the data will be serialized appropriately when you call <xref:System.Messaging.MessageQueue.Send%2A>.</span></span>  
  
 <span data-ttu-id="bbee3-118">Свойства, определенные <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> свойство применяется только к сообщениям, которые не имеют тип <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-118">The properties defined by the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> property apply only to messages that are not of type <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="bbee3-119">Если указать <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> свойство для <xref:System.Messaging.MessageQueue>, идентичными именам свойств в <xref:System.Messaging.Message> экземпляр отправляется очереди вызывать эти свойства по умолчанию пропускаются.</span><span class="sxs-lookup"><span data-stu-id="bbee3-119">If you specify the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property for a <xref:System.Messaging.MessageQueue>, the identically named properties in a <xref:System.Messaging.Message> instance sent to that queue cause these default properties to be ignored.</span></span>  
  
 <span data-ttu-id="bbee3-120">Список начальных значений свойств для экземпляра <xref:System.Messaging.Message>, см. в разделе <xref:System.Messaging.Message.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="bbee3-120">For a list of initial property values for an instance of <xref:System.Messaging.Message>, see the <xref:System.Messaging.Message.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-121">В следующем примере кода демонстрируется форматирование тела сообщения с помощью <xref:System.Messaging.BinaryMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-121">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="bbee3-122">В следующем примере кода демонстрируется форматирование тела сообщения с помощью <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-122">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
    <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="M:System.Messaging.MessageQueue.Peek" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-123">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-123">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-124">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-124">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-125">Используйте этот перегруженный метод, чтобы создать новый экземпляр класса <xref:System.Messaging.Message> класс с пустым телом.</span><span class="sxs-lookup"><span data-stu-id="bbee3-125">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that has an empty body.</span></span>  
  
 <span data-ttu-id="bbee3-126">Укажите либо <xref:System.Messaging.Message.Body%2A> свойство или <xref:System.Messaging.Message.BodyStream%2A> свойство перед отправкой <xref:System.Messaging.Message> объекта.</span><span class="sxs-lookup"><span data-stu-id="bbee3-126">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="bbee3-127"><xref:System.Messaging.Message.Body%2A> Свойство может быть любой объект, который может быть сериализован, например текстовой строки, объекта структуры, экземпляр класса или внедренный объект.</span><span class="sxs-lookup"><span data-stu-id="bbee3-127">The <xref:System.Messaging.Message.Body%2A> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span>  
  
 <span data-ttu-id="bbee3-128">Если не записывается содержимое сообщения непосредственно в <xref:System.Messaging.Message.BodyStream%2A> задайте <xref:System.Messaging.Message.Formatter%2A> свойство перед отправкой сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-128">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="bbee3-129">Текст сообщения сериализуется с помощью <xref:System.Messaging.Message.Formatter%2A> значения свойства во время <xref:System.Messaging.MessageQueue.Send%2A> вызывается метод <xref:System.Messaging.MessageQueue> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="bbee3-129">The body is serialized using the <xref:System.Messaging.Message.Formatter%2A> property's value at the time the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance.</span></span>  
  
 <span data-ttu-id="bbee3-130"><xref:System.Messaging.XmlMessageFormatter> Слабо связанный, поэтому нет необходимости в тот же объект введите на отправителя и получателя, при использовании этого формата.</span><span class="sxs-lookup"><span data-stu-id="bbee3-130">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="bbee3-131"><xref:System.Messaging.ActiveXMessageFormatter> И <xref:System.Messaging.BinaryMessageFormatter> сериализовать данные в двоичное представление.</span><span class="sxs-lookup"><span data-stu-id="bbee3-131">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="bbee3-132"><xref:System.Messaging.ActiveXMessageFormatter> Используется при отправке или получении COM-компонентов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-132">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="bbee3-133">В следующей таблице представлены исходные значения свойств для экземпляра <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-133">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="bbee3-134">Свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-134">Property</span></span>|<span data-ttu-id="bbee3-135">Исходное значение</span><span class="sxs-lookup"><span data-stu-id="bbee3-135">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="bbee3-136">0</span><span class="sxs-lookup"><span data-stu-id="bbee3-136">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="bbee3-137">Microsoft Base Cryptographic Provider версии 1.0</span><span class="sxs-lookup"><span data-stu-id="bbee3-137">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|`null`|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="bbee3-138">0</span><span class="sxs-lookup"><span data-stu-id="bbee3-138">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="bbee3-139">Пустая строка (»»)</span><span class="sxs-lookup"><span data-stu-id="bbee3-139">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="bbee3-140">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-140">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="bbee3-141">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-141">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="bbee3-142">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-142">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="bbee3-143">Пустая строка (»»)</span><span class="sxs-lookup"><span data-stu-id="bbee3-143">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="bbee3-144">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-144">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-145">В следующем примере кода два сообщения с различными приоритетами отправляются в очередь и последовательно извлекаются.</span><span class="sxs-lookup"><span data-stu-id="bbee3-145">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message (object body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message(System::Object ^ body);" />
      <MemberSignature Language="F#" Value="new System.Messaging.Message : obj -&gt; System.Messaging.Message" Usage="new System.Messaging.Message body" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="bbee3-146">The object to be serialized into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-146">The object to be serialized into the body of the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bbee3-147">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-147">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-148">Используйте этот перегруженный метод, чтобы создать новый экземпляр класса <xref:System.Messaging.Message> класс, содержащий <xref:System.Messaging.Message.Body%2A> определяется `body` параметра.</span><span class="sxs-lookup"><span data-stu-id="bbee3-148">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter.</span></span> <span data-ttu-id="bbee3-149">`body` Параметр может быть любой объект, который может быть сериализован, например текстовой строки, объекта структуры, экземпляр класса или внедренный объект.</span><span class="sxs-lookup"><span data-stu-id="bbee3-149">The `body` parameter can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span> <span data-ttu-id="bbee3-150">Текст сообщения сериализуется с помощью <xref:System.Messaging.XmlMessageFormatter> только после изменения <xref:System.Messaging.Message.Formatter%2A> свойства перед <xref:System.Messaging.Message> отправляется.</span><span class="sxs-lookup"><span data-stu-id="bbee3-150">The body is serialized using the <xref:System.Messaging.XmlMessageFormatter> unless you change the <xref:System.Messaging.Message.Formatter%2A> property before the <xref:System.Messaging.Message> is sent.</span></span> <span data-ttu-id="bbee3-151">При изменении <xref:System.Messaging.Message.Body%2A> или <xref:System.Messaging.Message.Formatter%2A> в любой момент перед вызовом <xref:System.Messaging.MessageQueue.Send%2A>, сообщение будет сериализован в соответствии с новое значение свойства.</span><span class="sxs-lookup"><span data-stu-id="bbee3-151">If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.</span></span>  
  
 <span data-ttu-id="bbee3-152"><xref:System.Messaging.XmlMessageFormatter> Слабо связанный, поэтому нет необходимости в тот же объект введите на отправителя и получателя, при использовании этого формата.</span><span class="sxs-lookup"><span data-stu-id="bbee3-152">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="bbee3-153"><xref:System.Messaging.ActiveXMessageFormatter> И <xref:System.Messaging.BinaryMessageFormatter> сериализовать данные в двоичное представление.</span><span class="sxs-lookup"><span data-stu-id="bbee3-153">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="bbee3-154"><xref:System.Messaging.ActiveXMessageFormatter> Используется при отправке или получении COM-компонентов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-154">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="bbee3-155">В следующей таблице представлены исходные значения свойств для экземпляра <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-155">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="bbee3-156">Свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-156">Property</span></span>|<span data-ttu-id="bbee3-157">Исходное значение</span><span class="sxs-lookup"><span data-stu-id="bbee3-157">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="bbee3-158">0</span><span class="sxs-lookup"><span data-stu-id="bbee3-158">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="bbee3-159">Microsoft Base Cryptographic Provider версии 1.0</span><span class="sxs-lookup"><span data-stu-id="bbee3-159">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|<span data-ttu-id="bbee3-160">`body` Параметра.</span><span class="sxs-lookup"><span data-stu-id="bbee3-160">The `body` parameter.</span></span>|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="bbee3-161">0</span><span class="sxs-lookup"><span data-stu-id="bbee3-161">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="bbee3-162">Пустая строка (»»)</span><span class="sxs-lookup"><span data-stu-id="bbee3-162">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="bbee3-163">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-163">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="bbee3-164">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-164">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="bbee3-165">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-165">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="bbee3-166">Пустая строка (»»)</span><span class="sxs-lookup"><span data-stu-id="bbee3-166">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="bbee3-167">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-167">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-168">В следующем примере кода создает новую очередь, отправляет сообщение, которое содержит заказа к нему, а затем извлекает его.</span><span class="sxs-lookup"><span data-stu-id="bbee3-168">The following code example creates a new queue, sends a message that contains an order to it, and then retrieves it.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message (object body, System.Messaging.IMessageFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object body, class System.Messaging.IMessageFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As Object, formatter As IMessageFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message(System::Object ^ body, System::Messaging::IMessageFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="new System.Messaging.Message : obj * System.Messaging.IMessageFormatter -&gt; System.Messaging.Message" Usage="new System.Messaging.Message (body, formatter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.Object" />
        <Parameter Name="formatter" Type="System.Messaging.IMessageFormatter" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="bbee3-169">The object to be serialized into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-169">The object to be serialized into the body of the message.</span>
          </span>
        </param>
        <param name="formatter">
          <span data-ttu-id="bbee3-170">A <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-170">A <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bbee3-171">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class using the specified formatter to serialize the specified object into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-171">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class using the specified formatter to serialize the specified object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-172">Используйте этот перегруженный метод, чтобы создать новый экземпляр класса <xref:System.Messaging.Message> класс, содержащий <xref:System.Messaging.Message.Body%2A> определяется `body` , с применением любой допустимый модуль форматирования для сериализации текста сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-172">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter and that uses any valid formatter to serialize the body.</span></span> <span data-ttu-id="bbee3-173">`body` Параметр — это любой объект, который может быть сериализован, например текстовой строки, объекта структуры, экземпляр класса или внедренный объект.</span><span class="sxs-lookup"><span data-stu-id="bbee3-173">The `body` parameter is any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span> <span data-ttu-id="bbee3-174">При изменении <xref:System.Messaging.Message.Body%2A> или <xref:System.Messaging.Message.Formatter%2A> в любой момент перед вызовом <xref:System.Messaging.MessageQueue.Send%2A>, сообщение будет сериализован в соответствии с новое значение свойства.</span><span class="sxs-lookup"><span data-stu-id="bbee3-174">If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.</span></span>  
  
 <span data-ttu-id="bbee3-175"><xref:System.Messaging.XmlMessageFormatter> Слабо связанный, поэтому нет необходимости в тот же объект введите на отправителя и получателя, при использовании этого формата.</span><span class="sxs-lookup"><span data-stu-id="bbee3-175">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="bbee3-176"><xref:System.Messaging.ActiveXMessageFormatter> И <xref:System.Messaging.BinaryMessageFormatter> сериализовать данные в двоичное представление.</span><span class="sxs-lookup"><span data-stu-id="bbee3-176">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="bbee3-177"><xref:System.Messaging.ActiveXMessageFormatter> Используется при отправке или получении COM-компонентов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-177">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="bbee3-178">В следующей таблице представлены исходные значения свойств для экземпляра <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-178">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="bbee3-179">Свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-179">Property</span></span>|<span data-ttu-id="bbee3-180">Исходное значение</span><span class="sxs-lookup"><span data-stu-id="bbee3-180">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="bbee3-181">0</span><span class="sxs-lookup"><span data-stu-id="bbee3-181">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="bbee3-182">Microsoft Base Cryptographic Provider версии 1.0</span><span class="sxs-lookup"><span data-stu-id="bbee3-182">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|<span data-ttu-id="bbee3-183">`body` Параметра.</span><span class="sxs-lookup"><span data-stu-id="bbee3-183">The `body` parameter.</span></span>|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="bbee3-184">0</span><span class="sxs-lookup"><span data-stu-id="bbee3-184">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="bbee3-185">Пустая строка (»»)</span><span class="sxs-lookup"><span data-stu-id="bbee3-185">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="bbee3-186">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-186">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="bbee3-187">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-187">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="bbee3-188">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-188">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|<span data-ttu-id="bbee3-189">`formatter` Параметра.</span><span class="sxs-lookup"><span data-stu-id="bbee3-189">The `formatter` parameter.</span></span>|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="bbee3-190">Пустая строка (»»)</span><span class="sxs-lookup"><span data-stu-id="bbee3-190">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="bbee3-191">Массив байтов нулевой длины</span><span class="sxs-lookup"><span data-stu-id="bbee3-191">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AcknowledgeTypes AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As AcknowledgeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AcknowledgeTypes AcknowledgeType { System::Messaging::AcknowledgeTypes get(); void set(System::Messaging::AcknowledgeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.AcknowledgeType : System.Messaging.AcknowledgeTypes with get, set" Usage="System.Messaging.Message.AcknowledgeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgeType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AcknowledgeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-192">Gets or sets the type of acknowledgment message to be returned to the sending application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-192">Gets or sets the type of acknowledgment message to be returned to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-193">Один из <see cref="T:System.Messaging.AcknowledgeTypes" /> значения, которые представляют как типы подтверждающих сообщений, размещаемых системой в очереди администрирования и условия, при которых подтверждения возвращаются в передающее приложение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-193">One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application.</span>
          </span>
          <span data-ttu-id="bbee3-194">Значение по умолчанию — <see langword="None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-194">The default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-195"><xref:System.Messaging.Message.AcknowledgeType%2A> Свойство задает тип сообщения подтверждения, запрошенного передающим приложением.</span><span class="sxs-lookup"><span data-stu-id="bbee3-195">The <xref:System.Messaging.Message.AcknowledgeType%2A> property specifies the type of acknowledgment messages requested by the sending application.</span></span> <span data-ttu-id="bbee3-196">Задайте <xref:System.Messaging.Message.AcknowledgeType%2A> свойство перед отправкой сообщения для запроса уведомления об определенных событиях, например, сообщение достигло своей очереди места назначения, сообщение извлекается или тайм-аут, предотвращая сообщение или из очередь назначения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-196">Set the <xref:System.Messaging.Message.AcknowledgeType%2A> property before sending the message to request notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.</span></span>  
  
 <span data-ttu-id="bbee3-197">Служба Message Queuing возвращает уведомления путем отправки сообщений подтверждения <xref:System.Messaging.Message.AdministrationQueue%2A> свойство, указанное исходное сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-197">Message Queuing returns notification by sending acknowledgment messages to the <xref:System.Messaging.Message.AdministrationQueue%2A> property specified by the original message.</span></span> <span data-ttu-id="bbee3-198">Сообщение подтверждения <xref:System.Messaging.Message.Acknowledgment%2A> свойство указывает тип подтверждения, который он представляет.</span><span class="sxs-lookup"><span data-stu-id="bbee3-198">An acknowledgment message's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the type of acknowledgment that it represents.</span></span> <span data-ttu-id="bbee3-199">Например, если подтверждающее сообщение было отправлено, так как сообщение не было получено назначения перед <xref:System.Messaging.Message.TimeToReachQueue%2A> истекло время ожидания, <xref:System.Messaging.Message.Acknowledgment%2A> свойство подтверждающего сообщения будет содержать значение `ReachQueueTimeout`.</span><span class="sxs-lookup"><span data-stu-id="bbee3-199">For example, if an acknowledgment message was sent because a message did not reach the destination before the <xref:System.Messaging.Message.TimeToReachQueue%2A> interval expired, the <xref:System.Messaging.Message.Acknowledgment%2A> property of the acknowledgment message would contain the value `ReachQueueTimeout`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-200">В следующем примере кода отправляет и получает сообщение, содержащее к и из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-200">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="bbee3-201">Он специально запрашивает положительного подтверждения в случае, когда исходное сообщение достигает или извлечено из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-201">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-202">The message is filtered to ignore the <see cref="P:System.Messaging.Message.AcknowledgeType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-202">The message is filtered to ignore the <see cref="P:System.Messaging.Message.AcknowledgeType" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.Acknowledgment" />
      </Docs>
    </Member>
    <Member MemberName="Acknowledgment">
      <MemberSignature Language="C#" Value="public System.Messaging.Acknowledgment Acknowledgment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.Acknowledgment Acknowledgment" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Acknowledgment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Acknowledgment As Acknowledgment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Acknowledgment Acknowledgment { System::Messaging::Acknowledgment get(); };" />
      <MemberSignature Language="F#" Value="member this.Acknowledgment : System.Messaging.Acknowledgment" Usage="System.Messaging.Message.Acknowledgment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgement")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.Acknowledgment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-203">Gets the classification of acknowledgment that this message represents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-203">Gets the classification of acknowledgment that this message represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-204">Одно из значений перечисления <see cref="T:System.Messaging.Acknowledgment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-204">One of the <see cref="T:System.Messaging.Acknowledgment" /> enumeration values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-205">При получении сообщения из очереди администрирования, чтение <xref:System.Messaging.Message.Acknowledgment%2A> свойство для проверки состояния исходного сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-205">When you receive a message from an administration queue, read the <xref:System.Messaging.Message.Acknowledgment%2A> property to verify the status of the original message.</span></span>  
  
 <span data-ttu-id="bbee3-206">Когда сообщение отправляется в очередь назначения, очереди сообщений может запросить подтверждающее сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-206">When a message is sent to its destination queue, Message Queuing can be requested to post an acknowledgment message.</span></span> <span data-ttu-id="bbee3-207">Такое сообщение, например, можно указать, ли сообщение получено и был извлечен в пределах заданного времени ожидания, или он может указывать, что пошло не так в случае сбоя доставки.</span><span class="sxs-lookup"><span data-stu-id="bbee3-207">Such a message can indicate, for example, whether the message arrived and was retrieved within specified time-outs, or it can indicate what went wrong in the case of delivery failure.</span></span> <span data-ttu-id="bbee3-208">Очередь назначения возвращает подтверждающие сообщения и помещает их в очередь администрирования, указанную в исходном сообщении <xref:System.Messaging.Message.AdministrationQueue%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-208">The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <xref:System.Messaging.Message.AdministrationQueue%2A> property.</span></span> <span data-ttu-id="bbee3-209"><xref:System.Messaging.Message.Id%2A> Свойство подтверждающего сообщения идентифицирует сообщение подтверждения, а не исходное сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-209">The <xref:System.Messaging.Message.Id%2A> property of an acknowledgment message identifies the acknowledgment message, not the original message.</span></span> <span data-ttu-id="bbee3-210">Идентификатор исходного сообщения можно найти в подтверждении <xref:System.Messaging.Message> экземпляра <xref:System.Messaging.Message.CorrelationId%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-210">You can find the identifier of the original message in the acknowledgment <xref:System.Messaging.Message> instance's <xref:System.Messaging.Message.CorrelationId%2A> property.</span></span>  
  
 <span data-ttu-id="bbee3-211">Если этот <xref:System.Messaging.Message> экземпляр представляет сообщение подтверждения <xref:System.Messaging.Message.Acknowledgment%2A> свойство задает тип подтверждения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-211">If this <xref:System.Messaging.Message> instance represents an acknowledgment message, the <xref:System.Messaging.Message.Acknowledgment%2A> property specifies the type of acknowledgment.</span></span> <span data-ttu-id="bbee3-212">В противном случае <xref:System.Messaging.Message.Acknowledgment%2A> свойство содержит значение `Normal`.</span><span class="sxs-lookup"><span data-stu-id="bbee3-212">Otherwise, the <xref:System.Messaging.Message.Acknowledgment%2A> property contains the value `Normal`.</span></span>  
  
 <span data-ttu-id="bbee3-213">Используйте <xref:System.Messaging.Message.AcknowledgeType%2A> свойство исходного сообщения для определения условий, при которых будут возвращены уведомления о доставке.</span><span class="sxs-lookup"><span data-stu-id="bbee3-213">Use the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the original message to specify the circumstances under which acknowledgments will be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-214">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-214">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-215">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-215">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-216">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-216">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekById(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveById(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ AdministrationQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdministrationQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.AdministrationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAdministrationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-217">Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-217">Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-218">
            <see cref="T:System.Messaging.MessageQueue" /> , Задающий очередь администрирования, используемую для сообщений подтверждения, создаваемых системой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-218">The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages.</span>
          </span>
          <span data-ttu-id="bbee3-219">Значение по умолчанию — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-219">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-220">Очередь, указанная в <xref:System.Messaging.Message.AdministrationQueue%2A> свойство может быть любой нетранзакционную очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-220">The queue specified in the <xref:System.Messaging.Message.AdministrationQueue%2A> property can be any non-transactional queue.</span></span> <span data-ttu-id="bbee3-221">Подтверждающие сообщения, передаваемые в очередь администрирования, могут указывать, достигло ли исходное сообщение своей конечной очереди, а также было ли оно удалено из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-221">The acknowledgment messages sent to the administration queue can indicate whether the original message reached its destination queue and whether it was removed from the queue.</span></span>  
  
 <span data-ttu-id="bbee3-222">Когда <xref:System.Messaging.Message.AcknowledgeType%2A> свойство имеет любое значение, отличное от `None`, отправляющего приложения необходимо указать очереди для использования в качестве очереди администрирования.</span><span class="sxs-lookup"><span data-stu-id="bbee3-222">When the <xref:System.Messaging.Message.AcknowledgeType%2A> property has any value other than `None`, the sending application must specify the queue to use as the administration queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-223">В следующем примере кода отправляет и получает сообщение, содержащее к и из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-223">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="bbee3-224">Он специально запрашивает положительного подтверждения в случае, когда исходное сообщение достигает или извлечено из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-224">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-225">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AdministrationQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-225">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AdministrationQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.Acknowledgment" />
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppSpecific { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AppSpecific : int with get, set" Usage="System.Messaging.Message.AppSpecific" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAppSpecific")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-226">Gets or sets additional, application-specific information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-226">Gets or sets additional, application-specific information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-227">Сведения, относящиеся к приложению.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-227">Information that is specific to the application.</span>
          </span>
          <span data-ttu-id="bbee3-228">По умолчанию используется значение ноль.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-228">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-229"><xref:System.Messaging.Message.AppSpecific%2A> Свойство содержит сведения о приложении, которое можно использовать для организации различных типов сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-229">The <xref:System.Messaging.Message.AppSpecific%2A> property contains application-specific information that you can use to organize different types of messages.</span></span> <span data-ttu-id="bbee3-230">Например, можно использовать индексы, связанные с приложением.</span><span class="sxs-lookup"><span data-stu-id="bbee3-230">For example, you can use application-specific indexes.</span></span> <span data-ttu-id="bbee3-231">Он отвечает за приложение для интерпретации <xref:System.Messaging.Message.AppSpecific%2A> сведения о свойстве.</span><span class="sxs-lookup"><span data-stu-id="bbee3-231">It is the responsibility of the application to interpret <xref:System.Messaging.Message.AppSpecific%2A> property information.</span></span>  
  
 <span data-ttu-id="bbee3-232">Когда это возможно, данные сообщения следует включать в теле сообщения, а не <xref:System.Messaging.Message.AppSpecific%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-232">Whenever possible, you should include message data in the body of the message rather than the <xref:System.Messaging.Message.AppSpecific%2A> property.</span></span>  
  
 <span data-ttu-id="bbee3-233">При работе с внешними очередями используйте <xref:System.Messaging.Message.Extension%2A> свойство, чтобы указать свойства сообщения, которые не существуют в очереди сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-233">When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.</span></span> <span data-ttu-id="bbee3-234">Как и в <xref:System.Messaging.Message.AppSpecific%2A> свойство, он отвечает за приложение, чтобы понять содержание <xref:System.Messaging.Message.Extension%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-234">As with the <xref:System.Messaging.Message.AppSpecific%2A> property, it is the responsibility of the application to understand the content of the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-235">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AppSpecific" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-235">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AppSpecific" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.Body" />
      </Docs>
    </Member>
    <Member MemberName="ArrivedTime">
      <MemberSignature Language="C#" Value="public DateTime ArrivedTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ArrivedTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ArrivedTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArrivedTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ArrivedTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ArrivedTime : DateTime" Usage="System.Messaging.Message.ArrivedTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgArrivedTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-236">Gets the time that the message arrived in the destination queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-236">Gets the time that the message arrived in the destination queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-237">Объект <see cref="T:System.DateTime" /> , представляющий время поступления сообщения в конечную очередь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-237">A <see cref="T:System.DateTime" /> that represents the message's arrival time in the destination queue.</span>
          </span>
          <span data-ttu-id="bbee3-238">Время является отсчитываемое относительно Гринвичского местного времени компьютера, на котором расположена очередь назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-238">The time is adjusted from GMT to the local time of the computer on which the destination queue resides.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-239">Сообщения <xref:System.Messaging.Message.TimeToBeReceived%2A> свойство указывает, насколько быстро сообщение должно быть получено из очереди местоназначения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-239">The message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property indicates how quickly the message must be received from the destination queue.</span></span> <span data-ttu-id="bbee3-240"><xref:System.Messaging.Message.TimeToBeReceived%2A> Свойство таймер запускается, когда сообщение отправляется не в том случае, когда приходит сообщение в очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-240">The <xref:System.Messaging.Message.TimeToBeReceived%2A> property timer starts when the message is sent, not when the message arrives in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-241">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.ArrivedTime%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-241">The following code example displays the value of a message's <xref:System.Messaging.Message.ArrivedTime%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-242">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-242">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-243">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-243">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-244">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ArrivedTime" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-244">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ArrivedTime" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
      </Docs>
    </Member>
    <Member MemberName="AttachSenderId">
      <MemberSignature Language="C#" Value="public bool AttachSenderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttachSenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AttachSenderId" />
      <MemberSignature Language="VB.NET" Value="Public Property AttachSenderId As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AttachSenderId { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AttachSenderId : bool with get, set" Usage="System.Messaging.Message.AttachSenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAttachSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-245">Gets or sets a value that indicates whether the sender ID should be attached to the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-245">Gets or sets a value that indicates whether the sender ID should be attached to the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-246">
            <see langword="true" /> Если <see cref="P:System.Messaging.Message.SenderId" /> должен быть присоединен к сообщению; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-246">
              <see langword="true" /> if the <see cref="P:System.Messaging.Message.SenderId" /> should be attached to the message; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bbee3-247">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-247">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-248"><xref:System.Messaging.Message.SenderId%2A> Свойство представляет собой массив байтов, представляющий идентификатор пользователя, отправившего сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-248">The <xref:System.Messaging.Message.SenderId%2A> property is an array of bytes that represents the identifier of the sending user.</span></span> <span data-ttu-id="bbee3-249">Идентификатор отправителя задаются службой Message Queuing и используется для проверки прав доступа к очереди отправителя по диспетчеру принимающей очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-249">The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.</span></span>  
  
 <span data-ttu-id="bbee3-250">Отсутствие отправителя, идентификатор, чтобы указать отправляющим приложением, что очереди сообщений должен не проверки отправителя сообщения, ни проверка доступа отправителя rights очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-250">The absence of the sender ID is an indication by the sending application that Message Queuing should not validate the message's sender nor verify the sender's access rights to the receiving queue.</span></span> <span data-ttu-id="bbee3-251"><xref:System.Messaging.Message.SenderId%2A> Является доверенной, только в том случае, если сообщение прошло проверку подлинности, при его поступлении в очередь назначения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-251">The <xref:System.Messaging.Message.SenderId%2A> is trustworthy only if the message was authenticated when it reached the destination queue.</span></span> <span data-ttu-id="bbee3-252">Сообщение отклоняется в том случае, когда достигнет конечной очереди, если очередь принимает только сообщения, прошедшие проверку подлинности и либо <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> или <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> свойство `false`.</span><span class="sxs-lookup"><span data-stu-id="bbee3-252">The message is rejected when it reaches the destination queue if the queue accepts only authenticated messages and either the <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or the <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> property is `false`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bbee3-253">Если сообщение отклоняется, это либо передается в очередь недоставленных сообщений-(если <xref:System.Messaging.Message.UseDeadLetterQueue%2A> — `true`), или он учитывается.</span><span class="sxs-lookup"><span data-stu-id="bbee3-253">If a message is rejected, it is either sent to the dead-letter queue (if <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`), or it is ignored.</span></span> <span data-ttu-id="bbee3-254">Вы можете запросить подтверждения, если сообщение не удалось достичь очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-254">You can request acknowledgments when a message fails to reach a queue.</span></span> <span data-ttu-id="bbee3-255">В противном случае, если <xref:System.Messaging.Message.UseDeadLetterQueue%2A> является `false` сообщения могут быть потеряны без предупреждения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-255">Otherwise, when <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false` the message might be lost without warning.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-256">В следующем примере кода возвращает и задает значение сообщения <xref:System.Messaging.Message.AttachSenderId%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-256">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.AttachSenderId%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-257">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AttachSenderId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-257">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AttachSenderId" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.SenderId" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.SenderCertificate" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool" Usage="System.Messaging.Message.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-258">Gets a value that indicates whether the message was authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-258">Gets a value that indicates whether the message was authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-259">
            <see langword="true" /> Если была запрошена проверка подлинности сообщения при его помещены в очередь; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-259">
              <see langword="true" /> if authentication was requested for the message when it entered the queue; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-260"><xref:System.Messaging.Message.Authenticated%2A> Свойство используется только этим приложением, их взаимодействия с сообщением и пытается определить, была ли запрошена проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="bbee3-260">The <xref:System.Messaging.Message.Authenticated%2A> property is used only by the application while it is interacting with the message and trying to determine if authentication was requested.</span></span> <span data-ttu-id="bbee3-261">Если сообщение в очереди, сообщение прошло проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="bbee3-261">If the message is in the queue, the message was authenticated.</span></span> <span data-ttu-id="bbee3-262">И наоборот Если <xref:System.Messaging.Message.Authenticated%2A> свойство `true`, диспетчер принимающей очереди прошел проверку подлинности сообщения при его поступлении.</span><span class="sxs-lookup"><span data-stu-id="bbee3-262">Conversely, if the <xref:System.Messaging.Message.Authenticated%2A> property is `true`, the receiving Queue Manager authenticated the message when it received that message.</span></span>  
  
 <span data-ttu-id="bbee3-263">Не удается определить, если сообщение не прошел проверку подлинности, просмотрев его свойства.</span><span class="sxs-lookup"><span data-stu-id="bbee3-263">You cannot determine if a message failed authentication by looking at its properties.</span></span> <span data-ttu-id="bbee3-264">Служба Message Queuing отклоняет сообщения, не прошедшие проверку подлинности, прежде чем они попадут в очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-264">Message Queuing discards messages that fail authentication before they are delivered to the queue.</span></span> <span data-ttu-id="bbee3-265">Тем не менее можно запросить подтверждающее сообщение, когда сообщение о сбое доставки сообщения от поступающих в очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-265">However, you can request that an acknowledgment message be sent if a delivery failure prevents the message from arriving in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-266">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.Authenticated%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-266">The following code example displays the value of a message's <xref:System.Messaging.Message.Authenticated%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-267">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-267">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-268">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-268">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-269">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Authenticated" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-269">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Authenticated" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationProviderName">
      <MemberSignature Language="C#" Value="public string AuthenticationProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AuthenticationProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationProviderName : string with get, set" Usage="System.Messaging.Message.AuthenticationProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticationProviderName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-270">Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-270">Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-271">Имя поставщика служб шифрования, используемый для создания цифровой подписи сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-271">The name of the cryptographic provider used to generate the digital signature of the message.</span>
          </span>
          <span data-ttu-id="bbee3-272">По умолчанию используется Microsoft Base Cryptographic Provider версии 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-272">The default is Microsoft Base Cryptographic Provider version 1.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-273">Как правило, используется <xref:System.Messaging.Message.AuthenticationProviderName%2A> при работе с внешними очередями.</span><span class="sxs-lookup"><span data-stu-id="bbee3-273">You typically use the <xref:System.Messaging.Message.AuthenticationProviderName%2A> when working with foreign queues.</span></span> <span data-ttu-id="bbee3-274">Служба очереди сообщений требуется имя поставщика проверки подлинности и тип поставщика проверки подлинности (поставщик проверки подлинности) для проверки цифровых подписей сообщений, передаваемых сообщений и сообщений, отправленных в очередь внешнего поставщика служб шифрования Очереди из внешней очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-274">Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.</span></span>  
  
 <span data-ttu-id="bbee3-275">При отправке сообщения, всегда значение <xref:System.Messaging.Message.AuthenticationProviderName%2A> и <xref:System.Messaging.Message.ConnectorType%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-275">When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderName%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together.</span></span> <span data-ttu-id="bbee3-276">При отправке сообщения Message Queuing не обрабатывает имя поставщика проверки подлинности, если не установлен тип соединителя.</span><span class="sxs-lookup"><span data-stu-id="bbee3-276">When the message is sent, Message Queuing ignores the authentication provider name if the connector type is not also set.</span></span>  
  
 <span data-ttu-id="bbee3-277"><xref:System.Messaging.Message.AuthenticationProviderName%2A> Свойство не может быть `null`, но это может быть пустой строкой (»»).</span><span class="sxs-lookup"><span data-stu-id="bbee3-277">The <xref:System.Messaging.Message.AuthenticationProviderName%2A> property cannot be `null`, but it can be an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-278">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property could not be set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-278">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property could not be set.</span>
          </span>
          <span data-ttu-id="bbee3-279">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-279">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bbee3-280">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> was set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-280">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> was set to <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationProviderType">
      <MemberSignature Language="C#" Value="public System.Messaging.CryptographicProviderType AuthenticationProviderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.CryptographicProviderType AuthenticationProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AuthenticationProviderType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationProviderType As CryptographicProviderType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::CryptographicProviderType AuthenticationProviderType { System::Messaging::CryptographicProviderType get(); void set(System::Messaging::CryptographicProviderType value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationProviderType : System.Messaging.CryptographicProviderType with get, set" Usage="System.Messaging.Message.AuthenticationProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticationProviderType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.CryptographicProviderType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-281">Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-281">Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-282">Одно из значений перечисления <see cref="T:System.Messaging.CryptographicProviderType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-282">One of the <see cref="T:System.Messaging.CryptographicProviderType" /> values.</span>
          </span>
          <span data-ttu-id="bbee3-283">Значение по умолчанию — <see langword="RSA_FULL" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-283">The default is <see langword="RSA_FULL" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-284">Как правило, используется <xref:System.Messaging.Message.AuthenticationProviderType%2A> свойство при работе с внешними очередями, чтобы указать, какие службы криптографии, связанного с сообщением.</span><span class="sxs-lookup"><span data-stu-id="bbee3-284">You typically use the <xref:System.Messaging.Message.AuthenticationProviderType%2A> property when working with foreign queues to specify which cryptographic service provider is associated with a message.</span></span> <span data-ttu-id="bbee3-285">Служба очереди сообщений требуется имя поставщика проверки подлинности и тип поставщика проверки подлинности (поставщик проверки подлинности) для проверки цифровых подписей сообщений, передаваемых сообщений и сообщений, отправленных в очередь внешнего поставщика служб шифрования Очереди из внешней очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-285">Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.</span></span>  
  
 <span data-ttu-id="bbee3-286">Только `RsaFull` предназначен для использования с системой обмена сообщениями.</span><span class="sxs-lookup"><span data-stu-id="bbee3-286">Only `RsaFull` is intended to be used with messaging.</span></span>  
  
 <span data-ttu-id="bbee3-287">При отправке сообщения, всегда значение <xref:System.Messaging.Message.AuthenticationProviderType%2A> и <xref:System.Messaging.Message.ConnectorType%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-287">When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderType%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together.</span></span> <span data-ttu-id="bbee3-288">При отправке сообщения Message Queuing не обрабатывает тип поставщика проверки подлинности, если не установлен тип соединителя.</span><span class="sxs-lookup"><span data-stu-id="bbee3-288">When the message is sent, Message Queuing ignores the authentication provider type if the connector type is not also set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-289">The <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property could not be set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-289">The <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property could not be set.</span>
          </span>
          <span data-ttu-id="bbee3-290">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-290">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="T:System.Messaging.CryptographicProviderType" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public object Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Body" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Body { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : obj with get, set" Usage="System.Messaging.Message.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-291">Gets or sets the content of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-291">Gets or sets the content of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-292">Объект, задающий содержимое сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-292">An object that specifies the message contents.</span>
          </span>
          <span data-ttu-id="bbee3-293">Объект может быть строка, даты, валюты, число, массив байтов или любого управляемого объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-293">The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-294">Сообщения <xref:System.Messaging.Message.Body%2A> свойство обычно содержит данные, связанные с данным сообщением.</span><span class="sxs-lookup"><span data-stu-id="bbee3-294">The message's <xref:System.Messaging.Message.Body%2A> property usually contains the data associated with the message.</span></span> <span data-ttu-id="bbee3-295">Несмотря на то, что вы также можете отправлять данные приложения <xref:System.Messaging.Message.AppSpecific%2A> и <xref:System.Messaging.Message.Extension%2A> свойства, следует включать данные сообщения в <xref:System.Messaging.Message.Body%2A> сообщения, когда это возможно.</span><span class="sxs-lookup"><span data-stu-id="bbee3-295">Although you can also send application-specific data in the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties, you should include message data in the <xref:System.Messaging.Message.Body%2A> of the message whenever possible.</span></span> <span data-ttu-id="bbee3-296">Только <xref:System.Messaging.Message.Body%2A> содержимого свойства сериализуются и зашифрованы.</span><span class="sxs-lookup"><span data-stu-id="bbee3-296">Only the <xref:System.Messaging.Message.Body%2A> property contents are serialized or encrypted.</span></span>  
  
 <span data-ttu-id="bbee3-297"><xref:System.Messaging.Message.Body%2A> Свойство может содержать любой объект, размер которого не превышает 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="bbee3-297">The <xref:System.Messaging.Message.Body%2A> property can contain any object whose size does not exceed 4 MB.</span></span> <span data-ttu-id="bbee3-298">Если вы используете <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType> отправлять любой объект, который не относится к типу <xref:System.Messaging.Message> для <xref:System.Messaging.MessageQueue>, этот объект будет находиться в <xref:System.Messaging.Message.Body%2A> свойство <xref:System.Messaging.Message> экземпляр, возвращаемый <xref:System.Messaging.MessageQueue.Peek%2A> или <xref:System.Messaging.MessageQueue.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-298">If you use <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType> to send any object that is not of type <xref:System.Messaging.Message> to the <xref:System.Messaging.MessageQueue>, that object will be located in the <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> instance returned by <xref:System.Messaging.MessageQueue.Peek%2A> or <xref:System.Messaging.MessageQueue.Receive%2A>.</span></span>  
  
 <span data-ttu-id="bbee3-299">Строковый аргумент в `MessageQueue.Send("hello.")` является примером универсального объекта.</span><span class="sxs-lookup"><span data-stu-id="bbee3-299">The string argument in `MessageQueue.Send("hello.")` is an example of such a generic object.</span></span>  
  
 <span data-ttu-id="bbee3-300"><xref:System.Messaging.Message.BodyType%2A> Свойство указывает тип данных, которые хранятся в тексте сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-300">The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of information that is stored in the message body.</span></span> <span data-ttu-id="bbee3-301">Служба очереди сообщений использует эти сведения для определения типа <xref:System.Messaging.Message.Body%2A> содержимого свойства.</span><span class="sxs-lookup"><span data-stu-id="bbee3-301">Message Queuing uses this information to identify the type of the <xref:System.Messaging.Message.Body%2A> property contents.</span></span>  
  
 <span data-ttu-id="bbee3-302">Укажите либо <xref:System.Messaging.Message.Body%2A> свойство или <xref:System.Messaging.Message.BodyStream%2A> свойство перед отправкой <xref:System.Messaging.Message> объекта.</span><span class="sxs-lookup"><span data-stu-id="bbee3-302">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="bbee3-303"><xref:System.Messaging.Message.Body%2A> Свойство может быть любой сериализуемый объект, например строку текста, структура объекта, экземпляр класса или внедренный объект.</span><span class="sxs-lookup"><span data-stu-id="bbee3-303">The <xref:System.Messaging.Message.Body%2A> property can be any serializable object, such as a text string, structure object, class instance, or embedded object.</span></span>  
  
 <span data-ttu-id="bbee3-304">Если не записывается содержимое сообщения непосредственно в <xref:System.Messaging.Message.BodyStream%2A> задайте <xref:System.Messaging.Message.Formatter%2A> свойство перед отправкой сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-304">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="bbee3-305">Когда <xref:System.Messaging.MessageQueue.Send%2A> вызывается метод <xref:System.Messaging.MessageQueue> экземпляра, тексте сериализуется с помощью модуля форматирования, содержащиеся в <xref:System.Messaging.Message.Formatter%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-305">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="bbee3-306">Если отправить сообщение без указания значения для <xref:System.Messaging.Message.Formatter%2A> , модуль форматирования по умолчанию свойство <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-306">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bbee3-307">Попытка задать текст сообщения для <xref:System.Decimal.MaxValue> вызовет <xref:System.OverflowException> при `Send` метод <xref:System.Messaging.MessageQueue> класс называется и <xref:System.Messaging.ActiveXMessageFormatter> используется.</span><span class="sxs-lookup"><span data-stu-id="bbee3-307">Attempting to set the body of a message to <xref:System.Decimal.MaxValue> will cause a <xref:System.OverflowException> when the `Send` method of the <xref:System.Messaging.MessageQueue> class is called and the <xref:System.Messaging.ActiveXMessageFormatter> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-308">В следующем примере кода два сообщения с различными приоритетами отправляются в очередь и последовательно извлекаются.</span><span class="sxs-lookup"><span data-stu-id="bbee3-308">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-309">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-309">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bbee3-310">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-310">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.BodyStream" />
        <altmember cref="P:System.Messaging.Message.BodyType" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="BodyStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BodyStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BodyStream" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.BodyStream" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BodyStream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BodyStream : System.IO.Stream with get, set" Usage="System.Messaging.Message.BodyStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgBodyStream")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-311">Gets or sets the information in the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-311">Gets or sets the information in the body of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-312">Объект <see cref="T:System.IO.Stream" /> , содержащий сериализованные сведения, включенные в <see cref="P:System.Messaging.Message.Body" /> сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-312">A <see cref="T:System.IO.Stream" /> that contains the serialized information included in the <see cref="P:System.Messaging.Message.Body" /> of the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-313">Тело сообщения может состоять из любой тип данных — например, строка, дату, денежная единица, число, массив байтов или любого управляемого объекта.</span><span class="sxs-lookup"><span data-stu-id="bbee3-313">The body of a message can consist of any type of information—for example, a string, a date, a currency, a number, an array of bytes, or any managed object.</span></span> <span data-ttu-id="bbee3-314">Эти сведения, сериализуется в <xref:System.IO.Stream> передается в очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-314">This information is serialized into a <xref:System.IO.Stream> to be passed to the queue.</span></span>  
  
 <span data-ttu-id="bbee3-315">Укажите либо <xref:System.Messaging.Message.Body%2A> свойство или <xref:System.Messaging.Message.BodyStream%2A> свойство перед отправкой <xref:System.Messaging.Message> объекта.</span><span class="sxs-lookup"><span data-stu-id="bbee3-315">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="bbee3-316">Если задать <xref:System.Messaging.Message.Body%2A> свойства, содержимое сериализуются в <xref:System.Messaging.Message.BodyStream%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-316">If you set the <xref:System.Messaging.Message.Body%2A> property, the contents are serialized into the <xref:System.Messaging.Message.BodyStream%2A> property.</span></span> <span data-ttu-id="bbee3-317">Тем не менее, вы можете написать <xref:System.Messaging.Message.BodyStream%2A> свойство напрямую.</span><span class="sxs-lookup"><span data-stu-id="bbee3-317">However, you can choose to write the <xref:System.Messaging.Message.BodyStream%2A> property directly.</span></span> <span data-ttu-id="bbee3-318">Это полезно, например, если вы хотите открыть подключение к файлу и передать его содержимое в теле сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-318">This is useful, for example, when you want to open a connection to a file and stream its contents as the body of your message.</span></span>  
  
 <span data-ttu-id="bbee3-319">Если не записывается содержимое сообщения непосредственно в <xref:System.Messaging.Message.BodyStream%2A> задайте <xref:System.Messaging.Message.Formatter%2A> свойство перед отправкой сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-319">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="bbee3-320">Когда <xref:System.Messaging.MessageQueue.Send%2A> вызывается метод <xref:System.Messaging.MessageQueue> экземпляра, тексте сериализуется с помощью модуля форматирования, содержащиеся в <xref:System.Messaging.Message.Formatter%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-320">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="bbee3-321">Если отправить сообщение без указания значения для <xref:System.Messaging.Message.Formatter%2A> , модуль форматирования по умолчанию свойство <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-321">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="bbee3-322">Если задать <xref:System.Messaging.Message.UseEncryption%2A> свойства `true` для тела этого сообщения, сообщения шифруются при передаче, не устанавливая <xref:System.Messaging.Message.Body%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-322">If you set the <xref:System.Messaging.Message.UseEncryption%2A> property to `true` for the body of this message, the message will be encrypted when it is sent, not when you set the <xref:System.Messaging.Message.Body%2A> property.</span></span> <span data-ttu-id="bbee3-323">Таким образом <xref:System.Messaging.Message.BodyStream%2A> свойство никогда не шифруются.</span><span class="sxs-lookup"><span data-stu-id="bbee3-323">Therefore, the <xref:System.Messaging.Message.BodyStream%2A> property is never encrypted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-324">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-324">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="P:System.Messaging.Message.BodyType" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="BodyType">
      <MemberSignature Language="C#" Value="public int BodyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BodyType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.BodyType" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BodyType { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BodyType : int with get, set" Usage="System.Messaging.Message.BodyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgBodyType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-325">Gets or sets the type of data that the message body contains.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-325">Gets or sets the type of data that the message body contains.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-326">Тело сообщения значение true, тип, такой как строка, дата, денежная единица или число.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-326">The message body's true type, such as a string, a date, a currency, or a number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-327">Служба Message Queuing распознает содержимое тела как объект или как сериализованный поток.</span><span class="sxs-lookup"><span data-stu-id="bbee3-327">Message Queuing recognizes the body contents as an object or as a serialized stream.</span></span> <span data-ttu-id="bbee3-328"><xref:System.Messaging.Message.BodyType%2A> Указывает тип объекта в <xref:System.Messaging.Message.Body%2A> свойства сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-328">The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of the object within the <xref:System.Messaging.Message.Body%2A> property of the message.</span></span>  
  
 <span data-ttu-id="bbee3-329"><xref:System.Messaging.XmlMessageFormatter> Выполняет привязку собственных типов и объект в теле сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-329">The <xref:System.Messaging.XmlMessageFormatter> performs binding between native types and the object in a message body.</span></span> <span data-ttu-id="bbee3-330">Если вы используете <xref:System.Messaging.XmlMessageFormatter>, задает модуль форматирования <xref:System.Messaging.Message.BodyType%2A> свойство для вас.</span><span class="sxs-lookup"><span data-stu-id="bbee3-330">If you use the <xref:System.Messaging.XmlMessageFormatter>, the formatter sets the <xref:System.Messaging.Message.BodyType%2A> property for you.</span></span>  
  
 <span data-ttu-id="bbee3-331">Другие модули форматирования также, как показано в следующем коде C# включают возможности привязки.</span><span class="sxs-lookup"><span data-stu-id="bbee3-331">Other formatters can provide binding functionality also, as shown in the following C# code.</span></span>  
  
```  
message.Formatter = new ActiveXMessageFormatter();  
object myObject message.Body;  
if (myObject is string) {  
}  
if (myObject is int) {  
}  
if (myObject is float) {  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-332">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.BodyType%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-332">The following code example displays the value of a message's <xref:System.Messaging.Message.BodyType%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-333">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-333">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="P:System.Messaging.Message.BodyStream" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConnectorType">
      <MemberSignature Language="C#" Value="public Guid ConnectorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ConnectorType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ConnectorType" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectorType As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ConnectorType { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectorType : Guid with get, set" Usage="System.Messaging.Message.ConnectorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgConnectorType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-334">Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-334">Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-335">Объект <see cref="T:System.Guid" /> определяется приложением и используется совместно связующими приложениями или шифрованием сообщений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-335">A <see cref="T:System.Guid" /> defined by the application and used in conjunction with connector applications or message encryption.</span>
          </span>
          <span data-ttu-id="bbee3-336">Это <see cref="T:System.Guid" /> позволяет принимающему приложению интерпретировать установленные передающим приложением свойства, которые обычно задаются службой Message Queuing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-336">This <see cref="T:System.Guid" /> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-337">Служба очереди сообщений требуется <xref:System.Messaging.Message.ConnectorType%2A> установлено всякий раз, когда приложение задает свойство сообщения, обычно устанавливаемые службой очереди сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-337">Message Queuing requires the <xref:System.Messaging.Message.ConnectorType%2A> property be set whenever an application sets a message property that is usually set by Message Queuing.</span></span> <span data-ttu-id="bbee3-338">Обычно приложения используют <xref:System.Messaging.Message.ConnectorType%2A> в следующих двух случаях:</span><span class="sxs-lookup"><span data-stu-id="bbee3-338">An application typically uses a <xref:System.Messaging.Message.ConnectorType%2A> in the following two cases:</span></span>  
  
-   <span data-ttu-id="bbee3-339">Когда приложение-подключатель пересылает сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-339">Whenever a connector application passes a message.</span></span> <span data-ttu-id="bbee3-340"><xref:System.Messaging.Message.ConnectorType%2A> Отправляющее и принимающее приложения о том, как интерпретировать свойства безопасности и подтверждения сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-340">The <xref:System.Messaging.Message.ConnectorType%2A> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message.</span></span>  
  
-   <span data-ttu-id="bbee3-341">Каждый раз, когда отправляющего приложения, а не Message Queuing, шифрует сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-341">Whenever the sending application, rather than Message Queuing, encrypts a message.</span></span> <span data-ttu-id="bbee3-342"><xref:System.Messaging.Message.ConnectorType%2A> Сообщает очереди сообщений для использования <xref:System.Messaging.Message.DestinationSymmetricKey%2A> значение свойства для дешифрования сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-342">The <xref:System.Messaging.Message.ConnectorType%2A> tells Message Queuing to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property value to decrypt the message.</span></span>  
  
 <span data-ttu-id="bbee3-343">Необходимо задать <xref:System.Messaging.Message.ConnectorType%2A> свойства, если задается любое из следующих свойств (в противном случае очередь не обрабатывает эти свойства при отправке сообщения):</span><span class="sxs-lookup"><span data-stu-id="bbee3-343">You must set the <xref:System.Messaging.Message.ConnectorType%2A> property if you set any of the following properties (otherwise, the queue ignores these properties when the message is sent):</span></span>  
  
-   <xref:System.Messaging.Message.AuthenticationProviderName%2A>  
  
-   <xref:System.Messaging.Message.AuthenticationProviderType%2A>  
  
-   <xref:System.Messaging.Message.DestinationSymmetricKey%2A>  
  
-   <xref:System.Messaging.Message.DigitalSignature%2A>  
  
-   <xref:System.Messaging.Message.MessageType%2A>  
  
-   <xref:System.Messaging.Message.SenderId%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-344">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ConnectorType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-344">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ConnectorType" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.DestinationSymmetricKey" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.Message.MessageType" />
        <altmember cref="P:System.Messaging.Message.SenderId" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationId">
      <MemberSignature Language="C#" Value="public string CorrelationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CorrelationId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.CorrelationId" />
      <MemberSignature Language="VB.NET" Value="Public Property CorrelationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CorrelationId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationId : string with get, set" Usage="System.Messaging.Message.CorrelationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgCorrelationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-345">Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-345">Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-346">Идентификатор сообщения, задается <see cref="P:System.Messaging.Message.Id" /> свойства исходного сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-346">The message identifier specified by the <see cref="P:System.Messaging.Message.Id" /> property of the original message.</span>
          </span>
          <span data-ttu-id="bbee3-347">Идентификатор корреляции используется службой Message Queuing при создании подтверждающих сообщений и отчетов, а также приложением при создании ответного сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-347">The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-348">Когда Message Queuing создает сообщение подтверждение или отчет, он использует свойство идентификатора корреляции для указания идентификатора исходного сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-348">When Message Queuing generates an acknowledgment or report message, it uses the correlation identifier property to specify the message identifier of the original message.</span></span> <span data-ttu-id="bbee3-349">Таким образом, код корреляции связывает отчет или подтверждение с исходным сообщением.</span><span class="sxs-lookup"><span data-stu-id="bbee3-349">In this manner, the correlation identifier ties the report or acknowledgment message to the original message.</span></span>  
  
 <span data-ttu-id="bbee3-350">Передающее приложение может согласовать подтверждение или отчет с исходным сообщением с помощью <xref:System.Messaging.Message.CorrelationId%2A> свойство для идентификации исходного сообщения <xref:System.Messaging.Message.Id%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-350">The sending application can then match the acknowledgment or report with the original message by using the <xref:System.Messaging.Message.CorrelationId%2A> property to identify the original message's <xref:System.Messaging.Message.Id%2A> property.</span></span>  
  
 <span data-ttu-id="bbee3-351">Соединитель приложения также должны устанавливать <xref:System.Messaging.Message.CorrelationId%2A> свойства сообщений подтверждения и отчетов для идентификатора исходного сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-351">Connector applications also must set the <xref:System.Messaging.Message.CorrelationId%2A> property of the acknowledgment and report messages to the message identifier of the original message.</span></span>  
  
 <span data-ttu-id="bbee3-352">Если приложение отправляет ответное сообщение для отправляющего приложения, вы можете задать <xref:System.Messaging.Message.CorrelationId%2A> свойства сообщения ответа на сообщение идентификатор исходного сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-352">When your application sends a response message to the sending application, you can set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the message identifier of the original message.</span></span> <span data-ttu-id="bbee3-353">Отправляющее приложение может сопоставить сообщение, которое было отправлено ответное сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-353">The sending application can then match your response message to the message that was sent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-354">В следующем примере кода отправляет и получает сообщение, содержащее заказ в и из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-354">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="bbee3-355">Он специально запрашивает положительного подтверждения в случае, когда исходное сообщение достигает или извлечено из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-355">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-356">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.CorrelationId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-356">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.CorrelationId" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bbee3-357">The <see cref="P:System.Messaging.Message.CorrelationId" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-357">The <see cref="P:System.Messaging.Message.CorrelationId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DestinationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue DestinationQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue DestinationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DestinationQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DestinationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ DestinationQueue { System::Messaging::MessageQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DestinationQueue : System.Messaging.MessageQueue" Usage="System.Messaging.Message.DestinationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgDestinationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-358">Gets the intended destination queue for a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-358">Gets the intended destination queue for a message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-359">Объект <see cref="T:System.Messaging.MessageQueue" /> , указывающий в очередь пункта назначения для сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-359">A <see cref="T:System.Messaging.MessageQueue" /> that specifies the intended destination queue for the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-360"><xref:System.Messaging.Message.DestinationQueue%2A> Свойство наиболее часто используется для определения первоначального места назначения сообщения, поступившего в журнал или транзакционных сообщений в очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-360">The <xref:System.Messaging.Message.DestinationQueue%2A> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue.</span></span> <span data-ttu-id="bbee3-361">Как правило не подлежащие изучению это свойство, поскольку обычно получения сообщения из очереди назначения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-361">Usually, you do not need to examine this property, because you typically retrieve the message from its destination queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-362">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.DestinationQueue%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-362">The following code example displays the value of a message's <xref:System.Messaging.Message.DestinationQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-363">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-363">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-364">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-364">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-365">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-365">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="DestinationSymmetricKey">
      <MemberSignature Language="C#" Value="public byte[] DestinationSymmetricKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DestinationSymmetricKey" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DestinationSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationSymmetricKey As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DestinationSymmetricKey { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationSymmetricKey : byte[] with get, set" Usage="System.Messaging.Message.DestinationSymmetricKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgDestinationSymmetricKey")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-366">Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-366">Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-367">Массив байтовых значений, задающий целевой симметричный ключ, используемый для шифрования сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-367">An array of byte values that specifies the destination symmetric key used to encrypt the message.</span>
          </span>
          <span data-ttu-id="bbee3-368">Значение по умолчанию является массивом нулевой длины.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-368">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-369">Два сценария требуется использование <xref:System.Messaging.Message.DestinationSymmetricKey%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-369">Two scenarios require you to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property.</span></span> <span data-ttu-id="bbee3-370">Первый — когда приложения, а не Message Queuing, шифрует сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-370">The first is when your application, rather than Message Queuing, encrypts a message.</span></span> <span data-ttu-id="bbee3-371">Второй — при отправке зашифрованного сообщения в очереди системы, отличной от очереди сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-371">The second is when you send an encrypted message to a queuing system other than Message Queuing.</span></span>  
  
 <span data-ttu-id="bbee3-372">Прежде чем это свойство задано, необходимо шифровать симметричный ключ с помощью открытого ключа диспетчера принимающей очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-372">Before you set this property, you must encrypt the symmetric key with the public key of the receiving queue manager.</span></span> <span data-ttu-id="bbee3-373">При отправке сообщений, шифруемых приложением, диспетчер принимающей очереди использует симметричный ключ для дешифрования сообщения перед их отправкой в очередь назначения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-373">When you send an application-encrypted message, the receiving queue manager uses the symmetric key to decrypt the message before sending it to its destination queue.</span></span>  
  
 <span data-ttu-id="bbee3-374">При отправке сообщения в очередь службы внешнего приложения соответствующий соединитель, который пересылает зашифрованное сообщение с присоединенным симметричным ключом в принимающее приложение сначала получает сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-374">If you send a message to a foreign queue, the message is first received by the appropriate connector application, which forwards the encrypted message with the attached symmetric key to the receiving application.</span></span> <span data-ttu-id="bbee3-375">Затем это ответственность за принимающее приложение для расшифровки сообщения с помощью симметричного ключа.</span><span class="sxs-lookup"><span data-stu-id="bbee3-375">It is then the responsibility of the receiving application to decrypt the message using the symmetric key.</span></span>  
  
 <span data-ttu-id="bbee3-376">При задании <xref:System.Messaging.Message.DestinationSymmetricKey%2A> свойство, необходимо также задать <xref:System.Messaging.Message.ConnectorType%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="bbee3-376">When you set the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property.</span></span> <span data-ttu-id="bbee3-377">При отправке сообщения Message Queuing не обрабатывает <xref:System.Messaging.Message.DestinationSymmetricKey%2A> свойство Если <xref:System.Messaging.Message.ConnectorType%2A> не задается.</span><span class="sxs-lookup"><span data-stu-id="bbee3-377">When the message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.</span></span>  
  
 <span data-ttu-id="bbee3-378"><xref:System.Messaging.Message.DestinationSymmetricKey%2A> Свойство имеет максимальный размер массива 256.</span><span class="sxs-lookup"><span data-stu-id="bbee3-378">The <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property has a maximum array size of 256.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-379">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-379">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bbee3-380">The <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-380">The <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="DigitalSignature">
      <MemberSignature Language="C#" Value="public byte[] DigitalSignature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DigitalSignature" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DigitalSignature" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitalSignature As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DigitalSignature { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DigitalSignature : byte[] with get, set" Usage="System.Messaging.Message.DigitalSignature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgDigitalSignature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-381">Gets or sets the digital signature that Message Queuing uses to authenticate the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-381">Gets or sets the digital signature that Message Queuing uses to authenticate the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-382">Массив байтовых значений, указывающее цифровую подпись очереди сообщений 1.0, используемую для проверки подлинности сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-382">An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message.</span>
          </span>
          <span data-ttu-id="bbee3-383">Значение по умолчанию является массивом нулевой длины.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-383">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-384">Очередь сообщений использует цифровой подписи при проверке подлинности сообщений, отправленных службой Message Queuing версии 1.0.</span><span class="sxs-lookup"><span data-stu-id="bbee3-384">Message Queuing uses the digital signature when authenticating messages that were sent by Message Queuing version 1.0.</span></span> <span data-ttu-id="bbee3-385">В большинстве случаев Message Queuing создает и задает <xref:System.Messaging.Message.DigitalSignature%2A> свойства, если передающее приложение запрашивает проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="bbee3-385">In most cases, Message Queuing generates and sets the <xref:System.Messaging.Message.DigitalSignature%2A> property when the sending application requests authentication.</span></span> <span data-ttu-id="bbee3-386">Принимающее приложение использует это свойство для извлечения цифровой подписи, вложенной в сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-386">The receiving application uses this property to retrieve the digital signature attached to the message.</span></span>  
  
 <span data-ttu-id="bbee3-387">Можно использовать только <xref:System.Messaging.Message.DigitalSignature%2A> свойство для очереди сообщений версии 2.0.</span><span class="sxs-lookup"><span data-stu-id="bbee3-387">You can only use the <xref:System.Messaging.Message.DigitalSignature%2A> property when running Message Queuing version 2.0.</span></span> <span data-ttu-id="bbee3-388">Отправляющее приложение необходимо указать подписи Message Queuing версии 1.0, при запросе проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="bbee3-388">The sending application must specify Message Queuing version 1.0 signatures when requesting authentication.</span></span> <span data-ttu-id="bbee3-389">Если отправляющее приложение отправляет подпись очереди сообщений версии 2.0, это свойство содержит буфер четыре байта каждого содержащего ноль.</span><span class="sxs-lookup"><span data-stu-id="bbee3-389">If the sending application sends a Message Queuing version 2.0 signature, this property contains a buffer of four bytes, each containing zero.</span></span>  
  
 <span data-ttu-id="bbee3-390"><xref:System.Messaging.Message.DigitalSignature%2A> Свойства, вместе с <xref:System.Messaging.Message.SenderCertificate%2A> свойство, также используется соединитель приложений при отправке сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-390">The <xref:System.Messaging.Message.DigitalSignature%2A> property, together with the <xref:System.Messaging.Message.SenderCertificate%2A> property, is also used by connector applications when a message is sent.</span></span> <span data-ttu-id="bbee3-391">В этом случае приложение-подключатель — вместо того чтобы очереди сообщений — цифровая подпись, основана она на сертификат пользователя, отправившего сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-391">In this scenario, the connector application—rather than Message Queuing—generates the digital signature, which it bases on the certificate of the user sending the message.</span></span>  
  
 <span data-ttu-id="bbee3-392"><xref:System.Messaging.Message.DigitalSignature%2A> Свойство имеет максимальный размер массива 256.</span><span class="sxs-lookup"><span data-stu-id="bbee3-392">The <xref:System.Messaging.Message.DigitalSignature%2A> property has a maximum array size of 256.</span></span>  
  
 <span data-ttu-id="bbee3-393">При задании <xref:System.Messaging.Message.DigitalSignature%2A> свойство, необходимо также задать <xref:System.Messaging.Message.ConnectorType%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="bbee3-393">When you set the <xref:System.Messaging.Message.DigitalSignature%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property.</span></span> <span data-ttu-id="bbee3-394">При отправке сообщения Message Queuing не обрабатывает <xref:System.Messaging.Message.DigitalSignature%2A> свойство Если <xref:System.Messaging.Message.ConnectorType%2A> не задается.</span><span class="sxs-lookup"><span data-stu-id="bbee3-394">When a message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DigitalSignature%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-395">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DigitalSignature" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-395">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DigitalSignature" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bbee3-396">The <see cref="P:System.Messaging.Message.DigitalSignature" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-396">The <see cref="P:System.Messaging.Message.DigitalSignature" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.SenderCertificate" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionAlgorithm EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.EncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionAlgorithm As EncryptionAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionAlgorithm EncryptionAlgorithm { System::Messaging::EncryptionAlgorithm get(); void set(System::Messaging::EncryptionAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionAlgorithm : System.Messaging.EncryptionAlgorithm with get, set" Usage="System.Messaging.Message.EncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-397">Gets or sets the encryption algorithm used to encrypt the body of a private message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-397">Gets or sets the encryption algorithm used to encrypt the body of a private message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-398">Одно из значений перечисления <see cref="T:System.Messaging.EncryptionAlgorithm" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-398">One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values.</span>
          </span>
          <span data-ttu-id="bbee3-399">Значение по умолчанию — <see langword="RC2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-399">The default is <see langword="RC2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-400">Если сообщение является закрытым (зашифрованный), оно шифруется перед отправкой и расшифровывается при получении.</span><span class="sxs-lookup"><span data-stu-id="bbee3-400">If a message is private (encrypted), it is encrypted before it is sent and decrypted upon receipt.</span></span> <span data-ttu-id="bbee3-401"><xref:System.Messaging.Message.EncryptionAlgorithm%2A> Свойство задает алгоритм, используемый для шифрования тела конфиденциального сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-401">The <xref:System.Messaging.Message.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message.</span></span>  
  
 <span data-ttu-id="bbee3-402">Очередь может потребовать, чтобы входящие сообщения шифроваться.</span><span class="sxs-lookup"><span data-stu-id="bbee3-402">A queue can require that incoming messages be encrypted.</span></span> <span data-ttu-id="bbee3-403">Если приложение отправляет сообщение без шифрования (отличным от private) в очередь, принимающую только конфиденциальные сообщения или если она отправляет конфиденциальное сообщение в очередь, принимает только неконфиденциальные сообщения, сообщение будет отклонено очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-403">If an application sends a non-encrypted (non-private) message to a queue that accepts only private messages, or if it sends a private message to a queue that accepts only non-private messages, the queue rejects the message.</span></span> <span data-ttu-id="bbee3-404">Передающее приложение может запросить возврат в таком случае сообщение отрицательного подтверждения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-404">The sending application can request that a negative acknowledgment message be returned in such a case.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-405">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-405">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="T:System.Messaging.EncryptionRequired" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Extension : byte[] with get, set" Usage="System.Messaging.Message.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgExtension")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-406">Gets or sets additional, application-defined information associated with the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-406">Gets or sets additional, application-defined information associated with the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-407">Массив байтовых значений, предоставляющий определяемые приложением сведения, связанные с данным сообщением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-407">An array of byte values that provides application-defined information associated with the message.</span>
          </span>
          <span data-ttu-id="bbee3-408">Значение по умолчанию является массивом нулевой длины.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-408">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-409"><xref:System.Messaging.Message.Extension%2A> Свойство предоставляет дополнительные сведения, определяемые приложением, например большой двоичный объект, который связан с сообщением.</span><span class="sxs-lookup"><span data-stu-id="bbee3-409">The <xref:System.Messaging.Message.Extension%2A> property provides for application-defined information, like a large binary object, that is associated with the message.</span></span> <span data-ttu-id="bbee3-410">Он отвечает за принимающему приложению интерпретировать содержимое <xref:System.Messaging.Message.Extension%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-410">It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 <span data-ttu-id="bbee3-411">Если это возможно, следует включать данные сообщения в <xref:System.Messaging.Message.Body%2A> свойство сообщения, а не <xref:System.Messaging.Message.Extension%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-411">Where possible, you should include message data in the <xref:System.Messaging.Message.Body%2A> property of the message rather than the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 <span data-ttu-id="bbee3-412">При работе с внешними очередями используйте <xref:System.Messaging.Message.Extension%2A> свойство, чтобы указать свойства сообщения, которые не существуют в очереди сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-412">When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.</span></span>  
  
 <span data-ttu-id="bbee3-413">Внешний очередь существует в очереди системы, отличной от Microsoft Message Queuing.</span><span class="sxs-lookup"><span data-stu-id="bbee3-413">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="bbee3-414">Служба очереди сообщений взаимодействует с другими очередями через приложение-подключатель.</span><span class="sxs-lookup"><span data-stu-id="bbee3-414">Message Queuing communicates with such queues through a connector application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-415">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Extension" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-415">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Extension" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bbee3-416">The <see cref="P:System.Messaging.Message.Extension" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-416">The <see cref="P:System.Messaging.Message.Extension" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Body" />
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public System.Messaging.IMessageFormatter Formatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.IMessageFormatter Formatter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatter As IMessageFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::IMessageFormatter ^ Formatter { System::Messaging::IMessageFormatter ^ get(); void set(System::Messaging::IMessageFormatter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Formatter : System.Messaging.IMessageFormatter with get, set" Usage="System.Messaging.Message.Formatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.IMessageFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-417">Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-417">Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-418">
            <see cref="T:System.Messaging.IMessageFormatter" /> , Создающий поток для записи или чтения из тела сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-418">The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body.</span>
          </span>
          <span data-ttu-id="bbee3-419">Значение по умолчанию — <see cref="T:System.Messaging.XmlMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-419">The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-420">Используйте <xref:System.Messaging.Message.Formatter%2A> свойство при чтении и записи сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-420">Use the <xref:System.Messaging.Message.Formatter%2A> property when reading and writing a message.</span></span> <span data-ttu-id="bbee3-421">Когда сообщение отправляется в очередь, модуль форматирования сериализует <xref:System.Messaging.Message.Body%2A> свойство в поток, который можно отправить в очередь сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-421">When a message is sent to the queue, the formatter serializes the <xref:System.Messaging.Message.Body%2A> property into a stream that can be sent to the message queue.</span></span> <span data-ttu-id="bbee3-422">При чтении из очереди, модуль форматирования десериализует данные из <xref:System.Messaging.Message.Body%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-422">When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property.</span></span>  
  
 <span data-ttu-id="bbee3-423">Если не записывается содержимое сообщения непосредственно в <xref:System.Messaging.Message.BodyStream%2A> задайте <xref:System.Messaging.Message.Formatter%2A> свойство перед отправкой сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-423">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="bbee3-424">Когда <xref:System.Messaging.MessageQueue.Send%2A> вызывается метод <xref:System.Messaging.MessageQueue> экземпляра, тексте сериализуется с помощью модуля форматирования, содержащиеся в <xref:System.Messaging.Message.Formatter%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-424">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="bbee3-425">Если отправить сообщение без указания значения для <xref:System.Messaging.Message.Formatter%2A> , модуль форматирования по умолчанию свойство <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-425">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="bbee3-426"><xref:System.Messaging.XmlMessageFormatter> Слабо связанный, поэтому нет необходимости в тот же объект введите на отправителя и получателя, при использовании этого формата.</span><span class="sxs-lookup"><span data-stu-id="bbee3-426">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="bbee3-427"><xref:System.Messaging.ActiveXMessageFormatter> И <xref:System.Messaging.BinaryMessageFormatter> сериализовать данные в двоичное представление.</span><span class="sxs-lookup"><span data-stu-id="bbee3-427">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="bbee3-428"><xref:System.Messaging.ActiveXMessageFormatter> Используется при отправке или получении COM-компонентов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-428">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-429">В следующем примере кода демонстрируется форматирование тела сообщения с помощью <xref:System.Messaging.BinaryMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-429">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="bbee3-430">В следующем примере кода демонстрируется форматирование тела сообщения с помощью <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-430">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bbee3-431">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-431">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.HashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::HashAlgorithm HashAlgorithm { System::Messaging::HashAlgorithm get(); void set(System::Messaging::HashAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Messaging.HashAlgorithm with get, set" Usage="System.Messaging.Message.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgHashAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-432">Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-432">Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-433">Одно из значений перечисления <see cref="T:System.Messaging.HashAlgorithm" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-433">One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values.</span>
          </span>
          <span data-ttu-id="bbee3-434">Для Windows XP, по умолчанию используется <see langword="SHA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-434">For Windows XP, the default is <see langword="SHA" />.</span>
          </span>
          <span data-ttu-id="bbee3-435">В противном случае значением по умолчанию будет <see langword="MD5" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-435">Otherwise, the default is <see langword="MD5" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-436">На исходном компьютере Message Queuing использует алгоритм хэширования, при создании цифровой подписи для сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-436">On the source computer, Message Queuing uses the hashing algorithm when creating a digital signature for a message.</span></span> <span data-ttu-id="bbee3-437">Целевой диспетчер очереди затем использует один и тот же алгоритм хэширования для проверки подлинности сообщения при его получении.</span><span class="sxs-lookup"><span data-stu-id="bbee3-437">The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-438">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.HashAlgorithm" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-438">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.HashAlgorithm" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Messaging.Message.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-439">Gets the message's identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-439">Gets the message's identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-440">Уникальный идентификатор сообщения, который создается службой Message Queuing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-440">The message's unique identifier, which is generated by Message Queuing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-441">Служба Message Queuing создает идентификатор сообщения при отправке сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-441">Message Queuing generates a message identifier when the message is sent.</span></span> <span data-ttu-id="bbee3-442">Идентификатор состоит из 20 байт и двух элементов: компьютер <xref:System.Guid> передающего компьютера и уникальный идентификатор для сообщения на этом компьютере.</span><span class="sxs-lookup"><span data-stu-id="bbee3-442">The identifier is composed of 20 bytes and includes two items: the machine <xref:System.Guid> of the sending computer and a unique identifier for the message on the computer.</span></span> <span data-ttu-id="bbee3-443">Объединение двух этих элементов создает идентификатор сообщения, уникальный в данной сети.</span><span class="sxs-lookup"><span data-stu-id="bbee3-443">The combination of the two items produces a message identifier that is unique on the network.</span></span>  
  
 <span data-ttu-id="bbee3-444">Служба Message Queuing создает идентификаторы для всех сообщений, включая подтверждения и сообщения-отчеты.</span><span class="sxs-lookup"><span data-stu-id="bbee3-444">Message Queuing generates message identifiers for all messages—including acknowledgment and report messages.</span></span> <span data-ttu-id="bbee3-445">Подтверждающее сообщение обычно передается службой Message Queuing в ответ на доставку или сбой исходного, отправленного сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-445">An acknowledgment message is generally sent by Message Queuing in reaction to the arrival or failure of an original, sent message.</span></span> <span data-ttu-id="bbee3-446">Можно найти <xref:System.Messaging.Message.Id%2A> значение свойства исходного сообщения в <xref:System.Messaging.Message.CorrelationId%2A> свойство подтверждающего сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-446">You can find the <xref:System.Messaging.Message.Id%2A> property value of the original message in the <xref:System.Messaging.Message.CorrelationId%2A> property of an acknowledgment message.</span></span>  
  
 <span data-ttu-id="bbee3-447">Можно также использовать <xref:System.Messaging.Message.Id%2A> при отправке ответного сообщения в очередь ответов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-447">You can also use the <xref:System.Messaging.Message.Id%2A> property when sending a response message to a response queue.</span></span> <span data-ttu-id="bbee3-448">Чтобы включить идентификатор исходного сообщения в ответном сообщении, присвойте <xref:System.Messaging.Message.CorrelationId%2A> свойство сообщение-ответ <xref:System.Messaging.Message.Id%2A> свойства исходного сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-448">To include the identifier of the original message in a response message, set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the <xref:System.Messaging.Message.Id%2A> property of the original message.</span></span> <span data-ttu-id="bbee3-449">Чтение ответного сообщения приложение затем можно использовать идентификатор корреляции из сообщения-ответа для идентификации исходного сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-449">The application reading the response message can then use the correlation identifier of the response message to identify the original message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-450">В следующем примере кода отправляет и получает сообщение, содержащее к и из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-450">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="bbee3-451">Он специально запрашивает положительного подтверждения в случае, когда исходное сообщение достигает или извлечено из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-451">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-452">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-452">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-453">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-453">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-454">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Id" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-454">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Id" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.Message.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteTimeout : TimeSpan" Usage="System.Messaging.Message.InfiniteTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-455">Specifies that no time-out exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-455">Specifies that no time-out exists.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-456"><xref:System.Messaging.Message.TimeToBeReceived%2A> и <xref:System.Messaging.Message.TimeToReachQueue%2A> требуется значение, указывающее время ожидания. Первом случае время ожидания — это максимальное время, отводимое сообщение должно быть получено из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-456"><xref:System.Messaging.Message.TimeToBeReceived%2A> and <xref:System.Messaging.Message.TimeToReachQueue%2A> require a value that specifies a time-out. For the former, the time-out is the maximum time allowed for a message to be received from the queue.</span></span> <span data-ttu-id="bbee3-457">Для второго время ожидания представляет время, отводимое сообщение должно достичь очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-457">For the latter, the time-out is the time allowed for a message to reach the queue.</span></span> <span data-ttu-id="bbee3-458">В обоих случаях можно указать время ожидания как количество секунд или использовать <xref:System.Messaging.Message.InfiniteTimeout> для указания, что отсутствие тайм-аута.</span><span class="sxs-lookup"><span data-stu-id="bbee3-458">In both cases, you can specify the time-out as a number of seconds or use <xref:System.Messaging.Message.InfiniteTimeout> to indicate that no time-out exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-459">В следующем примере кода демонстрируется использование <xref:System.Messaging.Message.InfiniteTimeout> поля.</span><span class="sxs-lookup"><span data-stu-id="bbee3-459">The following code example demonstrates the use of the <xref:System.Messaging.Message.InfiniteTimeout> field.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstInTransaction">
      <MemberSignature Language="C#" Value="public bool IsFirstInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.IsFirstInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstInTransaction : bool" Usage="System.Messaging.Message.IsFirstInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgIsFirstInTransaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-460">Gets a value that indicates whether the message was the first message sent in a transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-460">Gets a value that indicates whether the message was the first message sent in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-461">
            <see langword="true" /> Если сообщение было первым сообщением, переданным в транзакции; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-461">
              <see langword="true" /> if the message was the first message sent in a transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-462">Принимающее приложение использует <xref:System.Messaging.Message.IsFirstInTransaction%2A> свойство, чтобы убедиться, что сообщение было первым сообщением в единой транзакции для одной очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-462">Receiving applications use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property to verify that a message was the first message sent in a single transaction to a single queue.</span></span>  
  
 <span data-ttu-id="bbee3-463">Это свойство доступно только в Message Queuing версии 2.0 и более поздних версий.</span><span class="sxs-lookup"><span data-stu-id="bbee3-463">This property is available only with Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="bbee3-464">Для проверки границ транзакции можно использовать <xref:System.Messaging.Message.IsFirstInTransaction%2A> свойство вместе с двумя другими свойствами: <xref:System.Messaging.Message.IsLastInTransaction%2A> и <xref:System.Messaging.Message.TransactionId%2A>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-464">To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsLastInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>.</span></span> <span data-ttu-id="bbee3-465">Использовать первый тип, для проверки, было ли сообщение отправлено последним в транзакции, а второе — для извлечения идентификатора транзакции.</span><span class="sxs-lookup"><span data-stu-id="bbee3-465">Use the former to check whether a message was the last message sent in the transaction, and use the latter to retrieve the identifier of the transaction.</span></span>  
  
 <span data-ttu-id="bbee3-466">Если только одно сообщение отправляется в виде транзакции, <xref:System.Messaging.Message.IsFirstInTransaction%2A> и <xref:System.Messaging.Message.IsLastInTransaction%2A> заданы оба свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="bbee3-466">If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-467">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.IsFirstInTransaction%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-467">The following code example displays the value of a message's <xref:System.Messaging.Message.IsFirstInTransaction%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-468">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-468">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-469">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-469">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-470">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-470">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="IsLastInTransaction">
      <MemberSignature Language="C#" Value="public bool IsLastInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLastInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.IsLastInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLastInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLastInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLastInTransaction : bool" Usage="System.Messaging.Message.IsLastInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgIsLastInTransaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-471">Gets a value that indicates whether the message was the last message sent in a transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-471">Gets a value that indicates whether the message was the last message sent in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-472">
            <see langword="true" /> Если сообщение было последним сообщением, переданным в транзакции; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-472">
              <see langword="true" /> if the message was the last message sent in a single transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-473">Принимающее приложение использует <xref:System.Messaging.Message.IsLastInTransaction%2A> свойство, чтобы убедиться, что сообщение было последним сообщением в единой транзакции для одной очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-473">Receiving applications use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property to verify that a message was the last message sent in a single transaction to a single queue.</span></span>  
  
 <span data-ttu-id="bbee3-474">Это свойство доступно только в Message Queuing версии 2.0 и более поздних версий.</span><span class="sxs-lookup"><span data-stu-id="bbee3-474">This property is available only with Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="bbee3-475">Для проверки границ транзакции можно использовать <xref:System.Messaging.Message.IsLastInTransaction%2A> свойство вместе с двумя другими свойствами: <xref:System.Messaging.Message.IsFirstInTransaction%2A> и <xref:System.Messaging.Message.TransactionId%2A>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-475">To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>.</span></span> <span data-ttu-id="bbee3-476">Использовать первый тип, для проверки, было ли сообщение отправлено первым в транзакции, а второе — для извлечения идентификатора транзакции.</span><span class="sxs-lookup"><span data-stu-id="bbee3-476">Use the former to check whether a message was the first message sent in the transaction, and use the latter to retrieve the identifier of the transaction.</span></span>  
  
 <span data-ttu-id="bbee3-477">Если только одно сообщение отправляется в виде транзакции, <xref:System.Messaging.Message.IsFirstInTransaction%2A> и <xref:System.Messaging.Message.IsLastInTransaction%2A> заданы оба свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="bbee3-477">If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-478">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.IsLastInTransaction%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-478">The following code example displays the value of a message's <xref:System.Messaging.Message.IsLastInTransaction%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-479">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-479">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-480">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-480">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-481">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-481">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.Message.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgLabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-482">Gets or sets an application-defined Unicode string that describes the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-482">Gets or sets an application-defined Unicode string that describes the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-483">Метка сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-483">The label of the message.</span>
          </span>
          <span data-ttu-id="bbee3-484">Значение по умолчанию — пустая строка ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-484">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-485">Метку сообщения можно использовать для решения ряда задач.</span><span class="sxs-lookup"><span data-stu-id="bbee3-485">You can use a message label for several purposes.</span></span> <span data-ttu-id="bbee3-486">Например, ее можно использовать для отображения или выборочной обработки сообщений на основе значений этой метки.</span><span class="sxs-lookup"><span data-stu-id="bbee3-486">For example, you can use it for display purposes or to selectively process messages based on the label value.</span></span> <span data-ttu-id="bbee3-487">Метка не обязательно быть уникальным для сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-487">The label does not need to be unique across messages.</span></span>  
  
 <span data-ttu-id="bbee3-488">Метки очередей сообщений и метки сообщений представляют определяемые приложением значения, которые могут помочь в идентификации очереди или сообщения в понятных для человека терминах.</span><span class="sxs-lookup"><span data-stu-id="bbee3-488">Message queue and message labels represent an application-defined value that can help identify the queue or message in human-readable terms.</span></span> <span data-ttu-id="bbee3-489">Он отвечает содержимое метки, которое не имеет внутреннего смысла для приложения Message Queuing, интерпретируется приложением.</span><span class="sxs-lookup"><span data-stu-id="bbee3-489">It is the responsibility of the application to interpret the label contents, which have no intrinsic meaning to the Message Queuing application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-490">В следующем примере кода возвращает и задает значение сообщения <xref:System.Messaging.Message.Label%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-490">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.Label%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-491">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Label" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-491">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Label" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="LookupId">
      <MemberSignature Language="C#" Value="public long LookupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LookupId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.LookupId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LookupId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LookupId { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LookupId : int64" Usage="System.Messaging.Message.LookupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-492">Introduced in MSMQ 3.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-492">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="bbee3-493">Gets the message's lookup identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-493">Gets the message's lookup identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-494">Код просмотра сообщения, который создается службой Message Queuing и является уникальным в очередь, где находится сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-494">The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-495"><xref:System.Messaging.Message.LookupId%2A> Свойство предоставляет доступ только для чтения к код просмотра сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-495">The <xref:System.Messaging.Message.LookupId%2A> property provides read-only access to a message's lookup identifier.</span></span> <span data-ttu-id="bbee3-496">Код просмотра, введенный в MSMQ 3.0 является 64-разрядный идентификатор, который создается службой Message Queuing и назначается каждому сообщению, когда сообщение помещается в очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-496">The lookup identifier, introduced in MSMQ 3.0, is a 64-bit identifier that is generated by Message Queuing and assigned to each message when the message is placed in the queue.</span></span> <span data-ttu-id="bbee3-497">Код просмотра не совпадает с идентификатором сообщения, который создается, когда сообщение отправляется.</span><span class="sxs-lookup"><span data-stu-id="bbee3-497">The lookup identifier is not the same as the message identifier that is generated when the message is sent.</span></span>  
  
 <span data-ttu-id="bbee3-498">Служба Message Queuing создает идентификатор просмотра для всех сообщений, помещаемых в очередь, включая назначения, генерируемые приложением, администрирования и очереди отчетов, а также системных журналов, недоставленных, соединитель и исходящих сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-498">Message Queuing generates a lookup identifier for all messages that are placed in any queue, including application-generated destination, administration, and report queues, as well as system-generated journal, dead-letter, connector, and outgoing queues.</span></span> <span data-ttu-id="bbee3-499">Другими словами такие как сообщения, отправляемые по приложениям, а также службой Message Queuing.</span><span class="sxs-lookup"><span data-stu-id="bbee3-499">In other words, this includes both messages sent by sending applications and by Message Queuing.</span></span> <span data-ttu-id="bbee3-500">Код просмотра является уникальным в очередь и не имеет смысла вне очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-500">The lookup identifier is unique to the queue and has no meaning outside the queue.</span></span>  
  
 <span data-ttu-id="bbee3-501">Если сообщение отправляется в несколько конечных очередей или копию сообщение хранится в журнале компьютера или очереди журнала, каждая копия сообщения будет иметь свой собственный код просмотра при ее размещении в соответствующую очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-501">If a message is sent to several destination queues, or if a copy of a message is stored in a computer journal or queue journal, each copy of the message will have its own lookup identifier when it is placed in its respective queue.</span></span>  
  
 <span data-ttu-id="bbee3-502"><xref:System.Messaging.Message.LookupId%2A> Свойство можно прочитать только для сообщений, извлеченных из очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-502">The <xref:System.Messaging.Message.LookupId%2A> property can only be read on messages retrieved from a queue.</span></span>  
  
 <span data-ttu-id="bbee3-503">Код просмотра используется для чтения конкретного сообщения в очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-503">A lookup identifier is used to read a specific message in the queue.</span></span> <span data-ttu-id="bbee3-504">После получения код поиска сообщения принимающее приложение может вызвать <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> или <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> функция перейти непосредственно на это сообщение и считываемое или получить его из очереди, в отличие от курсоров, которые должны запускаться в передней части очереди и Перейдите к концу очереди</span><span class="sxs-lookup"><span data-stu-id="bbee3-504">Once the lookup identifier of a message is known, the receiving application can call the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> or <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,</span></span>  
  
 <span data-ttu-id="bbee3-505">Получение кодов просмотра сообщений в очереди отвечает приложение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-505">Obtaining the lookup identifiers of the messages in the queue is the responsibility of the application.</span></span> <span data-ttu-id="bbee3-506">Один из возможных способов получения кодов просмотра является создание триггера для очереди назначения, который вызывает компонент, который кэширует идентификаторы каждое сообщение, так как они помещаются в очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-506">One possible way to obtain the lookup identifiers is to create a trigger for the destination queue that invokes a component that caches the identifiers of each message as they are placed in the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="bbee3-507">MSMQ 3.0 is not installed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-507">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-508">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-508">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-509">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-509">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-510">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.LookupId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-510">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.LookupId" /> property.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="MessageType">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageType MessageType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessageType MessageType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.MessageType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageType As MessageType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageType MessageType { System::Messaging::MessageType get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageType : System.Messaging.MessageType" Usage="System.Messaging.Message.MessageType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgMessageType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-511">Gets the message type: <see langword="Normal" />, <see langword="Acknowledgment" />, or <see langword="Report" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-511">Gets the message type: <see langword="Normal" />, <see langword="Acknowledgment" />, or <see langword="Report" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-512">Одно из значений перечисления <see cref="P:System.Messaging.Message.MessageType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-512">One of the <see cref="P:System.Messaging.Message.MessageType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-513">Служба очереди сообщений обычно устанавливает это свойство при передаче сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-513">Message Queuing typically sets this property when it sends the message.</span></span> <span data-ttu-id="bbee3-514">Сообщение Message Queuing может относиться к одному из следующих типов:</span><span class="sxs-lookup"><span data-stu-id="bbee3-514">A Message Queuing message can be one of the following types:</span></span>  
  
-   <span data-ttu-id="bbee3-515">`Normal`, который обычное сообщение отправляется из приложения в очередь или ответное сообщение, возвращаемое в передающее приложение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-515">`Normal`, which is either a typical message sent from an application to a queue, or a response message returned to the sending application.</span></span>  
  
-   <span data-ttu-id="bbee3-516">`Acknowledgement`, который создается службой Message Queuing передающего приложения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-516">`Acknowledgement`, which Message Queuing generates whenever the sending application requests one.</span></span> <span data-ttu-id="bbee3-517">Например, служба Message Queuing может создавать положительные или отрицательные сообщения для указания того, что исходное сообщение было доставлено или прочитано.</span><span class="sxs-lookup"><span data-stu-id="bbee3-517">For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read.</span></span> <span data-ttu-id="bbee3-518">Служба Message Queuing возвращает соответствующее подтверждающее сообщение в очередь администрирования, указанную передающим приложением.</span><span class="sxs-lookup"><span data-stu-id="bbee3-518">Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.</span></span>  
  
-   <span data-ttu-id="bbee3-519">`Report`, который создается службой Message Queuing в диспетчер очереди источника определен в очередь отчетов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-519">`Report`, which Message Queuing generates whenever a report queue is defined at the source Queue Manager.</span></span> <span data-ttu-id="bbee3-520">При разрешенной трассировке служба Message Queuing передает сообщение-отчет в очередь отчетов Message Queuing при каждом поступлении исходного сообщения на сервер Message Queuing или при отправке с этого сервера.</span><span class="sxs-lookup"><span data-stu-id="bbee3-520">When tracing is enabled, Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-521">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.MessageType%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-521">The following code example displays the value of a message's <xref:System.Messaging.Message.MessageType%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-522">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-522">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-523">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-523">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-524">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.MessageType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-524">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.MessageType" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageType" />
        <altmember cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessagePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MessagePriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePriority Priority { System::Messaging::MessagePriority get(); void set(System::Messaging::MessagePriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Messaging.MessagePriority with get, set" Usage="System.Messaging.Message.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgPriority")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-525">Gets or sets the message priority, which determines where in the queue the message is placed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-525">Gets or sets the message priority, which determines where in the queue the message is placed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-526">Один из <see cref="T:System.Messaging.MessagePriority" /> значения, которые представляют уровни приоритета нетранзакционных сообщений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-526">One of the <see cref="T:System.Messaging.MessagePriority" /> values, which represent the priority levels of non-transactional messages.</span>
          </span>
          <span data-ttu-id="bbee3-527">Значение по умолчанию — <see langword="Normal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-527">The default is <see langword="Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-528"><xref:System.Messaging.Message.Priority%2A> Свойство влияет на обработку службой Message Queuing сообщение оба пути и при достижении места назначения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-528">The <xref:System.Messaging.Message.Priority%2A> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination.</span></span> <span data-ttu-id="bbee3-529">Сообщениям с более высоким приоритетом отдается предпочтение при маршрутизации, и они помещаются ближе к началу конечной очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-529">Higher-priority messages are given preference during routing and inserted toward the front of the destination queue.</span></span> <span data-ttu-id="bbee3-530">Сообщения, имеющие одинаковый приоритет, помещаются в очередь в порядке поступления.</span><span class="sxs-lookup"><span data-stu-id="bbee3-530">Messages with the same priority are placed in the queue according to their arrival time.</span></span>  
  
 <span data-ttu-id="bbee3-531">Можно задать приоритет значимые только для нетранзакционных сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-531">You can set a meaningful priority only for non-transactional messages.</span></span> <span data-ttu-id="bbee3-532">Служба очередей сообщений автоматически устанавливает приоритет транзактных сообщений для `Lowest`, вследствие чего приоритет транзакционное сообщение можно игнорировать.</span><span class="sxs-lookup"><span data-stu-id="bbee3-532">Message Queuing automatically sets the priority for transactional messages to `Lowest`, which causes transactional message priority to be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-533">В следующем примере кода два сообщения с различными приоритетами отправляются в очередь и последовательно извлекаются.</span><span class="sxs-lookup"><span data-stu-id="bbee3-533">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-534">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Priority" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-534">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Priority" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessagePriority" />
        <altmember cref="P:System.Messaging.Message.MessageType" />
        <altmember cref="P:System.Messaging.MessageQueue.BasePriority" />
      </Docs>
    </Member>
    <Member MemberName="Recoverable">
      <MemberSignature Language="C#" Value="public bool Recoverable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recoverable" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Recoverable" />
      <MemberSignature Language="VB.NET" Value="Public Property Recoverable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Recoverable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Recoverable : bool with get, set" Usage="System.Messaging.Message.Recoverable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgRecoverable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-535">Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-535">Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-536">
            <see langword="true" /> Если доставка сообщения гарантируется (за счет сохранения сообщения на диске во время нахождения на маршруте); <see langword="false" /> если доставка не гарантируется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-536">
              <see langword="true" /> if delivery of the message is guaranteed (through saving the message to disk while en route); <see langword="false" /> if delivery is not assured.</span>
          </span>
          <span data-ttu-id="bbee3-537">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-537">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-538"><xref:System.Messaging.Message.Recoverable%2A> Свойство указывает, гарантируется ли доставка сообщения — даже в случае отказа компьютера во время прохождения в очередь места назначения сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-538">The <xref:System.Messaging.Message.Recoverable%2A> property indicates whether the delivery of a message is guaranteed—even if a computer crashes while the message is en route to the destination queue.</span></span>  
  
 <span data-ttu-id="bbee3-539">Если доставка сообщения гарантируется, оно сохраняется локально на каждом этапе в маршруте, пока не будет успешно перенаправлено на следующий компьютер.</span><span class="sxs-lookup"><span data-stu-id="bbee3-539">If delivery of a message is guaranteed, the message is stored locally at every step along the route, until the message is successfully forwarded to the next computer.</span></span> <span data-ttu-id="bbee3-540">Установка <xref:System.Messaging.Message.Recoverable%2A> свойства `true` может повлиять на пропускную способность.</span><span class="sxs-lookup"><span data-stu-id="bbee3-540">Setting the <xref:System.Messaging.Message.Recoverable%2A> property to `true` could affect throughput.</span></span>  
  
 <span data-ttu-id="bbee3-541">Если сообщение является транзакционной, очереди сообщений автоматически обрабатывает сообщение как восстанавливаемые, независимо от значения <xref:System.Messaging.Message.Recoverable%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-541">If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of the value of the <xref:System.Messaging.Message.Recoverable%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-542">В следующем примере кода возвращает и задает значение сообщения <xref:System.Messaging.Message.Recoverable%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-542">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.Recoverable%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-543">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Recoverable" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-543">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Recoverable" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ ResponseQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.ResponseQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgResponseQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-544">Gets or sets the queue that receives application-generated response messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-544">Gets or sets the queue that receives application-generated response messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-545">
            <see cref="T:System.Messaging.MessageQueue" /> Какой ответ, генерируемые приложением сообщения возвращаются.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-545">The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned.</span>
          </span>
          <span data-ttu-id="bbee3-546">Значение по умолчанию — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-546">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-547"><xref:System.Messaging.Message.ResponseQueue%2A> Свойство идентифицирует очередь, принимающую генерируемые приложением ответные сообщения, которые принимающее приложение возвращает в передающее приложение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-547">The <xref:System.Messaging.Message.ResponseQueue%2A> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application.</span></span> <span data-ttu-id="bbee3-548">Передающее приложение задает очереди ответов при передаче их сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-548">The sending application specifies response queues when the application sends its messages.</span></span> <span data-ttu-id="bbee3-549">В качестве очереди ответов может быть указана любая доступная очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-549">Any available queue can be specified as a response queue.</span></span>  
  
 <span data-ttu-id="bbee3-550">Сообщения, возвращаемые в очередь ответов, зависят от приложения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-550">Messages returned to the response queue are application-specific.</span></span> <span data-ttu-id="bbee3-551">Приложение должно определить содержимое этих сообщений и действия, которые необходимо выполнить при приеме сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-551">The application must define the contents of the messages as well as the action to take upon receipt of a message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-552">В следующем примере кода возвращает и задает значение сообщения <xref:System.Messaging.Message.ResponseQueue%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-552">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.ResponseQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-553">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ResponseQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-553">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ResponseQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.DestinationQueue" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
      </Docs>
    </Member>
    <Member MemberName="SecurityContext">
      <MemberSignature Language="C#" Value="public System.Messaging.SecurityContext SecurityContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.SecurityContext SecurityContext" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityContext As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::SecurityContext ^ SecurityContext { System::Messaging::SecurityContext ^ get(); void set(System::Messaging::SecurityContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContext : System.Messaging.SecurityContext with get, set" Usage="System.Messaging.Message.SecurityContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.SecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-554">Gets or sets the security context for a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-554">Gets or sets the security context for a message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-555">Объект <see cref="T:System.Messaging.SecurityContext" /> , содержащий контекст безопасности для сообщения, если свойство уже был задан; в противном случае — значение NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-555">A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context for a message, if the property has previously been set; otherwise NULL.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SenderCertificate">
      <MemberSignature Language="C#" Value="public byte[] SenderCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SenderCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property SenderCertificate As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SenderCertificate { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SenderCertificate : byte[] with get, set" Usage="System.Messaging.Message.SenderCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderCertificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-556">Gets or sets the security certificate used to authenticate messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-556">Gets or sets the security certificate used to authenticate messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-557">Массив байтовых значений, представляющий сертификат безопасности, используемый службой очереди сообщений для проверки подлинности отправителя сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-557">An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message.</span>
          </span>
          <span data-ttu-id="bbee3-558">Значение по умолчанию является массивом нулевой длины.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-558">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-559">Принимающее приложение использует <xref:System.Messaging.Message.SenderCertificate%2A> свойства, если сообщение включает внешний сертификат безопасности.</span><span class="sxs-lookup"><span data-stu-id="bbee3-559">The receiving application uses the <xref:System.Messaging.Message.SenderCertificate%2A> property when the message includes an external security certificate.</span></span>  
  
 <span data-ttu-id="bbee3-560">Служба очереди сообщений может проверить подлинность сообщения с использованием либо сертификат внутренней или внешней безопасности.</span><span class="sxs-lookup"><span data-stu-id="bbee3-560">Message Queuing can authenticate a message using either an internal or external security certificate.</span></span> <span data-ttu-id="bbee3-561">Служба очереди сообщений предоставляет внутренние сертификаты, которые используются для проверки целостности сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-561">Message Queuing provides internal certificates, which are used to verify message integrity.</span></span> <span data-ttu-id="bbee3-562">Центр сертификации предоставляет внешний сертификат, к которому можно получить через <xref:System.Messaging.Message.SenderCertificate%2A> свойства сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-562">A certification authority provides an external certificate, which you can access through the <xref:System.Messaging.Message.SenderCertificate%2A> property of the message.</span></span> <span data-ttu-id="bbee3-563">Очереди сообщений для проверки подлинности сообщения, внешний сертификат позволяет принимающему приложению дополнительную проверку отправителя.</span><span class="sxs-lookup"><span data-stu-id="bbee3-563">In addition to allowing Message Queuing to authenticate the message, an external certificate allows the receiving application to further verify the sender.</span></span> <span data-ttu-id="bbee3-564">Внутренний сертификат не имеет подходящего значения принимающему приложению.</span><span class="sxs-lookup"><span data-stu-id="bbee3-564">An internal certificate has no usable value to a receiving application.</span></span>  
  
 <span data-ttu-id="bbee3-565">Внешний сертификат должны регистрироваться в службе каталогов системы очереди сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-565">An external certificate must be registered with the directory service of the Message Queuing system.</span></span> <span data-ttu-id="bbee3-566">Внешний сертификат содержит сведения о центре сертификации, пользователь сертификата, срок действия сертификата, открытый ключ сертификата пользователя, и подпись центра сертификации.</span><span class="sxs-lookup"><span data-stu-id="bbee3-566">An external certificate contains information about the certification authority, the certificate user, the validity period of the certificate, the public key of the certificate user, and the certification authority's signature.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-567">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderCertificate" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-567">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderCertificate" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.Message.Authenticated" />
      </Docs>
    </Member>
    <Member MemberName="SenderId">
      <MemberSignature Language="C#" Value="public byte[] SenderId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SenderId As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SenderId { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SenderId : byte[]" Usage="System.Messaging.Message.SenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-568">Gets the identifier of the sending user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-568">Gets the identifier of the sending user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-569">Массив байтовых значений, который идентифицирует отправителя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-569">An array of byte values that identifies the sender.</span>
          </span>
          <span data-ttu-id="bbee3-570">Диспетчер принимающей очереди использует этот идентификатор при проверке подлинности сообщения, чтобы проверить отправителя сообщения и права отправителя на доступ к очереди.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-570">The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-571">Если <xref:System.Messaging.Message.AttachSenderId%2A> свойство `false`, идентификатор отправителя, указанного в <xref:System.Messaging.Message.SenderId%2A> свойство не присоединяется к сообщению, при их передаче.</span><span class="sxs-lookup"><span data-stu-id="bbee3-571">If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `false`, the sender identifier specified in the <xref:System.Messaging.Message.SenderId%2A> property is not attached to the message when it is sent.</span></span> <span data-ttu-id="bbee3-572">Это означает для Message Queuing, что отправитель не проверяется при отправке сообщения в очередь места назначения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-572">This indicates to Message Queuing that the sender should not be validated when it sends the message to the destination queue.</span></span> <span data-ttu-id="bbee3-573">Если <xref:System.Messaging.Message.AttachSenderId%2A> свойство `true`, <xref:System.Messaging.Message.SenderId%2A> значение свойства trustworthy, только в том случае, если проверка подлинности сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-573">If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `true`, the <xref:System.Messaging.Message.SenderId%2A> property value is trustworthy only if the message was authenticated.</span></span> <span data-ttu-id="bbee3-574">Используйте <xref:System.Messaging.Message.Authenticated%2A> свойство в сочетании с <xref:System.Messaging.Message.SenderId%2A> свойство для проверки прав доступа отправителя.</span><span class="sxs-lookup"><span data-stu-id="bbee3-574">Use the <xref:System.Messaging.Message.Authenticated%2A> property in conjunction with the <xref:System.Messaging.Message.SenderId%2A> property to verify the sender's access rights.</span></span>  
  
 <span data-ttu-id="bbee3-575">Приложение-подключатель — это приложения, использующего сервер соединителя для обеспечения связи между другими системами очередей и сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-575">A connector application is an application that uses a connector server to provide communication between Message Queuing and other queuing systems.</span></span> <span data-ttu-id="bbee3-576">Служба очереди сообщений требует, чтобы предоставить код отправителя приложения соединителя.</span><span class="sxs-lookup"><span data-stu-id="bbee3-576">Message Queuing requires connector applications to provide sender identification.</span></span> <span data-ttu-id="bbee3-577">Необходимо задать <xref:System.Messaging.Message.ConnectorType%2A> при отправке сообщений через приложение-подключатель.</span><span class="sxs-lookup"><span data-stu-id="bbee3-577">You must set the <xref:System.Messaging.Message.ConnectorType%2A> property when sending a message through a connector application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-578">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-578">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-579">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-579">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-580">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-580">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderId" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
      </Docs>
    </Member>
    <Member MemberName="SenderVersion">
      <MemberSignature Language="C#" Value="public long SenderVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 SenderVersion" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SenderVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long SenderVersion { long get(); };" />
      <MemberSignature Language="F#" Value="member this.SenderVersion : int64" Usage="System.Messaging.Message.SenderVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-581">Gets the version of Message Queuing used to send the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-581">Gets the version of Message Queuing used to send the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-582">Версия Message Queuing, используемый для отправки сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-582">The version of Message Queuing used to send the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-583"><xref:System.Messaging.Message.SenderVersion%2A> Свойство важно для некоторых функций.</span><span class="sxs-lookup"><span data-stu-id="bbee3-583">The <xref:System.Messaging.Message.SenderVersion%2A> property is important for certain features.</span></span> <span data-ttu-id="bbee3-584">Например обработка транзакций поддерживается только по очереди сообщений версии 2.0 и более поздних версий и цифровые подписи используются для проверки подлинности сообщений, передаваемых MSMQ 1.0.</span><span class="sxs-lookup"><span data-stu-id="bbee3-584">For example, transaction processing is supported only by Message Queuing 2.0 and later, and digital signatures are used to authenticate messages sent by MSMQ 1.0.</span></span>  
  
 <span data-ttu-id="bbee3-585">Передающая Queue Manager устанавливает <xref:System.Messaging.Message.SenderVersion%2A> свойство при отправке сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-585">The sending Queue Manager sets the <xref:System.Messaging.Message.SenderVersion%2A> property when the message is sent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-586">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.SenderVersion%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-586">The following code example displays the value of a message's <xref:System.Messaging.Message.SenderVersion%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-587">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-587">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-588">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-588">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-589">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderVersion" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-589">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderVersion" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="SentTime">
      <MemberSignature Language="C#" Value="public DateTime SentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SentTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SentTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SentTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.SentTime : DateTime" Usage="System.Messaging.Message.SentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSentTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-590">Gets the date and time on the sending computer that the message was sent by the source queue manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-590">Gets the date and time on the sending computer that the message was sent by the source queue manager.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-591">Объект <see cref="T:System.DateTime" /> , представляющий время отправки сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-591">A <see cref="T:System.DateTime" /> that represents the time the message was sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-592"><xref:System.Messaging.Message.SentTime%2A> Настройки свойства в местное время компьютера, на котором экземпляр <xref:System.Messaging.Message> был создан класс.</span><span class="sxs-lookup"><span data-stu-id="bbee3-592">The <xref:System.Messaging.Message.SentTime%2A> property is adjusted to the local time of the computer on which this instance of the <xref:System.Messaging.Message> class was created.</span></span> <span data-ttu-id="bbee3-593">Этот часовой пояс может отличаться от используемых исходных и конечных очередей.</span><span class="sxs-lookup"><span data-stu-id="bbee3-593">This time zone could be different from those of the source and destination queues.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-594">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.SentTime%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-594">The following code example displays the value of a message's <xref:System.Messaging.Message.SentTime%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-595">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-595">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-596">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-596">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-597">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SentTime" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-597">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SentTime" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SourceMachine">
      <MemberSignature Language="C#" Value="public string SourceMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceMachine" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SourceMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceMachine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceMachine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceMachine : string" Usage="System.Messaging.Message.SourceMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSourceMachine")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-598">Gets the computer from which the message originated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-598">Gets the computer from which the message originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-599">Имя компьютера, с которого было отправлено сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-599">The name of the computer from which the message was sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-600">Формат <xref:System.Messaging.Message.SourceMachine%2A> свойство не включает предшествующий две косые черты (\\\\).</span><span class="sxs-lookup"><span data-stu-id="bbee3-600">The format of the <xref:System.Messaging.Message.SourceMachine%2A> property does not include preceding two forward slashes (\\\\).</span></span> <span data-ttu-id="bbee3-601">Например `myServer` является допустимым <xref:System.Messaging.Message.SourceMachine%2A>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-601">For example, `myServer` is a valid <xref:System.Messaging.Message.SourceMachine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-602">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.SourceMachine%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-602">The following code example displays the value of a message's <xref:System.Messaging.Message.SourceMachine%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-603">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-603">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-604">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-604">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-605">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SourceMachine" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-605">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SourceMachine" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="bbee3-606">The computer information or directory service could not be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-606">The computer information or directory service could not be accessed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="TimeToBeReceived">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToBeReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToBeReceived" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TimeToBeReceived" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToBeReceived As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToBeReceived { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToBeReceived : TimeSpan with get, set" Usage="System.Messaging.Message.TimeToBeReceived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToBeReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-607">Gets or sets the maximum amount of time for the message to be received from the destination queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-607">Gets or sets the maximum amount of time for the message to be received from the destination queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-608">Общее время, в течение которого переданное сообщение должно быть получено из очереди назначения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-608">The total time for a sent message to be received from the destination queue.</span>
          </span>
          <span data-ttu-id="bbee3-609">Значение по умолчанию — <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-609">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-610"><xref:System.Messaging.Message.TimeToBeReceived%2A> Свойство указывает общее время в течение которого переданное сообщение должно быть получено из очереди назначения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-610">The <xref:System.Messaging.Message.TimeToBeReceived%2A> property specifies the total time for a sent message to be received from the destination queue.</span></span> <span data-ttu-id="bbee3-611">Предельное время включает время, затраченное на очереди назначения и время ожидания в очереди до получения сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-611">The time limit includes the time spent getting to the destination queue and the time spent waiting in the queue before the message is received.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="bbee3-612">При использовании зависимых клиентских компьютеров, убедитесь, что часы на клиентском компьютере синхронизированы с часами на сервере, на котором выполняется очереди сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-612">When using dependent client computers, be sure the clock on the client computer is synchronized with the clock on the server that is running Message Queuing.</span></span> <span data-ttu-id="bbee3-613">В противном случае может привести к непредсказуемому поведению при отправке сообщения, <xref:System.Messaging.Message.TimeToBeReceived%2A> свойство не является <xref:System.Messaging.Message.InfiniteTimeout>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-613">Otherwise, unpredictable behavior might result when sending a message whose <xref:System.Messaging.Message.TimeToBeReceived%2A> property is not <xref:System.Messaging.Message.InfiniteTimeout>.</span></span>  
  
 <span data-ttu-id="bbee3-614">Если время, заданное параметром <xref:System.Messaging.Message.TimeToBeReceived%2A> истекает до удаления сообщения из очереди, очереди сообщений отклоняет это сообщение одним из двух способов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-614">If the interval specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property expires before the message is removed from the queue, Message Queuing discards the message in one of two ways.</span></span> <span data-ttu-id="bbee3-615">Если свойство <xref:System.Messaging.Message.UseDeadLetterQueue%2A> сообщения имеет значение `true`, это сообщение будет передано в очередь недоставленных сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-615">If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue.</span></span> <span data-ttu-id="bbee3-616">Если <xref:System.Messaging.Message.UseDeadLetterQueue%2A> является `false`, сообщение пропускается.</span><span class="sxs-lookup"><span data-stu-id="bbee3-616">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored.</span></span>  
  
 <span data-ttu-id="bbee3-617">Можно задать сообщения <xref:System.Messaging.Message.AcknowledgeType%2A> свойство для запроса, что очереди сообщений отправить сообщение отрицательного подтверждения отказа в передающее приложение, если сообщение не загружается до истечения срока действия таймера.</span><span class="sxs-lookup"><span data-stu-id="bbee3-617">You can set the message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.</span></span>  
  
 <span data-ttu-id="bbee3-618">Если значение, заданное <xref:System.Messaging.Message.TimeToBeReceived%2A> меньшим, чем значение, заданное параметром <xref:System.Messaging.Message.TimeToReachQueue%2A> свойства <xref:System.Messaging.Message.TimeToBeReceived%2A> имеет более высокий приоритет.</span><span class="sxs-lookup"><span data-stu-id="bbee3-618">If the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property is less than the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="bbee3-619">При отправке нескольких сообщений в одной транзакции, используемый службой очереди сообщений <xref:System.Messaging.Message.TimeToBeReceived%2A> свойства первого сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-619">When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToBeReceived%2A> property of the first message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-620">В следующем примере кода возвращает и задает значение сообщения <xref:System.Messaging.Message.TimeToBeReceived%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-620">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-621">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-621">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bbee3-622">The value specified for <see cref="P:System.Messaging.Message.TimeToBeReceived" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-622">The value specified for <see cref="P:System.Messaging.Message.TimeToBeReceived" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToReachQueue { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToReachQueue : TimeSpan with get, set" Usage="System.Messaging.Message.TimeToReachQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToReachQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-623">Gets or sets the maximum amount of time for the message to reach the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-623">Gets or sets the maximum amount of time for the message to reach the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-624">Время, выделенное для которого сообщение должно достичь очереди места назначения, начиная с момента сообщение отправляется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-624">The time limit for the message to reach the destination queue, beginning from the time the message is sent.</span>
          </span>
          <span data-ttu-id="bbee3-625">Значение по умолчанию — <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-625">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-626">Если время, заданное параметром <xref:System.Messaging.Message.TimeToReachQueue%2A> истекает прежде чем сообщение достигнет конечной очереди, очереди сообщений отклоняет это сообщение одним из двух способов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-626">If the interval specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property expires before the message reaches its destination, Message Queuing discards the message in one of two ways.</span></span> <span data-ttu-id="bbee3-627">Если свойство <xref:System.Messaging.Message.UseDeadLetterQueue%2A> сообщения имеет значение `true`, это сообщение будет передано в очередь недоставленных сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-627">If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue.</span></span> <span data-ttu-id="bbee3-628">Если <xref:System.Messaging.Message.UseDeadLetterQueue%2A> является `false`, сообщение пропускается</span><span class="sxs-lookup"><span data-stu-id="bbee3-628">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored</span></span>  
  
 <span data-ttu-id="bbee3-629">Можно задать сообщения <xref:System.Messaging.Message.AcknowledgeType%2A> свойство для запроса, что очереди сообщений отправить сообщение отрицательного подтверждения обратно в передающее приложение, если сообщение не поступило до истечения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="bbee3-629">You can set he message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.</span></span>  
  
 <span data-ttu-id="bbee3-630">Если <xref:System.Messaging.Message.TimeToReachQueue%2A> свойство имеет значение 0 секунд, Message Queuing пытается снова передать сообщение получателю, если очередь ожидает сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-630">If the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is set to 0 seconds, Message Queuing tries once to send the message to its destination—if the queue is waiting for the message.</span></span> <span data-ttu-id="bbee3-631">Если очередь является локальной, сообщение всегда достигнет его.</span><span class="sxs-lookup"><span data-stu-id="bbee3-631">If the queue is local, the message always reaches it.</span></span>  
  
 <span data-ttu-id="bbee3-632">Если значение, заданное <xref:System.Messaging.Message.TimeToReachQueue%2A> больше, чем значение, заданное параметром <xref:System.Messaging.Message.TimeToBeReceived%2A> свойства <xref:System.Messaging.Message.TimeToBeReceived%2A> имеет более высокий приоритет.</span><span class="sxs-lookup"><span data-stu-id="bbee3-632">If the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is greater than the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="bbee3-633">При отправке нескольких сообщений в одной транзакции, используемый службой очереди сообщений <xref:System.Messaging.Message.TimeToReachQueue%2A> свойства первого сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-633">When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToReachQueue%2A> property of the first message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-634">В следующем примере кода возвращает и задает значение сообщения <xref:System.Messaging.Message.TimeToReachQueue%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-634">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.TimeToReachQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-635">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-635">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bbee3-636">The value specified for <see cref="P:System.Messaging.Message.TimeToReachQueue" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-636">The value specified for <see cref="P:System.Messaging.Message.TimeToReachQueue" /> is invalid.</span>
          </span>
          <span data-ttu-id="bbee3-637">It might represent a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-637">It might represent a negative number.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TransactionId">
      <MemberSignature Language="C#" Value="public string TransactionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TransactionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionId : string" Usage="System.Messaging.Message.TransactionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-638">Gets the identifier for the transaction of which the message was a part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-638">Gets the identifier for the transaction of which the message was a part.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-639">Идентификатор транзакции, связанной с сообщением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-639">The identifier for the transaction associated with the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-640">Принимающее приложение использует <xref:System.Messaging.Message.TransactionId%2A> свойство, чтобы убедиться, что сообщение было отправлено в рамках определенной транзакции.</span><span class="sxs-lookup"><span data-stu-id="bbee3-640">Receiving applications use the <xref:System.Messaging.Message.TransactionId%2A> property to verify that a message was sent as part of a specific transaction.</span></span> <span data-ttu-id="bbee3-641">Идентификатор транзакции содержит идентификатор передающего компьютера (первые 16 битов) следуют порядковый номер 4 байтам.</span><span class="sxs-lookup"><span data-stu-id="bbee3-641">The transaction identifier contains the identifier of the sending computer (first 16 bits) followed by a 4-byte transaction sequence number.</span></span>  
  
 <span data-ttu-id="bbee3-642">Это свойство доступно только для очереди сообщений версии 2.0 и более поздних версий.</span><span class="sxs-lookup"><span data-stu-id="bbee3-642">This property is available only for Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="bbee3-643">Транзакции не гарантируется, что идентификаторы должны быть уникальными, так как последовательные номера транзакций не сохраняются, и они начать заново на 2 <sup>20</sup>.</span><span class="sxs-lookup"><span data-stu-id="bbee3-643">Transaction identifiers are not guaranteed to be unique, because transaction sequence numbers are not persistent, and they start over again at 2 <sup>20</sup>.</span></span> <span data-ttu-id="bbee3-644">Очередь сообщений гарантирует только что последующих транзакций будет иметь различные транзакции порядковых номеров.</span><span class="sxs-lookup"><span data-stu-id="bbee3-644">Message Queuing guarantees only that subsequent transactions will have different transaction sequence numbers.</span></span>  
  
 <span data-ttu-id="bbee3-645">Можно использовать <xref:System.Messaging.Message.TransactionId%2A> свойство вместе с <xref:System.Messaging.Message.IsFirstInTransaction%2A> и <xref:System.Messaging.Message.IsLastInTransaction%2A> свойства для проверки границ транзакции.</span><span class="sxs-lookup"><span data-stu-id="bbee3-645">You can use the <xref:System.Messaging.Message.TransactionId%2A> property along with the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties to verify transaction boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-646">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.TransactionId%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-646">The following code example displays the value of a message's <xref:System.Messaging.Message.TransactionId%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-647">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-647">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-648">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-648">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-649">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-649">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionId" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="TransactionStatusQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue TransactionStatusQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TransactionStatusQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionStatusQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ TransactionStatusQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionStatusQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.TransactionStatusQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionStatusQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-650">Gets the transaction status queue on the source computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-650">Gets the transaction status queue on the source computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-651">Очередь состояний транзакций на исходном компьютере, который используется для передачи подтверждающих сообщений в передающее приложение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-651">The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application.</span>
          </span>
          <span data-ttu-id="bbee3-652">Значение по умолчанию — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-652">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-653"><xref:System.Messaging.Message.TransactionStatusQueue%2A> Свойство идентифицирует очередь транзакций на исходном компьютере, который получает подтверждение получения чтения из соединителя приложений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-653">The <xref:System.Messaging.Message.TransactionStatusQueue%2A> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications.</span></span> <span data-ttu-id="bbee3-654">Служба очереди сообщений задает свойство, и соединитель приложения используют его при поиске транзактных сообщений, отправляемых во внешние очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-654">Message Queuing sets the property, and connector applications use the property when retrieving transactional messages sent to foreign queues.</span></span>  
  
 <span data-ttu-id="bbee3-655">Внешний очередь существует в очереди системы, отличной от Microsoft Message Queuing.</span><span class="sxs-lookup"><span data-stu-id="bbee3-655">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="bbee3-656">Служба очереди сообщений взаимодействует с другими очередями через приложение-подключатель.</span><span class="sxs-lookup"><span data-stu-id="bbee3-656">Message Queuing communicates with such queues through a connector application.</span></span>  
  
 <span data-ttu-id="bbee3-657">Соединитель приложение может использовать очередь состояний транзакций для передачи подтверждающих сообщений в передающее приложение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-657">The connector application can use the transaction status queue to send acknowledgment messages back to the sending application.</span></span> <span data-ttu-id="bbee3-658">Очередь состояний транзакций должна получать эти подтверждения, даже если отправляющее приложение не запрашивает других подтверждений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-658">The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-659">В следующем примере кода отображает значение сообщения <xref:System.Messaging.Message.TransactionStatusQueue%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-659">The following code example displays the value of a message's <xref:System.Messaging.Message.TransactionStatusQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-660">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-660">The message has not been sent.</span>
          </span>
          <span data-ttu-id="bbee3-661">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-661">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="bbee3-662">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-662">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.DestinationQueue" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
      </Docs>
    </Member>
    <Member MemberName="UseAuthentication">
      <MemberSignature Language="C#" Value="public bool UseAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAuthentication : bool with get, set" Usage="System.Messaging.Message.UseAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseAuthentication")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-663">Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-663">Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-664">
            <see langword="true" /> Если отправляющее приложение запрашивает проверку подлинности для данного сообщения; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-664">
              <see langword="true" /> if the sending application requested authentication for the message; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-665"><xref:System.Messaging.Message.UseAuthentication%2A> Свойство указывает, должна ли сообщение проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="bbee3-665">The <xref:System.Messaging.Message.UseAuthentication%2A> property specifies whether the message needs to be authenticated.</span></span> <span data-ttu-id="bbee3-666">Если отправляющее приложение запрашивает проверку подлинности, Message Queuing создает цифровую подпись и использует его для подписи сообщения при отправке и проверки подлинности сообщения при его получении.</span><span class="sxs-lookup"><span data-stu-id="bbee3-666">If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and authenticate the message when it is received.</span></span>  
  
 <span data-ttu-id="bbee3-667">Если <xref:System.Messaging.Message.UseAuthentication%2A> является `false` и отправляется сообщение в очередь, принимающую только сообщения, прошедшие проверку подлинности, сообщение будет отклонено при поступлении в очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-667">If <xref:System.Messaging.Message.UseAuthentication%2A> is `false` and a message is sent to a queue that accepts only authenticated messages, the message will be rejected when it reaches the queue.</span></span>  
  
 <span data-ttu-id="bbee3-668">Не удается определить, если сообщение не прошел проверку подлинности, просмотрев его свойства.</span><span class="sxs-lookup"><span data-stu-id="bbee3-668">You cannot determine if a message failed authentication by looking at its properties.</span></span> <span data-ttu-id="bbee3-669">Служба Message Queuing отклоняет такие сообщения, прежде чем они попадут в очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-669">Message Queuing discards such messages before they are delivered to the queue.</span></span> <span data-ttu-id="bbee3-670">Тем не менее можно запросить подтверждающее сообщение, когда сообщение о сбое доставки сообщения от поступающих в очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-670">However, you can request that an acknowledgment message be sent if a delivery failure prevents a message from arriving in the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-671">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseAuthentication" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-671">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseAuthentication" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
      </Docs>
    </Member>
    <Member MemberName="UseDeadLetterQueue">
      <MemberSignature Language="C#" Value="public bool UseDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDeadLetterQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDeadLetterQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDeadLetterQueue : bool with get, set" Usage="System.Messaging.Message.UseDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-672">Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-672">Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-673">
            <see langword="true" /> Если при сбое доставки сообщения в копию сообщения, отправляемого в очередь недоставленных сообщений-; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-673">
              <see langword="true" /> if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bbee3-674">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-674">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-675"><xref:System.Messaging.Message.UseJournalQueue%2A> И <xref:System.Messaging.Message.UseDeadLetterQueue%2A> свойства определяют, как очереди сообщений отслеживает сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-675">The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message.</span></span> <span data-ttu-id="bbee3-676">Если <xref:System.Messaging.Message.UseDeadLetterQueue%2A> является `true`, вызывает сбой доставки (из нетранзакционной сообщения), сообщение должно отправляться нетранзакционную очередь недоставленных сообщений на компьютере, который не удалось доставить сообщение.</span><span class="sxs-lookup"><span data-stu-id="bbee3-676">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`, delivery failure (of a non-transactional message), causes the message to be sent to the non-transactional dead-letter queue on the computer that could not deliver the message.</span></span> <span data-ttu-id="bbee3-677">Сбой доставки вызвано таймера истекает, например сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-677">Delivery failure could be caused by a message timer expiring, for example.</span></span>  
  
 <span data-ttu-id="bbee3-678">В случае сбоя доставки для транзакционное сообщение служба Message Queuing передает сообщение в транзакционную очередь недоставленных сообщений-на исходном компьютере во всех случаях отрицательным и сомнительных.</span><span class="sxs-lookup"><span data-stu-id="bbee3-678">In the case of delivery failure for a transactional message, Message Queuing sends the message to the transactional dead-letter queue on the source machine in all negative and in-doubt cases.</span></span>  
  
 <span data-ttu-id="bbee3-679">Если хранение сообщений в очередь недоставленных сообщений, следует снять очереди периодически для удаления сообщений, которые больше не требуются.</span><span class="sxs-lookup"><span data-stu-id="bbee3-679">When you store messages in a dead-letter queue, you should clear the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="bbee3-680">Сообщения, хранящиеся в очереди недоставленных сообщений, учитываются в размере квоты для компьютера, на котором расположена очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-680">Messages stored in dead-letter queues count against the size quota for the computer where the queue resides.</span></span> <span data-ttu-id="bbee3-681">Квота компьютера устанавливается администратором и ссылается на объема, выделенного для хранения сообщений на данном компьютере, а не только в одной очереди.</span><span class="sxs-lookup"><span data-stu-id="bbee3-681">The computer quota is set by the administrator and refers to the size allocated for storing messages on the whole computer, not just in a single queue.</span></span>  
  
 <span data-ttu-id="bbee3-682">Не создавайте журнала или очередь недоставленных сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-682">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="bbee3-683">Они обе очереди системы, на которые создается службой Message Queuing.</span><span class="sxs-lookup"><span data-stu-id="bbee3-683">These are both system queues that Message Queuing generates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-684">В следующем примере кода возвращает и задает значение сообщения <xref:System.Messaging.Message.UseDeadLetterQueue%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-684">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-685">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-685">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
    <Member MemberName="UseEncryption">
      <MemberSignature Language="C#" Value="public bool UseEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property UseEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseEncryption { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseEncryption : bool with get, set" Usage="System.Messaging.Message.UseEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseEncryption")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-686">Gets or sets a value that indicates whether to make the message private.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-686">Gets or sets a value that indicates whether to make the message private.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-687">
            <see langword="true" /> Чтобы требовать очереди сообщений для шифрования сообщения; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-687">
              <see langword="true" /> to require Message Queuing to encrypt the message; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bbee3-688">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-688">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-689">Если сообщение является закрытым, его текст шифруется перед отправкой и расшифровываются при получении.</span><span class="sxs-lookup"><span data-stu-id="bbee3-689">If a message is private, its body is encrypted before it is sent and decrypted when it is received.</span></span> <span data-ttu-id="bbee3-690">Для отправки конфиденциального сообщения, отправляющего приложения необходимо указать, будет использоваться шифрование и, при необходимости, алгоритм шифрования.</span><span class="sxs-lookup"><span data-stu-id="bbee3-690">To send a private message, the sending application must specify that encryption be used and, optionally, the encryption algorithm.</span></span>  
  
 <span data-ttu-id="bbee3-691">При передаче конфиденциальных сообщений, приложения не нужно выполнять шифрование сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-691">When sending private messages, your application does not need to perform the message encryption.</span></span> <span data-ttu-id="bbee3-692">Служба очереди сообщений может шифровать текст сообщения, когда приложение отправляет сообщения в рамках предприятия Microsoft Windows 2000, которая имеет доступ к службе каталогов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-692">Message Queuing can encrypt the message body for you if your application is sending messages within a Microsoft Windows 2000 enterprise, which has access to the directory service.</span></span> <span data-ttu-id="bbee3-693">При получении конфиденциальных сообщений, диспетчер принимающей очереди всегда расшифровывает текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-693">When receiving private messages, the receiving Queue Manager always decrypts the message body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-694">В следующем примере кода возвращает и задает значение сообщения <xref:System.Messaging.Message.UseEncryption%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-694">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseEncryption%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-695">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseEncryption" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-695">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseEncryption" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.EncryptionAlgorithm" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.Message.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseJournalQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-696">Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-696">Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-697">
            <see langword="true" /> Требовать, что копия сообщения храниться в журнале компьютера после сообщения успешной передачи (с компьютера к следующему серверу); в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-697">
              <see langword="true" /> to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bbee3-698">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-698">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-699"><xref:System.Messaging.Message.UseJournalQueue%2A> И <xref:System.Messaging.Message.UseDeadLetterQueue%2A> свойства определяют, как очереди сообщений отслеживает сообщения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-699">The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message.</span></span> <span data-ttu-id="bbee3-700">Если <xref:System.Messaging.Message.UseJournalQueue%2A> является `true`, а затем его копия сохраняется в журнале исходного компьютера на каждом шаге, в том, что сообщение передается.</span><span class="sxs-lookup"><span data-stu-id="bbee3-700">If <xref:System.Messaging.Message.UseJournalQueue%2A> is `true`, then a copy is kept in the computer journal on the originating machine at each step that a message is transmitted.</span></span>  
  
 <span data-ttu-id="bbee3-701">Отправленное сообщение только копируется в очередь журнала, если целевая очередь находится на удаленном компьютере.</span><span class="sxs-lookup"><span data-stu-id="bbee3-701">The sent message is only copied to the journal queue if the destination queue is on a remote computer.</span></span> <span data-ttu-id="bbee3-702">Если файл находится на локальном компьютере, сообщение отправляется непосредственно в очередь; Существуют нет промежуточных этапов, требующих ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="bbee3-702">If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.</span></span>  
  
 <span data-ttu-id="bbee3-703">Если хранение сообщений в очереди журнала, очистки очереди периодически для удаления сообщений, которые больше не требуются.</span><span class="sxs-lookup"><span data-stu-id="bbee3-703">When you store messages in a journal queue, clear the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="bbee3-704">Сообщения, хранящиеся в очереди журнала, входят в квоту для компьютера, на котором расположена очередь.</span><span class="sxs-lookup"><span data-stu-id="bbee3-704">Messages stored in journal queues count against the quota for the computer where the queue resides.</span></span> <span data-ttu-id="bbee3-705">(Квота компьютера устанавливается администратором).</span><span class="sxs-lookup"><span data-stu-id="bbee3-705">(The computer quota is set by the administrator.)</span></span>  
  
 <span data-ttu-id="bbee3-706">Не создавайте журнала или очередь недоставленных сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-706">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="bbee3-707">Они обе очереди системы, на которые создается службой Message Queuing.</span><span class="sxs-lookup"><span data-stu-id="bbee3-707">These are both system queues that Message Queuing generates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-708">В следующем примере кода возвращает и задает значение сообщения <xref:System.Messaging.Message.UseJournalQueue%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-708">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseJournalQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-709">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseJournalQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-709">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseJournalQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      </Docs>
    </Member>
    <Member MemberName="UseTracing">
      <MemberSignature Language="C#" Value="public bool UseTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTracing" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseTracing : bool with get, set" Usage="System.Messaging.Message.UseTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseTracing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbee3-710">Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-710">Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbee3-711">
            <see langword="true" /> Если на каждом промежуточном этапе прохождения сообщения в очередь места назначения создавался отчет отправляется в очередь системных отчетов; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-711">
              <see langword="true" /> if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bbee3-712">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-712">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbee3-713"><xref:System.Messaging.Message.UseTracing%2A> Свойство указывает, следует ли отслеживать сообщения в процессе его перемещения в очередь назначения.</span><span class="sxs-lookup"><span data-stu-id="bbee3-713">The <xref:System.Messaging.Message.UseTracing%2A> property specifies whether to track the route of a message as it moves toward its destination queue.</span></span> <span data-ttu-id="bbee3-714">Если `true`, в отчет (сформированные службой Message Queuing) отправляется в очередь отчетов при каждом проходе сообщения через сервер маршрутизации очереди сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-714">If `true`, a report message (generated by Message Queuing) is sent to a report queue each time the message passes through a Message Queuing routing server.</span></span> <span data-ttu-id="bbee3-715">Очередь отчетов задается Queue Manager источника.</span><span class="sxs-lookup"><span data-stu-id="bbee3-715">The report queue is specified by the source Queue Manager.</span></span> <span data-ttu-id="bbee3-716">Очереди отчетов не только для вывода сообщений, сформированные службой Message Queuing; генерируемые приложением сообщения также могут отправляться в очередь отчетов.</span><span class="sxs-lookup"><span data-stu-id="bbee3-716">Report queues are not limited to report messages generated by Message Queuing; your application-generated messages can also be sent to report queues.</span></span>  
  
 <span data-ttu-id="bbee3-717">С помощью трассировки необходимо создать Active Directory и указании очереди отчета службой очередей сообщений.</span><span class="sxs-lookup"><span data-stu-id="bbee3-717">Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise.</span></span> <span data-ttu-id="bbee3-718">Администратор настраивает эти параметры.</span><span class="sxs-lookup"><span data-stu-id="bbee3-718">The administrator configures these settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbee3-719">В следующем примере кода возвращает и задает значение сообщения <xref:System.Messaging.Message.UseTracing%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="bbee3-719">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseTracing%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bbee3-720">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseTracing" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbee3-720">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseTracing" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
      </Docs>
    </Member>
  </Members>
</Type>