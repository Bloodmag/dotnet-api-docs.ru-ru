<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageEnumerator.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56a3039a11d941cd3db611cb997eb17835525e4da.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a3039a11d941cd3db611cb997eb17835525e4da</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageEnumerator">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">Предоставляет курсор последовательного доступа для перечисления сообщений в очереди сообщений.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> for dynamic interaction with messages in a queue.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> для динамического взаимодействия с сообщениями в очереди.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>Methods available through the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class can return either a <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> pointing to a dynamic list of messages in the queue, or an array that contains a copy at a given instant - a snapshot - of the queue at the time the specified method was called.</source>
          <target state="translated">Методы, доступные через <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> класса могут возвращать либо <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> указывает динамический список сообщений в очереди, либо массив, содержащий копии в данный момент времени - моментальный снимок - очереди во время указанный метод был вызван.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>Unlike a static snapshot, an enumerator allows you to modify the collection.</source>
          <target state="translated">В отличие от статического моментального снимка перечислитель позволяет изменять коллекцию.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>Using a <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>, you can remove messages from the queue, and the change is immediately reflected in the queue.</source>
          <target state="translated">С помощью <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>, можно удалить сообщение из очереди и их изменения немедленно отражаются в очереди.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>An enumerator does not remove the messages from the queue when it queries the queue.</source>
          <target state="translated">Перечислитель не удаляет сообщения из очереди при запросе очереди.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>It returns information about the message at the current cursor position, but it leaves the message in the queue.</source>
          <target state="translated">Возвращает сведения о сообщении, расположенный в текущей позиции курсора, но оставляет сообщение в очереди.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> курсор, инициализируемый в заголовке динамического списка.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>The list order is the same as the order of the messages in the queue, according to message priority.</source>
          <target state="translated">Порядок элементов списка является таким же, как порядок сообщений в очереди, исходя из приоритета сообщения.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>You can move the cursor to the first message in the queue by calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Можно переместить курсор на первое сообщение в очереди, вызвав <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>After the enumerator has been initialized, you can use <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> to step forward through the remaining messages.</source>
          <target state="translated">После инициализации перечислителя, можно использовать <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> для прохода вперед по оставшимся сообщениям.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>You can specify whether to wait for a message to become available by passing a timeout into the <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> method.</source>
          <target state="translated">Можно указать, следует ли ожидать сообщение станет доступным, передав время ожидания в <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>Because the enumerator is dynamic, a message that is appended beyond the cursor's current position (for example, due to low priority), can be accessed by the enumerator.</source>
          <target state="translated">Поскольку перечислитель является динамическим, сообщения, которые добавляются за текущей позицией курсора (например, из-за низкого приоритета), может осуществляться с помощью перечислителя.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>A message that is inserted before the cursor's current position cannot be accessed.</source>
          <target state="translated">Сообщение, которое вставляется перед текущей позицией курсора будет невозможен.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>It is not possible to step backward with a <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>.</source>
          <target state="translated">Не удается шаг назад с <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>A cursor allows forward-only movement.</source>
          <target state="translated">Курсор позволяет перемещаться только вперед.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph> method enables you to place the cursor back at the beginning of the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph> Метод позволяет помещать курсор назад в начало очереди.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>Instances of <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> for a given queue work independently.</source>
          <target state="translated">Экземпляры <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> для данной очереди работают независимо друг от друга.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>You can create two <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> instances that apply to the same queue.</source>
          <target state="translated">Можно создать два <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> экземпляры, которые применяются к той же очереди.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>The changes that one <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> makes to the messages in the queue will be reflected immediately in a second enumerator if the second enumerator is positioned before the first.</source>
          <target state="translated">Изменения один <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> делает сообщений в очереди, будут отражены немедленно во втором перечислителе, если второй перечислитель располагается перед первым.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>However, if two enumerators have the same position and one of them removes the message at that position, an exception is thrown if the other enumerator attempts to get the value of the <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Current%2A&gt;</ph> property on the now-deleted message.</source>
          <target state="translated">Тем не менее, если два перечислителя имеют одинаковую позицию и один из них удаляет сообщение в этой позиции, если исключение второго перечислителя предпринимает попытку получить значение <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Current%2A&gt;</ph> свойства удаленного сообщения.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>If you create an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=nameWithType&gt;</ph> set to <ph id="ph3">`true`</ph>, no other application can modify the messages in your enumerator while you have the connection to the queue.</source>
          <target state="translated">При создании экземпляра <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> с <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=nameWithType&gt;</ph> значение <ph id="ph3">`true`</ph>, никакие другие приложения можно изменить сообщения в перечислителе, при наличии подключения к очереди.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>The following example gets a dynamic list of messages in a queue and counts all messages with the <ph id="ph1">&lt;xref:System.Messaging.Message.Priority%2A&gt;</ph> property set to <ph id="ph2">&lt;xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">В следующем примере возвращает динамический список сообщений в очереди и пересчет всех сообщений <ph id="ph1">&lt;xref:System.Messaging.Message.Priority%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.Close">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">Освобождает ресурсы, связанные с перечислителем.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Close">
          <source>The operating system retains an open handle to the queue during the lifetime of the cursor.</source>
          <target state="translated">Операционная система хранит открытый дескриптор очереди в течение времени существования курсора.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Close">
          <source>When you have finished working with the enumerator, call <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Close%2A&gt;</ph> to release the resources associated with the handle.</source>
          <target state="translated">После завершения работы с перечислителем вызовите <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Close%2A&gt;</ph> для освобождения ресурсов, связанных с этим дескриптором.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that this enumerator points to.</source>
          <target state="translated">Получает текущий объект <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, на который указывает перечислитель.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>The current message.</source>
          <target state="translated">Текущее сообщение.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>When the enumerator is created, it points to the head of the queue, at a location before the first message.</source>
          <target state="translated">При создании перечислителя он указывает на заголовок очереди, в месте перед первым сообщением.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>In this case, <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Current%2A&gt;</ph> is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">В этом случае <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Current%2A&gt;</ph> не является допустимым и будет вызывать исключение, если он доступен.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>You must call <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> to position the cursor at the first message in the queue.</source>
          <target state="translated">Необходимо вызвать метод <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> для позиционирования курсора первого сообщения в очереди.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageEnumerator.Current" /&gt;</ph> before the first call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageEnumerator.MoveNext" /&gt;</ph>.</source>
          <target state="translated">Вы вызвали <ph id="ph1">&lt;see cref="P:System.Messaging.MessageEnumerator.Current" /&gt;</ph> до первого вызова <ph id="ph2">&lt;see cref="M:System.Messaging.MessageEnumerator.MoveNext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>The cursor is located before the first element of the message enumeration.</source>
          <target state="translated">Курсор располагается перед первым элементом перечисления сообщений.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageEnumerator.Current" /&gt;</ph> after a call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageEnumerator.MoveNext" /&gt;</ph> had returned <ph id="ph3">&lt;see langword="false" /&gt;</ph> (indicating the cursor is located after the last element of the message enumeration.)</source>
          <target state="translated">Вы вызвали <ph id="ph1">&lt;see cref="P:System.Messaging.MessageEnumerator.Current" /&gt;</ph> после вызова <ph id="ph2">&lt;see cref="M:System.Messaging.MessageEnumerator.MoveNext" /&gt;</ph>, вернувшего <ph id="ph3">&lt;see langword="false" /&gt;</ph> (это указывает, что курсор расположен за последним элементом перечисления сообщений).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>The message the enumerator is currently pointing to no longer exists.</source>
          <target state="translated">Сообщение, на которое указывает перечислитель, больше не существует.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageEnumerator.Current">
          <source>It might have been deleted.</source>
          <target state="translated">Возможно, они были удалены.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageEnumerator.CursorHandle">
          <source>Gets the native Message Queuing cursor handle used to browse messages in the queue.</source>
          <target state="translated">Получает собственный дескриптор курсора Message Queuing, используемый для просмотра сообщений в очереди.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageEnumerator.CursorHandle">
          <source>The native cursor handle.</source>
          <target state="translated">Собственный дескриптор курсора.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageEnumerator.CursorHandle">
          <source>This property contains the native handle to the enumeration.</source>
          <target state="translated">Это свойство содержит собственный дескриптор для перечисления.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageEnumerator.CursorHandle">
          <source>When you have finished working with the enumerator, call <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Close%2A&gt;</ph> to release this resource.</source>
          <target state="translated">После завершения работы с перечислителем вызовите <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Close%2A&gt;</ph> для освобождения этого ресурса.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageEnumerator.CursorHandle">
          <source>The handle does not exist.</source>
          <target state="translated">Этот дескриптор не существует.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageEnumerator">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageEnumerator" /&gt;</ph>.</source>
          <target state="translated">Освобождает ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.Messaging.MessageEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageEnumerator" /&gt;</ph>.</source>
          <target state="translated">Освобождает все ресурсы, занятые модулем <ph id="ph1">&lt;see cref="T:System.Messaging.MessageEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;</ph> позволяет ресурсы, используемые <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> перераспределить для других целей.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;</ph>, в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph> освобождает только неуправляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageEnumerator" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Освобождает неуправляемые ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.Messaging.MessageEnumerator" /&gt;</ph>, а при необходимости освобождает также управляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Этот метод вызывается методом открытые <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;</ph> метод и <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> вызывает защищенный <ph id="ph2">`Dispose(Boolean)`</ph> метод с <ph id="ph3">`disposing`</ph> равным <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> вызывает <ph id="ph2">`Dispose`</ph> с <ph id="ph3">`disposing`</ph> значение <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> references.</source>
          <target state="translated">Если параметр <ph id="ph1">`disposing`</ph> имеет значение <ph id="ph2">`true`</ph>, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <ph id="ph3">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Этот метод вызывает метод <ph id="ph1">`Dispose()`</ph> каждого объекта, на который есть ссылка.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> может вызываться несколько раз другими объектами.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о реализации <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, в разделе <bpt id="p1">[</bpt>метода<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> и <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> и <bpt id="p2">[</bpt>переопределение метода Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageEnumerator">
          <source>Advances the enumerator to the next message in the queue.</source>
          <target state="translated">Перемещает перечислитель на следующее сообщение в очереди.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext">
          <source>Advances the enumerator to the next message in the queue, if one is currently available.</source>
          <target state="translated">Перемещает перечислитель на следующее сообщение в очереди, если таковое в данный момент имеется.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was succesfully advanced to the next message; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has reached the end of the queue.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если перечислитель был успешно перемещен на следующее сообщение; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>, если перечислитель достиг конца очереди. </target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.MoveNext">
          <source>This overload returns immediately if there is no message in the queue.</source>
          <target state="translated">Эта перегрузка возвращает немедленно, если нет никаких сообщений в очереди.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.MoveNext">
          <source>There is another overload that waits a specified <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> for a message to arrive.</source>
          <target state="translated">Имеется другая перегрузка, ожидающая указанного <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> для прихода сообщения.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.MoveNext">
          <source>If a message is not currently available because the queue is empty or because you have moved beyond the last element in the collection, <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph> to the calling method.</source>
          <target state="translated">Если сообщение не в настоящее время недоступно, так как очередь пуста или перемещения после последнего элемента в коллекции, <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> возвращает <ph id="ph2">`false`</ph> вызывающему методу.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.MoveNext">
          <source>Upon creation, an enumerator is conceptually positioned before the first message of the queue, and the first call to <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> brings the first message of the queue into view.</source>
          <target state="translated">После создания перечислитель располагается перед первого сообщения очереди и первый вызов <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> приводит первого сообщения очереди в представлении.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext">
          <source>An exception specific to Message Queuing was thrown.</source>
          <target state="translated">Возникло исключение, характерное для Message Queuing.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> to wait for a message to be available if the enumerator is positioned at the end of the queue.</source>
          <target state="translated">Время <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> на ожидание сообщения в случае, когда перечислитель устанавливается в конец очереди.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>Advances the enumerator to the next message in the queue.</source>
          <target state="translated">Перемещает перечислитель на следующее сообщение в очереди.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>If the enumerator is positioned at the end of the queue, <ph id="ph1">&lt;see cref="M:System.Messaging.MessageEnumerator.MoveNext" /&gt;</ph> waits until a message is available or the given timeout expires.</source>
          <target state="translated">Если перечислитель установлен в конец очереди, метод <ph id="ph1">&lt;see cref="M:System.Messaging.MessageEnumerator.MoveNext" /&gt;</ph> ожидает до тех пор, пока не появится сообщение или же не истечет заданный тайм-аут.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator successfully advanced to the next message; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has reached the end of the queue and a message does not become available within the time specified by the <ph id="ph3">&lt;paramref name="timeout" /&gt;</ph> parameter.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если перечислитель успешно переместился на следующее сообщение; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>, если перечислитель достиг конца очереди, и не появилось новое сообщение в течение времени, заданного параметром <ph id="ph3">&lt;paramref name="timeout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>This overload waits if there is no message in the queue or if the cursor has reached the end of the queue.</source>
          <target state="translated">Эта перегрузка ожидает, если в очереди отсутствуют сообщения, или если курсор достиг конца очереди.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>If a message is not currently available because the queue is empty or because you have moved beyond the last element in the collection, <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> waits the specified timeout.</source>
          <target state="translated">Если сообщение не в настоящее время недоступно, так как очередь пуста или перемещения после последнего элемента в коллекции, <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> ожидает заданное время ожидания.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>If the cursor is already at the end of the queue, <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> only returns <ph id="ph2">`true`</ph> if the new message arrives within the specified time interval, has lower priority than all messages currently in the queue and is placed at the end of the queue.</source>
          <target state="translated">Если курсор уже находится в конце очереди, <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> возвращает только <ph id="ph2">`true`</ph> при получении нового сообщения в течение указанного интервала времени, в настоящее время имеет более низкий приоритет, чем все сообщения в очереди и помещается в конец очереди.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>An overload with no parameter returns immediately if no further messages are in the queue.</source>
          <target state="translated">Перегрузка без параметра возвращает немедленно, если больше нет сообщений в очереди.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>Upon creation, an enumerator is conceptually positioned before the first message of the enumeration, and the first call to <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> brings the first message of the enumeration into view.</source>
          <target state="translated">После создания перечислитель располагается перед первым сообщением перечисления и первый вызов <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> помещает первое сообщение перечисления в представление.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>The value specified for the timeout parameter is invalid.</source>
          <target state="translated">Для параметра timeout задано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>It might represent a negative number.</source>
          <target state="translated">Возможно, это отрицательное число.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>An exception specific to Message Queuing was thrown.</source>
          <target state="translated">Возникло исключение, характерное для Message Queuing.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
          <source>The timeout has expired.</source>
          <target state="translated">Истекло время тайм-аута.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageEnumerator">
          <source>Removes the current message from the queue and returns the message to the calling application.</source>
          <target state="translated">Удаляет текущее сообщение из очереди и возвращает сообщение в вызывающее приложение.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageEnumerator">
          <source>Removing the message deletes it from the queue.</source>
          <target state="translated">При удалении сообщения оно стирается из очереди.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>The behavior described for these overloads is applicable only if the <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> instance is retrieved by using the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph>.</source>
          <target state="translated">Поведение, описанное для этих перегрузок применяется только тогда, когда <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> экземпляр извлекается с помощью <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageEnumerator">
          <source>Do not use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A&gt;</ph> to retrieve an instance of <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> as this method has been deprecated.</source>
          <target state="translated">Не используйте <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A&gt;</ph> для получения экземпляра <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> как этот метод является устаревшим.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent">
          <source>Removes the current message from a transactional or non-transactional queue and returns the message to the calling application.</source>
          <target state="translated">Удаляет текущее сообщение из транзакционной или нетранзакционной очереди и возвращает сообщение в вызывающее приложение.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Не указано время тайм-аута для прибытия сообщения в очередь.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, ссылающийся на первое доступное в очереди сообщение.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> removes and returns the message at the cursor's current location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> Удаляет и возвращает сообщение в текущем положении курсора.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method does.</source>
          <target state="translated">При использовании журнала очереди удаление сообщения приводит к копии должны храниться в очереди журнала, так же как и <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> класса <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">При удалении текущего сообщения курсор перемещается к следующему сообщению.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent">
          <source>You do not have to call <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</source>
          <target state="translated">Нет необходимости вызывать <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> после вызова <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent">
          <source>If you call this overload on a transactional queue, Message Queuing creates a single internal transaction.</source>
          <target state="translated">При вызове этой перегрузки в транзакционной очереди, Message Queuing создает одну внутреннюю транзакцию.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object that specifies the transaction in which the message will be removed.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>, задающий транзакцию, в которой будет удалено сообщение.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source>Removes the current message from a transactional queue and returns the message to the calling application.</source>
          <target state="translated">Удаляет текущее сообщение из транзакционной очереди и возвращает сообщение в вызывающее приложение.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Не указано время тайм-аута для прибытия сообщения в очередь.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, ссылающийся на первое доступное в очереди сообщение.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> removes and returns the message at the cursor's current location, using the internal transaction context defined by the <ph id="ph2">`transaction`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> Удаляет и возвращает сообщение в текущем положении курсора, используя внутреннюю транзакцию контекст, определяемый параметром <ph id="ph2">`transaction`</ph> параметр.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method does.</source>
          <target state="translated">При использовании журнала очереди удаление сообщения приводит к копии должны храниться в очереди журнала, так же как и <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> класса <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> to be returned to the queue.</source>
          <target state="translated">При работе с очередями транзакций, откат транзакции вызывает любые сообщения, удаленные с помощью вызова <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> возвращается в очередь.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">Удаление не является необратимым до фиксации транзакции.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">При удалении текущего сообщения курсор перемещается к следующему сообщению.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source>You do not have to call <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</source>
          <target state="translated">Нет необходимости вызывать <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> после вызова <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated">Одно из значений <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph>, описывающее тип контекста транзакции, связываемого с сообщением.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>Removes the current message from a queue and returns the message to the calling application.</source>
          <target state="translated">Удаляет текущее сообщение из очереди и возвращает сообщение в вызывающее приложение.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Не указано время тайм-аута для прибытия сообщения в очередь.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, ссылающийся на первое доступное в очереди сообщение.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> removes and returns the message at the cursor's current location, using a transaction context defined by the <ph id="ph2">`transactionType`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> Удаляет и возвращает сообщение в текущем положении курсора, используя контекст транзакции, определяемый параметром <ph id="ph2">`transactionType`</ph> параметр.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">Укажите <ph id="ph1">`Automatic`</ph> для <ph id="ph2">`transactionType`</ph> параметра, если он уже существует внешний контекст транзакции, присоединенного к потоку, который вы хотите использовать для получения сообщения.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">Укажите <ph id="ph1">`Single`</ph> Если вы хотите получить сообщение в виде единой внутренней транзакции.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">Можно указать <ph id="ph1">`None`</ph> Если вы хотите получать сообщения из транзакционной очереди вне контекста транзакции.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method does.</source>
          <target state="translated">При использовании журнала очереди удаление сообщения приводит к копии должны храниться в очереди журнала, так же как и <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> класса <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> to be returned to the queue.</source>
          <target state="translated">При работе с очередями транзакций, откат транзакции вызывает любые сообщения, удаленные с помощью вызова <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> возвращается в очередь.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">Удаление не является необратимым до фиксации транзакции.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">При удалении текущего сообщения курсор перемещается к следующему сообщению.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>You do not have to call <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</source>
          <target state="translated">Нет необходимости вызывать <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> после вызова <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> не является одним из членов <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>The interval of time to wait for a message to arrive in the queue.</source>
          <target state="translated">Интервал времени ожидания прихода сообщения в очередь.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>Removes the current message from the queue and returns the message to the calling application.</source>
          <target state="translated">Удаляет текущее сообщение из очереди и возвращает сообщение в вызывающее приложение.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Если имеется сообщение для удаления, этот метод возвращает его немедленно.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">В противном случае метод ожидает прихода нового сообщения в течение заданного времени тайм-аута.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, ссылающийся на первое доступное в очереди сообщение.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> removes and returns the message at the cursor's current location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> Удаляет и возвращает сообщение в текущем положении курсора.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Если курсор находится в конце очереди, эта перегрузка метода ожидает, пока сообщение не станет доступным или время, заданное параметром <ph id="ph1">`timeout`</ph> истечет.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method does.</source>
          <target state="translated">При использовании журнала очереди удаление сообщения приводит к копии должны храниться в очереди журнала, так же как и <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> класса <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">При удалении текущего сообщения курсор перемещается к следующему сообщению.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>You do not have to call <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</source>
          <target state="translated">Нет необходимости вызывать <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> после вызова <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>If you call this overload on a transactional queue, Message Queuing creates a single internal transaction.</source>
          <target state="translated">При вызове этой перегрузки в транзакционной очереди, Message Queuing создает одну внутреннюю транзакцию.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is invalid.</source>
          <target state="translated">Для параметра <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> задано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
          <source>The timeout has expired.</source>
          <target state="translated">Истекло время тайм-аута.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The interval of time to wait for the message to be removed.</source>
          <target state="translated">Интервал времени ожидания удаления сообщения.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object that specifies the transaction context for the message.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>, задающий контекст транзакции для сообщения.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Removes the current message from a transactional queue and returns the message to the calling application.</source>
          <target state="translated">Удаляет текущее сообщение из транзакционной очереди и возвращает сообщение в вызывающее приложение.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Если имеется сообщение для удаления, этот метод возвращает его немедленно.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">В противном случае метод ожидает прихода нового сообщения в течение заданного времени тайм-аута.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, ссылающийся на первое доступное в очереди сообщение.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> removes and returns the message at the cursor's current location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> Удаляет и возвращает сообщение в текущем положении курсора.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Если курсор находится в конце очереди, эта перегрузка метода ожидает, пока сообщение не станет доступным или время, заданное параметром <ph id="ph1">`timeout`</ph> истечет.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> to be returned to the queue.</source>
          <target state="translated">При работе с очередями транзакций, откат транзакции вызывает любые сообщения, удаленные с помощью вызова <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> возвращается в очередь.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">Удаление не является необратимым до фиксации транзакции.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method does.</source>
          <target state="translated">При использовании журнала очереди удаление сообщения приводит к копии должны храниться в очереди журнала, так же как и <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> класса <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">При удалении текущего сообщения курсор перемещается к следующему сообщению.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>You do not have to call <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</source>
          <target state="translated">Нет необходимости вызывать <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> после вызова <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is invalid.</source>
          <target state="translated">Для параметра <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> задано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The timeout has expired.</source>
          <target state="translated">Истекло время тайм-аута.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The interval of time to wait for the message to be removed.</source>
          <target state="translated">Интервал времени ожидания удаления сообщения.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated">Одно из значений <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph>, описывающее тип контекста транзакции, связываемого с сообщением.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Removes the current message from a queue and returns the message to the calling application.</source>
          <target state="translated">Удаляет текущее сообщение из очереди и возвращает сообщение в вызывающее приложение.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Если имеется сообщение для удаления, этот метод возвращает его немедленно.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">В противном случае метод ожидает прихода нового сообщения в течение заданного времени тайм-аута.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, ссылающийся на первое доступное в очереди сообщение.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> removes and returns the message at the cursor's current location, using a transaction context defined by the <ph id="ph2">`transactionType`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> Удаляет и возвращает сообщение в текущем положении курсора, используя контекст транзакции, определяемый параметром <ph id="ph2">`transactionType`</ph> параметр.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Если курсор находится в конце очереди, эта перегрузка метода ожидает, пока сообщение не станет доступным или время, заданное параметром <ph id="ph1">`timeout`</ph> истечет.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">Укажите <ph id="ph1">`Automatic`</ph> для <ph id="ph2">`transactionType`</ph> параметра, если он уже существует внешний контекст транзакции, присоединенного к потоку, который вы хотите использовать для получения сообщения.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">Укажите <ph id="ph1">`Single`</ph> Если вы хотите получить сообщение в виде единой внутренней транзакции.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">Можно указать <ph id="ph1">`None`</ph> Если вы хотите получать сообщения из транзакционной очереди вне контекста транзакции.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method does.</source>
          <target state="translated">При использовании журнала очереди удаление сообщения приводит к копии должны храниться в очереди журнала, так же как и <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> класса <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> метода.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> to be returned to the queue.</source>
          <target state="translated">При работе с очередями транзакций, откат транзакции вызывает любые сообщения, удаленные с помощью вызова <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> возвращается в очередь.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">Удаление не является необратимым до фиксации транзакции.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">При удалении текущего сообщения курсор перемещается к следующему сообщению.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>You do not have to call <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</source>
          <target state="translated">Нет необходимости вызывать <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> после вызова <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is invalid.</source>
          <target state="translated">Для параметра <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> задано недопустимое значение.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The timeout has expired.</source>
          <target state="translated">Истекло время тайм-аута.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> не является одним из членов <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageEnumerator.Reset">
          <source>Resets the current enumerator so it points to the head of the queue.</source>
          <target state="translated">Сбрасывает текущий перечислитель, теперь он указывает на заголовок очереди.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Reset">
          <source>An enumerator can only move in a forward direction.</source>
          <target state="translated">Перечислитель может перемещаться только в прямом направлении.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Reset">
          <source>Use this method to start over at the beginning of the queue.</source>
          <target state="translated">Используйте этот метод, чтобы начать заново в начале очереди.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph>, the cursor points to the first message.</source>
          <target state="translated">После вызова метода <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph>, курсор указывает на первое сообщение.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageEnumerator.Reset">
          <source>You do not need to call <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph> to move the cursor forward to the first message in the queue.</source>
          <target state="translated">Необходимо вызвать <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</ph> после вызова <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph> для перемещения курсора вперед на первое сообщение в очереди.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the message at the current cursor position.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, который ссылается на сообщение в текущей позиции курсора.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the message at the current cursor position.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, который ссылается на сообщение в текущей позиции курсора.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>