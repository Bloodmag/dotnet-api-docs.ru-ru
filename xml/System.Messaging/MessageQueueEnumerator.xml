<Type Name="MessageQueueEnumerator" FullName="System.Messaging.MessageQueueEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f0bb08c5dda4494cddd6991d560488bd0a2e0dd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37646735" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueEnumerator : MarshalByRefObject, IDisposable, System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueEnumerator extends System.MarshalByRefObject implements class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueEnumerator&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable, IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueEnumerator : MarshalByRefObject, IDisposable, System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type MessageQueueEnumerator = class&#xA;    inherit MarshalByRefObject&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="9c9f8-101">Provides a forward-only cursor to enumerate through messages in a message queue.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c9f8-101">Provides a forward-only cursor to enumerate through messages in a message queue.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c9f8-102">Используйте <xref:System.Messaging.MessageQueueEnumerator> для динамического взаимодействия с очередями в сети.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-102">Use <xref:System.Messaging.MessageQueueEnumerator> for dynamic interaction with queues on the network.</span></span> <span data-ttu-id="9c9f8-103">Методы, доступные через <xref:System.Messaging.MessageQueue> класс может возвратить либо <xref:System.Messaging.MessageQueueEnumerator> содержащий динамический список очередей, либо массив, содержащий моментальный снимок коллекции очереди во время вызова указанного метода.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-103">Methods available through the <xref:System.Messaging.MessageQueue> class can return either a <xref:System.Messaging.MessageQueueEnumerator> containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</span></span>  
  
 <span data-ttu-id="9c9f8-104">Нет, не определен порядок очередей в сети.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-104">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="9c9f8-105">Они не являются упорядочение, для этого компьютера "," Метка "," состояние общедоступных или частных или другим критериям, недоступны для пользователей.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-105">They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</span></span> <span data-ttu-id="9c9f8-106">Объект <xref:System.Messaging.MessageQueueEnumerator> курсор, инициализируемый в заголовке динамического списка.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-106">A <xref:System.Messaging.MessageQueueEnumerator> is a cursor, initialized to the head of a dynamic list.</span></span> <span data-ttu-id="9c9f8-107">Можно переместить курсор в первую очередь перечисления, вызвав <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-107">You can move the cursor to the first queue of the enumeration by calling <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="9c9f8-108">После инициализации перечислителя, можно использовать <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> шаг вперед по оставшимся очередям.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-108">After the enumerator has been initialized, you can use <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> to step forward through the remaining queues.</span></span>  
  
 <span data-ttu-id="9c9f8-109">Невозможно на шаг назад с <xref:System.Messaging.MessageQueueEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-109">It is not possible to step backward with a <xref:System.Messaging.MessageQueueEnumerator>.</span></span> <span data-ttu-id="9c9f8-110">Курсор позволяет перемещаться только вперед по перечислению очередей.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-110">A cursor only allows forward movement through the queue enumeration.</span></span> <span data-ttu-id="9c9f8-111">Тем не менее, можно вызвать <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> для сброса перечисления и поместите курсор в начало списка.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-111">However, you can call <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> to reset the enumeration and put the cursor at the beginning of the list again.</span></span> <span data-ttu-id="9c9f8-112">Так как перечислитель является динамическим, очереди, которые добавляются за текущей позицией курсора может осуществляться с помощью перечислителя.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-112">Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</span></span> <span data-ttu-id="9c9f8-113">Очередь, которая вставляется перед текущей позицией курсора не может осуществляться без вызова метода Reset.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-113">A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9c9f8-114">В следующем примере кода выполняется итерация по всем очередям сообщений в сети и проверяет путь для каждой очереди.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-114">The following code example iterates through all the message queues in the network, and examines the path for each queue.</span></span> <span data-ttu-id="9c9f8-115">Наконец он отображает количество общих очередей в сети.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-115">Finally, it displays the number of public queues on the network.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CPP/mqgetmessagequeueenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CS/mqgetmessagequeueenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/VB/mqgetmessagequeueenumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="messageQueueEnumerator.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c9f8-116">Frees the resources associated with the enumerator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-116">Frees the resources associated with the enumerator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c9f8-117">Операционная система хранит открытый дескриптор, <xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A>, перечислителю очереди в течение времени существования курсора.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-117">The operating system retains an open handle, <xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A>, to the queue enumerator during the lifetime of the cursor.</span></span> <span data-ttu-id="9c9f8-118">По завершении работы с перечислителем вызовите <xref:System.Messaging.MessageQueueEnumerator.Close%2A> для освобождения ресурсов, связанных с дескриптором.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-118">When you finish working with the enumerator, call <xref:System.Messaging.MessageQueueEnumerator.Close%2A> to release the resources associated with the handle.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ Current { System::Messaging::MessageQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Messaging.MessageQueue" Usage="System.Messaging.MessageQueueEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c9f8-119">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-119">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c9f8-120">Очередь, по которому в данный момент находится курсор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-120">The queue at which the cursor is currently positioned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c9f8-121">После создания перечислителя он не указывает на любое другое, поэтому <xref:System.Messaging.MessageQueueEnumerator.Current%2A> не является допустимым и будет выдано исключение, если при доступе.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-121">When the enumerator is created, it does not point to anything, so <xref:System.Messaging.MessageQueueEnumerator.Current%2A> is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="9c9f8-122">Необходимо вызвать метод <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> для позиционирования курсора на первую очередь в перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-122">You must call <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> to position the cursor at the first queue in the enumeration.</span></span>  
  
 <span data-ttu-id="9c9f8-123">Несколько вызовов <xref:System.Messaging.MessageQueueEnumerator.Current%2A> без соответствующих вызовов к <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> вернет то же <xref:System.Messaging.MessageQueue> объекта.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-123">Multiple calls to <xref:System.Messaging.MessageQueueEnumerator.Current%2A> with no intervening calls to <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> will return the same <xref:System.Messaging.MessageQueue> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9c9f8-124">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-124">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />.</span>
          </span>
          <span data-ttu-id="9c9f8-125">The cursor is located before the first queue in the enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-125">The cursor is located before the first queue in the enumeration.</span>
          </span>
          <span data-ttu-id="9c9f8-126">-or-  You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last queue in the enumeration).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-126">-or-  You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last queue in the enumeration).</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9c9f8-127">Releases the resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-127">Releases the resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="messageQueueEnumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c9f8-128">Releases all resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-128">Releases all resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c9f8-129">Вызов <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> позволяет ресурсы, используемые <xref:System.Messaging.MessageQueueEnumerator> перераспределить для других целей.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-129">Calling <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> allows the resources used by the <xref:System.Messaging.MessageQueueEnumerator> to be reallocated for other purposes.</span></span> <span data-ttu-id="9c9f8-130">Дополнительные сведения о <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A>, см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="9c9f8-130">For more information about <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="messageQueueEnumerator.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="9c9f8-131">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-131">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c9f8-132">Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-132">Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c9f8-133">Этот метод вызывается открытым <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-133">This method is called by the public <xref:System.Messaging.MessageQueueEnumerator.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="9c9f8-134">`Dispose` вызывает защищенный `Dispose(Boolean)` метод с `disposing` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-134">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="9c9f8-135"><xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` присвоено `false`.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-135"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="9c9f8-136">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Messaging.MessageQueueEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-136">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Messaging.MessageQueueEnumerator> references.</span></span> <span data-ttu-id="9c9f8-137">Этот метод вызывает метод `Dispose` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-137">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9c9f8-138">
            <para>
              <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />. Дополнительные сведения о том, как реализовать <see langword="Dispose" />, см. в разделе [реализация Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Дополнительные сведения о <see langword="Dispose" /> и <see langword="Finalize" />, см. в разделе [очистки неуправляемых Resources](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-138">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MessageQueueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!MessageQueueEnumerator ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="messageQueueEnumerator.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocatorHandle">
      <MemberSignature Language="C#" Value="public IntPtr LocatorHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int LocatorHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.LocatorHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocatorHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr LocatorHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.LocatorHandle : nativeint" Usage="System.Messaging.MessageQueueEnumerator.LocatorHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c9f8-139">Gets the native Message Queuing handle used to locate queues in a network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-139">Gets the native Message Queuing handle used to locate queues in a network.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c9f8-140">Собственный дескриптор для текущей очереди.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-140">The native handle to the current queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c9f8-141">Если больше не требуется это <xref:System.Messaging.MessageQueueEnumerator> экземпляра, вызовите <xref:System.Messaging.MessageQueueEnumerator.Close%2A> для освобождения этого дескриптора к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-141">When you no longer need this <xref:System.Messaging.MessageQueueEnumerator> instance, call <xref:System.Messaging.MessageQueueEnumerator.Close%2A> to free this handle to the resource.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="9c9f8-142">The handle does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-142">The handle does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9c9f8-143">The calling code does not have browse permissions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-143">The calling code does not have browse permissions.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="messageQueueEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c9f8-144">Advances the enumerator to the next queue of the enumeration, if one is currently available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-144">Advances the enumerator to the next queue of the enumeration, if one is currently available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c9f8-145">
            <see langword="true" /> if the enumerator was successfully advanced to the next queue; <see langword="false" /> if the enumerator has reached the end of the enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-145">
              <see langword="true" /> if the enumerator was successfully advanced to the next queue; <see langword="false" /> if the enumerator has reached the end of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c9f8-146"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> Возвращает `false` немедленно в том случае, если нет очередей, связанные с перечислением.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-146"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> returns `false` immediately if there are no queues associated with the enumeration.</span></span>  
  
 <span data-ttu-id="9c9f8-147"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> Возвращает `true` только после достижения конца коллекции.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-147"><xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> will return `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="9c9f8-148">Затем он вернет `false` для каждого последующего вызова.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-148">It will then return `false` for each successive call.</span></span> <span data-ttu-id="9c9f8-149">Однако когда <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> вернулся `false`, доступ к свойству <xref:System.Messaging.MessageQueueEnumerator.Current%2A> свойства приведет к возникновению исключения.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-149">However once <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Messaging.MessageQueueEnumerator.Current%2A> property will throw an exception.</span></span>  
  
 <span data-ttu-id="9c9f8-150">После создания перечислитель располагается перед первым <xref:System.Messaging.MessageQueue> перечисления и первый вызов <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> привносит в первую очередь перечисления в представление.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-150">Upon creation, an enumerator is conceptually positioned before the first <xref:System.Messaging.MessageQueue> of the enumeration, and the first call to <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> brings the first queue of the enumeration into view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9c9f8-151">The calling code does not have browse permissions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-151">The calling code does not have browse permissions.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.Reset" />
        <altmember cref="T:System.Messaging.MessageQueue" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="messageQueueEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c9f8-152">Resets the cursor, so it points to the beginning of the enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-152">Resets the cursor, so it points to the beginning of the enumeration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c9f8-153">Перечислитель перемещается в направлении только вперед.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-153">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="9c9f8-154">Используйте этот метод для возврата в начало перечисления очередей.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-154">Use this method to return to the beginning of the enumeration of queues.</span></span>  
  
 <span data-ttu-id="9c9f8-155"><xref:System.Messaging.MessageQueueEnumerator.Reset%2A> помещает курсор в первую очередь в списке.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-155"><xref:System.Messaging.MessageQueueEnumerator.Reset%2A> positions the cursor at the first queue in the list.</span></span> <span data-ttu-id="9c9f8-156">Необходимо вызвать <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> после вызова метода <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> для перемещения курсора вперед в первую очередь в перечислении.</span><span class="sxs-lookup"><span data-stu-id="9c9f8-156">You do not need to call <xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A> after calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> to move the cursor forward to the first queue in the enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />
        <altmember cref="P:System.Messaging.MessageQueueEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Messaging.MessageQueueEnumerator.System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c9f8-157">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-157">Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c9f8-158">Очередь, по которому в данный момент находится курсор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c9f8-158">The queue at which the cursor is currently positioned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>