<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97d380d9422c7887de13022ae54f79d1e93a9142" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37646790" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type MessageQueueInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Allows you to install and configure a queue that your application needs in order to run. This class is called by the installation utility, for example, InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller> Используется программой установки для записи значения реестра, которые связаны с очередью. Дополнительные сведения о служебных программах установки см. в разделе [Installutil.exe (средство установки)](~/docs/framework/tools/installutil-exe-installer-tool.md).  
  
 Чтобы установить в очередь, создайте класс установщика проекта, который наследует от <xref:System.Configuration.Install.Installer>и задайте <xref:System.ComponentModel.RunInstallerAttribute> для того чтобы класс `true`. Создайте в проекте, <xref:System.Messaging.MessageQueueInstaller> экземпляр для каждой очереди в установке и добавьте экземпляр в класс установщика проекта.  
  
 При создании <xref:System.Messaging.MessageQueueInstaller> экземпляра, при необходимости можно передать существующий <xref:System.Messaging.MessageQueue> (например, с тестового сервера) для <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> конструктор. Этот подход автоматически предоставляет параметры конфигурации для новой очереди, из очереди, переданный настроек. Кроме того, можно вручную задать свойства <xref:System.Messaging.MessageQueueInstaller> экземпляр состояниям последующим вызовом конструктора по умолчанию.  
  
 При вызове программы установки, он ищет <xref:System.ComponentModel.RunInstallerAttribute>. Если это `true`, производится установка всех очередей в <xref:System.Configuration.Install.Installer.Installers%2A> коллекцию, связанную с установщиком проектов. Если <xref:System.ComponentModel.RunInstallerAttribute> является `false`, программа игнорирует установщик проекта.  
  
 Изменить другие свойства <xref:System.Messaging.MessageQueueInstaller> экземпляра до или после добавления этого экземпляра к <xref:System.Configuration.Install.Installer.Installers%2A> коллекцию установщика проекта. Например, очереди <xref:System.Messaging.MessageQueue.Path%2A> необходимо задать до выполнения программы установки.  
  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки installutil.exe. Вызывается автоматически <xref:System.Messaging.MessageQueueInstaller.Install%2A> метод во время процесса установки и вызовы <xref:System.Messaging.MessageQueueInstaller.Commit%2A> Если установки не выдал исключение. При необходимости он обрабатывает сбои, путем вызова <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> для объекта, вызвавшего исключение.  
  
 Программа установки приложения использует установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> для автоматического сохранения сведений о компонентах, которые уже были установлены. Сведения о состоянии постоянно обновляется при каждом <xref:System.Messaging.MessageQueueInstaller> установлен экземпляр служебной программой. Это не обычно требуется для кода явно изменять сведения о состоянии.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class. Does not set any instance properties.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueueInstaller : System.Messaging.MessageQueue -&gt; System.Messaging.MessageQueueInstaller" Usage="new System.Messaging.MessageQueueInstaller componentToCopy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticate : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.</summary>
        <value>
          <see langword="true" /> Если очередь принимает только сообщения, прошедшие проверку подлинности; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда сообщение без проверки подлинности отправляется в очередь, принимающую только сообщения, прошедшие проверку подлинности, сообщение отклоняется. Передающее приложение может запросить уведомление об отклонении сообщения, задав <xref:System.Messaging.Message.AcknowledgeType%2A> для сообщения. В противном случае — нет никаких признаков того, что сообщение было отвергнуто, поэтому сообщения могут быть потеряны, если отправить его в очередь недоставленных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.BasePriority : int16 with get, set" Usage="System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the base priority that is used to route a public queue's messages over the network.</summary>
        <value>Элементарный базовый приоритет для всех сообщений, отправленных в общую очередь. Значение по умолчанию равно нулю (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> Используется для маршрутизации сообщений очереди по сети. Используйте <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> для предоставления сообщений, отправленных в очередь, более высокий или низкий приоритет, чем для сообщения, отправляемые другим очередям. Если очереди базовый приоритет имеет значение, все сообщения, отправляемые на него предоставляется более высокий приоритет, чем для сообщений, отправленных в очереди с более низким приоритетом базовый. Базовый приоритет очереди не влияет порядок размещения сообщений в очереди или на порядок считывания сообщения из очереди.  
  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> Применяется только к общим очередям, осуществляется через контроллер домена (другими словами, с помощью имени общего формата). Базовый приоритет частных очередей и доступ к которым осуществляется непосредственно общих очередей всегда равно нулю.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueueInstaller.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an implementation-specific queue type.</summary>
        <value>Объект <see cref="T:System.Guid" /> , представляющий категорию очереди (или идентификатор типа Message Queuing), которое позволяет приложениям разделять свои очереди в соответствии с их использование на. Значение по умолчанию — <see langword="Guid.empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Категория очереди позволяет приложению классифицировать связанные очереди в соответствии со способом их использования. <xref:System.Messaging.MessageQueue.Category%2A> Может быть пустой ссылкой. Можно также определить новую категорию.  
  
 <xref:System.Messaging.MessageQueue.Category%2A> Свойство предоставляет доступ к свойству Message Queuing идентификатор типа, который связан с определенной очереди и доступно для чтения и записи. Можно использовать <xref:System.Guid.NewGuid%2A> метод для создания значения категории, которое гарантированно будет уникальным для всех <xref:System.Guid> значения. Тем не менее, это необходимо только для значение категории, чтобы он отличался от других категорий, а не от всех других <xref:System.Guid> значения. Например, можно задать <xref:System.Messaging.MessageQueue.Category%2A> для одной группы очередей для {00000000-0000-0000-0000-000000000001} и <xref:System.Messaging.MessageQueue.Category%2A> для другой группы, чтобы {00000000-0000-0000-0000-000000000002}.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Commit : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Commit savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</param>
        <summary>Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" /> installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки installutil.exe. Вызывается автоматически <xref:System.Messaging.MessageQueueInstaller.Install%2A> метод во время установки. Установка является транзакционной, так что в случае сбоя любого компонента проекта во время установки, выполняется откат всех ранее установленных компонентов в их состояние до установки. Это достигается посредством вызова каждого компонента <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> метод.  
  
 После успешной установки всех компонентов, связанных с проектом установки произошла, программа установки фиксирует установок. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> завершает установку <xref:System.Messaging.MessageQueue> , задав очереди соответствующих первоначальному состоянию. Если очередь, заданная <xref:System.Messaging.MessageQueueInstaller.Path%2A> свойство уже существует и содержит сообщения, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> очищает сообщения. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, а не <xref:System.Messaging.MessageQueueInstaller.Install%2A>, очищает сообщения, поскольку операция очистки сообщений не удается выполнить откат.  
  
 Программа установки приложения использует установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> для автоматического сохранения сведений о компонентах, которые уже были установлены. Сведения о состоянии, которые передаются в <xref:System.Messaging.MessageQueueInstaller.Commit%2A> как `savedState` параметра, постоянно обновляется по мере фиксации утилитой каждого <xref:System.Messaging.MessageQueueInstaller> экземпляра. Как правило это необходимо в коде явным образом изменять сведения о состоянии. При очистке очереди <xref:System.Messaging.MessageQueueInstaller.Commit%2A> отправляет записи журнала, чтобы `savedState` связанное с установкой.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="messageQueueInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">A <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />.</param>
        <summary>Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time for a message queue.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки installutil.exe. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> используется программой установки для задания значений свойств <xref:System.Messaging.MessageQueueInstaller> значения существующего <xref:System.Messaging.MessageQueue>.  
  
 Если <xref:System.Messaging.MessageQueue.Path%2A> из <xref:System.Messaging.MessageQueue> то есть переданный является пустой строкой ("»), необходимо задать <xref:System.Messaging.MessageQueue.Path%2A> непустое значение перед выполнением установки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The component associated with this <see cref="T:System.Messaging.MessageQueueInstaller" /> is not a <see cref="T:System.Messaging.MessageQueue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionRequired : System.Messaging.EncryptionRequired with get, set" Usage="System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.</summary>
        <value>Один из <see cref="T:System.Messaging.EncryptionRequired" /> значений, указывающее уровень шифрования, необходимый для сообщений, отправленных в очередь. Значение по умолчанию — <see langword="Optional" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если задано шифрование, только <xref:System.Messaging.Message.Body%2A> сообщения шифруется. Другие свойства, такие как <xref:System.Messaging.Message.Label%2A>, не шифруются.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">A <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation.</param>
        <summary>Performs the installation and writes message queue information to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.Install%2A> Метод записывает сведения об очереди сообщений в реестр и связывает <xref:System.Messaging.MessageQueue> экземпляра с очередью, расположенный по пути, указанному свойством <xref:System.Messaging.MessageQueueInstaller.Path%2A> свойство. Если очередь уже существует, <xref:System.Messaging.MessageQueueInstaller.Install%2A> создает транзакционную очередь. <xref:System.Messaging.MessageQueueInstaller.Install%2A> Задает свойства новой или существующей очереди до тех, которые вы указали в <xref:System.Messaging.MessageQueueInstaller>. Если очередь уже существует, его свойства будут заменены те <xref:System.Messaging.MessageQueueInstaller>. Если очереди не является транзакционной, она удаляется и создается заново как транзакционной очереди.  
  
> [!CAUTION]
>  При необходимости повторного создания очереди сообщений в очереди могут быть потеряны.  
  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки installutil.exe. Вызывается автоматически <xref:System.Messaging.MessageQueueInstaller.Install%2A> метод во время установки для записи сведений реестра, связанных с установки очереди сообщений. Установка является транзакционной, так что в случае сбоя любого компонента проекта во время установки, выполняется откат всех ранее установленных компонентов в их состояние до установки. Это достигается посредством вызова каждого компонента <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> метод.  
  
 После успешной установки всех компонентов, связанных с проектом установки произошла, программа установки фиксирует установок. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> завершает установку <xref:System.Messaging.MessageQueue> , задав очереди соответствующих первоначальному состоянию. Если очередь, заданная <xref:System.Messaging.MessageQueueInstaller.Path%2A> свойство уже существует и содержит сообщения, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> очищает сообщения. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, а не <xref:System.Messaging.MessageQueueInstaller.Install%2A>, очищает сообщения, поскольку операция очистки сообщений не удается выполнить откат.  
  
 Программа установки приложения использует установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> для автоматического сохранения сведений о компонентах, которые уже были установлены. Сведения о состоянии, которые передаются в <xref:System.Messaging.MessageQueueInstaller.Install%2A> как `stateSaver` параметра, постоянно обновляется при каждой установке <xref:System.Messaging.MessageQueueInstaller> экземпляра. Как правило это необходимо в коде явным образом изменять сведения о состоянии.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="messageQueueInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">The installer to compare.</param>
        <summary>Determines whether the specified installer can handle the same kind of installation as this installer.</summary>
        <returns>
          <see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter can handle the same kind of installation; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> возвращает `true` только в том случае, если текущий установщик и установщик, заданный параметром `otherInstaller` параметр принадлежат одному типу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a description of the queue.</summary>
        <value>Метка, описывающая очередь сообщений. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueue.Label%2A> Свойство не должно быть уникальным для очереди.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumJournalSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum size of the journal that is associated with the queue.</summary>
        <value>Максимальный размер в килобайтах, очереди журнала, в которую записываются сообщения, удаляются из очереди. По умолчанию очереди сообщений не ограничено.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании очереди Message Queuing автоматически создает журнал очереди в том же расположении, что новая очередь. Журнал очереди используется для отслеживания сообщений, удаленных из очереди.  
  
 Отслеживаются два типа сообщений: удаленные из очереди по причине превышения времени, в течение которого они должны быть получены, а те, которые удаляются из очереди.  
  
 Приложения не могут отправлять сообщения в очередь журнала. Тем не менее необходимо периодически очистить очередь сообщений, которые больше не нужны. Сообщения, хранящиеся в очереди журнала, входят в квоту для компьютера, на котором размещаются очереди. (Квота компьютера устанавливается администратором).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumQueueSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum size of the queue.</summary>
        <value>Максимальный размер в килобайтах, очереди. По умолчанию очереди сообщений не ограничено.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Максимальный размер очереди обычно устанавливается во время создания очереди, несмотря на то, что может быть изменена позднее.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddress : string with get, set" Usage="System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Introduced in MSMQ 3.0. Gets or sets the multicast address associated with the queue.</summary>
        <value>Объект <see cref="T:System.String" /> , содержащий допустимый групповой адрес (в виде, показанном ниже) или <see langword="null" />, который указывает, что очередь не связана с адресом многоадресной рассылки.  
  
```  
&lt;адрес&gt;:&lt;порт&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the location of the queue that is referenced by this object.</summary>
        <value>Путь, представляющий местоположение очереди в сети.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Синтаксис <xref:System.Messaging.MessageQueue.Path%2A> свойство зависит от типа очереди он ссылается. В следующей таблице показан синтаксис, который нужно использовать для очередей различных типов.  
  
|Тип очереди|Синтаксис|  
|----------------|------------|  
|Общей очереди|`machineName`\\`queueName`|  
|Частной очереди|`machineName`\\`Private$`\\`queueName`|  
|Очереди журнала|`machineName`\\`queueName`\\`Journal$`|  
|Очереди журнала компьютера|`machineName`\\`Journal$`|  
|Очередь недоставленных сообщений компьютера|`machineName`\\`Deadletter$`|  
|Транзакционная очередь недоставленных сообщений компьютера|`machineName`\\`XactDeadletter$`|  
  
 Используйте «.» для локального компьютера.  
  
 Можно также использовать <xref:System.Messaging.MessageQueue.FormatName%2A> или <xref:System.Messaging.MessageQueue.Label%2A> объекта приложения Message Queuing для описания пути к очереди. Следующая таблица показывает синтаксис для каждого типа ссылки.  
  
|Ссылка|Синтаксис|  
|---------------|------------|  
|Название формата|FormatName: [ *имя формата* ]|  
|Метка|Метка: [ *метка* ]|  
  
 Если вы работаете в автономном режиме, необходимо использовать имя формата для задания очереди <xref:System.Messaging.MessageQueue.Path%2A>. Если этого не сделать, приложения приведет к возникновению исключения, так как основной контроллер домена не сможет разрешить <xref:System.Messaging.MessageQueue.Path%2A> в <xref:System.Messaging.MessageQueue.FormatName%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> was set to an invalid value, possibly because the syntax is not valid.  -or-  The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Permissions : System.Messaging.AccessControlList with get, set" Usage="System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets permissions associated with the queue.</summary>
        <value>Объект <see cref="T:System.Messaging.AccessControlList" /> , содержащий один или несколько элементов управления доступом, укажите доверенных лиц и разрешения для очереди.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию создатель общей или частной очереди имеет полный доступ, и группы домена, у всех есть разрешение на получение свойств очереди и получите разрешения записи в очередь. Служба очереди сообщений обращается к каждой записи списка разрешений в свою очередь пока не найдет профиль, применяющийся к текущему пользователю и текущей Предпринятое действие. Как и разрешений операционной системы, явно запретите пользователю с правами имеют преимущество перед теми разрешенных.  
  
 При построении <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> свойства, добавьте <xref:System.Messaging.AccessControlEntry> экземпляры вашего <xref:System.Messaging.AccessControlList> коллекции. При создании каждой записи управления доступом, можно указать универсальный и стандартные права доступа. Права на очередь может быть любое сочетание следующих:  
  
-   Удаление  
  
-   Чтение параметров безопасности  
  
-   Записи безопасности  
  
-   Синхронизация  
  
-   Изменить владельца  
  
-   Чтение  
  
-   Write  
  
-   Выполнение  
  
-   Обязательно  
  
-   Все  
  
-   Нет  
  
 Эти права представляют собой набор битовых флагов, которые можно комбинировать с помощью побитовой операции или:  
  
-   Полный доступ  
  
-   Удалить сообщение  
  
-   Сообщение об ошибке  
  
-   Просмотр сообщения  
  
-   Получение сообщения журнала  
  
-   Получение свойств очереди  
  
-   Задание свойств очередей  
  
-   Получение разрешений  
  
-   Установка разрешений  
  
-   Стать владельцем очереди  
  
-   Запись сообщения  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</param>
        <summary>Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> Метод отменяет эффект <xref:System.Messaging.MessageQueueInstaller.Install%2A> метод. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> вызывается при сбое установки любого компонента в проекте. <xref:System.Messaging.MessageQueueInstaller.Install%2A> Создает метод, или задает свойства для очереди. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> Удаляет очередь, либо сбрасывает их до установки значения свойства существующей очереди.  
  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки InstallUtil.exe. Вызывается автоматически <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> метод после сбоя установки для отмены любых изменений, процесс установки уже внесены.  
  
 Программа установки приложения использует установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> для автоматического сохранения сведений о компонентах, которые уже были установлены. Сведения о состоянии, которые передаются в <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> как `savedState` параметра, постоянно обновляется при каждого <xref:System.Messaging.MessageQueueInstaller> экземпляра. Как правило это необходимо в коде явным образом изменять сведения о состоянии.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Transactional : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.</summary>
        <value>
          <see langword="true" /> Если очередь принимает только сообщения, отправляемые как часть транзакции; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сообщения можно получить из локальной очереди транзакций с или без использования транзакции. Если вы не укажете контекста транзакции, Message Queuing создает один внутреннюю транзакцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</param>
        <summary>Removes an installation by removing queue information from the registry. This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> — `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> также удаляет очередь, связанную с <xref:System.Messaging.MessageQueue>.  
  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки InstallUtil.exe (в режиме удаления). Вызывается автоматически <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> метод восстановления части системы, которые были затронуты установка, в состояние до установки. Это включает в себя удаление из реестра сведений, связанных с устанавливаемой MessageQueue.  
  
 Приложения удалите служит установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> для автоматического сохранения сведений о компонентах, которые уже был удален. Сведения о состоянии, которые передаются в <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> как `savedState` параметра, постоянно обновляется, так как программа удаляет каждый <xref:System.Messaging.MessageQueueInstaller> экземпляра. Как правило это необходимо в коде явным образом изменять сведения о состоянии.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.</summary>
        <value>Один из <see cref="T:System.Configuration.Install.UninstallAction" /> значения, показывающее состояние, чтобы оставить в очередь при <see cref="T:System.Messaging.MessageQueue" /> удаляется. Значение по умолчанию — <see langword="Remove" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При установке очереди, при необходимости можно использовать существующую очередь. Если сделать это, необходимо решить, ли очередь следует вернуться в состояние до установки или остаются в состоянии текущего, после установки. Если вы решите возврат в состояние до установки, не восстанавливаются сообщений, удаленных из очереди во время установки. Вы можете сбросить только свойства очереди, которые связаны с <xref:System.Messaging.MessageQueueInstaller> их перед установкой значения.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.</summary>
        <value>
          <see langword="true" /> для копирования сообщения, извлекаемые из очереди в очередь журнала; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Очередь журнала позволяет отслеживать сообщения даже после их извлечения из очереди. Тем не менее, отслеживаются два типа сообщений: те, которые будут удалены из очереди, по истечении срока действия таймера их время получения, а те, которые удаляются из очереди.  
  
 Очередь журнала должен быть снят периодически для удаления сообщений, которые больше не нужны. Сообщения, хранящиеся в очереди журнала, входят в квоту для компьютера, на котором находится журнал.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>