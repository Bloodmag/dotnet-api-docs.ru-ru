<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2169da977692b3e7ae0fe99175aa7991d83a31df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460838" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Позволяет установить и настроить очередь, требующуюся для работы приложения. Этот класс вызывается программой установки, например служебной программой InstallUtil.exe, при установке <see cref="T:System.Messaging.MessageQueue" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller> Используется программой установки для записи значений реестра, связанные с очередью. Дополнительные сведения о программах установки см. в разделе [Installutil.exe (установщик)](~/docs/framework/tools/installutil-exe-installer-tool.md).  
  
 Чтобы установить в очередь, создайте класс установщика проектов, наследуемый от <xref:System.Configuration.Install.Installer>и задайте <xref:System.ComponentModel.RunInstallerAttribute> для класса `true`. Создайте в проекте <xref:System.Messaging.MessageQueueInstaller> экземпляра для каждой очереди в установке и добавить экземпляр в класс установщика проектов.  
  
 При создании <xref:System.Messaging.MessageQueueInstaller> экземпляра, при необходимости можно передать существующий <xref:System.Messaging.MessageQueue> (например, с тестового сервера) для <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> конструктор. Этот подход автоматически предоставляет параметры конфигурации для новой очереди, из очереди, переданный настроек. Кроме того, можно вручную задать свойства в <xref:System.Messaging.MessageQueueInstaller> экземпляр состояниям последующим вызовом конструктора по умолчанию.  
  
 При вызове программа установки выполняет поиск <xref:System.ComponentModel.RunInstallerAttribute>. Если это `true`, производится установка всех очередей в <xref:System.Configuration.Install.Installer.Installers%2A> коллекцию, связанную с установщиком проектов. Если <xref:System.ComponentModel.RunInstallerAttribute> — `false`, программа установки игнорирует установщик проекта.  
  
 Изменение других свойств <xref:System.Messaging.MessageQueueInstaller> экземпляр до или после добавления этого экземпляра к <xref:System.Configuration.Install.Installer.Installers%2A> коллекции установщика вашего проекта. Например, очереди <xref:System.Messaging.MessageQueue.Path%2A> необходимо задать до выполнения программы установки.  
  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки installutil.exe. Вызывается автоматически <xref:System.Messaging.MessageQueueInstaller.Install%2A> метод во время процесса установки и вызовы <xref:System.Messaging.MessageQueueInstaller.Commit%2A> если установку не возникает исключения. При необходимости он обрабатывает сбои, вызывая <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> для объекта, вызвавшего исключение.  
  
 Программа установки приложения использует установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> для автоматического сохранения сведений о компонентах, которые уже были установлены. Эти сведения постоянно обновляются при каждой <xref:System.Messaging.MessageQueueInstaller> установлен экземпляр служебной программой. Необязательно обычно явно изменять сведения о состоянии в коде.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueueInstaller" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueueInstaller" />. Не устанавливает никаких свойств экземпляра.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">Компонент <see cref="T:System.Messaging.MessageQueue" />, параметры которого определяют параметры свойств новой установленной очереди.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Messaging.MessageQueueInstaller" />, задавая параметры установки равными значениям существующего экземпляра <see cref="T:System.Messaging.MessageQueue" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, будет ли установленная очередь принимать только сообщения, прошедшие проверку подлинности.</summary>
        <value>
          Значение <see langword="true" />, если очередь принимает только сообщения, прошедшие проверку подлинности; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщение без проверки подлинности отправляется в очередь, принимающую только сообщения, прошедшие проверку подлинности, сообщение будет отклонено. Передающее приложение может запросить уведомление об отклонении сообщения, задав <xref:System.Messaging.Message.AcknowledgeType%2A> для сообщения. В противном случае — нет никаких признаков того, что сообщение было отклонено, поэтому сообщения могут быть потеряны, если его отправки в очередь недоставленных сообщений.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или устанавливает базовый приоритет, используемый для маршрутизации сообщений общей очереди в сети.</summary>
        <value>Элементарный базовый приоритет для всех сообщений, переданных в общую очередь. Значение по умолчанию равно нулю (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> Используется для маршрутизации сообщений очереди по сети. Используйте <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> для предоставления сообщений, отправленных в очередь более высокий или более низкий приоритет, чем в сообщения, отправляемые в другие очереди. При базовый приоритет очереди установлен, все сообщения, отправленные ему присваивается более высокий приоритет, чем для сообщений, отправленных в очереди с более низким базовым приоритетом. Базовый приоритет очереди не оказывает влияния порядок размещения сообщений в очереди или на порядок считывания сообщения из очереди.  
  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> Применяется только к общим очередям, осуществляется с помощью контроллера домена (другими словами, с помощью имени общего формата). Базовый приоритет частных очередей и общих очередей с прямым доступом всегда равно нулю.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или устанавливает тип очереди, зависящий от реализации.</summary>
        <value>Идентификатор <see cref="T:System.Guid" />, представляющий категорию очереди (или идентификатор типа Message Queuing), что позволяет приложениям разделять свои очереди на категории в соответствии с порядком их использования. Значение по умолчанию: <see langword="Guid.empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Категория очереди позволяет приложению классифицировать связанные очереди в соответствии со способом их использования. <xref:System.Messaging.MessageQueue.Category%2A> Может быть пустой ссылкой. Можно также определить новую категорию.  
  
 <xref:System.Messaging.MessageQueue.Category%2A> Свойство предоставляет доступ к свойству Message Queuing идентификатор типа, который связан с определенной очереди и доступно для чтения и записи. Можно использовать <xref:System.Guid.NewGuid%2A> метод для создания значения категории, которое гарантированно будет уникальным для всех <xref:System.Guid> значения. Тем не менее, это необходимо только для значения категории, чтобы он отличался от других категорий, а не от всех других <xref:System.Guid> значения. Например, можно задать <xref:System.Messaging.MessageQueue.Category%2A> для одной группы очередей для {00000000-0000-0000-0000-000000000001} и <xref:System.Messaging.MessageQueue.Category%2A> для другой группы для очередей {—}.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект <see cref="T:System.Collections.IDictionary" />, содержащий состояние компьютера после установки.</param>
        <summary>Завершает процесс установки, фиксируя сведения об установке <see cref="T:System.Messaging.MessageQueue" />, записанные в реестр методом <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />. Этот метод предназначен для использования средствами установки, которые автоматически вызывают соответствующие методы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки installutil.exe. Вызывается автоматически <xref:System.Messaging.MessageQueueInstaller.Install%2A> метод во время установки. Установка является транзакционной, так что в случае сбоя любого компонента проекта во время установки, выполняется откат всех ранее установленных компонентов в состояние до установки. Это достигается путем вызова каждого компонента <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> метод.  
  
 После успешной установки всех компонентов, связанных с проектом установки произошла, программа установки фиксирует установок. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> завершается установка <xref:System.Messaging.MessageQueue> , задав соответствующие исходное состояние очереди. Если очередь, заданная <xref:System.Messaging.MessageQueueInstaller.Path%2A> свойство уже существует и содержит сообщения, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> очищает сообщения. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, а не <xref:System.Messaging.MessageQueueInstaller.Install%2A>, очищает сообщения, так как во время очистки сообщений не может быть выполнен откат.  
  
 Программа установки приложения использует установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> для автоматического сохранения сведений о компонентах, которые уже были установлены. Сведения о состоянии, которые передаются в <xref:System.Messaging.MessageQueueInstaller.Commit%2A> как `savedState` параметра, постоянно обновляется в процессе фиксации утилитой каждого <xref:System.Messaging.MessageQueueInstaller> экземпляр. Обычно не требуется явно изменять сведения о состоянии в коде. При снятом флажке очереди <xref:System.Messaging.MessageQueueInstaller.Commit%2A> отправляет записи журнала для `savedState` связанное с установкой.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Интерфейс <see cref="T:System.ComponentModel.IComponent" />, используемый в качестве шаблона для <see cref="T:System.Messaging.MessageQueueInstaller" />.</param>
        <summary>Копирует значения свойств компонента <see cref="T:System.Messaging.MessageQueue" />, которые требуются во время установки для очереди сообщений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки installutil.exe. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> используется программой установки для установки значений свойств <xref:System.Messaging.MessageQueueInstaller> значения существующего <xref:System.Messaging.MessageQueue>.  
  
 Если <xref:System.Messaging.MessageQueue.Path%2A> из <xref:System.Messaging.MessageQueue> , переданный — пустая строка ("»), необходимо задать <xref:System.Messaging.MessageQueue.Path%2A> непустое значение перед выполнением установки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Компонент, связанный с <see cref="T:System.Messaging.MessageQueueInstaller" />, не является <see cref="T:System.Messaging.MessageQueue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, будет ли очередь принимать только конфиденциальные, или зашифрованные сообщения.</summary>
        <value>Одно из значений <see cref="T:System.Messaging.EncryptionRequired" />, показывающее уровень шифрования, необходимый при передаче сообщения в очередь. Значение по умолчанию: <see langword="Optional" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если задано шифрование, только <xref:System.Messaging.Message.Body%2A> сообщения шифруются. Другие свойства, такие как <xref:System.Messaging.Message.Label%2A>, не шифруются.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">Объект <see cref="T:System.Collections.IDictionary" />, используемый в целях сохранения информации, необходимой для выполнения фиксации, отката к предыдущей точке или операции деинсталляции.</param>
        <summary>Выполняет установку и записывает сведения об очереди сообщений в реестр. Этот метод предназначен для использования средствами установки, которые автоматически вызывают соответствующие методы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.Install%2A> Метод записывает сведения об очереди сообщений в реестр и связывает <xref:System.Messaging.MessageQueue> экземпляра с очередью, расположенный по пути, указанному свойством <xref:System.Messaging.MessageQueueInstaller.Path%2A> свойство. Если очередь не существует, <xref:System.Messaging.MessageQueueInstaller.Install%2A> создает транзакционную очередь. <xref:System.Messaging.MessageQueueInstaller.Install%2A> Задает свойства новой или существующей очереди до тех, которые были выбраны в <xref:System.Messaging.MessageQueueInstaller>. Если очередь уже существует, ее свойства изменяются с соответствующими <xref:System.Messaging.MessageQueueInstaller>. Если существующая очередь не является транзакционной, оно удаляется и создается заново как транзакционной очереди.  
  
> [!CAUTION]
>  Если это необходимо для повторного создания очереди, сообщения в очереди будут потеряны.  
  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки installutil.exe. Вызывается автоматически <xref:System.Messaging.MessageQueueInstaller.Install%2A> метод во время установки для записи реестра сведения, связанные с установки очереди сообщений. Установка является транзакционной, так что в случае сбоя любого компонента проекта во время установки, выполняется откат всех ранее установленных компонентов в состояние до установки. Это достигается путем вызова каждого компонента <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> метод.  
  
 После успешной установки всех компонентов, связанных с проектом установки произошла, программа установки фиксирует установок. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> завершается установка <xref:System.Messaging.MessageQueue> , задав соответствующие исходное состояние очереди. Если очередь, заданная <xref:System.Messaging.MessageQueueInstaller.Path%2A> свойство уже существует и содержит сообщения, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> очищает сообщения. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, а не <xref:System.Messaging.MessageQueueInstaller.Install%2A>, очищает сообщения, так как во время очистки сообщений не может быть выполнен откат.  
  
 Программа установки приложения использует установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> для автоматического сохранения сведений о компонентах, которые уже были установлены. Сведения о состоянии, которые передаются в <xref:System.Messaging.MessageQueueInstaller.Install%2A> как `stateSaver` параметра, постоянно обновляется при установке каждого <xref:System.Messaging.MessageQueueInstaller> экземпляр. Обычно не требуется явно изменять сведения о состоянии в коде.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">Установщик для сравнения.</param>
        <summary>Определяет, может ли указанный установщик обрабатывать тот же тип установки, что и данный установщик.</summary>
        <returns>
          Значение <see langword="true" />, если данный установщик и установщик, заданный параметром <paramref name="otherInstaller" />, могут выполнять один и тот же тип установки, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> возвращает `true` только в том случае, если данный установщик и установщик, заданный параметром `otherInstaller` являются того же типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает описание очереди.</summary>
        <value>Метка, описывающая очередь сообщений. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueue.Label%2A> Свойство необязательно должен быть уникальным для очереди.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение параметра <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимальный размер журнала, связанного с данной очередью.</summary>
        <value>Максимальный размер (в килобайтах) очереди журнала, в которую записываются сообщения, удаленные из очереди. Значение по умолчанию для Message Queuing не имеет ограничения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании очереди, очереди сообщений автоматически создает журнал очереди в том же расположении, что новая очередь. Журнал очереди используется для отслеживания сообщений, удаленных из очереди.  
  
 Отслеживаются два типа сообщений: удаленные из очереди по причине превышения времени, в течение которого они должны быть получены и сообщения, удаленные из очереди.  
  
 Приложения не могут отправлять сообщения в очередь журнала. Тем не менее необходимо периодически очищать очередь для удаления сообщений, которые больше не нужны. Сообщения, хранящиеся в очереди журнала, входят в квоту для компьютера, на котором размещаются очереди. (Квота компьютера устанавливается администратором).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимальный размер очереди.</summary>
        <value>Максимальный размер очереди в килобайтах. Значение по умолчанию для Message Queuing не имеет ограничения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Максимальный размер очереди обычно устанавливается во время ее создания, хотя ее можно сбросить позже.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представлено в MSMQ 3.0. Получает или задает адрес многоадресной рассылки, связанный с данной очередью.</summary>
        <value>Объект <see cref="T:System.String" />, содержащий допустимый групповой адрес (в виде, показанном ниже) или значение <see langword="null" />, которое указывает, что очередь не связана с групповым адресом.  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">Приложение MSMQ 3.0 не установлено.</exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает местоположение очереди, на которую ссылается данный объект.</summary>
        <value>Путь, представляющий местоположение очереди в сети.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Синтаксис <xref:System.Messaging.MessageQueue.Path%2A> свойства зависит от типа очереди он ссылается. В следующей таблице показан синтаксис, который нужно использовать для очередей различных типов.  
  
|Тип очереди|Синтаксис|  
|----------------|------------|  
|Общая очередь|`machineName`\\`queueName`|  
|Частной очереди|`machineName`\\`Private$`\\`queueName`|  
|Очередь журнала|`machineName`\\`queueName`\\`Journal$`|  
|Очередь журнала компьютера|`machineName`\\`Journal$`|  
|Очередь недоставленных сообщений компьютера|`machineName`\\`Deadletter$`|  
|Машины транзакционную очередь недоставленных сообщений|`machineName`\\`XactDeadletter$`|  
  
 Используйте «.» для локального компьютера.  
  
 Можно также использовать <xref:System.Messaging.MessageQueue.FormatName%2A> или <xref:System.Messaging.MessageQueue.Label%2A> объекта приложения очереди сообщений для описания пути к очереди. В следующей таблице показаны правильный синтаксис для каждого типа ссылки.  
  
|Ссылка|Синтаксис|  
|---------------|------------|  
|Название формата|FormatName: [ *имя формата* ]|  
|Метка|Label:[ *label* ]|  
  
 При работе в автономном режиме необходимо использовать имя формата для задания очереди <xref:System.Messaging.MessageQueue.Path%2A>. Если этого не сделать, приложение выдаст исключение, так как основной контроллер домена не сможет разрешить <xref:System.Messaging.MessageQueue.Path%2A> в <xref:System.Messaging.MessageQueue.FormatName%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Установлено недопустимое значение <see cref="P:System.Messaging.MessageQueueInstaller.Path" />, возможно, вследствие неправильного синтаксиса.  
  
 - или -  
  
 Значение параметра <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает разрешения, связанные с очередью.</summary>
        <value>Объект <see cref="T:System.Messaging.AccessControlList" />, содержащий одну или более записей управления доступом, описывающих доверенных лиц и разрешения, предоставляемые для работы с очередью.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию создатель общей или частной очереди имеет полный доступ и группы домена, все имеют разрешение на получение свойств очередей и получить разрешения записи в очередь. Служба Message Queuing обращается к каждой записи списка разрешений в свою очередь пока не найдет, применимую для текущего пользователя и текущего Предпринятое действие. Как и разрешений операционной системы, права, которые специально запретить пользователю имеют более высокий приоритет по сравнению с теми разрешенных.  
  
 При построении <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> свойства, добавьте <xref:System.Messaging.AccessControlEntry> экземпляров для вашего <xref:System.Messaging.AccessControlList> коллекции. При создании каждой записи управления доступом, можно указать универсальный и стандартные права доступа. Права в очередь, могут быть любым сочетанием следующих:  
  
-   Удаление  
  
-   Чтение параметров безопасности  
  
-   Записи безопасности  
  
-   Синхронизация  
  
-   Изменение владельца  
  
-   Чтение  
  
-   Write  
  
-   Выполнение  
  
-   Обязательно  
  
-   Все  
  
-   Нет  
  
 Эти права представляют собой набор битовых флагов, которые можно комбинировать с помощью побитового OR:  
  
-   Полный доступ  
  
-   Удаление сообщения  
  
-   Сообщение об ошибке  
  
-   Просмотр сообщения  
  
-   Получение сообщения журнала  
  
-   Получение свойств очереди  
  
-   Задать свойства очереди  
  
-   Получение разрешений  
  
-   Установка разрешений  
  
-   Стать владельцем очереди  
  
-   Запись сообщения  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект <see cref="T:System.Collections.IDictionary" />, содержащий состояние компьютера до установки.</param>
        <summary>Восстанавливает компьютер в состояние, в котором он находился до установки, путем отката сведений об очереди, записанных в реестр процедурой установки. Этот метод предназначен для использования средствами установки, которые автоматически вызывают соответствующие методы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> Метод отменяет действия <xref:System.Messaging.MessageQueueInstaller.Install%2A> метод. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> вызывается, если не удастся установить любой компонент в проекте. <xref:System.Messaging.MessageQueueInstaller.Install%2A> Метод создает или задает свойства для очереди. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> Удаляет очередь, либо сбрасывает свойства существующей очереди в исходное состояние.  
  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки InstallUtil.exe. Вызывается автоматически <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> метод после сбоя установки для отмены любых изменений, процесс установки уже внесены.  
  
 Программа установки приложения использует установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> для автоматического сохранения сведений о компонентах, которые уже были установлены. Сведения о состоянии, которые передаются в <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> как `savedState` параметра, постоянно обновляется в процессе отката утилитой каждого <xref:System.Messaging.MessageQueueInstaller> экземпляр. Обычно не требуется явно изменять сведения о состоянии в коде.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, принимает ли очередь только сообщения, отправляемые как часть транзакции.</summary>
        <value>
          Значение <see langword="true" />, если очередь принимает только сообщения, передаваемые как часть транзакции; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сообщения могут быть считаны из локальной очереди транзакций с использованием транзакции или без. Если вы не укажете контекст транзакции, Message Queuing создает одну внутреннюю транзакцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект <see cref="T:System.Collections.IDictionary" />, содержащий состояние компьютера после установки.</param>
        <summary>Удаляет установку путем удаления из реестра сведений об очереди. Этот метод предназначен для использования средствами удаления установки, которые автоматически вызывают соответствующие методы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> — `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> также удаляет очередь, связанную с <xref:System.Messaging.MessageQueue>.  
  
 Как правило, не следует вызывать методы <xref:System.Messaging.MessageQueueInstaller> из кода; они обычно вызываются только программой установки InstallUtil.exe (в режиме удаления). Вызывается автоматически <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> метод восстановления части системы, которые повлияла установка, в их состояние до установки. Это включает в себя удаление из реестра сведений, связанных с устанавливаемой MessageQueue.  
  
 Удалить приложение, служит установщика проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> для автоматического сохранения сведений о компонентах, которые уже был удален. Сведения о состоянии, которые передаются в <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> как `savedState` параметра, непрерывно изменяются по мере удаления утилитой установки каждого <xref:System.Messaging.MessageQueueInstaller> экземпляр. Обычно не требуется явно изменять сведения о состоянии в коде.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, что установщик делает с очередью во время деинсталляции: удаляет ее, восстанавливает до состояния, предшествовавшего установке, или же оставляет ее в текущем состоянии.</summary>
        <value>Одно из значений <see cref="T:System.Configuration.Install.UninstallAction" /> указывающее, в каком состоянии будет очередь при деинсталляции <see cref="T:System.Messaging.MessageQueue" />. Значение по умолчанию: <see langword="Remove" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При установке очереди, при необходимости можно использовать существующую очередь. Если сделать это, необходимо решить ли эта очередь вернуться в состояние до установки или остаются в состоянии текущего, после установки. Если нужно вернуться в состояние до установки очереди сообщений, удаленных из очереди во время установки не будут восстановлены. Вы можете сбросить только свойства очереди, которые связаны с <xref:System.Messaging.MessageQueueInstaller> значениями до установки.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, будут ли сообщения, извлекаемые из очереди, копироваться в связанную очередь журнала.</summary>
        <value>
          Значение <see langword="true" />, если сообщения, извлекаемые из очереди, необходимо копировать в очередь журнала, в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Очередь журнала позволяет отслеживать сообщения даже после их извлечения из очереди. Тем не менее, отслеживаются два типа сообщений: те, которые будут удалены из очереди после истечения времени ожидания их время получения, а те, которые будут автоматически удаляться из очереди.  
  
 Очередь журнала следует периодически очищать с целью удаления сообщений, которые больше не нужны. Сообщения, хранящиеся в очереди журнала, входят в квоту для компьютера, на котором находится журнал.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>