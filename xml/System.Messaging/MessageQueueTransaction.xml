<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageQueueTransaction.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d2f750339c17f272f8cc360d38e3f1850a40606b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2f750339c17f272f8cc360d38e3f1850a40606b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Provides a Message Queuing internal transaction.</source>
          <target state="translated">Обеспечивает внутреннюю транзакцию службы Message Queuing.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>To send or receive a message as part of a transaction, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> class to create a transaction and pass it to an overload of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType&gt;</ph> method that takes a <ph id="ph4">`transaction`</ph> parameter.</source>
          <target state="translated">Чтобы отправлять или получать сообщения в рамках транзакции, можно использовать <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> класс создания транзакции и передать его в перегрузку <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType&gt;</ph> метод или <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType&gt;</ph> метода, принимающего <ph id="ph4">`transaction`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Messages sent as part of a transaction must be sent to transactional queues.</source>
          <target state="translated">Сообщения, отправляемые как часть транзакции должны отправляться в транзакционные очереди.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Messages received from transactional queues must be received using a specified transaction.</source>
          <target state="translated">Сообщения, полученные из транзакционной очереди должен быть получен с помощью заданной транзакции.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>In addition to the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, you can receive messages with a specified identifier or specified correlation identifier.</source>
          <target state="translated">В дополнение к <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> метода, вы можете получать сообщения с указанным идентификатором или заданным идентификатором корреляции.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>See the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A&gt;</ph> methods for more information about selectively receiving messages from transactional queues.</source>
          <target state="translated">В разделе <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A&gt;</ph> Дополнительные сведения о селективном получении сообщений из очереди транзакций.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Messages sent to transactional queues are removed if the transaction is committed.</source>
          <target state="translated">Сообщения, отправленные в транзакционные очереди будут удалены при фиксации транзакции.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Similarly, messages received from transactional queues are returned to the queue if the transaction is rolled back.</source>
          <target state="translated">Аналогичным образом сообщения, полученные из транзакционной очереди возвращаются в очередь, если откат транзакции.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>If you instantiate a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> and pass it to an applicable overload of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method or <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method to send a message to a non-transactional queue or receive a message from a non-transactional queue, the method throws an exception that indicates "Wrong Transaction Usage."</source>
          <target state="translated">При создании экземпляра <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> и передать его применимые перегрузку <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> метода или <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> метода отправки сообщения в нетранзакционную очередь или получения сообщений из нетранзакционной очереди, метод создает исключение Указывает «Неправильное использование транзакций».</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> is threading apartment aware, so if your apartment state is <ph id="ph2">`STA`</ph>, you cannot use the transaction in multiple threads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> Потоковый подразделения знать, поэтому если состояние апартамента — <ph id="ph2">`STA`</ph>, транзакции нельзя использовать в нескольких потоках.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Visual Basic sets the state of the main thread to <ph id="ph1">`STA`</ph>, so you must apply the <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> in the <ph id="ph3">`Main`</ph> subroutine.</source>
          <target state="translated">Visual Basic устанавливает состояние основного потока в <ph id="ph1">`STA`</ph>, поэтому необходимо применить <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> в <ph id="ph3">`Main`</ph> подпрограммы.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Otherwise, sending a transactional message using another thread throws a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> exception.</source>
          <target state="translated">В противном случае при отправке транзакционного сообщения с помощью другого потока создастся исключение <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>You apply the <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> by using the following fragment.</source>
          <target state="translated">Можно применить <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> , используя следующий фрагмент.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueTransaction">
          <source>This type is thread safe.</source>
          <target state="translated">Данный тип потокобезопасен.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.#ctor">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> property to <ph id="ph2">`Initialized`</ph>.</source>
          <target state="translated">Этот конструктор задает <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> свойства <ph id="ph2">`Initialized`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source>Rolls back the pending internal transaction.</source>
          <target state="translated">Выполняет откат отложенной внутренней транзакции.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> marks the unsuccessful completion of a process begun at a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> отмечает неуспешное завершение процесса в вызов <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source>Typically, one makes a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> within a <ph id="ph2">`Try...Catch`</ph> exception-handling block, putting a call to <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> in the <ph id="ph4">`Try`</ph> clause, and a call to <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> in the <ph id="ph6">`Catch`</ph> clause.</source>
          <target state="translated">Как правило, выполняется вызов для <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> в <ph id="ph2">`Try...Catch`</ph> блок обработки исключений, вызывать <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> в <ph id="ph4">`Try`</ph> предложения и вызов <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> в <ph id="ph6">`Catch`</ph> предложения.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> rolls back the entire transaction.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> выполняет откат всей транзакции.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source>This includes all messages sent or received after the call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</source>
          <target state="translated">Это включает все сообщения, отправленные или полученные после вызова <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source>The internal transaction you are attempting to roll back has not started.</source>
          <target state="translated">Внутренняя транзакция, для которой предпринята попытка отката, не начата.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Abort">
          <source>An internal Message Queuing error occurs.</source>
          <target state="translated">Возникла внутренняя ошибка Message Queuing.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>Begins a new Message Queuing internal transaction.</source>
          <target state="translated">Начинает новую внутреннюю транзакцию Message Queuing.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> marks the start of processing that will be committed or rolled back, depending on the success of the transaction.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> Отмечает начало обработки, который будет фиксация или откат в зависимости от успеха транзакции.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>If an exception occurs during processing, the entire transaction is rolled back.</source>
          <target state="translated">При возникновении исключения во время обработки, вся транзакция откатывается.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>This includes all messages sent or received after the call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</source>
          <target state="translated">Это включает все сообщения, отправленные или полученные после вызова <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>Typically, one makes a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> within a <ph id="ph2">`Try...Catch`</ph> exception-handling block, putting a call to <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> in the <ph id="ph4">`Try`</ph> clause, and a call to <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> in the <ph id="ph6">`Catch`</ph> clause.</source>
          <target state="translated">Как правило, выполняется вызов для <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> в <ph id="ph2">`Try...Catch`</ph> блок обработки исключений, вызывать <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> в <ph id="ph4">`Try`</ph> предложения и вызов <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> в <ph id="ph6">`Catch`</ph> предложения.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>The transaction has already been started.</source>
          <target state="translated">Данная транзакция уже начата.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Begin">
          <source>An internal Message Queuing error occurs.</source>
          <target state="translated">Возникла внутренняя ошибка Message Queuing.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>Commits a pending internal transaction.</source>
          <target state="translated">Фиксирует отложенную внутреннюю транзакцию.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> marks the successful completion of processing begun at a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> Отмечает успешное завершение обработки в вызов <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>If an exception occurs between the call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> and the call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph>, the entire transaction is rolled back.</source>
          <target state="translated">При возникновении исключения между вызовами <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> и вызов <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph>, откат всей транзакции.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>This includes all messages sent or received after the call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</source>
          <target state="translated">Это включает все сообщения, отправленные или полученные после вызова <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>Typically, one makes a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> within a <ph id="ph2">`Try...Catch`</ph> exception-handling block, putting a call to <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> in the <ph id="ph4">`Try`</ph> clause, and a call to <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> in the <ph id="ph6">`Catch`</ph> clause.</source>
          <target state="translated">Как правило, выполняется вызов для <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> в <ph id="ph2">`Try...Catch`</ph> блок обработки исключений, вызывать <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> в <ph id="ph4">`Try`</ph> предложения и вызов <ph id="ph5">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> в <ph id="ph6">`Catch`</ph> предложения.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>The transaction you are trying to commit has not started.</source>
          <target state="translated">Транзакция, для которой предпринята попытка фиксации, не начата.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Commit">
          <source>An internal Message Queuing error occurs.</source>
          <target state="translated">Возникла внутренняя ошибка Message Queuing.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueTransaction">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>.</source>
          <target state="translated">Освобождает ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>.</source>
          <target state="translated">Освобождает все ресурсы, занятые модулем <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Вызов <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph> позволяет ресурсы, используемые <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> перераспределить для других целей.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">`Dispose`</ph>, в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose">
          <source>Any pending internal transactions are rolled back by <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph>.</source>
          <target state="translated">Все ожидающие внутренние транзакции выполняется откат <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph> освобождает только неуправляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Освобождает неуправляемые ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph>, а при необходимости освобождает также управляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Этот метод вызывается методом открытые <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Dispose%2A&gt;</ph> метод и <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> вызывает защищенный <ph id="ph2">`Dispose(Boolean)`</ph> метод с <ph id="ph3">`disposing`</ph> равным <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> вызывает <ph id="ph2">`Dispose`</ph> с <ph id="ph3">`disposing`</ph> значение <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> references.</source>
          <target state="translated">Если параметр <ph id="ph1">`disposing`</ph> имеет значение <ph id="ph2">`true`</ph>, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Этот метод вызывает метод <ph id="ph1">`Dispose`</ph> каждого объекта, на который есть ссылка.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> может вызываться несколько раз другими объектами.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о реализации <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, в разделе <bpt id="p1">[</bpt>метода<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Дополнительные сведения о <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> и <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, в разделе <bpt id="p1">[</bpt>очистки неуправляемых ресурсов<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> и <bpt id="p2">[</bpt>переопределение метода Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueTransaction.Finalize">
          <source>Releases the resources held by the current instance.</source>
          <target state="translated">Освобождает ресурсы, удерживаемые текущим экземпляром.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Этот метод переопределяет метод <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Finalize%2A&gt;</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Код приложения не должен вызывать этот метод; Объект <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Finalize%2A&gt;</ph> метод автоматически вызывается во время сборки мусора, если завершение работы сборщика мусора была отключена с помощью вызова <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueTransaction.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>методы Finalize и деструкторы<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>очистки неуправляемых ресурсов<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, и <bpt id="p3">[</bpt>переопределение метода Finalize<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueTransaction.Status">
          <source>Gets the status of the transaction.</source>
          <target state="translated">Получает статус данной транзакции.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueTransaction.Status">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionStatus" /&gt;</ph> values that indicates whether the transaction has been committed, aborted, initialized, or is pending.</source>
          <target state="translated">Одно из значений <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionStatus" /&gt;</ph>, показывающее, была ли данная транзакция зафиксирована, прервана, инициализирована или отложена.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueTransaction.Status">
          <source>When an instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> class has been created, the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> is set by the constructor to <ph id="ph3">`Initialized`</ph>.</source>
          <target state="translated">При создании экземпляра <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> создан класс <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> заданное конструктором для <ph id="ph3">`Initialized`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueTransaction.Status">
          <source>After a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> but before a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>, the <ph id="ph4">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> is <ph id="ph5">`Pending`</ph>.</source>
          <target state="translated">После вызова <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph> , но перед вызовом <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Messaging.MessageQueueTransaction.Status%2A&gt;</ph> — <ph id="ph5">`Pending`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>