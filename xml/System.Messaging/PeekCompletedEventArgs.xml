<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd9738e92d7b8a310ccbfc821359163880970679" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459168" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Messaging.MessageQueue.PeekCompleted" />. Когда асинхронная операция считывания вызывает обработчик событий, экземпляр этого класса передается в обработчик.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании уведомления о событии для считывания (чтение без удаления) сообщения асинхронно из очереди, необходимо создать метод, управляющий обработкой. Код должен вызывать <xref:System.Messaging.MessageQueue.BeginPeek%2A> для начала асинхронной обработки. При считывании сообщения приложение уведомления через <xref:System.Messaging.MessageQueue.PeekCompleted> событий. Экземпляр <xref:System.Messaging.PeekCompletedEventArgs> передается в делегат события, который вызывает обработчик события. Данные, связанные с <xref:System.Messaging.MessageQueue.PeekCompleted> событий, содержащихся в делегата <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> параметра.  
  
 Существует два способа для получения уведомлений о завершении события: уведомления о событиях и обратные вызовы. <xref:System.Messaging.PeekCompletedEventArgs> используется только с уведомлениями о событии. Сведения о сравнении обратных вызовов и уведомлений о событиях см. в разделе «события vs. Обратные вызовы» на сайте MSDN.  
  
 <xref:System.Messaging.PeekCompletedEventArgs> предоставляет доступ к сообщению, инициируемой конца асинхронной операции считывания, по <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> член. Это может быть альтернативного доступа к сообщению и ведет себя так же как вызов <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода создается обработчик событий для <xref:System.Messaging.MessageQueue.PeekCompleted> событий и связывает его с событием делегировать с помощью <xref:System.Messaging.PeekCompletedEventHandler>. Обработчик событий `MyPeekCompleted`, считывает сообщение и записывает его метку на экран.  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает результат запрошенной асинхронной операции.</summary>
        <value>Объект <see cref="T:System.IAsyncResult" />, содержащий данные, связанные с операцией считывания.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> идентифицирует действующие или завершенные асинхронные операции. Свойство содержит данные, которые помогают определить, какая из нескольких возможных асинхронных операций, чтобы завершить, и при передаче в обработчик событий обеспечивает <xref:System.Messaging.MessageQueue.EndPeek%2A> для доступа к сообщение, связанное с завершенной операцией.  
  
 При вызове <xref:System.Messaging.MessageQueue.BeginPeek%2A>, <xref:System.IAsyncResult> возвращается немедленно, даже если сообщение, если оно существует, имеет еще не были получены, поскольку операция не завершена. <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> Указывает состояние асинхронной операции. <xref:System.Messaging.MessageQueue.BeginPeek%2A> Создает объект, который изменяется на протяжении выполнения операции до <xref:System.Messaging.MessageQueue.EndPeek%2A> его завершения.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сообщение, связанное с данной асинхронной операцией считывания.</summary>
        <value>Объект <see cref="T:System.Messaging.Message" />, представляющий собой конечный результат асинхронной операции считывания. </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> Свойство служит для извлечения сообщения, что инициирует окончание асинхронной операции считывания.  
  
 <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> вызывается в первый раз <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> свойство доступно для чтения, поэтому нет необходимости вызывать <xref:System.Messaging.MessageQueue.EndPeek%2A> перед получением значения этого свойства.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">Невозможно извлечь <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" />. Возможно, в асинхронной операции истек срок действия тайм-аута.</exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>