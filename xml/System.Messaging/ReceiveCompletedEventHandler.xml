<Type Name="ReceiveCompletedEventHandler" FullName="System.Messaging.ReceiveCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e29941011a54e94e9dec1acbb87744169881a59" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42945188" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ReceiveCompletedEventHandler(object sender, ReceiveCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ReceiveCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ReceiveCompletedEventHandler(sender As Object, e As ReceiveCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ReceiveCompletedEventHandler(System::Object ^ sender, ReceiveCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ReceiveCompletedEventHandler = delegate of obj * ReceiveCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Messaging.ReceiveCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="61fa9-101">Источник события, <see cref="T:System.Messaging.MessageQueue" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61fa9-101">The source of the event, the <see cref="T:System.Messaging.MessageQueue" />.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="61fa9-102">Объект <see cref="T:System.Messaging.ReceiveCompletedEventArgs" />, содержащий данные события.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61fa9-102">A <see cref="T:System.Messaging.ReceiveCompletedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="61fa9-103">Представляет метод, обрабатывающий событие <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> объекта <see cref="T:System.Messaging.MessageQueue" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61fa9-103">Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61fa9-104">При создании делегата <xref:System.Messaging.ReceiveCompletedEventHandler> необходимо указать метод, обрабатывающий событие.</span><span class="sxs-lookup"><span data-stu-id="61fa9-104">When you create a <xref:System.Messaging.ReceiveCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="61fa9-105">Чтобы связать событие с обработчиком событий, нужно добавить в событие экземпляр делегата.</span><span class="sxs-lookup"><span data-stu-id="61fa9-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="61fa9-106">Обработчик событий вызывается всякий раз, когда происходит событие, если делегат не удален.</span><span class="sxs-lookup"><span data-stu-id="61fa9-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="61fa9-107">Дополнительные сведения о делегатов обработчиков событий, см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="61fa9-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61fa9-108">В следующем примере кода показано, как создать делегат события (<xref:System.Messaging.ReceiveCompletedEventHandler>) для обработчика событий (`MyReceiveCompleted`) и связать его с <xref:System.Messaging.MessageQueue.ReceiveCompleted?displayProperty=nameWithType> событий.</span><span class="sxs-lookup"><span data-stu-id="61fa9-108">The following code example illustrates how to create an event delegate (<xref:System.Messaging.ReceiveCompletedEventHandler>) for the event handler (`MyReceiveCompleted`) and associate it with the <xref:System.Messaging.MessageQueue.ReceiveCompleted?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="61fa9-109">Обработчик событий получает сообщение из очереди и записывает его метку на экран.</span><span class="sxs-lookup"><span data-stu-id="61fa9-109">The event handler receives a message from a queue, and writes its label to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventArgs" />
  </Docs>
</Type>