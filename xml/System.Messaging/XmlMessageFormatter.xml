<Type Name="XmlMessageFormatter" FullName="System.Messaging.XmlMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="563e678b40760a20036da2630095cb8b05f461de" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460738" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.XmlMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5781f-101">Сериализует объекты в текст сообщения или десериализует текст сообщения в объекты, используя для этого формат XML, основанный на определении схемы XSD.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5781f-101">Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5781f-102"><xref:System.Messaging.XmlMessageFormatter> Средство форматирования по умолчанию, экземпляр <xref:System.Messaging.MessageQueue> использует для сериализации сообщений, записанных в эту очередь.</span><span class="sxs-lookup"><span data-stu-id="5781f-102">The <xref:System.Messaging.XmlMessageFormatter> is the default formatter that an instance of <xref:System.Messaging.MessageQueue> uses to serialize messages written to the queue.</span></span> <span data-ttu-id="5781f-103">При создании экземпляра <xref:System.Messaging.MessageQueue>, экземпляр <xref:System.Messaging.XmlMessageFormatter> создается автоматически и связанные с <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="5781f-103">When you create an instance of <xref:System.Messaging.MessageQueue>, an instance of <xref:System.Messaging.XmlMessageFormatter> is created for you and associated with the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="5781f-104">Можно задать другой форматер, создав его в коде и присвоения его <xref:System.Messaging.MessageQueue.Formatter%2A> свойство вашей <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="5781f-104">You can specify a different formatter by creating it in your code and assigning it to the <xref:System.Messaging.MessageQueue.Formatter%2A> property of your <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="5781f-105">По умолчанию очередь <xref:System.Messaging.XmlMessageFormatter> экземпляр можно использовать для записи в очередь, но не может использоваться для чтения из очереди, пока не будет задан либо <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> или <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> свойства форматирования.</span><span class="sxs-lookup"><span data-stu-id="5781f-105">A queue's default <xref:System.Messaging.XmlMessageFormatter> instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property on the formatter.</span></span> <span data-ttu-id="5781f-106">Либо можно задать одно или оба этих значения в экземпляре по умолчанию модуль форматирования, или можно создать новый экземпляр модуля форматирования и установить эти значения автоматически, передав их в качестве аргументов в соответствующее <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="5781f-106">You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="5781f-107">При указании <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> вместо <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, существование типа проверяется во время компиляции, а не время чтения, что уменьшает вероятность ошибок.</span><span class="sxs-lookup"><span data-stu-id="5781f-107">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="5781f-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> требуется полное, указав его имя сборки каждой записи.</span><span class="sxs-lookup"><span data-stu-id="5781f-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="5781f-109">Кроме того при работе с несколькими параллельными версиями номер версии должен также быть добавлен к имени типа цели также.</span><span class="sxs-lookup"><span data-stu-id="5781f-109">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="5781f-110"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> И <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-110">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="5781f-111">Это позволяет модулю форматирования интерпретировать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-111">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="5781f-112">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="5781f-112">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="5781f-113">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</span><span class="sxs-lookup"><span data-stu-id="5781f-113">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="5781f-114">Только один из них должно быть задано при чтении из очереди, но можно задать и оба.</span><span class="sxs-lookup"><span data-stu-id="5781f-114">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="5781f-115">Набор типов является совокупный набор из двух свойств.</span><span class="sxs-lookup"><span data-stu-id="5781f-115">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="5781f-116">Решение, какое свойство использовать специфична для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="5781f-116">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="5781f-117">Если тело сообщения содержит тип, схема которой не соответствует типам в массиве для каждого свойства, выдается исключение при чтении сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-117">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="5781f-118"><xref:System.Messaging.XmlMessageFormatter> Является критически важным компонентом слабо связанных обмена сообщениями на основе XML.</span><span class="sxs-lookup"><span data-stu-id="5781f-118">The <xref:System.Messaging.XmlMessageFormatter> is a crucial component of loosely coupled XML-based messaging.</span></span> <span data-ttu-id="5781f-119">Утилита XSD.exe, использующая формат XML используется для создания XML-схем, например при использовании программы для сериализации класса, используемого приложением.</span><span class="sxs-lookup"><span data-stu-id="5781f-119">The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</span></span> <span data-ttu-id="5781f-120">Этот класс должен иметь конструктор по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="5781f-120">The class must have a default constructor.</span></span>  
  
 <span data-ttu-id="5781f-121">Формат используется повторно в обратном процессе когда программа создает класс на основе схемы распространении для описания своего класса данных.</span><span class="sxs-lookup"><span data-stu-id="5781f-121">The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</span></span> <span data-ttu-id="5781f-122">Использование служебной программы и XML-схемы, он создает позволяет избежать перераспределения DLL-файлов, каждый раз при перекомпиляции класса после изменения реализации этого класса.</span><span class="sxs-lookup"><span data-stu-id="5781f-122">The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</span></span> <span data-ttu-id="5781f-123">При условии, что схема не изменяется на стороне клиента или сервера, на обеих сторонах другие изменения не влияют на другой.</span><span class="sxs-lookup"><span data-stu-id="5781f-123">As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5781f-124">В следующем примере кода включает три части кода: серверный компонент, класс заказов и клиентский код.</span><span class="sxs-lookup"><span data-stu-id="5781f-124">The following code example includes three pieces of code: a server component, an order class, and client code.</span></span> <span data-ttu-id="5781f-125">Можно использовать класс order служебной программой XSD.exe для создания схемы, распознаваемой сервером во входящих сообщениях.</span><span class="sxs-lookup"><span data-stu-id="5781f-125">The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages.</span></span> <span data-ttu-id="5781f-126">Схема является XML-файл, описывающий «форму» класса.</span><span class="sxs-lookup"><span data-stu-id="5781f-126">The schema is an XML formatted file that describes the "shape" of the class.</span></span> <span data-ttu-id="5781f-127">Затем эту схему можно использовать на стороне клиента для создания класса order конкретного клиента, использующего ту же схему, что и серверный класс.</span><span class="sxs-lookup"><span data-stu-id="5781f-127">This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.</span></span>  
  
 <span data-ttu-id="5781f-128">В следующем примере кода представлен серверный компонент, получающий заказы через очередь сообщений.</span><span class="sxs-lookup"><span data-stu-id="5781f-128">The following code example represents a server component that receives orders through a message queue.</span></span> <span data-ttu-id="5781f-129">Тело сообщения должно быть объектом заказа, схема которого совпадает с показанным ниже классом Order.cs.</span><span class="sxs-lookup"><span data-stu-id="5781f-129">The body of the message should be an order object whose schema matches the Order.cs class below.</span></span> <span data-ttu-id="5781f-130">Серверный процесс или приложение выполняет десериализацию порядок.</span><span class="sxs-lookup"><span data-stu-id="5781f-130">The server process or application deserializes the order.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlMessageFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic XmlMessageFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5781f-131">В следующем примере кода представляет класс order, предоставляющий схему для объектов заказов и десериализуемых приложением на сервере.</span><span class="sxs-lookup"><span data-stu-id="5781f-131">The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic XmlMessageFormatter Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source2.cs#2)]
 [!code-vb[Classic XmlMessageFormatter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="5781f-132">Клиентское приложение, взаимодействующее с приложением на сервере необходимо отправлять сообщения на сервер, сериализуя данные в классе локально определенный порядок, в тело сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-132">Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body.</span></span> <span data-ttu-id="5781f-133">Этот класс локально определенный порядок должен иметь ту же схему, как класс order, определенные на сервере, в который приложение на сервере будет пытаться десериализовать тело сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-133">The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body.</span></span> <span data-ttu-id="5781f-134">Служебная программа XSD.exe позволяет диспетчеру приложения на сервере создавать и распределять схему, которую клиент должен использовать для сериализации сообщений, направляемых на сервер.</span><span class="sxs-lookup"><span data-stu-id="5781f-134">The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.</span></span>  
  
 <span data-ttu-id="5781f-135">Когда диспетчер клиентского приложения принимает схему для класса order, служебную программу XSD.exe снова используется для создания класса order, относящиеся к клиенту из схемы.</span><span class="sxs-lookup"><span data-stu-id="5781f-135">When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema.</span></span> <span data-ttu-id="5781f-136">Этот класс используется в примере кода ниже сервера класс order клиента (служебная программа XSD.exe вызывает класс, сформированные схемой, имеет имя, совпадающее с именем исходного класса).</span><span class="sxs-lookup"><span data-stu-id="5781f-136">It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class).</span></span> <span data-ttu-id="5781f-137">Этот новый класс заказов используется для сериализации заказа в тело сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-137">This new order class is used to serialize the order into the message body.</span></span>  
  
 <span data-ttu-id="5781f-138">В следующем примере кода находится на стороне клиента обработки, используемый для сериализации заказа и отправляет данные, связанные с заказом в очередь.</span><span class="sxs-lookup"><span data-stu-id="5781f-138">The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue.</span></span> <span data-ttu-id="5781f-139">Этот код связывает элемент, количество и адрес с элементами схемы, которые были созданы для класса Order.cs служебной программой XSD.exe.</span><span class="sxs-lookup"><span data-stu-id="5781f-139">The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility.</span></span> <span data-ttu-id="5781f-140">Заказ передается в очередь заказов на локальном компьютере.</span><span class="sxs-lookup"><span data-stu-id="5781f-140">An order is sent to the Orders queue on the local computer.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source3.cpp#3)]
 [!code-csharp[Classic XmlMessageFormatter Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source3.cs#3)]
 [!code-vb[Classic XmlMessageFormatter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source3.vb#3)]  
  
 <span data-ttu-id="5781f-141">После схемы создается на основе класса order на сервере, этот класс можно изменять.</span><span class="sxs-lookup"><span data-stu-id="5781f-141">After the schema is generated from the order class on the server, you can modify the class.</span></span> <span data-ttu-id="5781f-142">Если изменения схемы необходимо повторно распространить схему.</span><span class="sxs-lookup"><span data-stu-id="5781f-142">Unless the schema changes, you do not need to redistribute the schema.</span></span> <span data-ttu-id="5781f-143">После распространения схемы и создания класса на заказ на стороне клиента, этот клиентский класс могут также быть изменены независимо от класса на серверной, при условии, что схема не изменяется.</span><span class="sxs-lookup"><span data-stu-id="5781f-143">After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified.</span></span> <span data-ttu-id="5781f-144">Эти два класса становятся слабо связанными.</span><span class="sxs-lookup"><span data-stu-id="5781f-144">The two classes have become loosely coupled.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
    <altmember cref="T:System.Messaging.IMessageFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5781f-145">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-145">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5781f-146">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" /> без набора типов целевых объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-146">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5781f-147">Эта перегрузка конструктора используется наиболее часто при записи в очередь, как типы целевого объекта не являются необходимыми при записи.</span><span class="sxs-lookup"><span data-stu-id="5781f-147">This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</span></span>  
  
 <span data-ttu-id="5781f-148">Для чтения сообщения из очереди, используя экземпляр <xref:System.Messaging.XmlMessageFormatter> создан с помощью этого конструктора, необходимо задать <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> или <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> таким образом, чтобы модуль форматирования известно, какие типы нужно попытаться выполнить десериализацию.</span><span class="sxs-lookup"><span data-stu-id="5781f-148">To read a message from a queue using an instance of <xref:System.Messaging.XmlMessageFormatter> created using this constructor, you must set the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties so the formatter knows what types to attempt to deserialize.</span></span>  
  
 <span data-ttu-id="5781f-149">При создании нового <xref:System.Messaging.MessageQueue>, значение по умолчанию <xref:System.Messaging.XmlMessageFormatter> , создается экземпляр без набора типов назначения.</span><span class="sxs-lookup"><span data-stu-id="5781f-149">When you create a new <xref:System.Messaging.MessageQueue>, a default <xref:System.Messaging.XmlMessageFormatter> instance is created, without the target types set.</span></span> <span data-ttu-id="5781f-150">С помощью модуля форматирования, созданный с помощью этого конструктора, необходимо задать типы целевых объектов для данного экземпляра модуля форматирования, если требуется выполнить чтение из очереди.</span><span class="sxs-lookup"><span data-stu-id="5781f-150">As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (string[] targetTypeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] targetTypeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypeNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;System::String ^&gt; ^ targetTypeNames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypeNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetTypeNames">
          <span data-ttu-id="5781f-151">Массив типа <see cref="T:System.String" />, задающий набор возможных типов, десериализация которых будет выполняться модулем форматирования из предоставляемого сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-151">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
          <span data-ttu-id="5781f-152">Эти значения должны быть полностью определены, например, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-152">These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5781f-153">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />, устанавливая типы целевых объектов, передаваемых как массив (полностью определенных) строковых значений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-153">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5781f-154">Конструкторы с параметрами типов целевых объектов чаще всего используются при чтении из очереди.</span><span class="sxs-lookup"><span data-stu-id="5781f-154">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="5781f-155">При записи, не требуется указывать типы целевых объектов.</span><span class="sxs-lookup"><span data-stu-id="5781f-155">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="5781f-156">Эта перегрузка <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> конструктора задает <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> свойство значения массива, переданного через `targetTypeNames` параметра.</span><span class="sxs-lookup"><span data-stu-id="5781f-156">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property to the array values passed in through the `targetTypeNames` parameter.</span></span> <span data-ttu-id="5781f-157">Установка этого свойства позволяет <xref:System.Messaging.MessageQueue> с помощью этого <xref:System.Messaging.XmlMessageFormatter> экземпляр для чтения сообщений, содержащих объекты заданного типа.</span><span class="sxs-lookup"><span data-stu-id="5781f-157">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of given types.</span></span>  
  
 <span data-ttu-id="5781f-158">Как <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-158">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="5781f-159">Это позволяет модулю форматирования интерпретировать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-159">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="5781f-160">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="5781f-160">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="5781f-161">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</span><span class="sxs-lookup"><span data-stu-id="5781f-161">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="5781f-162">Только один из них должно быть задано при чтении из очереди, но можно задать и оба.</span><span class="sxs-lookup"><span data-stu-id="5781f-162">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="5781f-163">Набор типов является совокупный набор из двух свойств.</span><span class="sxs-lookup"><span data-stu-id="5781f-163">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="5781f-164">Решение, какую из них использовать вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="5781f-164">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="5781f-165">Если тело сообщения содержит тип, схема которой не соответствует типам в массиве для каждого свойства, исключение будет создаваться во время чтения.</span><span class="sxs-lookup"><span data-stu-id="5781f-165">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5781f-166">Параметр <paramref name="targetTypeNames" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-166">The <paramref name="targetTypeNames" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (Type[] targetTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] targetTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;Type ^&gt; ^ targetTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="targetTypes">
          <span data-ttu-id="5781f-167">Массив типа <see cref="T:System.Type" />, задающий набор возможных типов, десериализация которых будет выполняться модулем форматирования из предоставляемого сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-167">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5781f-168">Инициализирует новый экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />, устанавливая типы целевых объектов, передаваемых как массив типов объектов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-168">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5781f-169">Конструкторы с параметрами типов целевых объектов чаще всего используются при чтении из очереди.</span><span class="sxs-lookup"><span data-stu-id="5781f-169">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="5781f-170">При записи, не требуется указывать типы целевых объектов.</span><span class="sxs-lookup"><span data-stu-id="5781f-170">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="5781f-171">Эта перегрузка <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> конструктора задает <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> свойство значения массива, переданного через `targetTypes` параметра.</span><span class="sxs-lookup"><span data-stu-id="5781f-171">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property to the array values passed in through the `targetTypes` parameter.</span></span> <span data-ttu-id="5781f-172">Установка этого свойства позволяет <xref:System.Messaging.MessageQueue> с помощью этого <xref:System.Messaging.XmlMessageFormatter> экземпляр для чтения сообщений, содержащих объекты заданного типа.</span><span class="sxs-lookup"><span data-stu-id="5781f-172">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of the given types.</span></span>  
  
 <span data-ttu-id="5781f-173">Как <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-173">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="5781f-174">Это позволяет модулю форматирования интерпретировать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-174">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="5781f-175">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="5781f-175">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="5781f-176">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</span><span class="sxs-lookup"><span data-stu-id="5781f-176">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="5781f-177">Только один из них должно быть задано при чтении из очереди, но можно задать и оба.</span><span class="sxs-lookup"><span data-stu-id="5781f-177">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="5781f-178">Набор типов является совокупный набор из двух свойств.</span><span class="sxs-lookup"><span data-stu-id="5781f-178">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="5781f-179">Решение, какую из них использовать вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="5781f-179">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="5781f-180">Если тело сообщения содержит тип, схема которой не соответствует типам в массиве для каждого свойства, исключение будет создаваться во время чтения.</span><span class="sxs-lookup"><span data-stu-id="5781f-180">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
 <span data-ttu-id="5781f-181">При указании <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> вместо <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, существование типа проверяется во время компиляции, а не время чтения, что уменьшает вероятность ошибок.</span><span class="sxs-lookup"><span data-stu-id="5781f-181">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="5781f-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> требуется полное, указав его имя сборки каждой записи.</span><span class="sxs-lookup"><span data-stu-id="5781f-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="5781f-183">Кроме того при работе с несколькими параллельными версиями номер версии должен также быть добавлен к имени типа цели также.</span><span class="sxs-lookup"><span data-stu-id="5781f-183">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="5781f-184">При использовании <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, можно добавить каждого объекта (например, `MyClass`) в список, в результате, показано в следующем примере кода C#.</span><span class="sxs-lookup"><span data-stu-id="5781f-184">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the following C# code.</span></span>  
  
```  
TargetTypes = new Type[]{typeof(MyClass)}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5781f-185">Параметр <paramref name="targetTypes" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-185">The <paramref name="targetTypes" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5781f-186">Объект <see cref="T:System.Messaging.Message" /> для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-186">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5781f-187">Определяет, может ли модуль форматирования десериализовать сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-187">Determines whether the formatter can deserialize the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5781f-188">Значение <see langword="true" />, если XML-модуль форматирования может десериализовать сообщение; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-188">
              <see langword="true" /> if the XML formatter can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5781f-189">Когда <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> вызывается форматер попытается определить, если содержимое сообщения может выполнить десериализацию.</span><span class="sxs-lookup"><span data-stu-id="5781f-189">When <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</span></span> <span data-ttu-id="5781f-190">Модуль форматирования может десериализовать сообщение, только если тип в теле сообщения имеет ту же схему, как один из типов в массиве, представленном <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="5781f-190">The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties.</span></span> <span data-ttu-id="5781f-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> Возвращает `false` в следующих двух случаях:</span><span class="sxs-lookup"><span data-stu-id="5781f-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false` under the following two circumstances:</span></span>  
  
-   <span data-ttu-id="5781f-192">Сообщение не был отформатирован с помощью <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="5781f-192">The message was not formatted using the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
-   <span data-ttu-id="5781f-193">Схема тела сообщения не между значениями, перечисленными в любом <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> или <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="5781f-193">The schema of the message body is not among those listed in either the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property.</span></span>  
  
 <span data-ttu-id="5781f-194"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> И <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> указывают форматеру какие типы объектов он должен иметь возможность десериализации.</span><span class="sxs-lookup"><span data-stu-id="5781f-194">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what types of objects it must be able to deserialize.</span></span> <span data-ttu-id="5781f-195">Если какая-либо еще отсутствует в списке, не найден в сообщении, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="5781f-195">If any type is missing from the list, yet is found within the message, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5781f-196">Ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />, ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> не установлены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-196">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5781f-197">Параметр <paramref name="message" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-197">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5781f-198">Создает экземпляр класса <see cref="T:System.Messaging.XmlMessageFormatter" />, свойства чтения и записи (наборы типов целевых объектов) которого такие же, как и у текущего экземпляра <see cref="T:System.Messaging.XmlMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-198">Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5781f-199">Объект со свойствами, идентичными свойствам данного экземпляра <see cref="T:System.Messaging.XmlMessageFormatter" />, но с метаданными, которые не определяют его как экземпляр класса модуля форматирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-199">An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5781f-200">Этот метод создает копию модуля форматирования и инициализирует его свойства на значения <xref:System.Messaging.XmlMessageFormatter> объекта.</span><span class="sxs-lookup"><span data-stu-id="5781f-200">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.XmlMessageFormatter> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5781f-201">Десериализуемое сообщение <see cref="T:System.Messaging.Message" /> в XML-формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-201">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5781f-202">Считывает содержимое из данного сообщения и создает объект, содержащий десериализованное сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-202">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5781f-203">Десериализованное сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-203">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5781f-204">Как <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-204">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="5781f-205">Должен быть задан один из этих свойств, прежде чем можно десериализовать сообщение.</span><span class="sxs-lookup"><span data-stu-id="5781f-205">One of these properties must be set before the message can be deserialized.</span></span>  
  
 <span data-ttu-id="5781f-206">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="5781f-206">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="5781f-207">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</span><span class="sxs-lookup"><span data-stu-id="5781f-207">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="5781f-208">Типы целевого объекта не обязательно для записи в очередь.</span><span class="sxs-lookup"><span data-stu-id="5781f-208">The target types do not have to be specified in order to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5781f-209">Ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />, ни свойство <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> не установлены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-209">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          </span>
          <span data-ttu-id="5781f-210">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-210">-or-</span>
          </span>
          <span data-ttu-id="5781f-211">Экземпляр, сериализуемый в тело сообщения, не согласуется ни с одной из схем, представленных типами в свойствах <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> и <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-211">The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5781f-212">Параметр <paramref name="message" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-212">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypeNames">
      <MemberSignature Language="C#" Value="public string[] TargetTypeNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TargetTypeNames" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypeNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ TargetTypeNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypeNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5781f-213">Задает набор возможных типов, десериализация которых будет выполняться модулем форматирования из тела предоставляемого сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-213">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5781f-214">Массив типа <see cref="T:System.String" />, задающий типы объектов, десериализуемых из тела сообщения при чтении данного сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-214">An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5781f-215">Как <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-215">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="5781f-216">Это позволяет модулю форматирования интерпретировать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-216">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="5781f-217">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="5781f-217">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="5781f-218">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</span><span class="sxs-lookup"><span data-stu-id="5781f-218">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="5781f-219">Только один из них должно быть задано при чтении из очереди, но можно задать и оба.</span><span class="sxs-lookup"><span data-stu-id="5781f-219">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="5781f-220">Набор типов является совокупный набор из двух свойств.</span><span class="sxs-lookup"><span data-stu-id="5781f-220">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="5781f-221">Решение, какое свойство использовать специфична для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="5781f-221">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="5781f-222">Если тело сообщения содержит тип, схема которой не соответствует типам в массиве для каждого свойства, выдается исключение при чтении сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-222">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="5781f-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> требуется полное, указав его имя сборки каждой записи.</span><span class="sxs-lookup"><span data-stu-id="5781f-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="5781f-224">Кроме того при работе с несколькими параллельными версиями номер версии должен также быть добавлен к имени типа цели также.</span><span class="sxs-lookup"><span data-stu-id="5781f-224">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="5781f-225">Типы целевых объектов только при чтении из очереди.</span><span class="sxs-lookup"><span data-stu-id="5781f-225">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="5781f-226"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> И <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> свойства не нужно устанавливать при записи в очередь.</span><span class="sxs-lookup"><span data-stu-id="5781f-226">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5781f-227">Значение свойства <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-227">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetTypes" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5781f-228">Задает набор возможных типов, десериализация которых будет выполняться модулем форматирования из тела предоставляемого сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-228">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5781f-229">Массив типа <see cref="T:System.Type" />, задающий типы объектов, десериализуемых из тела сообщения при чтении данного сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-229">An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5781f-230">Как <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> и <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-230">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="5781f-231">Это позволяет модулю форматирования интерпретировать текст сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-231">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="5781f-232">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</span><span class="sxs-lookup"><span data-stu-id="5781f-232">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="5781f-233">При чтении сообщения с помощью <xref:System.Messaging.MessageQueue.Receive%2A> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</span><span class="sxs-lookup"><span data-stu-id="5781f-233">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="5781f-234">Только один из них должно быть задано при чтении из очереди, но можно задать и оба.</span><span class="sxs-lookup"><span data-stu-id="5781f-234">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="5781f-235">Набор типов является совокупный набор из двух свойств.</span><span class="sxs-lookup"><span data-stu-id="5781f-235">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="5781f-236">Решение, какое свойство использовать специфична для вашего приложения.</span><span class="sxs-lookup"><span data-stu-id="5781f-236">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="5781f-237">Если тело сообщения содержит тип, схема которой не соответствует типам в массиве для каждого свойства, выдается исключение при чтении сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-237">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="5781f-238">Типы целевых объектов только при чтении из очереди.</span><span class="sxs-lookup"><span data-stu-id="5781f-238">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="5781f-239"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> И <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> свойства не нужно устанавливать при записи в очередь.</span><span class="sxs-lookup"><span data-stu-id="5781f-239">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 <span data-ttu-id="5781f-240">При указании <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> вместо <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, существование типа проверяется во время компиляции, а не время чтения, что уменьшает вероятность ошибок.</span><span class="sxs-lookup"><span data-stu-id="5781f-240">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span>  
  
 <span data-ttu-id="5781f-241">При использовании <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, можно добавить каждого объекта (например, `MyClass`) в список, как показано в коде C# `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span><span class="sxs-lookup"><span data-stu-id="5781f-241">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the C# code `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5781f-242">В следующем примере кода отправляет и получает сообщение, содержащее заказ в и из очереди.</span><span class="sxs-lookup"><span data-stu-id="5781f-242">The following code example sends and receives a message that contains an order to and from a queue.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5781f-243">Значение свойства <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-243">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5781f-244">Сообщение <see cref="T:System.Messaging.Message" />, свойство <see cref="P:System.Messaging.Message.Body" /> которого будет содержать сериализованный объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-244">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="5781f-245">Объект <see cref="T:System.Object" />, сериализуемый в тело сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-245">The <see cref="T:System.Object" /> to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5781f-246">Сериализует объект в текст сообщения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-246">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5781f-247">Типы целевых объектов для записи в очередь, поскольку они должны быть при чтении не обязательно.</span><span class="sxs-lookup"><span data-stu-id="5781f-247">The target types need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="5781f-248"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Или <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> свойство используется модулем форматирования только при десериализации сообщения.</span><span class="sxs-lookup"><span data-stu-id="5781f-248">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property is used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="5781f-249"><xref:System.Messaging.XmlMessageFormatter> Использует <xref:System.Xml.Serialization.XmlSerializer> класс, определяющий, что может быть сериализован.</span><span class="sxs-lookup"><span data-stu-id="5781f-249">The <xref:System.Messaging.XmlMessageFormatter> makes use of the <xref:System.Xml.Serialization.XmlSerializer> class, which defines what can be serialized.</span></span> <span data-ttu-id="5781f-250">Только открытые поля и открытые свойства могут быть сериализованы.</span><span class="sxs-lookup"><span data-stu-id="5781f-250">Only public fields and public properties can be serialized.</span></span> <span data-ttu-id="5781f-251">Структуры, структуры с массивами и массивы структур являются сериализуемыми, пока они не используется стиль шифрования с протоколом SOAP.</span><span class="sxs-lookup"><span data-stu-id="5781f-251">Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5781f-252">Параметр <paramref name="message" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-252">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="5781f-253">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-253">-or-</span>
          </span>
          <span data-ttu-id="5781f-254">Параметр <paramref name="obj" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5781f-254">The <paramref name="obj" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>