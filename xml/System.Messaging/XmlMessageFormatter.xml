<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlMessageFormatter.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5563e678b40760a20036da2630095cb8b05f461de.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">563e678b40760a20036da2630095cb8b05f461de</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.XmlMessageFormatter">
          <source>Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</source>
          <target state="translated">Сериализует объекты в текст сообщения или десериализует текст сообщения в объекты, используя для этого формат XML, основанный на определении схемы XSD.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is the default formatter that an instance of <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> uses to serialize messages written to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> Средство форматирования по умолчанию, экземпляр <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> использует для сериализации сообщений, записанных в эту очередь.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, an instance of <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is created for you and associated with the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated">При создании экземпляра <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, экземпляр <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> создается автоматически и связанные с <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>You can specify a different formatter by creating it in your code and assigning it to the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property of your <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated">Можно задать другой форматер, создав его в коде и присвоения его <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> свойство вашей <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>A queue's default <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> property on the formatter.</source>
          <target state="translated">По умолчанию очередь <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> экземпляр можно использовать для записи в очередь, но не может использоваться для чтения из очереди, пока не будет задан либо <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> свойства форматирования.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Либо можно задать одно или оба этих значения в экземпляре по умолчанию модуль форматирования, или можно создать новый экземпляр модуля форматирования и установить эти значения автоматически, передав их в качестве аргументов в соответствующее <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</ph> конструктор.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>When specifying <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> rather than <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph>, type existence is checked at compile time rather than read time, reducing possibility for error.</source>
          <target state="translated">При указании <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> вместо <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph>, существование типа проверяется во время компиляции, а не время чтения, что уменьшает вероятность ошибок.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> requires every entry to be fully qualified, specifying its assembly name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> требуется полное, указав его имя сборки каждой записи.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</source>
          <target state="translated">Кроме того при работе с несколькими параллельными версиями номер версии должен также быть добавлен к имени типа цели также.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> И <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">Это позволяет модулю форматирования интерпретировать текст сообщения.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>When you read the message using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">При чтении сообщения с помощью <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Только один из них должно быть задано при чтении из очереди, но можно задать и оба.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">Набор типов является совокупный набор из двух свойств.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The decision of which property to use is specific to your application.</source>
          <target state="translated">Решение, какое свойство использовать специфична для вашего приложения.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</source>
          <target state="translated">Если тело сообщения содержит тип, схема которой не соответствует типам в массиве для каждого свойства, выдается исключение при чтении сообщения.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is a crucial component of loosely coupled XML-based messaging.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> Является критически важным компонентом слабо связанных обмена сообщениями на основе XML.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</source>
          <target state="translated">Утилита XSD.exe, использующая формат XML используется для создания XML-схем, например при использовании программы для сериализации класса, используемого приложением.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The class must have a default constructor.</source>
          <target state="translated">Этот класс должен иметь конструктор по умолчанию.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</source>
          <target state="translated">Формат используется повторно в обратном процессе когда программа создает класс на основе схемы распространении для описания своего класса данных.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</source>
          <target state="translated">Использование служебной программы и XML-схемы, он создает позволяет избежать перераспределения DLL-файлов, каждый раз при перекомпиляции класса после изменения реализации этого класса.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</source>
          <target state="translated">При условии, что схема не изменяется на стороне клиента или сервера, на обеих сторонах другие изменения не влияют на другой.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The following code example includes three pieces of code: a server component, an order class, and client code.</source>
          <target state="translated">В следующем примере кода включает три части кода: серверный компонент, класс заказов и клиентский код.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages.</source>
          <target state="translated">Можно использовать класс order служебной программой XSD.exe для создания схемы, распознаваемой сервером во входящих сообщениях.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The schema is an XML formatted file that describes the "shape" of the class.</source>
          <target state="translated">Схема является XML-файл, описывающий «форму» класса.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.</source>
          <target state="translated">Затем эту схему можно использовать на стороне клиента для создания класса order конкретного клиента, использующего ту же схему, что и серверный класс.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The following code example represents a server component that receives orders through a message queue.</source>
          <target state="translated">В следующем примере кода представлен серверный компонент, получающий заказы через очередь сообщений.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The body of the message should be an order object whose schema matches the Order.cs class below.</source>
          <target state="translated">Тело сообщения должно быть объектом заказа, схема которого совпадает с показанным ниже классом Order.cs.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The server process or application deserializes the order.</source>
          <target state="translated">Серверный процесс или приложение выполняет десериализацию порядок.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.</source>
          <target state="translated">В следующем примере кода представляет класс order, предоставляющий схему для объектов заказов и десериализуемых приложением на сервере.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body.</source>
          <target state="translated">Клиентское приложение, взаимодействующее с приложением на сервере необходимо отправлять сообщения на сервер, сериализуя данные в классе локально определенный порядок, в тело сообщения.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body.</source>
          <target state="translated">Этот класс локально определенный порядок должен иметь ту же схему, как класс order, определенные на сервере, в который приложение на сервере будет пытаться десериализовать тело сообщения.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.</source>
          <target state="translated">Служебная программа XSD.exe позволяет диспетчеру приложения на сервере создавать и распределять схему, которую клиент должен использовать для сериализации сообщений, направляемых на сервер.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema.</source>
          <target state="translated">Когда диспетчер клиентского приложения принимает схему для класса order, служебную программу XSD.exe снова используется для создания класса order, относящиеся к клиенту из схемы.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class).</source>
          <target state="translated">Этот класс используется в примере кода ниже сервера класс order клиента (служебная программа XSD.exe вызывает класс, сформированные схемой, имеет имя, совпадающее с именем исходного класса).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>This new order class is used to serialize the order into the message body.</source>
          <target state="translated">Этот новый класс заказов используется для сериализации заказа в тело сообщения.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue.</source>
          <target state="translated">В следующем примере кода находится на стороне клиента обработки, используемый для сериализации заказа и отправляет данные, связанные с заказом в очередь.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility.</source>
          <target state="translated">Этот код связывает элемент, количество и адрес с элементами схемы, которые были созданы для класса Order.cs служебной программой XSD.exe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>An order is sent to the Orders queue on the local computer.</source>
          <target state="translated">Заказ передается в очередь заказов на локальном компьютере.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>After the schema is generated from the order class on the server, you can modify the class.</source>
          <target state="translated">После схемы создается на основе класса order на сервере, этот класс можно изменять.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>Unless the schema changes, you do not need to redistribute the schema.</source>
          <target state="translated">Если изменения схемы необходимо повторно распространить схему.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified.</source>
          <target state="translated">После распространения схемы и создания класса на заказ на стороне клиента, этот клиентский класс могут также быть изменены независимо от класса на серверной, при условии, что схема не изменяется.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.XmlMessageFormatter">
          <source>The two classes have become loosely coupled.</source>
          <target state="translated">Эти два класса становятся слабо связанными.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Messaging.XmlMessageFormatter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph> class, without target types set.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph> без набора типов целевых объектов.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor">
          <source>This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</source>
          <target state="translated">Эта перегрузка конструктора используется наиболее часто при записи в очередь, как типы целевого объекта не являются необходимыми при записи.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor">
          <source>To read a message from a queue using an instance of <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> created using this constructor, you must set the <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties so the formatter knows what types to attempt to deserialize.</source>
          <target state="translated">Для чтения сообщения из очереди, используя экземпляр <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> создан с помощью этого конструктора, необходимо задать <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> или <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> таким образом, чтобы модуль форматирования известно, какие типы нужно попытаться выполнить десериализацию.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor">
          <source>When you create a new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, a default <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> instance is created, without the target types set.</source>
          <target state="translated">При создании нового <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, значение по умолчанию <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> , создается экземпляр без набора типов назначения.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor">
          <source>As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</source>
          <target state="translated">С помощью модуля форматирования, созданный с помощью этого конструктора, необходимо задать типы целевых объектов для данного экземпляра модуля форматирования, если требуется выполнить чтение из очереди.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Массив типа <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, задающий набор возможных типов, десериализация которых будет выполняться модулем форматирования из предоставляемого сообщения.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</source>
          <target state="translated">Эти значения должны быть полностью определены, например, "MyNamespace.MyOrders, MyOrdersAssemblyName".</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph> class, setting target types passed in as an array of (fully qualified) string values.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph>, устанавливая типы целевых объектов, передаваемых как массив (полностью определенных) строковых значений.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>The constructors with target type parameters are most frequently used when reading from the queue.</source>
          <target state="translated">Конструкторы с параметрами типов целевых объектов чаще всего используются при чтении из очереди.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>When writing, it is not necessary to specify target types.</source>
          <target state="translated">При записи, не требуется указывать типы целевых объектов.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</ph> constructor sets the <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> property to the array values passed in through the <ph id="ph3">`targetTypeNames`</ph> parameter.</source>
          <target state="translated">Эта перегрузка <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</ph> конструктора задает <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> свойство значения массива, переданного через <ph id="ph3">`targetTypeNames`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>Setting this property enables a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> using this <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> instance to read messages containing objects of given types.</source>
          <target state="translated">Установка этого свойства позволяет <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> с помощью этого <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> экземпляр для чтения сообщений, содержащих объекты заданного типа.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>Both the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Как <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">Это позволяет модулю форматирования интерпретировать текст сообщения.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>When you read the message using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">При чтении сообщения с помощью <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Только один из них должно быть задано при чтении из очереди, но можно задать и оба.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">Набор типов является совокупный набор из двух свойств.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>The decision of which one to use is specific to your application.</source>
          <target state="translated">Решение, какую из них использовать вашего приложения.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</source>
          <target state="translated">Если тело сообщения содержит тип, схема которой не соответствует типам в массиве для каждого свойства, исключение будет создаваться во время чтения.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
          <source>The <ph id="ph1">&lt;paramref name="targetTypeNames" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="targetTypeNames" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Массив типа <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, задающий набор возможных типов, десериализация которых будет выполняться модулем форматирования из предоставляемого сообщения.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph> class, setting target types passed in as an array of object types.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph>, устанавливая типы целевых объектов, передаваемых как массив типов объектов.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>The constructors with target type parameters are most frequently used when reading from the queue.</source>
          <target state="translated">Конструкторы с параметрами типов целевых объектов чаще всего используются при чтении из очереди.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>When writing, it is not necessary to specify target types.</source>
          <target state="translated">При записи, не требуется указывать типы целевых объектов.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</ph> constructor sets the <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> property to the array values passed in through the <ph id="ph3">`targetTypes`</ph> parameter.</source>
          <target state="translated">Эта перегрузка <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</ph> конструктора задает <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> свойство значения массива, переданного через <ph id="ph3">`targetTypes`</ph> параметра.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>Setting this property enables a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> using this <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> instance to read messages containing objects of the given types.</source>
          <target state="translated">Установка этого свойства позволяет <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> с помощью этого <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> экземпляр для чтения сообщений, содержащих объекты заданного типа.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>Both the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Как <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">Это позволяет модулю форматирования интерпретировать текст сообщения.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>When you read the message using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">При чтении сообщения с помощью <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Только один из них должно быть задано при чтении из очереди, но можно задать и оба.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">Набор типов является совокупный набор из двух свойств.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>The decision of which one to use is specific to your application.</source>
          <target state="translated">Решение, какую из них использовать вашего приложения.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</source>
          <target state="translated">Если тело сообщения содержит тип, схема которой не соответствует типам в массиве для каждого свойства, исключение будет создаваться во время чтения.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>When specifying <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> rather than <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph>, type existence is checked at compile time rather than read time, reducing possibility for error.</source>
          <target state="translated">При указании <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> вместо <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph>, существование типа проверяется во время компиляции, а не время чтения, что уменьшает вероятность ошибок.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> requires every entry to be fully qualified, specifying its assembly name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> требуется полное, указав его имя сборки каждой записи.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</source>
          <target state="translated">Кроме того при работе с несколькими параллельными версиями номер версии должен также быть добавлен к имени типа цели также.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>When using <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph>, you can add each object (for example, <ph id="ph2">`MyClass`</ph>) to the list in a way demonstrated by the following C# code.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph>, можно добавить каждого объекта (например, <ph id="ph2">`MyClass`</ph>) в список, в результате, показано в следующем примере кода C#.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
          <source>The <ph id="ph1">&lt;paramref name="targetTypes" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="targetTypes" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> to inspect.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> для проверки.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source>Determines whether the formatter can deserialize the message.</source>
          <target state="translated">Определяет, может ли модуль форматирования десериализовать сообщение.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the XML formatter can deserialize the message; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если XML-модуль форматирования может десериализовать сообщение; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source>When <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.CanRead%2A&gt;</ph> is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.CanRead%2A&gt;</ph> вызывается форматер попытается определить, если содержимое сообщения может выполнить десериализацию.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties.</source>
          <target state="translated">Модуль форматирования может десериализовать сообщение, только если тип в теле сообщения имеет ту же схему, как один из типов в массиве, представленном <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.CanRead%2A&gt;</ph> returns <ph id="ph2">`false`</ph> under the following two circumstances:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.CanRead%2A&gt;</ph> Возвращает <ph id="ph2">`false`</ph> в следующих двух случаях:</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The message was not formatted using the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated">Сообщение не был отформатирован с помощью <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The schema of the message body is not among those listed in either the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> property.</source>
          <target state="translated">Схема тела сообщения не между значениями, перечисленными в любом <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties tell the formatter what types of objects it must be able to deserialize.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> И <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> указывают форматеру какие типы объектов он должен иметь возможность десериализации.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source>If any type is missing from the list, yet is found within the message, <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.CanRead%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Если какая-либо еще отсутствует в списке, не найден в сообщении, <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.CanRead%2A&gt;</ph> возвращает <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source>Neither the <ph id="ph1">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /&gt;</ph> nor <ph id="ph2">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /&gt;</ph> property has been set.</source>
          <target state="translated">Ни свойство <ph id="ph1">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /&gt;</ph>, ни свойство <ph id="ph2">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /&gt;</ph> не установлены.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="message" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Clone">
          <source>Creates an instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph> class whose read/write properties (the sets of target types) are the same as the current <ph id="ph2">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph> instance.</source>
          <target state="translated">Создает экземпляр класса <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph>, свойства чтения и записи (наборы типов целевых объектов) которого такие же, как и у текущего экземпляра <ph id="ph2">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Clone">
          <source>An object whose properties are identical to those of this <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph> instance, but whose metadata does not specify it to be a formatter class instance.</source>
          <target state="translated">Объект со свойствами, идентичными свойствам данного экземпляра <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph>, но с метаданными, которые не определяют его как экземпляр класса модуля форматирования.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Clone">
          <source>This method creates a copy of the formatter and initializes all its properties to the values of this <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> object.</source>
          <target state="translated">Этот метод создает копию модуля форматирования и инициализирует его свойства на значения <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, in XML format, to deserialize.</source>
          <target state="translated">Десериализуемое сообщение <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> в XML-формате.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>Reads the contents from the given message and creates an object that contains the deserialized message.</source>
          <target state="translated">Считывает содержимое из данного сообщения и создает объект, содержащий десериализованное сообщение.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>The deserialized message.</source>
          <target state="translated">Десериализованное сообщение.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>Both the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Как <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>One of these properties must be set before the message can be deserialized.</source>
          <target state="translated">Должен быть задан один из этих свойств, прежде чем можно десериализовать сообщение.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>When you read the message using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">При чтении сообщения с помощью <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>The target types do not have to be specified in order to write to the queue.</source>
          <target state="translated">Типы целевого объекта не обязательно для записи в очередь.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>Neither the <ph id="ph1">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /&gt;</ph> nor <ph id="ph2">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /&gt;</ph> property has been set.</source>
          <target state="translated">Ни свойство <ph id="ph1">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /&gt;</ph>, ни свойство <ph id="ph2">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /&gt;</ph> не установлены.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>The instance serialized in the message body does not comply with any of the schemas represented by the types in the <ph id="ph1">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /&gt;</ph> properties.</source>
          <target state="translated">Экземпляр, сериализуемый в тело сообщения, не согласуется ни с одной из схем, представленных типами в свойствах <ph id="ph1">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /&gt;</ph> и <ph id="ph2">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="message" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Задает набор возможных типов, десериализация которых будет выполняться модулем форматирования из тела предоставляемого сообщения.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that specifies the types of objects to deserialize from the message body when reading the message.</source>
          <target state="translated">Массив типа <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, задающий типы объектов, десериализуемых из тела сообщения при чтении данного сообщения.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>Both the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Как <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">Это позволяет модулю форматирования интерпретировать текст сообщения.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>When you read the message using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">При чтении сообщения с помощью <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Только один из них должно быть задано при чтении из очереди, но можно задать и оба.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">Набор типов является совокупный набор из двух свойств.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>The decision of which property to use is specific to your application.</source>
          <target state="translated">Решение, какое свойство использовать специфична для вашего приложения.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</source>
          <target state="translated">Если тело сообщения содержит тип, схема которой не соответствует типам в массиве для каждого свойства, выдается исключение при чтении сообщения.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> requires every entry to be fully qualified, specifying its assembly name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> требуется полное, указав его имя сборки каждой записи.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</source>
          <target state="translated">Кроме того при работе с несколькими параллельными версиями номер версии должен также быть добавлен к имени типа цели также.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>The target types are only required when reading from the queue.</source>
          <target state="translated">Типы целевых объектов только при чтении из очереди.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties do not need to be set to write to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> И <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> свойства не нужно устанавливать при записи в очередь.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение свойства <ph id="ph1">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /&gt;</ph> — <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Задает набор возможных типов, десериализация которых будет выполняться модулем форматирования из тела предоставляемого сообщения.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that specifies the types of objects to deserialize from the message body when reading the message.</source>
          <target state="translated">Массив типа <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, задающий типы объектов, десериализуемых из тела сообщения при чтении данного сообщения.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>Both the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Как <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> указывают форматеру схемы, чтобы попытаться найти совпадение при десериализации сообщения.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">Это позволяет модулю форматирования интерпретировать текст сообщения.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">Экземпляр, сериализованный в теле сообщения должен согласовываться с одной из схем, представленных в массиве типов.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>When you read the message using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">При чтении сообщения с помощью <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> , метод создает объект типа, который соответствует схеме и считывает тело сообщения в него.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Только один из них должно быть задано при чтении из очереди, но можно задать и оба.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">Набор типов является совокупный набор из двух свойств.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>The decision of which property to use is specific to your application.</source>
          <target state="translated">Решение, какое свойство использовать специфична для вашего приложения.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</source>
          <target state="translated">Если тело сообщения содержит тип, схема которой не соответствует типам в массиве для каждого свойства, выдается исключение при чтении сообщения.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>The target types are only required when reading from the queue.</source>
          <target state="translated">Типы целевых объектов только при чтении из очереди.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> properties do not need to be set to write to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> И <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> свойства не нужно устанавливать при записи в очередь.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>When specifying <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> rather than <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph>, type existence is checked at compile time rather than read time, reducing possibility for error.</source>
          <target state="translated">При указании <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> вместо <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph>, существование типа проверяется во время компиляции, а не время чтения, что уменьшает вероятность ошибок.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>When using <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph>, you can add each object (for example, <ph id="ph2">`MyClass`</ph>) to the list in a way demonstrated by the C# code <ph id="ph3">`TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`</ph>.</source>
          <target state="translated">При использовании <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph>, можно добавить каждого объекта (например, <ph id="ph2">`MyClass`</ph>) в список, как показано в коде C# <ph id="ph3">`TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>The following code example sends and receives a message that contains an order to and from a queue.</source>
          <target state="translated">В следующем примере кода отправляет и получает сообщение, содержащее заказ в и из очереди.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Messaging.XmlMessageFormatter.TargetTypes">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Значение свойства <ph id="ph1">&lt;see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /&gt;</ph> — <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Body" /&gt;</ph> property will contain the serialized object.</source>
          <target state="translated">Сообщение <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, свойство <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Body" /&gt;</ph> которого будет содержать сериализованный объект.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to be serialized into the message body.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, сериализуемый в тело сообщения.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>Serializes an object into the body of the message.</source>
          <target state="translated">Сериализует объект в текст сообщения.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The target types need not be specified to write to the queue as they must be when reading.</source>
          <target state="translated">Типы целевых объектов для записи в очередь, поскольку они должны быть при чтении не обязательно.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> property is used by the formatter only when deserializing a message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</ph> Или <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</ph> свойство используется модулем форматирования только при десериализации сообщения.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> makes use of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class, which defines what can be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> Использует <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> класс, определяющий, что может быть сериализован.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>Only public fields and public properties can be serialized.</source>
          <target state="translated">Только открытые поля и открытые свойства могут быть сериализованы.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</source>
          <target state="translated">Структуры, структуры с массивами и массивы структур являются сериализуемыми, пока они не используется стиль шифрования с протоколом SOAP.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="message" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>-or-</source>
          <target state="translated">- или -</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>