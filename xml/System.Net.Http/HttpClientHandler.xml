<Type Name="HttpClientHandler" FullName="System.Net.Http.HttpClientHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e012ca136e8990fc162e7dacb14e8aa9518c790c" />
    <Meta Name="ms.sourcegitcommit" Value="433e1400f568eb31af1283d895f0fd3b75253bec" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/09/2018" />
    <Meta Name="ms.locfileid" Value="37914877" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpClientHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClientHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClientHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClientHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientHandler : System::Net::Http::HttpMessageHandler" />
  <TypeSignature Language="F#" Value="type HttpClientHandler = class&#xA;    inherit HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5b83a-101">Обработчик сообщений по умолчанию, используемый <see cref="T:System.Net.Http.HttpClient" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5b83a-101">The default message handler used by <see cref="T:System.Net.Http.HttpClient" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-102"><xref:System.Net.Http.HttpClientHandler> Класс и производные от него классы позволяют разработчикам настраивать различные параметры, от прокси-серверов для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="5b83a-102">The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.</span></span>  
  
### <a name="httpclienthandler-in-net-core"></a><span data-ttu-id="5b83a-103">HttpClientHandler в .NET Core</span><span class="sxs-lookup"><span data-stu-id="5b83a-103">HttpClientHandler in .NET Core</span></span>

<span data-ttu-id="5b83a-104">Начиная с .NET Core 2.1 <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> вместо класса `HttpClientHandler` предоставляет реализацию, используемую с более высокого уровня HTTP, сетевые интерфейсы API.</span><span class="sxs-lookup"><span data-stu-id="5b83a-104">Starting with .NET Core 2.1, the <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> class instead of `HttpClientHandler` provides the implementation used by higher-level HTTP networking APIs.</span></span> <span data-ttu-id="5b83a-105">Можно настроить приложение для использования `HttpClientHandler` вместо путем вызова <xref:System.AppContext.SetSwitch%2A> метод следующим образом:</span><span class="sxs-lookup"><span data-stu-id="5b83a-105">You can configure your application to use `HttpClientHandler` instead by calling the <xref:System.AppContext.SetSwitch%2A> method as follows:</span></span>

```csharp
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", false);
```
```vb
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", False)
``` 
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClientHandler#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclienthandler/cs/source.cs#1)]  
  
 <span data-ttu-id="5b83a-106">В предыдущем примере кода используется `async Task Main()` точки входа.</span><span class="sxs-lookup"><span data-stu-id="5b83a-106">The preceding code example uses an `async Task Main()` entry point.</span></span> <span data-ttu-id="5b83a-107">Эта функция требует C# 7.1 или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="5b83a-107">That feature requires C# 7.1 or later.</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClientHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClientHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-108">Создает экземпляр класса <see cref="T:System.Net.Http.HttpClientHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-108">Creates an instance of a <see cref="T:System.Net.Http.HttpClientHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAutoRedirect : bool with get, set" Usage="System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-109">Возвращает или задает значение, которое указывает, должен ли обработчик следовать ответам перенаправления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-109">Gets or sets a value that indicates whether the handler should follow redirection responses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-110">Значение <see langword="true" />, если обработчик должен следовать ответам перенаправления. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-110">
              <see langword="true" /> if the if the handler should follow redirection responses; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5b83a-111">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-111">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-112">Задайте <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> для `true` Если обработчик, который автоматически следовать заголовки перенаправления HTTP в новое расположение ресурса.</span><span class="sxs-lookup"><span data-stu-id="5b83a-112">Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="5b83a-113">Максимальное число выполняемых перенаправления задается <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5b83a-113">The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.</span></span>  
  
 <span data-ttu-id="5b83a-114">Если <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> присваивается `false`, все HTTP-ответы с кодом состояния HTTP от 300 до 399 возвращаются в приложение.</span><span class="sxs-lookup"><span data-stu-id="5b83a-114">If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.</span></span>  
  
 <span data-ttu-id="5b83a-115">Заголовок авторизации очищается при автоматическом перенаправление, и обработчик автоматически пытается выполнить повторную аутентификацию в перенаправленное расположение.</span><span class="sxs-lookup"><span data-stu-id="5b83a-115">The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="5b83a-116">На практике это означает, что приложение невозможно поместить информацию нестандартной проверки подлинности в заголовке авторизации, если есть вероятность столкнуться с перенаправлением.</span><span class="sxs-lookup"><span data-stu-id="5b83a-116">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="5b83a-117">Вместо этого приложения необходимо реализовать и зарегистрировать пользовательский модуль проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="5b83a-117">Instead, the application must implement and register a custom authentication module.</span></span>  

> [!NOTE]
>  <span data-ttu-id="5b83a-118">С помощью <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> присвоено `true`, .NET Framework будет следовать перенаправлений, даже в том случае, если осуществляется перенаправление в HTTP URI из HTTPS URI.</span><span class="sxs-lookup"><span data-stu-id="5b83a-118">With <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> set to `true`, the .NET Framework will follow redirections even when being redirected to an HTTP URI from an HTTPS URI.</span></span>
<span data-ttu-id="5b83a-119">.NET core версии 1.0, 1.1 и 2.0 не последует за перенаправление из HTTPS в HTTP, даже если <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> присваивается `true`.</span><span class="sxs-lookup"><span data-stu-id="5b83a-119">.NET Core versions 1.0, 1.1 and 2.0 will not follow a redirection from HTTPS to HTTP even if <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `true`.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticDecompression : System.Net.DecompressionMethods with get, set" Usage="System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-120">Возвращает или задает тип метода распаковки, используемый обработчиком для автоматической распаковки содержимого HTTP-ответа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-120">Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-121">Метод автоматической распаковки, используемый обработчиком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-121">The automatic decompression method used by the handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
<span data-ttu-id="5b83a-122">Для платформы .NET Framework 4.x `System.Net.Http` двоичных данных в глобальный кэш сборок (GAC), значение по умолчанию — <xref:System.Net.DecompressionMethods.None>.</span><span class="sxs-lookup"><span data-stu-id="5b83a-122">For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>.</span></span>

<span data-ttu-id="5b83a-123">Когда [ `System.Net.Http` пакет NuGet](https://www.nuget.org/packages/System.Net.Http/) версии 4.1.0 для v4.3.2 используется, по умолчанию используется <xref:System.Net.DecompressionMethods.GZip> и <xref:System.Net.DecompressionMethods.Deflate>.</span><span class="sxs-lookup"><span data-stu-id="5b83a-123">When the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/) v4.1.0 to v4.3.2 is used, the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.</span></span>

<span data-ttu-id="5b83a-124">После v4.3.2 пакета NuGet, значение по умолчанию <xref:System.Net.DecompressionMethods.None> используется.</span><span class="sxs-lookup"><span data-stu-id="5b83a-124">After NuGet package v4.3.2, the default value of <xref:System.Net.DecompressionMethods.None> is used.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertificateRevocationList : bool with get, set" Usage="System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-125">Получает или задает значение, указывающее, проверяется ли сертификат по списку отзыва центра сертификации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-125">Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-126">Значение <see langword="true" />, если проверяется список отзыва сертификатов; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-126">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="5b83a-127">Только для .NET Framework 4.7.1: это свойство не реализовано.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-127">.NET Framework 4.7.1 only: This property is not implemented.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateOptions">
      <MemberSignature Language="C#" Value="public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Http.ClientCertificateOption ClientCertificateOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateOptions As ClientCertificateOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::ClientCertificateOption ClientCertificateOptions { System::Net::Http::ClientCertificateOption get(); void set(System::Net::Http::ClientCertificateOption value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateOptions : System.Net.Http.ClientCertificateOption with get, set" Usage="System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.ClientCertificateOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-128">Возвращает или задает значение, указывающее, выбирается ли автоматически сертификат из хранилища сертификатов, или может ли вызывающий объект передавать определенный клиентский сертификат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-128">Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-129">Коллекция сертификатов безопасности, связанных с данным дескриптором.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-129">The collection of security certificates associated with this handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-130">Получает коллекцию сертификатов безопасности, связанных с запросами к серверу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-130">Gets the collection of security certificates that are associated requests to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-131">X509CertificateCollection, представленные на сервер при выполнении сертификат на основе проверки подлинности клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-131">The X509CertificateCollection that is presented to the server when performing certificate based client authentication.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieContainer : System.Net.CookieContainer with get, set" Usage="System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-132">Возвращает или задает контейнер файлов cookie, используемый для хранения файлов cookie сервера обработчиком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-132">Gets or sets the cookie container used to store server cookies by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-133">Контейнер файлов cookie, используемый для хранения файлов cookie сервера обработчиком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-133">The cookie container used to store server cookies by the handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-134"><xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> Свойство предоставляет экземпляр <xref:System.Net.CookieContainer> класс, который содержит файлы cookie, связанные с данным обработчиком.</span><span class="sxs-lookup"><span data-stu-id="5b83a-134">The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.</span></span>  
  
 <span data-ttu-id="5b83a-135">Если <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> свойство `true`, <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> свойство представляет контейнер файлов cookie, используемый для хранения файлов cookie сервера.</span><span class="sxs-lookup"><span data-stu-id="5b83a-135">If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies.</span></span> <span data-ttu-id="5b83a-136">Пользователь может задать пользовательские файлы cookie, перед отправкой запросов с помощью этого свойства.</span><span class="sxs-lookup"><span data-stu-id="5b83a-136">The user can set custom cookies before sending requests using this property.</span></span> <span data-ttu-id="5b83a-137">Если <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> свойство имеет значение false, и пользователь добавляет файлы cookie для <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, пропускаются и не отправляются на сервер файлов cookie.</span><span class="sxs-lookup"><span data-stu-id="5b83a-137">If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server.</span></span> <span data-ttu-id="5b83a-138">Установка <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> для `null` приведет к возникновению исключения.</span><span class="sxs-lookup"><span data-stu-id="5b83a-138">Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.HttpClientHandler.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-139">Возвращает или задает сведения о проверке подлинности, используемые данным обработчиком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-139">Gets or sets authentication information used by this handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-140">Учетные записи проверки подлинности, связанные с обработчиком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-140">The authentication credentials associated with the handler.</span>
          </span>
          <span data-ttu-id="5b83a-141">Значение по умолчанию: <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-141">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousAcceptAnyServerCertificateValidator">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; DangerousAcceptAnyServerCertificateValidator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DangerousAcceptAnyServerCertificateValidator As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ DangerousAcceptAnyServerCertificateValidator { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DangerousAcceptAnyServerCertificateValidator : Func&lt;System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, bool&gt;" Usage="System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-142">Получает кэшированный делегат, который всегда возвращает <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-142">Gets a cached delegate that always returns <see langword="True" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-143">Кэшированный делегат, который всегда возвращает <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-143">A cached delegate that always returns <see langword="True" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-144">Особенно в сценариях тестирования общий шаблон использования <xref:System.Net.Http.HttpClient> для подключения к серверу с помощью сертификата, не следует проверить, такие как самозаверяющий сертификат.</span><span class="sxs-lookup"><span data-stu-id="5b83a-144">Particularly in test scenarios, a common pattern use <xref:System.Net.Http.HttpClient> to connect to a server with a certificate that shouldn't be validated, such as a self-signed certificate.</span></span> <span data-ttu-id="5b83a-145">Обычно это делается с помощью <xref:System.Net.Http.HttpClientHandler> , задав <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> свойство для делегата, который всегда возвращает `True`; это означает, что сертификат прошел проверку.</span><span class="sxs-lookup"><span data-stu-id="5b83a-145">You commonly do this with <xref:System.Net.Http.HttpClientHandler> by setting the <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> property to a delegate that always returns `True`; this indicates that the certificate has passed validation.</span></span> <span data-ttu-id="5b83a-146">Однако не все реализации поддерживают этот обратный вызов, и некоторые порождают <xref:System.PlatformNotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="5b83a-146">However, not all implementations support this callback, and some throw <xref:System.PlatformNotSupportedException>.</span></span>  
  
 <span data-ttu-id="5b83a-147"><xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> Это ограничение устранено: свойство.</span><span class="sxs-lookup"><span data-stu-id="5b83a-147">The <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property addresses this limitation.</span></span> <span data-ttu-id="5b83a-148">Делегата, возвращаемого <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> свойства могут быть назначены <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> свойства, как в примере ниже:</span><span class="sxs-lookup"><span data-stu-id="5b83a-148">The delegate returned by the <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property can be assigned to the <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> property, as the following example does:</span></span>  
  
```cs
handler.ServerCertificateCustomValidationCallback = httpClientHandler.DangerousAcceptAnyServerCertificateValidator;
```

 <span data-ttu-id="5b83a-149">Это дает <xref:System.Net.Http.HttpClientHandler> реализаций идентификации ссылки известного объекта, который выражает намерения разработчика.</span><span class="sxs-lookup"><span data-stu-id="5b83a-149">This gives <xref:System.Net.Http.HttpClientHandler> implementations a known object reference identity that expresses the developer's intention.</span></span> <span data-ttu-id="5b83a-150">Если объект, хранимому в <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> свойство — equals ссылку для <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>, возможность полностью отключить проверку на платформе, в противном случае создавал исключение, среда выполнения <xref:System.PlatformNotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="5b83a-150">If the object stored in the <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property is reference equals to <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>, the runtime is able to entirely disable validation on a platform that would otherwise throw a <xref:System.PlatformNotSupportedException>.</span></span>  
  
 <span data-ttu-id="5b83a-151">Приятным побочным эффектом разработчики могут использовать это свойство позволяет упростить для средств для пометки риск отключения проверки сертификата, что упрощает для разработчиков во избежание доставки приложение окажется небезопасным.</span><span class="sxs-lookup"><span data-stu-id="5b83a-151">As a side benefit, developers can use this property to make it easier for tools to flag the danger of disabling certificate validation, which makes it easier for developers to avoid shipping insecure applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProxyCredentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials DefaultProxyCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials DefaultProxyCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProxyCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ DefaultProxyCredentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProxyCredentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-152">Если используется прокси-сервер по умолчанию (системный), возвращает или задает учетные данные, отправляемые на прокси-сервер по умолчанию для проверки подлинности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-152">When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication.</span>
          </span>
          <span data-ttu-id="5b83a-153">Прокси-сервер по умолчанию используется только если <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> задано значение <see langword="true" /> и <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> задано значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-153">The default proxy is used only when <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> is set to <see langword="true" /> and <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> is set to <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-154">Учетные данные, необходимые для проверки подлинности запроса к прокси-сервера по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-154">The credentials needed to authenticate a request to the default proxy server.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="httpClientHandler.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="5b83a-155">Значение <see langword="true" /> для освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-155">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b83a-156">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.Http.HttpClientHandler" />, и опционально удаляет управляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-156">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClientHandler" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-157">Этот метод вызывается открытым `Dispose()` метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5b83a-157">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="5b83a-158">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="5b83a-158">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="5b83a-159"><xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` присвоено `false`.</span><span class="sxs-lookup"><span data-stu-id="5b83a-159"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="5b83a-160">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Net.Http.HttpClientHandler>.</span><span class="sxs-lookup"><span data-stu-id="5b83a-160">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references.</span></span> <span data-ttu-id="5b83a-161">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="5b83a-161">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaxAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAutomaticRedirections { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxAutomaticRedirections : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-162">Возвращает или задает максимальное количество переадресаций, выполняемых обработчиком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-162">Gets or sets the maximum number of redirects that the handler follows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-163">Максимальное количество ответов переадресации, выполняемых обработчиком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-163">The maximum number of redirection responses that the handler follows.</span>
          </span>
          <span data-ttu-id="5b83a-164">Значение по умолчанию — 50.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-164">The default value is 50.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-165"><xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> Свойство задает максимальное количество переадресаций, выполняемых запросом, если <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> свойство `true`.</span><span class="sxs-lookup"><span data-stu-id="5b83a-165">The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionsPerServer">
      <MemberSignature Language="C#" Value="public int MaxConnectionsPerServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionsPerServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionsPerServer As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnectionsPerServer { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConnectionsPerServer : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-166">Возвращает или задает максимально допустимое число одновременных подключений (для каждой конечной точки сервера) при выполнении запросов с помощью объекта <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-166">Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an <see cref="T:System.Net.Http.HttpClient" /> object.</span>
          </span>
          <span data-ttu-id="5b83a-167">Обратите внимание, что для каждой конечной точки сервера существует ограничение, например, значение 256 разрешает выполнять 256 одновременных подключений к http://www.adatum.com/ и еще 256 подключений — к http://www.adventure-works.com/.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-167">Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-168">Максимальное число одновременных подключений (каждой конечной точки сервера), разрешенное <see cref="T:System.Net.Http.HttpClient" /> объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-168">The maximum number of concurrent connections (per server endpoint) allowed by an <see cref="T:System.Net.Http.HttpClient" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxRequestContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxRequestContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxRequestContentBufferSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRequestContentBufferSize : int64 with get, set" Usage="System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-169">Получает или задает максимальный размер буфера содержимого запроса, используемого обработчиком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-169">Gets or sets the maximum request content buffer size used by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-170">Максимальный размер буфера содержимого запроса в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-170">The maximum request content buffer size in bytes.</span>
          </span>
          <span data-ttu-id="5b83a-171">Значение по умолчанию — 2 ГБ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-171">The default value is 2 gigabytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-172">Приложения можно задать <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> свойство меньшее значение для ограничения размера буфера запроса.</span><span class="sxs-lookup"><span data-stu-id="5b83a-172">An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer.</span></span> <span data-ttu-id="5b83a-173">Если размер содержимого запроса больше, чем <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> свойство, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="5b83a-173">If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaxResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseHeadersLength : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-174">Возвращает или задает максимальную длину заголовков ответов, выраженную в килобайтах (1024 байта).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-174">Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
          <span data-ttu-id="5b83a-175">Например, если значение равно 64, для максимальной длины заголовков ответов разрешено использовать 65536 байт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-175">For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-176">Максимальная длина в килобайтах (1024 байта), заголовков ответов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-176">The maximum length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-177">Получает или задает значение, указывающее, будет ли обработчик отправлять заголовок авторизации вместе с запросом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-177">Gets or sets a value that indicates whether the handler sends an Authorization header with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-178">Значение <see langword="true" /> для отправки обработчиком заголовка авторизации HTTP с запросом после выполнения аутентификации; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-178">
              <see langword="true" /> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5b83a-179">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-179">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-180">После запроса на клиент с конкретными <xref:System.Uri> успешной проверки подлинности, если <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> свойство `true` и учетные данные указаны, <xref:System.Net.Http.HttpClientHandler> совпадений со списком учетных данных передаются в <xref:System.Net.Http.HttpClientHandler.Credentials%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5b83a-180">After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property.</span></span> <span data-ttu-id="5b83a-181">Заголовок авторизации отправляется с каждым запросом к любому <xref:System.Uri> , соответствующий конкретный <xref:System.Uri> вплоть до последнего косую черту.</span><span class="sxs-lookup"><span data-stu-id="5b83a-181">The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.</span></span>  
  
 <span data-ttu-id="5b83a-182">Если запрос клиента к определенному <xref:System.Uri> является не успешной проверки подлинности, запрос использует стандартные процедуры проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="5b83a-182">If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.</span></span>  
  
 <span data-ttu-id="5b83a-183">За исключением первого запроса <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> свойство указывает, следует ли отправлять сведения о проверке подлинности с последующими запросами к <xref:System.Uri> , соответствующий конкретный <xref:System.Uri> вплоть до последнего косую черту без ожидания, быть Перейти к прохождению сервером.</span><span class="sxs-lookup"><span data-stu-id="5b83a-183">With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Net.Http.HttpClientHandler.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-184">Возвращает доступный для записи словарь (т. е. карту) настраиваемых свойств запросов <see cref="T:System.Net.Http.HttpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-184">Gets a writable dictionary (that is, a map) of custom properties for the <see cref="T:System.Net.Http.HttpClient" /> requests.</span>
          </span>
          <span data-ttu-id="5b83a-185">Словарь инициализируется пустым. Можно вставить и запросить пары "ключ-значение" для пользовательских обработчиков и особой обработки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-185">The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-186">для записи словарь пользовательских свойств.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-186">a writable dictionary of custom properties.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.Http.HttpClientHandler.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-187">Возвращает или задает сведения о прокси-сервере, используемые обработчиком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-187">Gets or sets proxy information used by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-188">Сведения о прокси-сервере, используемые обработчиком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-188">The proxy information used by the handler.</span>
          </span>
          <span data-ttu-id="5b83a-189">Значение по умолчанию — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-189">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-190"><xref:System.Net.Http.HttpClientHandler.Proxy%2A> Свойство идентифицирует <xref:System.Net.WebProxy> объект, используемый для обработки запросов к ресурсам в Интернете.</span><span class="sxs-lookup"><span data-stu-id="5b83a-190">The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources.</span></span> <span data-ttu-id="5b83a-191">Чтобы указать, что следует использовать прокси-сервера, задайте <xref:System.Net.Http.HttpClientHandler.Proxy%2A> свойства к экземпляру прокси-сервера, возвращенный <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5b83a-191">To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.</span></span>  
  
 <span data-ttu-id="5b83a-192">Локальный компьютер или файл конфигурации приложения могут использовать прокси-сервер по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="5b83a-192">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="5b83a-193">Если <xref:System.Net.Http.HttpClientHandler.Proxy%2A> свойство указано, то параметры прокси-сервера из <xref:System.Net.Http.HttpClientHandler.Proxy%2A> переопределения свойств локального компьютера или файла конфигурации приложения и обработчик будет использовать параметры прокси-сервера, который указан.</span><span class="sxs-lookup"><span data-stu-id="5b83a-193">If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified.</span></span> <span data-ttu-id="5b83a-194">Если прокси-сервера не указан в файле конфигурации и <xref:System.Net.Http.HttpClientHandler.Proxy%2A> свойство не задано, обработчик использует параметры прокси-сервера, унаследованные от Internet Explorer на локальном компьютере.</span><span class="sxs-lookup"><span data-stu-id="5b83a-194">If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="5b83a-195">Если отсутствуют параметры прокси-сервера в Internet Explorer, запрос отправляется непосредственно на сервер.</span><span class="sxs-lookup"><span data-stu-id="5b83a-195">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="5b83a-196"><xref:System.Net.Http.HttpClientHandler> Класс анализирует список обхода прокси-сервера с использованием подстановочных знаков наследуется от Internet Explorer так же как в списке пропускаемых адресов анализируется непосредственно с Internet Explorer.</span><span class="sxs-lookup"><span data-stu-id="5b83a-196">The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="5b83a-197">Например <xref:System.Net.Http.HttpClientHandler> класс будет выполнять синтаксический анализ списка обход проверки «nt *» из Internet Explorer регулярные выражения «nt.\*«.</span><span class="sxs-lookup"><span data-stu-id="5b83a-197">For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.\*".</span></span> <span data-ttu-id="5b83a-198">Поэтому URL-адрес " http://nt.com" будут обходить прокси с помощью <xref:System.Net.Http.HttpClientHandler> класс и с помощью Internet Explorer.</span><span class="sxs-lookup"><span data-stu-id="5b83a-198">So a URL of " http://nt.com" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.</span></span>  
  
 <span data-ttu-id="5b83a-199"><xref:System.Net.Http.HttpClientHandler> Класс поддерживает обход локальный прокси-сервер.</span><span class="sxs-lookup"><span data-stu-id="5b83a-199">The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass.</span></span> <span data-ttu-id="5b83a-200">Класс считает назначения локальным, если выполняется одно из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="5b83a-200">The class considers a destination to be local if any of the following conditions are met:</span></span>  
  
1.  <span data-ttu-id="5b83a-201">В пути имеются плоским именем (без точки в URL-адрес).</span><span class="sxs-lookup"><span data-stu-id="5b83a-201">The destination contains a flat name (no dots in the URL).</span></span>  
  
2.  <span data-ttu-id="5b83a-202">В пути имеются петлевой адрес (<xref:System.Net.IPAddress.Loopback> или <xref:System.Net.IPAddress.IPv6Loopback>) или в пути имеются <xref:System.Net.IPAddress> на локальный компьютер.</span><span class="sxs-lookup"><span data-stu-id="5b83a-202">The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.</span></span>  
  
3.  <span data-ttu-id="5b83a-203">Суффикс домена назначения совпадает с суффиксом домена локального компьютера (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span><span class="sxs-lookup"><span data-stu-id="5b83a-203">The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClientHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClientHandler/&lt;SendAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="5b83a-204">Сообщение HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-204">The HTTP request message.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="5b83a-205">Маркер отмены для отмены операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-205">A cancellation token to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b83a-206">Создает экземпляр <see cref="T:System.Net.Http.HttpResponseMessage" /> на основе сведений, предоставленных в <see cref="T:System.Net.Http.HttpRequestMessage" />, в качестве неблокируемой операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-206">Creates an instance of  <see cref="T:System.Net.Http.HttpResponseMessage" /> based on the information provided in the <see cref="T:System.Net.Http.HttpRequestMessage" /> as an operation that will not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b83a-207">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-207">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-208">Эта операция выполняется, не блокируется.</span><span class="sxs-lookup"><span data-stu-id="5b83a-208">This operation is does not block.</span></span> <span data-ttu-id="5b83a-209">Он возвращает экземпляр <xref:System.Threading.Tasks.Task%601> для представления асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="5b83a-209">It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation.</span></span> <span data-ttu-id="5b83a-210">По завершении операции <xref:System.Threading.Tasks.Task%601.Result%2A> содержит сообщение ответа.</span><span class="sxs-lookup"><span data-stu-id="5b83a-210">When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5b83a-211">Запрос <paramref name="request" /> имел значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-211">The <paramref name="request" /> was <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateCustomValidationCallback">
      <MemberSignature Language="C#" Value="public Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; ServerCertificateCustomValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateCustomValidationCallback As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ ServerCertificateCustomValidationCallback { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); void set(Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificateCustomValidationCallback : Func&lt;System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, bool&gt; with get, set" Usage="System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-212">Возвращает или задает метод обратного вызова для проверки сертификата сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-212">Gets or sets a callback method to validate the server certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-213">Метод обратного вызова для проверки сертификата сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-213">A callback method to validate the server certificate.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocols">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.SslProtocols SslProtocols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property SslProtocols As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::SslProtocols SslProtocols { System::Security::Authentication::SslProtocols get(); void set(System::Security::Authentication::SslProtocols value); };" />
      <MemberSignature Language="F#" Value="member this.SslProtocols : System.Security.Authentication.SslProtocols with get, set" Usage="System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-214">Возвращает или задает протокол TLS/SSL, используемый объектами <see cref="T:System.Net.Http.HttpClient" />, которые управляются объектом HttpClientHandler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-214">Gets or sets the TLS/SSL protocol used by the <see cref="T:System.Net.Http.HttpClient" /> objects managed by the HttpClientHandler object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-215">Одно из значений, определенных в перечислении <see cref="T:System.Security.Authentication.SslProtocols" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-215">One of the values defined in the <see cref="T:System.Security.Authentication.SslProtocols" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="5b83a-216">Только для .NET Framework 4.7.1: это свойство не реализовано.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-216">.NET Framework 4.7.1 only: This property is not implemented.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsAutomaticDecompression">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAutomaticDecompression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAutomaticDecompression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAutomaticDecompression { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAutomaticDecompression : bool" Usage="System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-217">Возвращает значение, указывающее, поддерживает ли обработчик автоматическую распаковку содержимого ответов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-217">Gets a value that indicates whether the handler supports automatic response content decompression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-218">Значение <see langword="true" />, если обработчик поддерживает автоматическую распаковку содержимого ответов; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-218">
              <see langword="true" /> if the if the handler supports automatic response content decompression; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5b83a-219">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-219">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsProxy">
      <MemberSignature Language="C#" Value="public virtual bool SupportsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsProxy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsProxy : bool" Usage="System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-220">Получает значение, указывающее, поддерживает ли обработчик параметры прокси.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-220">Gets a value that indicates whether the handler supports proxy settings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-221">Значение, <see langword="true" /> если обработчик поддерживает параметры прокси; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-221">
              <see langword="true" /> if the if the handler supports proxy settings; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5b83a-222">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-222">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectConfiguration">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectConfiguration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectConfiguration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRedirectConfiguration : bool" Usage="System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-223">Получает значение, указывающее, поддерживает ли обработчик параметры конфигурации для свойств <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> и <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-223">Gets a value that indicates whether the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-224">Значение <see langword="true" />, если обработчик поддерживает параметры конфигурации для свойств <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> и <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-224">
              <see langword="true" /> if the if the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5b83a-225">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-225">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCookies">
      <MemberSignature Language="C#" Value="public bool UseCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCookies : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-226">Получает или задает значение, указывающее, использует ли обработчик свойство <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> для хранения файлов cookie сервера и использует ли он такие файлы cookie при отправке запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-226">Gets or sets a value that indicates whether the handler uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-227">Значение <see langword="true" />, если обработчик использует свойство <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> для хранения файлов cookie сервера и использует такие файлы cookie при отправке запросов; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-227">
              <see langword="true" /> if the if the handler supports uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5b83a-228">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-228">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-229">Возвращает или задает значение, которое определяет, должен ли обработчик отправлять учетные данные по умолчанию вместе с запросами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-229">Gets or sets a value that controls whether default credentials are sent with requests by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-230">Значение <see langword="true" />, если используются учетные данные по умолчанию; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-230">
              <see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5b83a-231">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-231">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b83a-232">Присвойте этому свойству значение `true` когда запросы, сделанные <xref:System.Net.Http.HttpClientHandler> объекта должны по запросу сервера проходить проверку подлинности с использованием учетных данных пользователя, выполнившего вход.</span><span class="sxs-lookup"><span data-stu-id="5b83a-232">Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="5b83a-233">Для клиентских приложений это приемлемо в большинстве сценариев.</span><span class="sxs-lookup"><span data-stu-id="5b83a-233">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="5b83a-234">Для приложений среднего уровня, таких как ASP.NET, вместо того чтобы использовать это свойство обычно устанавливается <xref:System.Net.Http.HttpClientHandler.Credentials%2A> свойства учетные данные клиента, от лица которого выполняется запрос.</span><span class="sxs-lookup"><span data-stu-id="5b83a-234">For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxy">
      <MemberSignature Language="C#" Value="public bool UseProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseProxy : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b83a-235">Возвращает или задает значение, указывающее, использует ли обработчик прокси-сервер для запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-235">Gets or sets a value that indicates whether the handler uses a proxy for requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b83a-236">
            <see langword="true" />, если обработчик должен использовать прокси-сервер для запросов. В противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-236">
              <see langword="true" /> if the handler should use a proxy for requests; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5b83a-237">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b83a-237">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>