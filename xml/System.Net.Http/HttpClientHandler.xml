<Type Name="HttpClientHandler" FullName="System.Net.Http.HttpClientHandler">
  <TypeSignature Language="C#" Value="public class HttpClientHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClientHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClientHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClientHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientHandler : System::Net::Http::HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="163b4-101">Обработчик сообщений по умолчанию, используемый <see cref="T:System.Net.Http.HttpClient" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-101">The default message handler used by <see cref="T:System.Net.Http.HttpClient" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-102"><xref:System.Net.Http.HttpClientHandler> Класс и производные от него классы позволяют разработчикам настраивать различные параметры для проверки подлинности и принимает значения от учетных записей-посредников.</span><span class="sxs-lookup"><span data-stu-id="163b4-102">The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClientHandler#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclienthandler/cs/source.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClientHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClientHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="163b4-103">Создает экземпляр класса <see cref="T:System.Net.Http.HttpClientHandler" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-103">Creates an instance of a <see cref="T:System.Net.Http.HttpClientHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-104">Возвращает или задает значение, которое указывает, должен ли обработчик следовать ответам перенаправления.</span><span class="sxs-lookup"><span data-stu-id="163b4-104">Gets or sets a value that indicates whether the handler should follow redirection responses.</span></span></summary>
        <value>
          <span data-ttu-id="163b4-105">Значение <see langword="true" />, если обработчик должен следовать ответам перенаправления. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-105"><see langword="true" /> if the if the handler should follow redirection responses; otherwise <see langword="false" />.</span></span> <span data-ttu-id="163b4-106">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-106">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-107">Задать <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> для `true` Если требуется, чтобы обработчик, который автоматически следовать заголовков HTTP перенаправление в новое расположение ресурса.</span><span class="sxs-lookup"><span data-stu-id="163b4-107">Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="163b4-108">Максимальное число выполняемых перенаправления задается <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="163b4-108">The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.</span></span>  
  
 <span data-ttu-id="163b4-109">Если <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> равно `false`, все HTTP-ответы с кодом состояния HTTP от 300 до 399 возвращаются в приложение.</span><span class="sxs-lookup"><span data-stu-id="163b4-109">If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.</span></span>  
  
 <span data-ttu-id="163b4-110">Заголовок авторизации очищается при автоматическом перенаправление, и обработчик автоматически пытается повторно пройти проверку подлинности в перенаправленном расположении.</span><span class="sxs-lookup"><span data-stu-id="163b4-110">The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="163b4-111">На практике это означает, что приложение невозможно перевести сведения нестандартной проверки подлинности в заголовок Authorization, если существует возможность столкнуться с перенаправлением.</span><span class="sxs-lookup"><span data-stu-id="163b4-111">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="163b4-112">Вместо этого приложения необходимо реализовать и зарегистрировать пользовательский модуль проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="163b4-112">Instead, the application must implement and register a custom authentication module.</span></span>  

> [!NOTE]
>  <span data-ttu-id="163b4-113">С <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> значение `true`, .NET Framework будет следовать перенаправлений, даже в том случае, если перенаправления на HTTP URI из HTTPS URI.</span><span class="sxs-lookup"><span data-stu-id="163b4-113">With <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> set to `true`, the .NET Framework will follow redirections even when being redirected to an HTTP URI from an HTTPS URI.</span></span>
<span data-ttu-id="163b4-114">.NET core версии 1.0, 1.1 и 2.0 не последуют за перенаправлением от HTTPS HTTP, даже если <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> равно `true`.</span><span class="sxs-lookup"><span data-stu-id="163b4-114">.NET Core versions 1.0, 1.1 and 2.0 will not follow a redirection from HTTPS to HTTP even if <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `true`.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-115">Возвращает или задает тип метода распаковки, используемый обработчиком для автоматической распаковки содержимого HTTP-ответа.</span><span class="sxs-lookup"><span data-stu-id="163b4-115">Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.</span></span></summary>
        <value><span data-ttu-id="163b4-116">Метод автоматической распаковки, используемый обработчиком.</span><span class="sxs-lookup"><span data-stu-id="163b4-116">The automatic decompression method used by the handler.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
<span data-ttu-id="163b4-117">Для платформы .NET Framework 4.x `System.Net.Http` двоичных данных в глобальный кэш сборок (GAC), значение по умолчанию — <xref:System.Net.DecompressionMethods.None>.</span><span class="sxs-lookup"><span data-stu-id="163b4-117">For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>.</span></span>

<span data-ttu-id="163b4-118">Когда [ `System.Net.Http` пакет NuGet](https://www.nuget.org/packages/System.Net.Http/) v4.1.0 для v4.3.2 используется, значение по умолчанию — <xref:System.Net.DecompressionMethods.GZip> и <xref:System.Net.DecompressionMethods.Deflate>.</span><span class="sxs-lookup"><span data-stu-id="163b4-118">When the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/) v4.1.0 to v4.3.2 is used, the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.</span></span>

<span data-ttu-id="163b4-119">После v4.3.2 пакета NuGet, значение по умолчанию <xref:System.Net.DecompressionMethods.None> используется.</span><span class="sxs-lookup"><span data-stu-id="163b4-119">After NuGet package v4.3.2, the default value of <xref:System.Net.DecompressionMethods.None> is used.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-120">Получает или задает значение, указывающее, проверяется ли сертификат по списку отзыва центра сертификации.</span><span class="sxs-lookup"><span data-stu-id="163b4-120">Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.</span></span></summary>
        <value>
          <span data-ttu-id="163b4-121">Значение <see langword="true" />, если проверяется список отзыва сертификатов; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-121"><see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="163b4-122">Только для .NET Framework 4.7.1: это свойство не реализовано.</span><span class="sxs-lookup"><span data-stu-id="163b4-122">.NET Framework 4.7.1 only: This property is not implemented.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateOptions">
      <MemberSignature Language="C#" Value="public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Http.ClientCertificateOption ClientCertificateOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateOptions As ClientCertificateOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::ClientCertificateOption ClientCertificateOptions { System::Net::Http::ClientCertificateOption get(); void set(System::Net::Http::ClientCertificateOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.ClientCertificateOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-123">Возвращает или задает значение, указывающее, выбирается ли автоматически сертификат из хранилища сертификатов, или может ли вызывающий объект передавать определенный клиентский сертификат.</span><span class="sxs-lookup"><span data-stu-id="163b4-123">Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.</span></span></summary>
        <value><span data-ttu-id="163b4-124">Коллекция сертификатов безопасности, связанных с данным дескриптором.</span><span class="sxs-lookup"><span data-stu-id="163b4-124">The collection of security certificates associated with this handler.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-125">Получает коллекцию сертификатов безопасности, связанных с запросами к серверу.</span><span class="sxs-lookup"><span data-stu-id="163b4-125">Gets the collection of security certificates that are associated requests to the server.</span></span></summary>
        <value><span data-ttu-id="163b4-126">X509CertificateCollection, находящегося на сервере при выполнении сертификата на основе проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="163b4-126">The X509CertificateCollection that is presented to the server when performing certificate based client authentication.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-127">Возвращает или задает контейнер файлов cookie, используемый для хранения файлов cookie сервера обработчиком.</span><span class="sxs-lookup"><span data-stu-id="163b4-127">Gets or sets the cookie container used to store server cookies by the handler.</span></span></summary>
        <value><span data-ttu-id="163b4-128">Контейнер файлов cookie, используемый для хранения файлов cookie сервера обработчиком.</span><span class="sxs-lookup"><span data-stu-id="163b4-128">The cookie container used to store server cookies by the handler.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-129"><xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> Свойство предоставляет экземпляр <xref:System.Net.CookieContainer> класс, который содержит файлы cookie, связанные с данным дескриптором.</span><span class="sxs-lookup"><span data-stu-id="163b4-129">The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.</span></span>  
  
 <span data-ttu-id="163b4-130">Если <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> свойство `true`, <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> свойство представляет контейнер файлов cookie, используемый для хранения файлов cookie сервера.</span><span class="sxs-lookup"><span data-stu-id="163b4-130">If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies.</span></span> <span data-ttu-id="163b4-131">Пользователь может задать пользовательские файлы cookie перед отправкой запросов с помощью этого свойства.</span><span class="sxs-lookup"><span data-stu-id="163b4-131">The user can set custom cookies before sending requests using this property.</span></span> <span data-ttu-id="163b4-132">Если <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> свойство имеет значение false, и пользователь добавляет файлы cookie <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, пропускаются и не отправляются на сервер файлов cookie.</span><span class="sxs-lookup"><span data-stu-id="163b4-132">If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server.</span></span> <span data-ttu-id="163b4-133">Установка <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> для `null` вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="163b4-133">Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-134">Возвращает или задает сведения о проверке подлинности, используемые данным обработчиком.</span><span class="sxs-lookup"><span data-stu-id="163b4-134">Gets or sets authentication information used by this handler.</span></span></summary>
        <value><span data-ttu-id="163b4-135">Учетные записи проверки подлинности, связанные с обработчиком.</span><span class="sxs-lookup"><span data-stu-id="163b4-135">The authentication credentials associated with the handler.</span></span> <span data-ttu-id="163b4-136">Значение по умолчанию: <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-136">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousAcceptAnyServerCertificateValidator">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; DangerousAcceptAnyServerCertificateValidator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DangerousAcceptAnyServerCertificateValidator As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ DangerousAcceptAnyServerCertificateValidator { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-137">Получает кэшированный делегат, который всегда возвращает <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-137">Gets a cached delegate that always returns <see langword="True" />.</span></span></summary>
        <value><span data-ttu-id="163b4-138">Кэшированный делегат, который всегда возвращает <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-138">A cached delegate that always returns <see langword="True" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-139">Особенно в сценариях тестирования, общий шаблон использования <xref:System.Net.Http.HttpClient> для подключения к серверу с помощью сертификата, который не следует проверить, например самозаверяющий сертификат.</span><span class="sxs-lookup"><span data-stu-id="163b4-139">Particularly in test scenarios, a common pattern use <xref:System.Net.Http.HttpClient> to connect to a server with a certificate that shouldn't be validated, such as a self-signed certificate.</span></span> <span data-ttu-id="163b4-140">Обычно это делается с <xref:System.Net.Http.HttpClientHandler> , установив <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> свойство для делегата, который всегда возвращает `True`; это означает, что сертификат прошел проверку.</span><span class="sxs-lookup"><span data-stu-id="163b4-140">You commonly do this with <xref:System.Net.Http.HttpClientHandler> by setting the <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> property to a delegate that always returns `True`; this indicates that the certificate has passed validation.</span></span> <span data-ttu-id="163b4-141">Однако не все реализации поддержки этого обратного вызова, и некоторые исключение <xref:System.PlatformNotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="163b4-141">However, not all implementations support this callback, and some throw <xref:System.PlatformNotSupportedException>.</span></span>  
  
 <span data-ttu-id="163b4-142"><xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> Свойство адреса это ограничение.</span><span class="sxs-lookup"><span data-stu-id="163b4-142">The <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property addresses this limitation.</span></span> <span data-ttu-id="163b4-143">Делегат, возвращенный <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> свойства могут быть назначены <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> свойство, в следующем примере выполняет:</span><span class="sxs-lookup"><span data-stu-id="163b4-143">The delegate returned by the <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property can be assigned to the <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> property, as the following example does:</span></span>  
  
```cs
handler.ServerCertificateCustomValidationCallback = httpClientHandler.DangerousAcceptAnyServerCertificateValidator;
```

 <span data-ttu-id="163b4-144">Это дает <xref:System.Net.Http.HttpClientHandler> реализации удостоверения ссылки известного объекта, которое выражает намерения разработчика.</span><span class="sxs-lookup"><span data-stu-id="163b4-144">This gives <xref:System.Net.Http.HttpClientHandler> implementations a known object reference identity that expresses the developer's intention.</span></span> <span data-ttu-id="163b4-145">Если объект хранится в <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> свойство является ссылка равно <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>, среда выполнения может выполнять полностью отключить проверку на платформу, которая в противном случае будет порождать <xref:System.PlatformNotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="163b4-145">If the object stored in the <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property is reference equals to <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>, the runtime is able to entirely disable validation on a platform that would otherwise throw a <xref:System.PlatformNotSupportedException>.</span></span>  
  
 <span data-ttu-id="163b4-146">Как дополнительное преимущество разработчики могут использовать это свойство для упрощения средства сигнализировать об опасности отключения проверки сертификата, что упрощает для разработчиков избежать доставки незащищенных приложений.</span><span class="sxs-lookup"><span data-stu-id="163b4-146">As a side benefit, developers can use this property to make it easier for tools to flag the danger of disabling certificate validation, which makes it easier for developers to avoid shipping insecure applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProxyCredentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials DefaultProxyCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials DefaultProxyCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProxyCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ DefaultProxyCredentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-147">Если используется прокси-сервер по умолчанию (системный), возвращает или задает учетные данные, отправляемые на прокси-сервер по умолчанию для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="163b4-147">When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication.</span></span> <span data-ttu-id="163b4-148">Прокси-сервер по умолчанию используется только если <see cref="T:System.Net.Http.HttpClientHandler.UseProxy%2A" /> задано значение <see langword="true" /> и <see cref="T:System.Net.Http.HttpClientHandler.Proxy%2A" /> задано значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-148">The default proxy is used only when <see cref="T:System.Net.Http.HttpClientHandler.UseProxy%2A" /> is set to <see langword="true" /> and <see cref="T:System.Net.Http.HttpClientHandler.Proxy%2A" /> is set to <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="163b4-149">Учетные данные, необходимые для проверки подлинности запроса к прокси-серверу по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="163b4-149">The credentials needed to authenticate a request to the default proxy server.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="163b4-150">Значение <see langword="true" /> для освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</span><span class="sxs-lookup"><span data-stu-id="163b4-150"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="163b4-151">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.Http.HttpClientHandler" />, и опционально удаляет управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="163b4-151">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClientHandler" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-152">Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="163b4-152">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="163b4-153">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`.</span><span class="sxs-lookup"><span data-stu-id="163b4-153">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="163b4-154"><xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` значение `false`.</span><span class="sxs-lookup"><span data-stu-id="163b4-154"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="163b4-155">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Net.Http.HttpClientHandler>.</span><span class="sxs-lookup"><span data-stu-id="163b4-155">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references.</span></span> <span data-ttu-id="163b4-156">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="163b4-156">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaxAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAutomaticRedirections { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-157">Возвращает или задает максимальное количество переадресаций, выполняемых обработчиком.</span><span class="sxs-lookup"><span data-stu-id="163b4-157">Gets or sets the maximum number of redirects that the handler follows.</span></span></summary>
        <value><span data-ttu-id="163b4-158">Максимальное количество ответов переадресации, выполняемых обработчиком.</span><span class="sxs-lookup"><span data-stu-id="163b4-158">The maximum number of redirection responses that the handler follows.</span></span> <span data-ttu-id="163b4-159">Значение по умолчанию — 50.</span><span class="sxs-lookup"><span data-stu-id="163b4-159">The default value is 50.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-160"><xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> Устанавливает максимальное количество переадресаций, выполняемых запросом, если значение свойства <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> свойство `true`.</span><span class="sxs-lookup"><span data-stu-id="163b4-160">The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionsPerServer">
      <MemberSignature Language="C#" Value="public int MaxConnectionsPerServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionsPerServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionsPerServer As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnectionsPerServer { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-161">Возвращает или задает максимально допустимое число одновременных подключений (для каждой конечной точки сервера) при выполнении запросов с помощью объекта <see cref="T:System.Net.Http.HttpClient" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-161">Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an <see cref="T:System.Net.Http.HttpClient" /> object.</span></span> <span data-ttu-id="163b4-162">Обратите внимание, что для каждой конечной точки сервера существует ограничение, например, значение 256 разрешает выполнять 256 одновременных подключений к http://www.adatum.com/ и еще 256 подключений — к http://www.adventure-works.com/.</span><span class="sxs-lookup"><span data-stu-id="163b4-162">Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.</span></span></summary>
        <value><span data-ttu-id="163b4-163">Максимальное число одновременных подключений (на конечной точке сервера), разрешенное <see cref="T:System.Net.Http.HttpClient" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="163b4-163">The maximum number of concurrent connections (per server endpoint) allowed by an <see cref="T:System.Net.Http.HttpClient" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxRequestContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxRequestContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxRequestContentBufferSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-164">Получает или задает максимальный размер буфера содержимого запроса, используемого обработчиком.</span><span class="sxs-lookup"><span data-stu-id="163b4-164">Gets or sets the maximum request content buffer size used by the handler.</span></span></summary>
        <value><span data-ttu-id="163b4-165">Максимальный размер буфера содержимого запроса в байтах.</span><span class="sxs-lookup"><span data-stu-id="163b4-165">The maximum request content buffer size in bytes.</span></span> <span data-ttu-id="163b4-166">Значение по умолчанию — 2 ГБ.</span><span class="sxs-lookup"><span data-stu-id="163b4-166">The default value is 2 gigabytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-167">Приложения можно задать <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> свойства более низкое значение, чтобы ограничить размер буфера запроса.</span><span class="sxs-lookup"><span data-stu-id="163b4-167">An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer.</span></span> <span data-ttu-id="163b4-168">Если размер содержимого запроса больше, чем <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> свойства, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="163b4-168">If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaxResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseHeadersLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-169">Возвращает или задает максимальную длину заголовков ответов, выраженную в килобайтах (1024 байта).</span><span class="sxs-lookup"><span data-stu-id="163b4-169">Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.</span></span> <span data-ttu-id="163b4-170">Например, если значение равно 64, для максимальной длины заголовков ответов разрешено использовать 65536 байт.</span><span class="sxs-lookup"><span data-stu-id="163b4-170">For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.</span></span></summary>
        <value><span data-ttu-id="163b4-171">Максимальная длина в килобайтах (1024 байта) заголовков ответа.</span><span class="sxs-lookup"><span data-stu-id="163b4-171">The maximum length, in kilobytes (1024 bytes), of the response headers.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-172">Получает или задает значение, указывающее, будет ли обработчик отправлять заголовок авторизации вместе с запросом.</span><span class="sxs-lookup"><span data-stu-id="163b4-172">Gets or sets a value that indicates whether the handler sends an Authorization header with the request.</span></span></summary>
        <value>
          <span data-ttu-id="163b4-173">Значение <see langword="true" /> для отправки обработчиком заголовка авторизации HTTP с запросом после выполнения аутентификации; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-173"><see langword="true" /> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="163b4-174">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-174">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-175">После запроса клиента к определенному <xref:System.Uri> проверка подлинности прошла успешно, если <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> свойство `true` и учетные данные указаны, <xref:System.Net.Http.HttpClientHandler> совпадает со списком учетных данных указан в <xref:System.Net.Http.HttpClientHandler.Credentials%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="163b4-175">After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property.</span></span> <span data-ttu-id="163b4-176">Заголовок авторизации отправляется при каждом запросе к любому <xref:System.Uri> , соответствующей конкретной <xref:System.Uri> вплоть до последнего косой черты.</span><span class="sxs-lookup"><span data-stu-id="163b4-176">The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.</span></span>  
  
 <span data-ttu-id="163b4-177">Если запрос клиента с определенным <xref:System.Uri> — проверка подлинности не успешно, запрос использует стандартные процедуры проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="163b4-177">If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.</span></span>  
  
 <span data-ttu-id="163b4-178">За исключением первого запроса <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> свойство указывает, следует ли отправлять сведения о проверке подлинности с последующими запросами к <xref:System.Uri> , соответствующей конкретной <xref:System.Uri> вплоть до последнего косая черта без ожидание запроса сервером.</span><span class="sxs-lookup"><span data-stu-id="163b4-178">With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-179">Возвращает доступный для записи словарь (т. е. карту) настраиваемых свойств запросов <see cref="T:System.Net.Http.HttpClient" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-179">Gets a writable dictionary (that is, a map) of custom properties for the <see cref="T:System.Net.Http.HttpClient" /> requests.</span></span> <span data-ttu-id="163b4-180">Словарь инициализируется пустым. Можно вставить и запросить пары "ключ-значение" для пользовательских обработчиков и особой обработки.</span><span class="sxs-lookup"><span data-stu-id="163b4-180">The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.</span></span></summary>
        <value><span data-ttu-id="163b4-181">словарь для записи настраиваемых свойств.</span><span class="sxs-lookup"><span data-stu-id="163b4-181">a writable dictionary of custom properties.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-182">Возвращает или задает сведения о прокси-сервере, используемые обработчиком.</span><span class="sxs-lookup"><span data-stu-id="163b4-182">Gets or sets proxy information used by the handler.</span></span></summary>
        <value><span data-ttu-id="163b4-183">Сведения о прокси-сервере, используемые обработчиком.</span><span class="sxs-lookup"><span data-stu-id="163b4-183">The proxy information used by the handler.</span></span> <span data-ttu-id="163b4-184">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-184">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-185"><xref:System.Net.Http.HttpClientHandler.Proxy%2A> Свойство, обозначающее <xref:System.Net.WebProxy> объект, который используется для обработки запросов к Интернет-ресурсам.</span><span class="sxs-lookup"><span data-stu-id="163b4-185">The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources.</span></span> <span data-ttu-id="163b4-186">Чтобы указать, что должна использоваться без прокси-сервера, задайте <xref:System.Net.Http.HttpClientHandler.Proxy%2A> свойства экземпляра прокси-сервера, возвращенный <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="163b4-186">To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.</span></span>  
  
 <span data-ttu-id="163b4-187">Локальный компьютер или файл конфигурации приложения могут использовать прокси-сервер по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="163b4-187">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="163b4-188">Если <xref:System.Net.Http.HttpClientHandler.Proxy%2A> свойство указано, выберите параметры прокси-сервера из <xref:System.Net.Http.HttpClientHandler.Proxy%2A> переопределения свойств локального компьютера или файла конфигурации приложения и обработчик будет использовать параметры прокси-сервера.</span><span class="sxs-lookup"><span data-stu-id="163b4-188">If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified.</span></span> <span data-ttu-id="163b4-189">Если в файле конфигурации указан без прокси-сервера и <xref:System.Net.Http.HttpClientHandler.Proxy%2A> свойство не задано, обработчик использует параметры прокси-сервера, который наследуется от Internet Explorer на локальном компьютере.</span><span class="sxs-lookup"><span data-stu-id="163b4-189">If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="163b4-190">Если отсутствуют параметры прокси-сервера в Internet Explorer, запрос отправляется непосредственно на сервер.</span><span class="sxs-lookup"><span data-stu-id="163b4-190">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="163b4-191"><xref:System.Net.Http.HttpClientHandler> Класс анализирует список обхода прокси-сервера с использованием подстановочных знаков наследуется от Internet Explorer же как список пропускаемых анализируется непосредственно с Internet Explorer.</span><span class="sxs-lookup"><span data-stu-id="163b4-191">The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="163b4-192">Например <xref:System.Net.Http.HttpClientHandler> класса будет выполнять синтаксический анализ список обхода «nt *» из Internet Explorer регулярное выражение «nt.\*».</span><span class="sxs-lookup"><span data-stu-id="163b4-192">For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.\*".</span></span> <span data-ttu-id="163b4-193">Таким образом URL-адрес " http://nt.com» будут обходить прокси-сервер с помощью <xref:System.Net.Http.HttpClientHandler> класса и с помощью Internet Explorer.</span><span class="sxs-lookup"><span data-stu-id="163b4-193">So a URL of " http://nt.com" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.</span></span>  
  
 <span data-ttu-id="163b4-194"><xref:System.Net.Http.HttpClientHandler> Класс поддерживает обхода локальный прокси-сервер.</span><span class="sxs-lookup"><span data-stu-id="163b4-194">The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass.</span></span> <span data-ttu-id="163b4-195">Класс считает целевой локальной, если выполняется любое из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="163b4-195">The class considers a destination to be local if any of the following conditions are met:</span></span>  
  
1.  <span data-ttu-id="163b4-196">Назначение содержит плоское имя (нет точек в URL-адрес).</span><span class="sxs-lookup"><span data-stu-id="163b4-196">The destination contains a flat name (no dots in the URL).</span></span>  
  
2.  <span data-ttu-id="163b4-197">Назначение содержит адрес замыкания на себя (<xref:System.Net.IPAddress.Loopback> или <xref:System.Net.IPAddress.IPv6Loopback>) или назначение содержит <xref:System.Net.IPAddress> локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="163b4-197">The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.</span></span>  
  
3.  <span data-ttu-id="163b4-198">Суффикс домена назначения совпадает с суффиксом домена локального компьютера (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span><span class="sxs-lookup"><span data-stu-id="163b4-198">The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClientHandler/&lt;SendAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="163b4-199">Сообщение HTTP-запроса.</span><span class="sxs-lookup"><span data-stu-id="163b4-199">The HTTP request message.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="163b4-200">Маркер отмены для отмены операции.</span><span class="sxs-lookup"><span data-stu-id="163b4-200">A cancellation token to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="163b4-201">Создает экземпляр <see cref="T:System.Net.Http.HttpResponseMessage" /> на основе сведений, предоставленных в <see cref="T:System.Net.Http.HttpRequestMessage" />, в качестве неблокируемой операции.</span><span class="sxs-lookup"><span data-stu-id="163b4-201">Creates an instance of  <see cref="T:System.Net.Http.HttpResponseMessage" /> based on the information provided in the <see cref="T:System.Net.Http.HttpRequestMessage" /> as an operation that will not block.</span></span></summary>
        <returns><span data-ttu-id="163b4-202">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="163b4-202">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-203">Эта операция является не блокируется.</span><span class="sxs-lookup"><span data-stu-id="163b4-203">This operation is does not block.</span></span> <span data-ttu-id="163b4-204">Он возвращает экземпляр класса <xref:System.Threading.Tasks.Task%601> для представления асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="163b4-204">It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation.</span></span> <span data-ttu-id="163b4-205">По завершении операции <xref:System.Threading.Tasks.Task%601.Result%2A> содержит сообщение ответа.</span><span class="sxs-lookup"><span data-stu-id="163b4-205">When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="163b4-206">Запрос <paramref name="request" /> имел значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-206">The <paramref name="request" /> was <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateCustomValidationCallback">
      <MemberSignature Language="C#" Value="public Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; ServerCertificateCustomValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateCustomValidationCallback As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ ServerCertificateCustomValidationCallback { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); void set(Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-207">Возвращает или задает метод обратного вызова для проверки сертификата сервера.</span><span class="sxs-lookup"><span data-stu-id="163b4-207">Gets or sets a callback method to validate the server certificate.</span></span></summary>
        <value><span data-ttu-id="163b4-208">Метод обратного вызова для проверки сертификата сервера.</span><span class="sxs-lookup"><span data-stu-id="163b4-208">A callback method to validate the server certificate.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocols">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.SslProtocols SslProtocols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property SslProtocols As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::SslProtocols SslProtocols { System::Security::Authentication::SslProtocols get(); void set(System::Security::Authentication::SslProtocols value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-209">Возвращает или задает протокол TLS/SSL, используемый объектами <see cref="T:System.Net.Http.HttpClient" />, которые управляются объектом HttpClientHandler.</span><span class="sxs-lookup"><span data-stu-id="163b4-209">Gets or sets the TLS/SSL protocol used by the <see cref="T:System.Net.Http.HttpClient" /> objects managed by the HttpClientHandler object.</span></span></summary>
        <value><span data-ttu-id="163b4-210">Одно из значений, определенных в перечислении <see cref="T:System.Security.Authentication.SslProtocols" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-210">One of the values defined in the <see cref="T:System.Security.Authentication.SslProtocols" /> enumeration.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="163b4-211">Только для .NET Framework 4.7.1: это свойство не реализовано.</span><span class="sxs-lookup"><span data-stu-id="163b4-211">.NET Framework 4.7.1 only: This property is not implemented.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsAutomaticDecompression">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAutomaticDecompression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAutomaticDecompression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAutomaticDecompression { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-212">Возвращает значение, указывающее, поддерживает ли обработчик автоматическую распаковку содержимого ответов.</span><span class="sxs-lookup"><span data-stu-id="163b4-212">Gets a value that indicates whether the handler supports automatic response content decompression.</span></span></summary>
        <value>
          <span data-ttu-id="163b4-213">Значение <see langword="true" />, если обработчик поддерживает автоматическую распаковку содержимого ответов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-213"><see langword="true" /> if the if the handler supports automatic response content decompression; otherwise <see langword="false" />.</span></span> <span data-ttu-id="163b4-214">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-214">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsProxy">
      <MemberSignature Language="C#" Value="public virtual bool SupportsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsProxy { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-215">Получает значение, указывающее, поддерживает ли обработчик параметры прокси.</span><span class="sxs-lookup"><span data-stu-id="163b4-215">Gets a value that indicates whether the handler supports proxy settings.</span></span></summary>
        <value>
          <span data-ttu-id="163b4-216">Значение, <see langword="true" /> если обработчик поддерживает параметры прокси; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-216"><see langword="true" /> if the if the handler supports proxy settings; otherwise <see langword="false" />.</span></span> <span data-ttu-id="163b4-217">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-217">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectConfiguration">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectConfiguration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectConfiguration { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-218">Получает значение, указывающее, поддерживает ли обработчик параметры конфигурации для свойств <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> и <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-218">Gets a value that indicates whether the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties.</span></span></summary>
        <value>
          <span data-ttu-id="163b4-219">Значение <see langword="true" />, если обработчик поддерживает параметры конфигурации для свойств <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> и <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-219"><see langword="true" /> if the if the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties; otherwise <see langword="false" />.</span></span> <span data-ttu-id="163b4-220">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-220">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCookies">
      <MemberSignature Language="C#" Value="public bool UseCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCookies { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-221">Получает или задает значение, указывающее, использует ли обработчик свойство <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> для хранения файлов cookie сервера и использует ли он такие файлы cookie при отправке запросов.</span><span class="sxs-lookup"><span data-stu-id="163b4-221">Gets or sets a value that indicates whether the handler uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests.</span></span></summary>
        <value>
          <span data-ttu-id="163b4-222">Значение <see langword="true" />, если обработчик использует свойство <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> для хранения файлов cookie сервера и использует такие файлы cookie при отправке запросов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-222"><see langword="true" /> if the if the handler supports uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests; otherwise <see langword="false" />.</span></span> <span data-ttu-id="163b4-223">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-223">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-224">Возвращает или задает значение, которое определяет, должен ли обработчик отправлять учетные данные по умолчанию вместе с запросами.</span><span class="sxs-lookup"><span data-stu-id="163b4-224">Gets or sets a value that controls whether default credentials are sent with requests by the handler.</span></span></summary>
        <value>
          <span data-ttu-id="163b4-225">Значение <see langword="true" />, если используются учетные данные по умолчанию; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-225"><see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span></span> <span data-ttu-id="163b4-226">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-226">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163b4-227">Присвойте этому свойству значение `true` при запросы, сделанные <xref:System.Net.Http.HttpClientHandler> объекта по запросу сервера, проверка подлинности должна выполняться с использованием учетных данных пользователя, выполнившего вход.</span><span class="sxs-lookup"><span data-stu-id="163b4-227">Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="163b4-228">Для клиентских приложений это приемлемо в большинстве сценариев.</span><span class="sxs-lookup"><span data-stu-id="163b4-228">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="163b4-229">Для приложений среднего уровня, таких как приложения ASP.NET, вместо того чтобы использовать это свойство обычно устанавливается <xref:System.Net.Http.HttpClientHandler.Credentials%2A> свойства учетные данные клиента, от лица которого выполняется запрос.</span><span class="sxs-lookup"><span data-stu-id="163b4-229">For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxy">
      <MemberSignature Language="C#" Value="public bool UseProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseProxy { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="163b4-230">Возвращает или задает значение, указывающее, использует ли обработчик прокси-сервер для запросов.</span><span class="sxs-lookup"><span data-stu-id="163b4-230">Gets or sets a value that indicates whether the handler uses a proxy for requests.</span></span></summary>
        <value>
          <span data-ttu-id="163b4-231"><see langword="true" />, если обработчик должен использовать прокси-сервер для запросов. В противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-231"><see langword="true" /> if the handler should use a proxy for requests; otherwise <see langword="false" />.</span></span> <span data-ttu-id="163b4-232">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="163b4-232">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>