<Type Name="HttpContent" FullName="System.Net.Http.HttpContent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dbc2474e82bbf7313a8c6c6e37f60bd375518eea" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpContent : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContent extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpContent" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContent&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContent abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="16c34-101">Базовый класс, представляющий тело и заголовки содержимого сущности HTTP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16c34-101">A base class representing an HTTP entity body and content headers.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16c34-102">Инициализирует новый экземпляр класса <see cref="T:System.Net.Http.HttpContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-102">Initializes a new instance of the <see cref="T:System.Net.Http.HttpContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16c34-103">Сериализирует содержимое HTTP в поток байтов и копирует его в объект потока, предоставленный как параметр <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-103">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-104">Эта операция не блокируется.</span><span class="sxs-lookup"><span data-stu-id="16c34-104">This operation does not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="16c34-105">Целевой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-105">The target stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16c34-106">Сериализирует содержимое HTTP в поток байтов и копирует его в объект потока, предоставленный как параметр <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-106">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16c34-107">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-107">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-108">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="16c34-108">This operation will not block.</span></span> <span data-ttu-id="16c34-109">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта завершит все содержимое, произошло после записи в объект потока, переданного в качестве `stream` параметра.</span><span class="sxs-lookup"><span data-stu-id="16c34-109">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the stream object passed as the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="16c34-110">Целевой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-110">The target stream.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="16c34-111">Сведения о транспорте (например, маркер привязки каналов).</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-111">Information about the transport (channel binding token, for example).</span>
          </span>
          <span data-ttu-id="16c34-112">Этот параметр может иметь значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-112">This parameter may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16c34-113">Сериализирует содержимое HTTP в поток байтов и копирует его в объект потока, предоставленный как параметр <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-113">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16c34-114">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-114">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-115">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="16c34-115">This operation will not block.</span></span> <span data-ttu-id="16c34-116">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта завершит все содержимое, произошло после записи в объект потока, переданного в качестве `stream` параметра.</span><span class="sxs-lookup"><span data-stu-id="16c34-116">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the stream object passed as the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentReadStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;CreateContentReadStreamAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16c34-117">Сериализация содержимого HTTP в поток в памяти в качестве асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-117">Serialize the HTTP content to a memory stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16c34-118">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-118">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-119">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="16c34-119">This operation will not block.</span></span> <span data-ttu-id="16c34-120">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта завершит все содержимое, произошло после записи в поток памяти.</span><span class="sxs-lookup"><span data-stu-id="16c34-120">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="16c34-121">После завершения операции, <xref:System.Threading.Tasks.Task%601.Result%2A> свойство объекта возвращаемая задача содержит поток памяти, который представляет содержимое HTTP.</span><span class="sxs-lookup"><span data-stu-id="16c34-121">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the memory stream that that represents the HTTP content.</span></span> <span data-ttu-id="16c34-122">Затем возвращенный поток используется для считывания содержимого с помощью различных потока API-интерфейсы.</span><span class="sxs-lookup"><span data-stu-id="16c34-122">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 <span data-ttu-id="16c34-123"><xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A> Метод выполняет буферизацию содержимого в поток памяти.</span><span class="sxs-lookup"><span data-stu-id="16c34-123">The <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream.</span></span> <span data-ttu-id="16c34-124">Это поведение можно переопределить в производных классах при наличии более эффективный способ получения содержимого, как поток.</span><span class="sxs-lookup"><span data-stu-id="16c34-124">Derived classes can override this behavior if there is a better way to retrieve the content as stream.</span></span> <span data-ttu-id="16c34-125">Например, массив байтов или строка может использовать более эффективный способ метода, такие как обтекания только для чтения <xref:System.IO.MemoryStream> вокруг байт или строку.)</span><span class="sxs-lookup"><span data-stu-id="16c34-125">For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16c34-126">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.Http.HttpContent" />, и опционально удаляет управляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-126">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpContent" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16c34-127">Освобождает неуправляемые ресурсы и удаляет управляемые ресурсы, используемые объектом <see cref="T:System.Net.Http.HttpContent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-127">Releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:System.Net.Http.HttpContent" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="16c34-128">Значение <see langword="true" /> для освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-128">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16c34-129">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.Http.HttpContent" />, и опционально удаляет управляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-129">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpContent" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-130">Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="16c34-130">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="16c34-131">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`.</span><span class="sxs-lookup"><span data-stu-id="16c34-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="16c34-132"><xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` значение `false`. При `disposing` параметр `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Net.Http.HttpContent> ссылки.</span><span class="sxs-lookup"><span data-stu-id="16c34-132"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpContent> references.</span></span> <span data-ttu-id="16c34-133">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="16c34-133">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpContentHeaders Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpContentHeaders Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpContent.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As HttpContentHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpContentHeaders ^ Headers { System::Net::Http::Headers::HttpContentHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpContentHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16c34-134">Получает заголовки HTTP-содержимого, как определено в RFC 2616.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-134">Gets the HTTP content headers as defined in RFC 2616.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16c34-135">Заголовки HTTP-содержимого, как определено в RFC 2616.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-135">The content headers as defined in RFC 2616.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadIntoBufferAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16c34-136">Сериализация содержимого HTTP в буфер памяти в виде асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-136">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-137">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="16c34-137">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadIntoBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadIntoBufferAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadIntoBufferAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadIntoBufferAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadIntoBufferAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16c34-138">Сериализация содержимого HTTP в буфер памяти в виде асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-138">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16c34-139">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-139">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-140">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="16c34-140">This operation will not block.</span></span> <span data-ttu-id="16c34-141">Возвращенный <xref:System.Threading.Tasks.Task> объекта будет выполнена после сериализации все содержимое в буфер памяти.</span><span class="sxs-lookup"><span data-stu-id="16c34-141">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the memory buffer.</span></span>  
  
 <span data-ttu-id="16c34-142">После сериализации содержимого буфер памяти, вызывает одно из <xref:System.Net.Http.HttpContent.CopyToAsync%2A> методов будет скопировано содержимое буфера памяти в целевой поток.</span><span class="sxs-lookup"><span data-stu-id="16c34-142">After content is serialized to a memory buffer, calls to one of the  <xref:System.Net.Http.HttpContent.CopyToAsync%2A> methods will copy the content of the memory buffer to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIntoBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadIntoBufferAsync (long maxBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadIntoBufferAsync(int64 maxBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadIntoBufferAsync (maxBufferSize As Long) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadIntoBufferAsync(long maxBufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;LoadIntoBufferAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBufferSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="maxBufferSize">
          <span data-ttu-id="16c34-143">Максимальный размер буфера для использования в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-143">The maximum size, in bytes, of the buffer to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16c34-144">Сериализация содержимого HTTP в буфер памяти в виде асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-144">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16c34-145">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-145">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-146">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="16c34-146">This operation will not block.</span></span> <span data-ttu-id="16c34-147">Возвращенный <xref:System.Threading.Tasks.Task> объекта будет выполнена после сериализации все содержимое в буфер памяти.</span><span class="sxs-lookup"><span data-stu-id="16c34-147">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the memory buffer.</span></span>  
  
 <span data-ttu-id="16c34-148">После сериализации содержимого буфер памяти, вызывает одно из <xref:System.Net.Http.HttpContent.CopyToAsync%2A> методов будет скопировано содержимое буфера памяти в целевой поток.</span><span class="sxs-lookup"><span data-stu-id="16c34-148">After content is serialized to a memory buffer, calls to one of the  <xref:System.Net.Http.HttpContent.CopyToAsync%2A> methods will copy the content of the memory buffer to the target stream.</span></span>  
  
 <span data-ttu-id="16c34-149">Если содержимое превышает значение, переданное в `maxBufferSize` параметра, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="16c34-149">If the content exceeds the value  passed in the `maxBufferSize` parameter , an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; ReadAsByteArrayAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadAsByteArrayAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsByteArrayAsync () As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ ReadAsByteArrayAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;ReadAsByteArrayAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16c34-150">Сериализация содержимого HTTP в массив байтов в виде асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-150">Serialize the HTTP content to a byte array as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16c34-151">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-151">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-152">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="16c34-152">This operation will not block.</span></span> <span data-ttu-id="16c34-153">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после написания все содержимое в виде массива байтов.</span><span class="sxs-lookup"><span data-stu-id="16c34-153">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written as a byte array.</span></span>  
  
 <span data-ttu-id="16c34-154">После завершения операции, <xref:System.Threading.Tasks.Task%601.Result%2A> свойство объекта возвращаемая задача содержит массив байтов с содержимым HTTP.</span><span class="sxs-lookup"><span data-stu-id="16c34-154">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the byte array with the HTTP content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; ReadAsStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; ReadAsStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ ReadAsStreamAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;ReadAsStreamAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16c34-155">Сериализует HTTP-содержимое и возвращает поток, представляющий содержимое в асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-155">Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16c34-156">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-156">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-157">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="16c34-157">This operation will not block.</span></span> <span data-ttu-id="16c34-158">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после всех потока считаны представляет содержимое.</span><span class="sxs-lookup"><span data-stu-id="16c34-158">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the stream that represents content has been read.</span></span>  
  
 <span data-ttu-id="16c34-159">После завершения операции, <xref:System.Threading.Tasks.Task%601.Result%2A> свойство объекта возвращаемая задача содержит поток, который представляет содержимое HTTP.</span><span class="sxs-lookup"><span data-stu-id="16c34-159">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the stream that that represents the HTTP content.</span></span> <span data-ttu-id="16c34-160">Затем возвращенный поток используется для считывания содержимого с помощью различных потока API-интерфейсы.</span><span class="sxs-lookup"><span data-stu-id="16c34-160">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; ReadAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadAsStringAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpContent/&lt;ReadAsStringAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16c34-161">Сериализация содержимого HTTP в строку в качестве асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-161">Serialize the HTTP content to a string as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16c34-162">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-162">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-163">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="16c34-163">This operation will not block.</span></span> <span data-ttu-id="16c34-164">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после написания все содержимое как строку.</span><span class="sxs-lookup"><span data-stu-id="16c34-164">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written as a string.</span></span>  
  
 <span data-ttu-id="16c34-165">После завершения операции, <xref:System.Threading.Tasks.Task%601.Result%2A> свойства в объекте возвращаемая задача содержит строку с помощью содержимого HTTP.</span><span class="sxs-lookup"><span data-stu-id="16c34-165">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the string with the HTTP content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected internal abstract System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="16c34-166">Целевой поток.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-166">The target stream.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="16c34-167">Сведения о транспорте (например, маркер привязки каналов).</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-167">Information about the transport (channel binding token, for example).</span>
          </span>
          <span data-ttu-id="16c34-168">Этот параметр может иметь значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-168">This parameter may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16c34-169">Сериализация содержимого HTTP в поток в качестве асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-169">Serialize the HTTP content to a stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16c34-170">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-170">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-171">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="16c34-171">This operation will not block.</span></span> <span data-ttu-id="16c34-172">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после сериализации все содержимое в объект потока, переданный `stream` параметра.</span><span class="sxs-lookup"><span data-stu-id="16c34-172">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the stream object passed in the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="16c34-173">Длина содержимого HTTP в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-173">The length in bytes of the HTTP content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16c34-174">Определяет, имеет ли содержимое HTTP допустимую длину в байтах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-174">Determines whether the HTTP content has a valid length in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16c34-175">Значение <see langword="true" />, если <paramref name="length" /> — допустимая длина. В противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16c34-175">
              <see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16c34-176"><xref:System.Net.Http.HttpContent.TryComputeLength%2A> Метод позволяет содержимого HTTP для вычисления длины содержимого.</span><span class="sxs-lookup"><span data-stu-id="16c34-176">The <xref:System.Net.Http.HttpContent.TryComputeLength%2A> method gives a HTTP content the ability to calculate the content length.</span></span> <span data-ttu-id="16c34-177">Это полезно для типов содержимого, которые поддерживают возможность легко вычислить длину содержимого.</span><span class="sxs-lookup"><span data-stu-id="16c34-177">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="16c34-178">Если вычисление длину содержимого невозможно или ресурсоемкие (потребует системы для буферизации все содержимое, где бы требует много ресурсов или требуют выделения большого объема памяти системы сериализации), этот метод может возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="16c34-178">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="16c34-179">Если этот метод возвращает `false`, это означает, что необходимости поблочное или содержимое должно получить буфер перед его отправкой на сервер.</span><span class="sxs-lookup"><span data-stu-id="16c34-179">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>