<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpMessageHandler.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5010493ba0e303188ad7d031473c72e8a1f5bbda7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">010493ba0e303188ad7d031473c72e8a1f5bbda7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpMessageHandler">
          <source>A base type for HTTP message handlers.</source>
          <target state="translated">Базовый тип для обработчиков сообщений HTTP.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageHandler">
          <source>There are various HTTP message handles that can be used.</source>
          <target state="translated">Существуют различные маркеры сообщения HTTP, которые можно использовать.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageHandler">
          <source>These include the following.</source>
          <target state="translated">К ним относятся следующие.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageHandler">
          <source><ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler&gt;</ph> - A class used to plug a handler into a handler chain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler&gt;</ph> -Класс, используемый для подключения обработчика в цепочку обработчика.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageHandler">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> - A simple to class to derive from that supports the most common requirements for most applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> -Простой класс для наследования, поддерживает наиболее распространенных для большинства приложений.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageHandler">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> - A class that operates at the bottom of the handler chain that actually handles the HTTP transport operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> -Класс, который работает в нижней части цепочки обработчик, который в действительности обрабатывает операции транспорта HTTP.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageHandler">
          <source><ph id="ph1">&lt;xref:System.Net.Http.WebRequestHandler&gt;</ph> - A specialty class that operates at the bottom of the handler chain class that handles HTTP transport operations with options that are specific to the <ph id="ph2">&lt;xref:System.Net.HttpWebRequest?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.WebRequestHandler&gt;</ph> -Специальные класс, который работает в нижней части цепочки класса обработчика, который управляет операции транспорт HTTP с параметрами, которые относятся к <ph id="ph2">&lt;xref:System.Net.HttpWebRequest?displayProperty=nameWithType&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageHandler">
          <source>If developers derive classes from <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> and override the <ph id="ph2">&lt;xref:System.Net.Http.HttpMessageHandler.SendAsync%2A&gt;</ph> method, they must make sure that <ph id="ph3">&lt;xref:System.Net.Http.HttpMessageHandler.SendAsync%2A&gt;</ph> can get called concurrently by different threads.</source>
          <target state="translated">Если разработчики наследовать классы от <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> и Переопределите <ph id="ph2">&lt;xref:System.Net.Http.HttpMessageHandler.SendAsync%2A&gt;</ph> метода, они должны убедитесь, что <ph id="ph3">&lt;xref:System.Net.Http.HttpMessageHandler.SendAsync%2A&gt;</ph> может вызываться из разных потоков одновременно.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageHandler">
          <source>This is necessary since methods on <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> can be called concurrently and need a guarantee of thread safety.</source>
          <target state="translated">Это необходимо, так как методы <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> может быть вызван одновременно и требуют гарантии потокобезопасности.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpMessageHandler">
          <source>So if a handler is assigned to an <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance, the <ph id="ph2">&lt;xref:System.Net.Http.HttpMessageHandler.SendAsync%2A&gt;</ph> method of the handler may get called concurrently by the <ph id="ph3">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance and needs to be thread safe.</source>
          <target state="translated">Таким образом, если обработчик назначается <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> экземпляра, <ph id="ph2">&lt;xref:System.Net.Http.HttpMessageHandler.SendAsync%2A&gt;</ph> метод обработчика может вызываться параллельно с <ph id="ph3">&lt;xref:System.Net.Http.HttpClient&gt;</ph> экземпляра и должен быть потокобезопасным.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpMessageHandler">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> and optionally disposes of the managed resources.</source>
          <target state="translated">Освобождает неуправляемые ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph>, и опционально удаляет управляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageHandler.Dispose">
          <source>Releases the unmanaged resources and disposes of the managed resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph>.</source>
          <target state="translated">Освобождает неуправляемые ресурсы и удаляет управляемые ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to releases only unmanaged resources.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> для освобождения управляемых и неуправляемых ресурсов; значение <ph id="ph2">&lt;see langword="false" /&gt;</ph> для освобождения только неуправляемых ресурсов.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> and optionally disposes of the managed resources.</source>
          <target state="translated">Освобождает неуправляемые ресурсы, используемые объектом <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph>, и опционально удаляет управляемые ресурсы.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Этот метод вызывается методом открытые <ph id="ph1">`Dispose()`</ph> метод и <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> вызывает защищенный <ph id="ph2">`Dispose(Boolean)`</ph> метод с <ph id="ph3">`disposing`</ph> равным <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.When the <ph id="ph5">`disposing`</ph> parameter is <ph id="ph6">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph7">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> вызывает <ph id="ph2">`Dispose`</ph> с <ph id="ph3">`disposing`</ph> значение <ph id="ph4">`false`</ph>. При <ph id="ph5">`disposing`</ph> параметр <ph id="ph6">`true`</ph>, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <ph id="ph7">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> ссылки.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Этот метод вызывает метод <ph id="ph1">`Dispose()`</ph> каждого объекта, на который есть ссылка.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The HTTP request message to send.</source>
          <target state="translated">Сообщение HTTP-запроса для отправки.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The cancellation token to cancel operation.</source>
          <target state="translated">Токен отмены для отмены операции.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">Отправка HTTP-запроса в качестве асинхронной операции.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Объект задачи, представляющий асинхронную операцию.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">Эта операция не будет блокирована.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete once the entire response including content is read.</source>
          <target state="translated">Возвращенный <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> объекта будет выполнена после считывания всего ответа, включая содержимое.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler.SendAsync%2A&gt;</ph> method is used primarily by the system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler.SendAsync%2A&gt;</ph> Метод используется в основном системой.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>This method is called by the system one of the  <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.SendAsync%2A?displayProperty=nameWithType&gt;</ph> methods is called.</source>
          <target state="translated">Этот метод вызывается системой один <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.SendAsync%2A?displayProperty=nameWithType&gt;</ph> вызывать методы.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>Most apps will never call this method.</source>
          <target state="translated">Данный метод никогда не будет вызываться для большинства приложений.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Запрос <ph id="ph1">&lt;paramref name="request" /&gt;</ph> имел значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>