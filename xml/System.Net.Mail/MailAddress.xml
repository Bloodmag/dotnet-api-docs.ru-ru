<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="404a6a1b351417a1b2601d0f5b2cf7f370e3c9ac" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="76780-101">Представляет адрес отправителя или получателя электронной почты.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76780-101">Represents the address of an electronic mail sender or recipient.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="76780-102"><xref:System.Net.Mail.MailAddress> Класс используется <xref:System.Net.Mail.SmtpClient> и <xref:System.Net.Mail.MailMessage> классов для хранения сведений об адресе для сообщений электронной почты.</span><span class="sxs-lookup"><span data-stu-id="76780-102">The <xref:System.Net.Mail.MailAddress> class is used by the <xref:System.Net.Mail.SmtpClient> and <xref:System.Net.Mail.MailMessage> classes to store address information for email messages.</span></span>  
  
<span data-ttu-id="76780-103">Почтовый адрес состоит из <xref:System.Net.Mail.MailAddress.User%2A> имя <xref:System.Net.Mail.MailAddress.Host%2A> имя и при необходимости <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span><span class="sxs-lookup"><span data-stu-id="76780-103">A mail address is composed of a <xref:System.Net.Mail.MailAddress.User%2A> name, <xref:System.Net.Mail.MailAddress.Host%2A> name and optionally, a <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span></span> <span data-ttu-id="76780-104"><xref:System.Net.Mail.MailAddress.DisplayName%2A> Может содержать символы, отличные от ASCII, если их кодировать.</span><span class="sxs-lookup"><span data-stu-id="76780-104">The <xref:System.Net.Mail.MailAddress.DisplayName%2A> can contain non-ASCII characters if you encode them.</span></span>  
  
<span data-ttu-id="76780-105"><xref:System.Net.Mail.MailAddress> Класс поддерживает следующие форматы адресов почты:</span><span class="sxs-lookup"><span data-stu-id="76780-105">The <xref:System.Net.Mail.MailAddress> class supports the following mail address formats:</span></span>  
  
-   <span data-ttu-id="76780-106">В формате простого адреса `user@host`.</span><span class="sxs-lookup"><span data-stu-id="76780-106">A simple address format of `user@host`.</span></span> <span data-ttu-id="76780-107">Если <xref:System.Net.Mail.MailAddress.DisplayName%2A> не задано, это созданный формате почты.</span><span class="sxs-lookup"><span data-stu-id="76780-107">If a <xref:System.Net.Mail.MailAddress.DisplayName%2A> is not set, this is the mail address format generated.</span></span>  
  
-   <span data-ttu-id="76780-108">Формат имени отображаемую заключенные в кавычки `"display name" <user@host>`.</span><span class="sxs-lookup"><span data-stu-id="76780-108">A standard quoted display name format of `"display name" <user@host>`.</span></span> <span data-ttu-id="76780-109">Если <xref:System.Net.Mail.MailAddress.DisplayName%2A> не установлен, это созданный формат.</span><span class="sxs-lookup"><span data-stu-id="76780-109">If a <xref:System.Net.Mail.MailAddress.DisplayName%2A> is set, this is the format generated.</span></span>  
  
-   <span data-ttu-id="76780-110">Угловые скобки добавляются вокруг <xref:System.Net.Mail.MailAddress.User%2A> имя <xref:System.Net.Mail.MailAddress.Host%2A> имя `"display name" user@host` если они не включены.</span><span class="sxs-lookup"><span data-stu-id="76780-110">Angle brackets are added around the <xref:System.Net.Mail.MailAddress.User%2A> name, <xref:System.Net.Mail.MailAddress.Host%2A> name for `"display name" user@host` if these are not included.</span></span>  
  
-   <span data-ttu-id="76780-111">Будут добавлены кавычки вокруг <xref:System.Net.Mail.MailAddress.DisplayName%2A> для `display name <user@host>`, если они не включены.</span><span class="sxs-lookup"><span data-stu-id="76780-111">Quotes are added around the <xref:System.Net.Mail.MailAddress.DisplayName%2A> for `display name <user@host>`, if these are not included.</span></span>  
  
-   <span data-ttu-id="76780-112">Символы Юникода поддерживаются в <xref:System.Net.Mail.MailAddress.DisplayName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="76780-112">Unicode characters are supported in the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property.</span></span>  
  
-   <span data-ttu-id="76780-113">Объект <xref:System.Net.Mail.MailAddress.User%2A> имя в кавычки.</span><span class="sxs-lookup"><span data-stu-id="76780-113">A <xref:System.Net.Mail.MailAddress.User%2A> name with quotes.</span></span> <span data-ttu-id="76780-114">Например, `"user name"@host`.</span><span class="sxs-lookup"><span data-stu-id="76780-114">For example, `"user name"@host`.</span></span>  
  
-   <span data-ttu-id="76780-115">Последовательные и конечные точки в именах пользователей.</span><span class="sxs-lookup"><span data-stu-id="76780-115">Consecutive and trailing dots in user names.</span></span> <span data-ttu-id="76780-116">Например, `user...name..@host`.</span><span class="sxs-lookup"><span data-stu-id="76780-116">For example, `user...name..@host`.</span></span>  
  
-   <span data-ttu-id="76780-117">Литералы домена в квадратных скобках.</span><span class="sxs-lookup"><span data-stu-id="76780-117">Bracketed domain literals.</span></span> <span data-ttu-id="76780-118">Например, `<user@[my domain]>`.</span><span class="sxs-lookup"><span data-stu-id="76780-118">For example, `<user@[my domain]>`.</span></span>  
  
-   <span data-ttu-id="76780-119">Комментарии.</span><span class="sxs-lookup"><span data-stu-id="76780-119">Comments.</span></span> <span data-ttu-id="76780-120">Например, `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`.</span><span class="sxs-lookup"><span data-stu-id="76780-120">For example, `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`.</span></span> <span data-ttu-id="76780-121">Комментарии удаляются перед началом передачи.</span><span class="sxs-lookup"><span data-stu-id="76780-121">Comments are removed before transmission.</span></span>  
  
<span data-ttu-id="76780-122">Для разделения элементов в списке адресов электронной почты используется запятая.</span><span class="sxs-lookup"><span data-stu-id="76780-122">A comma is used to separate elements in a list of mail addresses.</span></span> <span data-ttu-id="76780-123">В результате запятая не должны использоваться в отображаемых именах без кавычек в списке.</span><span class="sxs-lookup"><span data-stu-id="76780-123">As a result, a comma should not be used in unquoted display names in a list.</span></span> <span data-ttu-id="76780-124">Допустимы следующие адреса электронной почты:</span><span class="sxs-lookup"><span data-stu-id="76780-124">The following mail addresses would be allowed:</span></span>
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
<span data-ttu-id="76780-125">Следующий адрес электронной почты не будет разрешен:</span><span class="sxs-lookup"><span data-stu-id="76780-125">The following mail address would not be allowed:</span></span>  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
<span data-ttu-id="76780-126">Квоты могут быть внедрены в строку в кавычках, но их необходимо экранировать.</span><span class="sxs-lookup"><span data-stu-id="76780-126">Quotes can be embedded in a quoted string, but they must be escaped.</span></span> <span data-ttu-id="76780-127">Допустимы следующие адреса электронной почты:</span><span class="sxs-lookup"><span data-stu-id="76780-127">The following mail addresses would be allowed:</span></span>
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
<span data-ttu-id="76780-128">Следующий адрес электронной почты не будет разрешен:</span><span class="sxs-lookup"><span data-stu-id="76780-128">The following mail address would not be allowed:</span></span>  
  
`"John "Jr" Doe" <user@host>`  
  
<span data-ttu-id="76780-129">Если имя пользователя является Примечание заключен в кавычки, весь текст между началом строки (или запятая) и адреса являются частью <xref:System.Net.Mail.MailAddress.DisplayName%2A>, включая комментарии.</span><span class="sxs-lookup"><span data-stu-id="76780-129">When the username is note quoted, all text between the start of the string (or comma) and the address are considered part of the <xref:System.Net.Mail.MailAddress.DisplayName%2A>, including comments.</span></span> <span data-ttu-id="76780-130">Пример:</span><span class="sxs-lookup"><span data-stu-id="76780-130">For example:</span></span>
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
<span data-ttu-id="76780-131">Несмотря на то что <xref:System.Net.Mail.MailAddress> класса принимает адрес электронной почты как допустимый, другие почтовые серверы не могут принимать почтовый адрес.</span><span class="sxs-lookup"><span data-stu-id="76780-131">Although the <xref:System.Net.Mail.MailAddress> class accepts a mail address as valid, other mail servers may not accept the mail address.</span></span>  
  
<span data-ttu-id="76780-132"><xref:System.Net.Mail.MailAddress> Класс не поддерживает следующие форматы адресов почты:</span><span class="sxs-lookup"><span data-stu-id="76780-132">The <xref:System.Net.Mail.MailAddress> class does not support the following mail address formats:</span></span>  
  
- <span data-ttu-id="76780-133">Смешанный кавычках и без отображаемые имена.</span><span class="sxs-lookup"><span data-stu-id="76780-133">Mixed quoted and unquoted display names.</span></span> <span data-ttu-id="76780-134">Например, `display "name" <user@host>`.</span><span class="sxs-lookup"><span data-stu-id="76780-134">For example, `display "name" <user@host>`.</span></span>
  
- <span data-ttu-id="76780-135">Группы, как определено в RFC 2822 раздел 3.4, публикуемого IETF.</span><span class="sxs-lookup"><span data-stu-id="76780-135">Groups, as defined in RFC 2822 Section 3.4 published by the IETF.</span></span>  
  
- <span data-ttu-id="76780-136">Устаревшие форматы имен пользователей из `"user"."name"@host`, `user."name"@host` или `"user".name@host`.</span><span class="sxs-lookup"><span data-stu-id="76780-136">The obsolete user name formats of `"user"."name"@host`, `user."name"@host` or `"user".name@host`.</span></span>
  
   
  
## Examples  
<span data-ttu-id="76780-137">В следующем примере кода показана отправка сообщения электронной почты с помощью <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>, и <xref:System.Net.Mail.MailMessage> классы.</span><span class="sxs-lookup"><span data-stu-id="76780-137">The following code example demonstrates sending an email message by using the <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>, and <xref:System.Net.Mail.MailMessage> classes.</span></span>  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76780-138">Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.MailAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-138">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="76780-139">Объект <see cref="T:System.String" />, содержащий адрес электронной почты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-139">A <see cref="T:System.String" /> that contains an email address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76780-140">Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.MailAddress" />, используя указанный адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-140">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76780-141">`address` Параметр может содержать отображаемое имя и связанный адрес электронной почты, если адрес заключить в угловые скобки.</span><span class="sxs-lookup"><span data-stu-id="76780-141">The `address` parameter can contain a display name and the associated email address if you enclose the address in angle brackets.</span></span> <span data-ttu-id="76780-142">Пример:</span><span class="sxs-lookup"><span data-stu-id="76780-142">For example:</span></span>  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 <span data-ttu-id="76780-143">Разрешены пробелы между отображаемое имя и угловые скобки.</span><span class="sxs-lookup"><span data-stu-id="76780-143">White space is permitted between the display name and the angle brackets.</span></span>  
  
 <span data-ttu-id="76780-144">В следующей таблице показаны значения свойств для <xref:System.Net.Mail.MailAddress> объекте, созданном с помощью адреса из предыдущего примера.</span><span class="sxs-lookup"><span data-stu-id="76780-144">The following table shows the property values for a <xref:System.Net.Mail.MailAddress> object constructed using the preceding example address.</span></span>  
  
|<span data-ttu-id="76780-145">Свойство.</span><span class="sxs-lookup"><span data-stu-id="76780-145">Property</span></span>|<span data-ttu-id="76780-146">Значение</span><span class="sxs-lookup"><span data-stu-id="76780-146">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 <span data-ttu-id="76780-147">В следующем примере кода этот конструктор используется для создания <xref:System.Net.Mail.MailAddress> для объекта <xref:System.Net.Mail.MailMessage.Bcc%2A> получателей сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="76780-147">The following code example uses this constructor to create a <xref:System.Net.Mail.MailAddress> object for the <xref:System.Net.Mail.MailMessage.Bcc%2A> recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76780-148">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-148">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76780-149">
            <paramref name="address" /> имеет значение <see cref="F:System.String.Empty" /> ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-149">
              <paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="76780-150">
            <paramref name="address" /> указан в нераспознаваемом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-150">
              <paramref name="address" /> is not in a recognized format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="76780-151">Объект <see cref="T:System.String" />, содержащий адрес электронной почты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-151">A <see cref="T:System.String" /> that contains an email address.</span>
          </span>
        </param>
        <param name="displayName">
          <span data-ttu-id="76780-152">
            <see cref="T:System.String" />, содержащий отображаемое имя, связанное с параметром <c>address</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-152">A <see cref="T:System.String" /> that contains the display name associated with <c>address</c>.</span>
          </span>
          <span data-ttu-id="76780-153">Этот параметр может иметь значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-153">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76780-154">Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.MailAddress" />, используя указанный адрес и отображаемое имя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-154">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address and display name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76780-155">Начальные и конечные пробелы в отображаемом имени сохраняются.</span><span class="sxs-lookup"><span data-stu-id="76780-155">Leading and trailing white space in the display name is preserved.</span></span>  
  
 <span data-ttu-id="76780-156">Если `displayName` содержит символы, отличные от ASCII, используется кодировка iso-8859-1, для `displayName` кодировку.</span><span class="sxs-lookup"><span data-stu-id="76780-156">If `displayName` contains non-ASCII characters, the iso-8859-1 character set is used for the `displayName` encoding.</span></span> <span data-ttu-id="76780-157">Кодировка символа ASCII рассматривается в документе RFC 1522, который находится в [ http://www.ietf.org ](http://www.ietf.org).</span><span class="sxs-lookup"><span data-stu-id="76780-157">Encoding non-ASCII characters is discussed in RFC 1522, which is available at [http://www.ietf.org](http://www.ietf.org).</span></span>  
  
 <span data-ttu-id="76780-158">Если `address` содержит отображаемое имя, и `displayName` не `null` и не равно <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` переопределяет значение, указанное в `address`.</span><span class="sxs-lookup"><span data-stu-id="76780-158">If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` overrides the value specified in `address`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76780-159">В следующем примере кода этот конструктор используется для создания <xref:System.Net.Mail.MailAddress> экземпляров отправитель и получатель сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="76780-159">The following code example uses this constructor to create <xref:System.Net.Mail.MailAddress> instances for the sender and recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76780-160">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-160">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76780-161">
            <paramref name="address" /> имеет значение <see cref="F:System.String.Empty" /> ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-161">
              <paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="76780-162">
            <paramref name="address" /> указан в нераспознаваемом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-162">
              <paramref name="address" /> is not in a recognized format.</span>
          </span>
          <span data-ttu-id="76780-163">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-163">-or-</span>
          </span>
          <span data-ttu-id="76780-164">
            <paramref name="address" /> содержит символы, отличные от ASCII.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-164">
              <paramref name="address" /> contains non-ASCII characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="76780-165">Объект <see cref="T:System.String" />, содержащий адрес электронной почты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-165">A <see cref="T:System.String" /> that contains an email address.</span>
          </span>
        </param>
        <param name="displayName">
          <span data-ttu-id="76780-166">
            <see cref="T:System.String" />, содержащий отображаемое имя, связанное с параметром <c>address</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-166">A <see cref="T:System.String" /> that contains the display name associated with <c>address</c>.</span>
          </span>
        </param>
        <param name="displayNameEncoding">
          <span data-ttu-id="76780-167">
            <see cref="T:System.Text.Encoding" />, который определяет набор символов, используемый для параметра <c>displayName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-167">The <see cref="T:System.Text.Encoding" /> that defines the character set used for <c>displayName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76780-168">Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.MailAddress" />, используя заданные адрес, отображаемое имя и кодировку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-168">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address, display name, and encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76780-169">Начальные и конечные пробелы в отображаемом имени сохраняются.</span><span class="sxs-lookup"><span data-stu-id="76780-169">Leading and trailing white space in the display name is preserved.</span></span>  
  
 <span data-ttu-id="76780-170">Если `address` содержит отображаемое имя, и `displayName` не `null` и не равно <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` переопределяет значение, указанное в `address`.</span><span class="sxs-lookup"><span data-stu-id="76780-170">If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` overrides the value specified in `address`.</span></span>  
  
 <span data-ttu-id="76780-171"><xref:System.Net.Mail.MailAddress.%23ctor%2A> Метод не проверяет, если `displayName` параметр является допустимым.</span><span class="sxs-lookup"><span data-stu-id="76780-171">The <xref:System.Net.Mail.MailAddress.%23ctor%2A> method does not check if the `displayName` parameter is valid.</span></span> <span data-ttu-id="76780-172">Этот метод удаляет окружающие кавычки не отображаются по <xref:System.Net.Mail.MailAddress.DisplayName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="76780-172">This method removes surrounding quotes not displayed by the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property.</span></span> <span data-ttu-id="76780-173">Перед передачей, за исключением того, куда будут добавлены кавычки <xref:System.Text.Encoding.ASCII%2A> или <xref:System.Text.Encoding.Unicode%2A> указывается в `displayNameEncoding` параметра.</span><span class="sxs-lookup"><span data-stu-id="76780-173">Quotes will be added before transmission, except where <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter.</span></span> <span data-ttu-id="76780-174">Кодировка, заданная в `displayNameEncoding` применяются к <xref:System.Net.Mail.MailAddress.DisplayName%2A> свойство перед передачей <xref:System.Text.Encoding.ASCII%2A> или <xref:System.Text.Encoding.Unicode%2A> указывается в `displayNameEncoding` параметра.</span><span class="sxs-lookup"><span data-stu-id="76780-174">The encoding specified in the `displayNameEncoding` parameter will be applied to the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property before transmission <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter.</span></span> <span data-ttu-id="76780-175"><xref:System.Text.Encoding.UTF8%2A> значение по умолчанию, кодировка, если он не задан.</span><span class="sxs-lookup"><span data-stu-id="76780-175"><xref:System.Text.Encoding.UTF8%2A> is the default encoding if none is specified.</span></span>  
  
 <span data-ttu-id="76780-176">Дополнительные сведения о поддерживаемых форматах адресов см. в разделе <xref:System.Net.Mail.MailAddress>.</span><span class="sxs-lookup"><span data-stu-id="76780-176">For more information on supported mail address formats, see <xref:System.Net.Mail.MailAddress>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76780-177">В следующем примере кода этот конструктор используется для создания <xref:System.Net.Mail.MailAddress> экземпляров для отправителя сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="76780-177">The following code example uses this constructor to create <xref:System.Net.Mail.MailAddress> instances for the sender of an email message.</span></span>  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76780-178">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-178">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="76780-179">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-179">-or-</span>
          </span>
          <span data-ttu-id="76780-180">Свойство <paramref name="displayName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-180">
              <paramref name="displayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76780-181">
            <paramref name="address" /> имеет значение <see cref="F:System.String.Empty" /> ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-181">
              <paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span>
          </span>
          <span data-ttu-id="76780-182">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-182">-or-</span>
          </span>
          <span data-ttu-id="76780-183">
            <paramref name="displayName" /> имеет значение <see cref="F:System.String.Empty" /> ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-183">
              <paramref name="displayName" /> is <see cref="F:System.String.Empty" /> ("").</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="76780-184">
            <paramref name="address" /> указан в нераспознаваемом формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-184">
              <paramref name="address" /> is not in a recognized format.</span>
          </span>
          <span data-ttu-id="76780-185">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-185">-or-</span>
          </span>
          <span data-ttu-id="76780-186">
            <paramref name="address" /> содержит символы, отличные от ASCII.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-186">
              <paramref name="address" /> contains non-ASCII characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76780-187">Возвращает адрес электронной почты, указанный при создании этого экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-187">Gets the email address specified when this instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76780-188">Значение <see cref="T:System.String" />, содержащее адрес электронной почты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-188">A <see cref="T:System.String" /> that contains the email address.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76780-189">Значение, возвращаемое этим свойством не включает <xref:System.Net.Mail.MailAddress.DisplayName%2A> сведения.</span><span class="sxs-lookup"><span data-stu-id="76780-189">The value returned by this property does not include the <xref:System.Net.Mail.MailAddress.DisplayName%2A> information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76780-190">В следующем примере кода отображает адрес получателя сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="76780-190">The following code example displays the address for an email message recipient.</span></span>  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76780-191">Возвращает отображаемое имя, составленное из отображаемого имени и информации об адресе, заданных при создании этого экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-191">Gets the display name composed from the display name and address information specified when this instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76780-192">Значение <see cref="T:System.String" />, которое содержит отображаемое имя; в противном случае — <see cref="F:System.String.Empty" /> (""), если при создании этого экземпляра не была задана информация об отображаемом имени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-192">A <see cref="T:System.String" /> that contains the display name; otherwise, <see cref="F:System.String.Empty" /> ("") if no display name information was specified when this instance was created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76780-193">Отображаемые имена, содержащие символы, отличные от ASCII, возвращаются в удобочитаемой форме.</span><span class="sxs-lookup"><span data-stu-id="76780-193">Display names that contain non-ASCII characters are returned in human-readable form.</span></span> <span data-ttu-id="76780-194">Используйте <xref:System.Net.Mail.MailAddress.ToString%2A> метода в кодировке <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span><span class="sxs-lookup"><span data-stu-id="76780-194">Use the <xref:System.Net.Mail.MailAddress.ToString%2A> method to get the encoded form of the <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span></span>  
  
 <span data-ttu-id="76780-195">Некоторые программы, которые используются для чтения электронной почты отображения <xref:System.Net.Mail.MailAddress.DisplayName%2A> значение свойства вместо или в дополнение к адрес электронной почты.</span><span class="sxs-lookup"><span data-stu-id="76780-195">Some software programs that are used to read email display the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property value instead of, or in addition to, the email address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76780-196">В следующем примере кода отображается <xref:System.Net.Mail.MailAddress.DisplayName%2A> для получателя сообщения электронной почты.</span><span class="sxs-lookup"><span data-stu-id="76780-196">The following code example displays the <xref:System.Net.Mail.MailAddress.DisplayName%2A> for the recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="obj">To be added.</param>
        <summary>
          <span data-ttu-id="76780-197">Сравнивает два адреса электронной почты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-197">Compares two mail addresses.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76780-198">Значение <see langword="true" />, если два почтовых адреса совпадают; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-198">
              <see langword="true" /> if the two mail addresses are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76780-199">Возвращает значение хэш-функции для почтового адреса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-199">Returns a hash value for a mail address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76780-200">Целочисленное хэш-значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-200">An integer hash value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76780-201"><xref:System.Net.Mail.MailAddress.GetHashCode%2A> Метод возвращает хэш-кода почтовый адрес.</span><span class="sxs-lookup"><span data-stu-id="76780-201">The <xref:System.Net.Mail.MailAddress.GetHashCode%2A> method returns a hash code of the mail address.</span></span> <span data-ttu-id="76780-202">Это значение может использоваться в качестве ключа в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="76780-202">This value can be used as a key in hash tables.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76780-203">Возвращает строку узла из адреса электронной почты, заданного при создании экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-203">Gets the host portion of the address specified when this instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76780-204">Объект <see cref="T:System.String" /> , содержащее имя главного компьютера, который принимает сообщение электронной почты для <see cref="P:System.Net.Mail.MailAddress.User" /> свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-204">A <see cref="T:System.String" /> that contains the name of the host computer that accepts email for the <see cref="P:System.Net.Mail.MailAddress.User" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76780-205">В адресе электронной почты обычно строка узел содержит все сведения ниже «`@`» входа.</span><span class="sxs-lookup"><span data-stu-id="76780-205">In a typical email address, the host string includes all information following the "`@`" sign.</span></span> <span data-ttu-id="76780-206">Например, в `"tsmith@contoso.com"`, узел является `"contoso.com"`.</span><span class="sxs-lookup"><span data-stu-id="76780-206">For example, in `"tsmith@contoso.com"`, the host is `"contoso.com"`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76780-207">В следующем примере кода отображаются назначения сообщение электронной почты.</span><span class="sxs-lookup"><span data-stu-id="76780-207">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76780-208">Возвращает строковое представление данного экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-208">Returns a string representation of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76780-209">Значение <see cref="T:System.String" />, которое содержит содержимое данного <see cref="T:System.Net.Mail.MailAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-209">A <see cref="T:System.String" /> that contains the contents of this <see cref="T:System.Net.Mail.MailAddress" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76780-210">Строка, возвращаемый этим методом не обязательно идентично строке, заданной при создании экземпляра.</span><span class="sxs-lookup"><span data-stu-id="76780-210">The string returned by this method is not necessarily identical to the string specified when the instance was created.</span></span> <span data-ttu-id="76780-211">Если <xref:System.Net.Mail.MailAddress.DisplayName%2A> свойство не `null` и не равно <xref:System.String.Empty?displayProperty=nameWithType> ("»), <xref:System.Net.Mail.MailAddress.ToString%2A> возвращает строкой, состоящей, используя следующий синтаксис:</span><span class="sxs-lookup"><span data-stu-id="76780-211">If the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property is not `null` and not equal to <xref:System.String.Empty?displayProperty=nameWithType> (""), <xref:System.Net.Mail.MailAddress.ToString%2A> returns a string composed using the following syntax:</span></span>  
  
 <span data-ttu-id="76780-212"><xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>></span><span class="sxs-lookup"><span data-stu-id="76780-212"><xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>></span></span>  
  
 <span data-ttu-id="76780-213">Если <xref:System.Net.Mail.MailAddress.DisplayName%2A> — `null` или равен <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> возвращает значение <xref:System.Net.Mail.MailAddress.Address%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="76780-213">If <xref:System.Net.Mail.MailAddress.DisplayName%2A> is `null` or is equal to <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> returns the value of the <xref:System.Net.Mail.MailAddress.Address%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76780-214">В следующем примере кода отображаются назначения сообщение электронной почты.</span><span class="sxs-lookup"><span data-stu-id="76780-214">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76780-215">Возвращает информацию о пользователе из адреса электронной почты, указанного при создании экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-215">Gets the user information from the address specified when this instance was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76780-216">Значение <see cref="T:System.String" />, содержащее строку имени пользователя из <see cref="P:System.Net.Mail.MailAddress.Address" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76780-216">A <see cref="T:System.String" /> that contains the user name portion of the <see cref="P:System.Net.Mail.MailAddress.Address" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76780-217">В адресе электронной почты обычно пользователя строка содержит все сведения о предыдущем "`@`" входа.</span><span class="sxs-lookup"><span data-stu-id="76780-217">In a typical email address, the user string includes all information preceding the "`@`" sign.</span></span> <span data-ttu-id="76780-218">Например, в `"tsmith@contoso.com"`, он `"tsmith"`.</span><span class="sxs-lookup"><span data-stu-id="76780-218">For example, in `"tsmith@contoso.com"`, the user is `"tsmith"`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76780-219">В следующем примере кода отображаются назначения сообщение электронной почты.</span><span class="sxs-lookup"><span data-stu-id="76780-219">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>