<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a08441f0337d38154de70b59c934c2ded049518e" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34285227" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("SmtpClient and its network of types are poorly designed, we strongly recommend you use https://github.com/jstedfast/MailKit and https://github.com/jstedfast/MimeKit instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Позволяет приложениям отправлять электронную почту с помощью протокола SMTP (Simple Mail Transfer Protocol).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient> Класс используется для отправки на сервер SMTP для доставки электронной почты. Протокол SMTP определен в RFC 2821, находящейся на [ https://www.ietf.org ](https://www.ietf.org/).  
  
 Классы, показанные в следующей таблице используются для создания сообщений электронной почты, которые могут быть отправлены с помощью <xref:System.Net.Mail.SmtpClient>.  
  
|Класс|Описание:|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|Представляет файловые вложения. Этот класс позволяет пользователю присоединять файлы, потоки или текст сообщения электронной почты.|  
|<xref:System.Net.Mail.MailAddress>|Представляет адрес электронной почты отправителя и получателей.|  
|<xref:System.Net.Mail.MailMessage>|Представляет сообщение электронной почты.|  
  
 Создавать и отправлять сообщение электронной почты с помощью <xref:System.Net.Mail.SmtpClient>, необходимо указать следующие сведения:  
  
-   Сервер-хост SMTP, используемый для отправки электронной почты. В разделе <xref:System.Net.Mail.SmtpClient.Host%2A> и <xref:System.Net.Mail.SmtpClient.Port%2A> свойства.  
  
-   Учетные данные для проверки подлинности, если это требуется для SMTP-сервера. См. свойство <xref:System.Net.Mail.SmtpClient.Credentials%2A>.  
  
-   Адрес электронной почты отправителя. В разделе <xref:System.Net.Mail.SmtpClient.Send%2A> и <xref:System.Net.Mail.SmtpClient.SendAsync%2A> методов, которые принимают `from` параметра. См. также <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType> свойство.  
  
-   Адрес электронной почты или адреса получателей. В разделе <xref:System.Net.Mail.SmtpClient.Send%2A> и <xref:System.Net.Mail.SmtpClient.SendAsync%2A> методов, которые принимают `recipient` параметра. См. также <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType> свойство.  
  
-   Содержимое сообщения. В разделе <xref:System.Net.Mail.SmtpClient.Send%2A> и <xref:System.Net.Mail.SmtpClient.SendAsync%2A> методов, которые принимают `body` параметра. См. также <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType> свойство.  
  
 Для включения вложения сообщения электронной почты, сначала создайте вложения с помощью <xref:System.Net.Mail.Attachment> класса, а затем добавить его к сообщению с помощью <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType> свойство. В зависимости от чтения электронной почты, используемый получателей и тип файла вложения, некоторые получатели могут не смогут прочитать вложение. Для клиентов, которые не удается отобразить вложение в исходном виде, можно указать альтернативные представления с помощью <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType> свойство.  
  
 В .NET Framework можно использовать приложение или файлы конфигурации компьютера для указания по умолчанию узла, порта и значения учетных данных для всех <xref:System.Net.Mail.SmtpClient> объектов. Дополнительные сведения см. в разделе [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). .NET core не поддерживает установку значений по умолчанию. Чтобы избежать этого, необходимо установить соответствующие свойства на <xref:System.Net.Mail.SmtpClient> напрямую.  
  
 Чтобы отправить сообщение электронной почты и блок при ожидании сообщения электронной почты для передачи в SMTP-сервера, используйте один из синхронных <xref:System.Net.Mail.SmtpClient.Send%2A> методы. Чтобы разрешить программы основному потоку продолжить выполнение во время передачи сообщения электронной почты, используйте один из асинхронных <xref:System.Net.Mail.SmtpClient.SendAsync%2A> методы. <xref:System.Net.Mail.SmtpClient.SendCompleted> Событие возникает при <xref:System.Net.Mail.SmtpClient.SendAsync%2A> завершения операции. Чтобы получить это событие, необходимо добавить <xref:System.Net.Mail.SendCompletedEventHandler> делегировать <xref:System.Net.Mail.SmtpClient.SendCompleted>. <xref:System.Net.Mail.SendCompletedEventHandler> Делегата должен ссылаться на метод обратного вызова, который обрабатывает уведомление о <xref:System.Net.Mail.SmtpClient.SendCompleted> события. Для отмены передачи асинхронной электронной почты используйте <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> метод.  
  
> [!NOTE]
>  Если имеется передачи почты выполняется и вызывается <xref:System.Net.Mail.SmtpClient.SendAsync%2A> или <xref:System.Net.Mail.SmtpClient.Send%2A> снова, вы получите <xref:System.InvalidOperationException>.  
  
 Соединения, установленные с текущим экземпляром <xref:System.Net.Mail.SmtpClient> класс на SMTP-сервер может быть повторно используется, если приложение необходимо отправить несколько сообщений на тот же сервер SMTP. Это особенно полезно при использовании проверки подлинности и шифрования подключения к SMTP-сервера. Процесс проверки подлинности и установки сеанса TLS может быть дорогостоящей операцией. Требование, чтобы заново установить соединение для каждого сообщения при отправке большого количества электронной почты на тот же сервер SMTP может оказать значительное влияние на производительность. Существует ряд крупномасштабных почтовые приложения, которые отправляют обновления состояния рассылки по электронной почте или оповещения по электронной почте. Также многие клиентские приложения электронной почты поддерживает автономный режим, в котором пользователи могут формировать несколько сообщений электронной почты, отправляемых позже, когда будет установлено подключение к серверу SMTP. Он является типичным для почтовый клиент на отправку всех сообщений SMTP конкретного SMTP-сервер (предоставляется поставщиком услуг Интернета), которая затем пересылает это сообщение электронной почты на другие серверы SMTP.  
  
 <xref:System.Net.Mail.SmtpClient> Реализацию класса пулов соединений SMTP, чтобы его можно избежать повторного подключения для каждого сообщения на тот же сервер. Приложение может повторно использовать тот же <xref:System.Net.Mail.SmtpClient> объект для отправки много разных сообщений электронной почты на тот же сервер SMTP и многим разным серверам SMTP. В результате нет возможности для определения завершении приложения с помощью <xref:System.Net.Mail.SmtpClient> объекта и его следует очистить.  
  
 При завершении сеанса SMTP и клиенту требуется разорвать соединение, отправьте сообщение QUIT серверу, чтобы указать, что больше нет сообщений для отправки. Это позволяет серверу для освобождения ресурсов, связанных с подключения от клиента и обработки сообщений, которые были отправлены клиентом.  
  
 <xref:System.Net.Mail.SmtpClient> Класс не имеет `Finalize` метод, поэтому приложение должно вызвать <xref:System.Net.Mail.SmtpClient.Dispose%2A> явно освободить ресурсы. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Метод проходит через все соединения, установленные на SMTP-сервер, указанный в <xref:System.Net.Mail.SmtpClient.Host%2A> свойство и отправляет сообщение QUIT следуют корректно Завершение подключения TCP. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Метод также освобождает неуправляемые ресурсы, используемые <xref:System.Net.Sockets.Socket> и при необходимости освобождает также управляемые ресурсы.  
  
 Вызовите метод <xref:System.Net.Mail.SmtpClient.Dispose%2A> по окончании использования класса <xref:System.Net.Mail.SmtpClient>. Метод <xref:System.Net.Mail.SmtpClient.Dispose%2A> оставляет класс <xref:System.Net.Mail.SmtpClient> в непригодном для использования состоянии. После вызова метода <xref:System.Net.Mail.SmtpClient.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Net.Mail.SmtpClient> , сборщик мусора мог освободить память, <xref:System.Net.Mail.SmtpClient> занимаемую.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется асинхронная Отправка сообщения электронной почты.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.SmtpClient" />, используя параметры файла конфигурации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует <xref:System.Net.Mail.SmtpClient.Host%2A>, <xref:System.Net.Mail.SmtpClient.Credentials%2A>, и <xref:System.Net.Mail.SmtpClient.Port%2A> свойства для нового <xref:System.Net.Mail.SmtpClient> с помощью параметров в приложении или файлов конфигурации компьютера. Дополнительные сведения см. в разделе [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
   
  
## Examples  
 В следующем примере кода показана отправка сообщения электронной почты.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 Пример \<mailSettings > узла в приложении или в файле конфигурации компьютера, в разделе [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">для создания <see cref="T:System.Net.Mail.SmtpClient" />. Связанное перечисление: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Значение <see cref="T:System.String" />, содержащее имя или IP-адрес компьютера-хоста, используемого для SMTP-транзакций.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.SmtpClient" />, который отправляет электронную почту с помощью указанного сервера SMTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `host` Параметр используется для инициализации значения <xref:System.Net.Mail.SmtpClient.Host%2A> свойство. <xref:System.Net.Mail.SmtpClient.Credentials%2A> И <xref:System.Net.Mail.SmtpClient.Port%2A> свойства инициализируются с помощью параметров в приложении или файлов конфигурации компьютера. Если `host` — `null` или равно <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> инициализируется с помощью параметров в приложение или файлов конфигурации компьютера.  
  
 Дополнительные сведения об использовании файлов конфигурации компьютера и приложения см. в разделе [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Если информация задана с помощью <xref:System.Net.Mail.SmtpClient> конструкторы или свойства, она переопределяет настройки из файла конфигурации.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого конструктора.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">для создания <see cref="T:System.Net.Mail.SmtpClient" />. Связанное перечисление: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">Значение <see cref="T:System.String" />, содержащее имя или IP-адрес хоста, используемого для SMTP-транзакций.</param>
        <param name="port">Значение <see cref="T:System.Int32" />, большее нуля, которое задает порт, используемый на узле <c>host</c>.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.Mail.SmtpClient" />, который отправляет электронную почту с помощью указанного сервера SMTP и порта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `host` И `port` параметров задать значение <xref:System.Net.Mail.SmtpClient.Host%2A> и <xref:System.Net.Mail.SmtpClient.Port%2A> свойства, соответственно. Если `host` — `null` или равно <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> инициализируется с помощью параметров в приложение или файлов конфигурации компьютера. Если `port` равен нулю, <xref:System.Net.Mail.SmtpClient.Port%2A> инициализируется с помощью параметров в приложение или файлов конфигурации компьютера. <xref:System.Net.Mail.SmtpClient.Credentials%2A> Свойство инициализируется с помощью параметров в приложение или файлов конфигурации компьютера.  
  
 Дополнительные сведения об использовании файлов конфигурации компьютера и приложения см. в разделе [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Если информация задана с помощью <xref:System.Net.Mail.SmtpClient> конструкторы или свойства, она переопределяет настройки из файла конфигурации.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого конструктора.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="port" /> не может иметь значение меньше нуля.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Укажите порт. Связанное перечисление: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, какие сертификаты следует использовать для установки SSL-подключения.</summary>
        <value>Объект <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, содержащий один или несколько клиентских сертификатов. Значение по умолчанию выводится на основе атрибутов конфигурации почты из файла конфигурации.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сертификаты клиентов, по умолчанию необязательно; Настройка сервера может потребоваться что клиент присутствовать действительный сертификат как часть согласования начального подключения.  
  
> [!NOTE]
>  Платформа кэширует сеансы SSL при их создании и пытается повторно использовать кэшированный сеанс для нового запроса, если это возможно. При попытке повторно использовать сеанс SSL, платформа использует первый элемент <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> (если есть), или не попытается повторно использовать анонимные сеансы, если <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> является пустым.  
  
   
  
## Examples  
 В следующем примере кода устанавливает соединение SSL с SMTP-сервера и использует соединение для отправки сообщения электронной почты.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает учетные данные, используемые для проверки подлинности отправителя.</summary>
        <value>Объект <see cref="T:System.Net.ICredentialsByHost" />, представляющий учетные данные для проверки подлинности; или значение <see langword="null" />, если учетные данные не указаны.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Некоторые SMTP требуют проверки подлинности клиента до сервера будет отправлять по электронной почте от своего имени. Чтобы использовать сетевые учетные данные по умолчанию, можно задать <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> для `true` вместо задания этого свойства. Если <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> свойству `false,` затем значение, заданное в <xref:System.Net.Mail.SmtpClient.Credentials%2A> свойство будет использоваться для учетных данных при подключении к серверу. Если <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> свойству `false` и <xref:System.Net.Mail.SmtpClient.Credentials%2A> свойство не задано, то почта отправляется на сервер анонимно.  
  
 Учетные данные можно также задать с помощью файлов конфигурации компьютера и приложения. Дополнительные сведения см. в разделе [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Если информация задана с помощью <xref:System.Net.Mail.SmtpClient.Credentials%2A> свойство, эти сведения переопределяет параметры файла конфигурации.  
  
> [!CAUTION]
>  Если предоставить учетные данные для обычной проверки подлинности, они отправляются на сервер в виде открытого текста. Это может представлять угрозу безопасности, так как учетные данные могут видеть и затем используется другими пользователями.  
  
   
  
## Examples  
 В следующем примере кода показано задание учетных данных для отправки сообщения электронной почты.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение этого свойства нельзя изменить во время отправки электронной почты.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает формат доставки, используемый <see cref="T:System.Net.Mail.SmtpClient" /> для отправки электронной почты.</summary>
        <value>Возвращает <see cref="T:System.Net.Mail.SmtpDeliveryFormat" />.  Формат доставки, используемый <see cref="T:System.Net.Mail.SmtpClient" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, как будут обрабатываться исходящие сообщения электронной почты.</summary>
        <value>Объект <see cref="T:System.Net.Mail.SmtpDeliveryMethod" />, указывающий, как доставляются сообщения электронной почты.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Методы доставки:  
  
-   SMTP-сервер.  
  
-   Перемещение почты в каталог раскладки для IIS, который затем доставляет сообщение.  
  
-   Переместив сообщение в каталоге, заданном параметром <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> для последующей доставки другим приложением.  
  
 Значение по умолчанию для этого свойства можно также задать на машине или в файле конфигурации приложения. Любые изменения, внесенные <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> свойство переопределить параметры файла конфигурации.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет сообщение QUIT на SMTP-сервер, правильно завершает TCP-подключение и освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Соединения, установленные с текущим экземпляром <xref:System.Net.Mail.SmtpClient> класс на SMTP-сервер может быть повторно используется, если приложение необходимо отправить несколько сообщений на тот же сервер SMTP. Это особенно полезно при использовании проверки подлинности и шифрования подключения к SMTP-сервера. Процесс проверки подлинности и установки сеанса TLS может быть дорогостоящей операцией. Требование, чтобы заново установить соединение для каждого сообщения при отправке большого количества электронной почты на тот же сервер SMTP может оказать значительное влияние на производительность. Существует ряд крупномасштабных почтовые приложения, которые отправляют обновления состояния рассылки по электронной почте или оповещения по электронной почте. Также многие клиентские приложения электронной почты поддерживает автономный режим, в котором пользователи могут формировать несколько сообщений электронной почты, отправляемых позже, когда будет установлено подключение к серверу SMTP. Он является типичным для почтовый клиент на отправку всех сообщений SMTP конкретного SMTP-сервер (предоставляется поставщиком услуг Интернета), которая затем пересылает это сообщение электронной почты на другие серверы SMTP.  
  
 <xref:System.Net.Mail.SmtpClient> Реализацию класса пулов соединений SMTP, чтобы его можно избежать повторного подключения для каждого сообщения на тот же сервер. Приложение может повторно использовать тот же <xref:System.Net.Mail.SmtpClient> объект для отправки много разных сообщений электронной почты на тот же сервер SMTP и многим разным серверам SMTP. В результате нет возможности для определения завершении приложения с помощью <xref:System.Net.Mail.SmtpClient> объекта и его следует очистить.  
  
 При завершении сеанса SMTP и клиенту требуется разорвать соединение, отправьте сообщение QUIT серверу, чтобы указать, что больше нет сообщений для отправки. Это позволяет серверу для освобождения ресурсов, связанных с подключения от клиента и обработки сообщений, которые были отправлены клиентом.  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A> Методы перебор всех установленных подключений и отправить сообщение QUIT на каждый сервер SMTP следуют корректно Завершение подключения TCP. Эти методы также освободить неуправляемые ресурсы, используемые <xref:System.Net.Sockets.Socket> и при необходимости освободить управляемые ресурсы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отправляет сообщение QUIT на SMTP-сервер, правильно завершает TCP-подключение и освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Net.Mail.SmtpClient" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Соединения, установленные с текущим экземпляром <xref:System.Net.Mail.SmtpClient> класс на SMTP-сервер может быть повторно используется, если приложение необходимо отправить несколько сообщений на тот же сервер SMTP. Это особенно полезно при использовании проверки подлинности и шифрования подключения к SMTP-сервера. Процесс проверки подлинности и установки сеанса TLS может быть дорогостоящей операцией. Требование, чтобы заново установить соединение для каждого сообщения при отправке большого количества электронной почты на тот же сервер SMTP может оказать значительное влияние на производительность. Существует ряд крупномасштабных почтовые приложения, которые отправляют обновления состояния рассылки по электронной почте или оповещения по электронной почте. Также многие клиентские приложения электронной почты поддерживает автономный режим, в котором пользователи могут формировать несколько сообщений электронной почты, отправляемых позже, когда будет установлено подключение к серверу SMTP. Он является типичным для почтовый клиент на отправку всех сообщений SMTP конкретного SMTP-сервер (предоставляется поставщиком услуг Интернета), которая затем пересылает это сообщение электронной почты на другие серверы SMTP.  
  
 <xref:System.Net.Mail.SmtpClient> Реализацию класса пулов соединений SMTP, чтобы его можно избежать повторного подключения для каждого сообщения на тот же сервер. Приложение может повторно использовать тот же <xref:System.Net.Mail.SmtpClient> объект для отправки много разных сообщений электронной почты на тот же сервер SMTP и многим разным серверам SMTP. В результате нет возможности для определения завершении приложения с помощью <xref:System.Net.Mail.SmtpClient> объекта и его следует очистить.  
  
 При завершении сеанса SMTP и клиенту требуется разорвать соединение, отправьте сообщение QUIT серверу, чтобы указать, что больше нет сообщений для отправки. Это позволяет серверу для освобождения ресурсов, связанных с подключения от клиента и обработки сообщений, которые были отправлены клиентом.  
  
 Вызов <xref:System.Net.Mail.SmtpClient.Dispose%2A> метод <xref:System.Net.Mail.SmtpClient> объект, который выполняется в асинхронном <xref:System.Net.Mail.SmtpClient.SendAsync%2A> операции будут отменены при вызове операции отправки <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> был вызван метод.  
  
 <xref:System.Net.Mail.SmtpClient> Класс не имеет `Finalize` метод. Поэтому приложение должно вызвать <xref:System.Net.Mail.SmtpClient.Dispose%2A> явно освободить ресурсы.  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A> Метод проходит через все соединения, установленные на SMTP-сервер, указанный в <xref:System.Net.Mail.SmtpClient.Host%2A> свойство и отправляет сообщение QUIT следуют корректно Завершение подключения TCP. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Метод также освобождает неуправляемые ресурсы, используемые основной <xref:System.Net.Sockets.Socket>.  
  
 Вызовите метод <xref:System.Net.Mail.SmtpClient.Dispose%2A> по окончании использования класса <xref:System.Net.Mail.SmtpClient>. Метод <xref:System.Net.Mail.SmtpClient.Dispose%2A> оставляет класс <xref:System.Net.Mail.SmtpClient> в непригодном для использования состоянии. После вызова метода <xref:System.Net.Mail.SmtpClient.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Net.Mail.SmtpClient> , сборщик мусора мог освободить память, <xref:System.Net.Mail.SmtpClient> занимаемую.  
  
 Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Net.Mail.SmtpClient.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Net.Mail.SmtpClient>. В противном случае им ресурсы не будут освобождены, сборщик мусора мог освободить память.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> для освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</param>
        <summary>Отправляет сообщение QUIT на SMTP-сервер, правильно завершает TCP-подключение и освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Net.Mail.SmtpClient" />, и при необходимости освобождает управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Соединения, установленные с текущим экземпляром <xref:System.Net.Mail.SmtpClient> класс на SMTP-сервер может быть повторно используется, если приложение необходимо отправить несколько сообщений на тот же сервер SMTP. Это особенно полезно при использовании проверки подлинности и шифрования подключения к SMTP-сервера. Процесс проверки подлинности и установки сеанса TLS может быть дорогостоящей операцией. Требование, чтобы заново установить соединение для каждого сообщения при отправке большого количества электронной почты на тот же сервер SMTP может оказать значительное влияние на производительность. Существует ряд крупномасштабных почтовые приложения, которые отправляют обновления состояния рассылки по электронной почте или оповещения по электронной почте. Также многие клиентские приложения электронной почты поддерживает автономный режим, в котором пользователи могут формировать несколько сообщений электронной почты, отправляемых позже, когда будет установлено подключение к серверу SMTP. Он является типичным для почтовый клиент на отправку всех сообщений SMTP конкретного SMTP-сервер (предоставляется поставщиком услуг Интернета), которая затем пересылает это сообщение электронной почты на другие серверы SMTP.  
  
 <xref:System.Net.Mail.SmtpClient> Реализацию класса пулов соединений SMTP, чтобы его можно избежать повторного подключения для каждого сообщения на тот же сервер. Приложение может повторно использовать тот же <xref:System.Net.Mail.SmtpClient> объект для отправки много разных сообщений электронной почты на тот же сервер SMTP и многим разным серверам SMTP. В результате нет возможности для определения завершении приложения с помощью <xref:System.Net.Mail.SmtpClient> объекта и его следует очистить.  
  
 При завершении сеанса SMTP и клиенту требуется разорвать соединение, отправьте сообщение QUIT серверу, чтобы указать, что больше нет сообщений для отправки. Это позволяет серверу для освобождения ресурсов, связанных с подключения от клиента и обработки сообщений, которые были отправлены клиентом.  
  
 Вызов <xref:System.Net.Mail.SmtpClient.Dispose%2A> метод <xref:System.Net.Mail.SmtpClient> объект, который выполняется в асинхронном <xref:System.Net.Mail.SmtpClient.SendAsync%2A> операции будут отменены при вызове операции отправки <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> был вызван метод.  
  
 <xref:System.Net.Mail.SmtpClient> Класс не имеет `Finalize` метод. Поэтому приложение должно вызвать <xref:System.Net.Mail.SmtpClient.Dispose%2A> явно освободить ресурсы.  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A> Метод проходит через все соединения, установленные на SMTP-сервер, указанный в <xref:System.Net.Mail.SmtpClient.Host%2A> свойство и отправляет сообщение QUIT следуют корректно Завершение подключения TCP. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Метод также освобождает неуправляемые ресурсы, используемые <xref:System.Net.Sockets.Socket> и при необходимости освобождает также управляемые ресурсы.  
  
 Вызовите метод <xref:System.Net.Mail.SmtpClient.Dispose%2A> по окончании использования класса <xref:System.Net.Mail.SmtpClient>. Метод <xref:System.Net.Mail.SmtpClient.Dispose%2A> оставляет класс <xref:System.Net.Mail.SmtpClient> в непригодном для использования состоянии. После вызова метода <xref:System.Net.Mail.SmtpClient.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Net.Mail.SmtpClient> , сборщик мусора мог освободить память, <xref:System.Net.Mail.SmtpClient> занимаемую.  
  
 Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [метода](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Net.Mail.SmtpClient.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Net.Mail.SmtpClient>. В противном случае им ресурсы не будут освобождены, сборщик мусора мог освободить память.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает, использует ли <see cref="T:System.Net.Mail.SmtpClient" /> протокол SSL для шифрования подключения.</summary>
        <value>
          <see langword="true" />, если <see cref="T:System.Net.Mail.SmtpClient" /> использует SSL; в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> Свойство указывает, используется ли протокол SSL для доступа к указанным почтового SMTP-сервера.  
  
 Значение по умолчанию для этого свойства можно также задать на машине или в файле конфигурации приложения. Любые изменения, внесенные <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> свойство переопределить параметры файла конфигурации.  
  
 <xref:System.Net.Mail.SmtpClient> Класс поддерживает только расширения службы SMTP для защиты SMTP через протокол TLS как определено в документе RFC 3207. В этом режиме сеанс SMTP начинается в незашифрованном канале, а затем выдает команды STARTTLS клиента на сервере, чтобы переключиться на безопасное соединение с помощью протокола SSL. См. в RFC 3207 публикации по IETF Internet Engineering Task Force () для получения дополнительной информации.  
  
 Альтернативный способ подключения — где сеанс SSL устанавливается заранее перед любой протокол отправки команд. Этот способ подключения иногда называют SMTP/SSL, SMTP через протокол SSL или SMTPS и по умолчанию используется порт 465. Это альтернативный способ подключения с помощью протокола SSL в настоящее время не поддерживается.  
  
 Можно использовать <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> для указания, какие сертификаты клиента следует использовать для подключения SSL. <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> Позволяет отклонять сертификат, предоставленный для SMTP-сервера. <xref:System.Net.ServicePointManager.SecurityProtocol%2A> Позволяет указать версию протокола SSL для использования.  
  
> [!NOTE]
>  Если <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> свойству `true`, и SMTP-сервер не объявляет команды STARTTLS в ответ на команду EHLO, затем вызов <xref:System.Net.Mail.SmtpClient.Send%2A> или <xref:System.Net.Mail.SmtpClient.SendAsync%2A> методы создают исключение <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 В следующем примере кода устанавливает соединение SSL с SMTP-сервера и использует соединение для отправки сообщения электронной почты.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя или IP-адрес хоста, используемого для SMTP-транзакций.</summary>
        <value>Значение <see cref="T:System.String" />, содержащее имя или IP-адрес компьютера, используемого для SMTP-транзакций.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Net.Mail.SmtpClient.Host%2A> свойства можно также задать с помощью конструкторов или приложения или в файле конфигурации компьютера. Дополнительные сведения см. в разделе [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Если информация задана с помощью этого свойства, она переопределяет настройки из файла конфигурации.  
  
   
  
## Examples  
 В следующем примере кода показано, отправка сообщения электронной почты с помощью узла и порт, указанный в файле конфигурации приложения.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Для операции задания указано значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Для операции присвоения указано значение <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.InvalidOperationException">Значение этого свойства нельзя изменить во время отправки электронной почты.</exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, содержащий данные событий.</param>
        <summary>Вызывает событие <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, наследующие от <xref:System.Net.Mail.SmtpClient> класс может переопределить <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> метод для выполнения дополнительных задач при <xref:System.Net.Mail.SmtpClient.SendCompleted> событием.  
  
 <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> также позволяет производным классам обрабатывать <xref:System.Net.Mail.SmtpClient.SendCompleted> не присоединяя делегат. Это предпочтительная методика обработки <xref:System.Net.Mail.SmtpClient.SendCompleted> в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> получения метода, чтобы зарегистрированные делегаты <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> событий.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает папку, в которой приложения сохраняют почтовые сообщения для обработки локальным SMTP-сервером.</summary>
        <value>Значение <see cref="T:System.String" />, задающее каталог раскладки для почтовых сообщений.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Почтовые сообщения из каталога раскладки автоматически отправляются локальный SMTP-сервера (при его наличии), такими как службы IIS.  
  
 Значение по умолчанию для этого свойства можно также задать на машине или в файле конфигурации приложения. Любые изменения, внесенные <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> свойство переопределить параметры файла конфигурации.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает порт, используемый для SMTP-транзакций.</summary>
        <value>Значение <see cref="T:System.Int32" />, содержащее номер порта на хосте SMTP. Значение по умолчанию — 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Net.Mail.SmtpClient.Port%2A> свойства можно также задать с помощью конструкторов или приложения или в файле конфигурации компьютера. Дополнительные сведения об использовании файлов конфигурации см. в разделе [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Если информация задана с помощью этого свойства, она переопределяет настройки из файла конфигурации.  
  
   
  
## Examples  
 В следующем примере кода показано, отправка сообщения электронной почты с помощью узла и порт, указанный в файле конфигурации приложения.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение, указанное для операции задания, меньше или равно нулю.</exception>
        <exception cref="T:System.InvalidOperationException">Значение этого свойства нельзя изменить во время отправки электронной почты.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Чтобы задать <see cref="P:System.Net.Mail.SmtpClient.Port" /> свойства. Связанное перечисление: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет сообщение электронной почты на сервер SMTP для доставки. Эти методы блокируются во время передачи сообщения.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">Объект <see cref="T:System.Net.Mail.MailMessage" />, который содержит отправляемое сообщение.</param>
        <summary>Отправляет указанное сообщение на сервер SMTP для доставки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод блокируется во время передачи сообщения электронной почты. Можно указать значение времени ожидания с помощью <xref:System.Net.Mail.SmtpClient.Timeout%2A> свойство, чтобы убедиться, что этот метод возвращает через указанный промежуток времени.  
  
 Перед вызовом этого метода <xref:System.Net.Mail.SmtpClient.Host%2A> и <xref:System.Net.Mail.SmtpClient.Port%2A> свойства должны задаваться через файлы конфигурации, установив соответствующие свойства или путем передачи этих данных в <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> конструктора.  
  
 Этот метод нельзя вызывать, если сообщения, передаваемого асинхронно.  
  
 Если узел SMTP требует учетные данные, необходимо установить их перед вызовом этого метода. Чтобы указать учетные данные, используйте <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> или <xref:System.Net.Mail.SmtpClient.Credentials%2A> свойства.  
  
 При получении <xref:System.Net.Mail.SmtpException> исключение проверки <xref:System.Net.Mail.SmtpException.StatusCode%2A> свойство, чтобы найти причину операцию не удалось. <xref:System.Net.Mail.SmtpException> Также могут содержать внутреннее исключение, указывающее причину неудачного завершения операции.  
  
 При отправке электронной почты с использованием <xref:System.Net.Mail.SmtpClient.Send%2A> несколько получателей и SMTP сервер принимает некоторым получателям как допустимый и отклоняет другими пользователями, <xref:System.Net.Mail.SmtpClient.Send%2A> отправляет по электронной почте получателям принятые и затем <xref:System.Net.Mail.SmtpFailedRecipientsException> создается исключение (или <xref:System.Net.Mail.SmtpFailedRecipientException> если только один Получатель отклонил). Объект <xref:System.Net.Mail.SmtpFailedRecipientsException> содержит список получателей, которые были отклонены.
  
> [!NOTE]
>  Если <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> свойству `true`, и SMTP-сервер не объявляет команды STARTTLS в ответ на команду EHLO, затем вызов <xref:System.Net.Mail.SmtpClient.Send%2A> или <xref:System.Net.Mail.SmtpClient.SendAsync%2A> методы создают исключение <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование этого метода.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="message" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Данный <see cref="T:System.Net.Mail.SmtpClient" /> в настоящий момент вызывает <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />.  -или- <see cref="P:System.Net.Mail.MailMessage.From" /> имеет значение <see langword="null" />.  -или- Отсутствуют получатели в свойствах <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> и <see cref="P:System.Net.Mail.MailMessage.Bcc" />.  -или- Свойству <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> задано значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />, а свойству <see cref="P:System.Net.Mail.SmtpClient.Host" /> задано значение <see langword="null" />.  -или- Свойству <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> задано значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> и <see cref="P:System.Net.Mail.SmtpClient.Host" /> равно пустой строке ("").  -или- Свойство <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> имеет значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />, а свойство <see cref="P:System.Net.Mail.SmtpClient.Port" /> равно нулю, отрицательно или больше 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Сбой подключения к серверу SMTP.  -или- Сбой проверки подлинности.  -или- Истекло время ожидания операции. -или- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> имеет значение <see langword="true" />, а свойство <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> имеет значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> или <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  -или- Свойство <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> имеет значение <see langword="true," />, однако почтовый SMTP-сервер не отправил STARTTLS в ответ на команду EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">Сообщение <paramref name="message" /> не удалось доставить одному из получателей <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> или <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">Сообщение <paramref name="message" /> не удалось доставить двум или более получателям <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> или <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Чтобы подключиться к серверу SMTP. Связанное перечисление: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from">Значение <see cref="T:System.String" />, содержащее информацию об адресе отправителя сообщения.</param>
        <param name="recipients">To be added.</param>
        <param name="to">To be added.</param>
        <param name="subject">Значение <see cref="T:System.String" />, содержащее строку темы сообщения.</param>
        <param name="body">Значение <see cref="T:System.String" />, содержащее основную часть сообщения.</param>
        <summary>Отправляет указанное сообщение электронной почты на сервер SMTP для доставки. Отправитель, получатели, тема и основная часть сообщения указываются с помощью объектов <see cref="T:System.String" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод блокируется во время передачи сообщения электронной почты. Можно указать значение времени ожидания с помощью <xref:System.Net.Mail.SmtpClient.Timeout%2A> свойство, чтобы убедиться, что этот метод возвращает через указанный промежуток времени.  
  
 Перед вызовом этого метода <xref:System.Net.Mail.SmtpClient.Host%2A> и <xref:System.Net.Mail.SmtpClient.Port%2A> свойства должны задаваться через файлы конфигурации, установив соответствующие свойства или путем передачи этих данных в <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> конструктора.  
  
 Этот метод нельзя вызывать, если сообщения, передаваемого асинхронно.  
  
 Если узел SMTP требует учетные данные, необходимо установить их перед вызовом этого метода. Чтобы указать учетные данные, используйте <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> или <xref:System.Net.Mail.SmtpClient.Credentials%2A> свойства.  
  
 При получении <xref:System.Net.Mail.SmtpException> исключение проверки <xref:System.Net.Mail.SmtpException.StatusCode%2A> свойство, чтобы найти причину операцию не удалось. <xref:System.Net.Mail.SmtpException> Также могут содержать внутреннее исключение, указывающее причину неудачного завершения операции.  

 При отправке электронной почты с использованием <xref:System.Net.Mail.SmtpClient.Send%2A> несколько получателей и SMTP сервер принимает некоторым получателям как допустимый и отклоняет другими пользователями, <xref:System.Net.Mail.SmtpClient.Send%2A> отправляет по электронной почте получателям принятые и затем <xref:System.Net.Mail.SmtpFailedRecipientsException> создается исключение (или <xref:System.Net.Mail.SmtpFailedRecipientException> если только один Получатель отклонил). Объект <xref:System.Net.Mail.SmtpFailedRecipientsException> содержит список получателей, которые были отклонены.
 
> [!NOTE]
>  Если <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> свойству `true`, и SMTP-сервер не объявляет команды STARTTLS в ответ на команду EHLO, затем вызов <xref:System.Net.Mail.SmtpClient.Send%2A> или <xref:System.Net.Mail.SmtpClient.SendAsync%2A> методы создают исключение <xref:System.Net.Mail.SmtpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="from" /> имеет значение <see langword="null" />.  -или- <paramref name="recipients" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство <paramref name="from" /> имеет значение <see cref="F:System.String.Empty" />.  -или- <paramref name="recipients" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">Данный <see cref="T:System.Net.Mail.SmtpClient" /> в настоящий момент вызывает <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />.  -или- Свойству <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> задано значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />, а свойству <see cref="P:System.Net.Mail.SmtpClient.Host" /> задано значение <see langword="null" />.  -или- Свойству <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> задано значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> и <see cref="P:System.Net.Mail.SmtpClient.Host" /> равно пустой строке ("").  -или- Свойство <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> имеет значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />, а свойство <see cref="P:System.Net.Mail.SmtpClient.Port" /> равно нулю, отрицательно или больше 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Сбой подключения к серверу SMTP.  -или- Сбой проверки подлинности.  -или- Истекло время ожидания операции. -или- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> имеет значение <see langword="true" />, а свойство <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> имеет значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> или <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  -или- Свойство <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> имеет значение <see langword="true," />, однако почтовый SMTP-сервер не отправил STARTTLS в ответ на команду EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">Сообщение <paramref name="message" /> не удалось доставить одному из получателей <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> или <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">Сообщение <paramref name="message" /> не удалось доставить двум или более получателям <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> или <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Чтобы подключиться к серверу SMTP. Связанное перечисление: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет сообщение электронной почты. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Объект <see cref="T:System.Net.Mail.MailMessage" />, который содержит отправляемое сообщение.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Отправляет указанное сообщение электронной почты на сервер SMTP для доставки. Этот метод не блокирует вызывающий поток и позволяет вызывающей стороне передать объект в метод, вызванный после завершения операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получать уведомления, когда было отправлено сообщение электронной почты или операция отменена, добавьте обработчик событий для <xref:System.Net.Mail.SmtpClient.SendCompleted> события. Вы можете отменить <xref:System.Net.Mail.SmtpClient.SendAsync%2A> операции путем вызова <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> метод.  
  
 После вызова метода <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, необходимо дождаться передачи электронной почты для завершения, прежде чем пытаться отправить другое сообщение электронной почты на <xref:System.Net.Mail.SmtpClient.Send%2A> или <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.  
  
 Перед вызовом этого метода <xref:System.Net.Mail.SmtpClient.Host%2A> и <xref:System.Net.Mail.SmtpClient.Port%2A> необходимо задать с помощью файлов конфигурации, установив соответствующие свойства или путем передачи этих данных в <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> конструктора.  
  
 Если узел SMTP требует учетные данные, необходимо установить их перед вызовом этого метода. Чтобы указать учетные данные, используйте <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> или <xref:System.Net.Mail.SmtpClient.Credentials%2A> свойства.  
  
 При получении <xref:System.Net.Mail.SmtpException> исключение проверки <xref:System.Net.Mail.SmtpException.StatusCode%2A> свойство, чтобы найти причину операцию не удалось. <xref:System.Net.Mail.SmtpException> Также могут содержать внутреннее исключение, указывающее причину неудачного завершения операции.  
  
 При отправке электронной почты с использованием <xref:System.Net.Mail.SmtpClient.SendAsync%2A> нескольким получателям, если SMTP-сервер принимает некоторым получателям как допустимый и другие, отклоняет <xref:System.Net.Mail.SmtpException> со <xref:System.NullReferenceException> о внутреннем исключении. В этом случае <xref:System.Net.Mail.SmtpClient.SendAsync%2A> не удалось отправить все сообщения электронной почты.  
  
 Приложение может определять ошибка проверки сертификата сервера с помощью проверки <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> переданные свойство <xref:System.Net.Mail.SendCompletedEventHandler> делегата.  
  
 <xref:System.Net.Mail.SmtpClient.Timeout%2A> Свойство не имеет влияния <xref:System.Net.Mail.SmtpClient.SendAsync%2A> вызова.  
  
 Чтобы отправить почту и блока, передаваемые на сервер SMTP, воспользуйтесь одним из <xref:System.Net.Mail.SmtpClient.Send%2A> методы.  
  
> [!NOTE]
>  Если <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> свойству `true`, и SMTP-сервер не объявляет команды STARTTLS в ответ на команду EHLO, затем вызов <xref:System.Net.Mail.SmtpClient.Send%2A> или <xref:System.Net.Mail.SmtpClient.SendAsync%2A> методы создают исключение <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого метода.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="message" /> имеет значение <see langword="null" />.  -или- <see cref="P:System.Net.Mail.MailMessage.From" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Данный <see cref="T:System.Net.Mail.SmtpClient" /> в настоящий момент вызывает <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />.  -или- Отсутствуют получатели в свойствах <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> и <see cref="P:System.Net.Mail.MailMessage.Bcc" />.  -или- Свойству <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> задано значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />, а свойству <see cref="P:System.Net.Mail.SmtpClient.Host" /> задано значение <see langword="null" />.  -или- Свойству <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> задано значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> и <see cref="P:System.Net.Mail.SmtpClient.Host" /> равно пустой строке ("").  -или- Свойство <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> имеет значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />, а свойство <see cref="P:System.Net.Mail.SmtpClient.Port" /> равно нулю, отрицательно или больше 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Сбой подключения к серверу SMTP.  -или- Сбой проверки подлинности.  -или- Истекло время ожидания операции. -или- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> имеет значение <see langword="true" />, а свойство <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> имеет значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> или <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  -или- Свойство <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> имеет значение <see langword="true," />, однако почтовый SMTP-сервер не отправил STARTTLS в ответ на команду EHLO.  -или- Сообщение <paramref name="message" /> не удалось доставить одному или нескольким получателям <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> или <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Чтобы подключиться к серверу SMTP. Связанное перечисление: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from">Значение <see cref="T:System.String" />, содержащее информацию об адресе отправителя сообщения.</param>
        <param name="recipients">To be added.</param>
        <param name="to">To be added.</param>
        <param name="subject">Значение <see cref="T:System.String" />, содержащее строку темы сообщения.</param>
        <param name="body">Значение <see cref="T:System.String" />, содержащее основную часть сообщения.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Отправляет сообщение электронной почты на сервер SMTP для доставки. Отправитель, получатели, тема и основная часть сообщения указываются с помощью объектов <see cref="T:System.String" />. Этот метод не блокирует вызывающий поток и позволяет вызывающей стороне передать объект в метод, вызванный после завершения операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получать уведомления, когда было отправлено сообщение электронной почты или операция отменена, добавьте обработчик событий для <xref:System.Net.Mail.SmtpClient.SendCompleted> события. Вы можете отменить <xref:System.Net.Mail.SmtpClient.SendAsync%2A> операции путем вызова <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> метод.  
  
 После вызова метода <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, необходимо дождаться передачи электронной почты для завершения, прежде чем пытаться отправить другое сообщение электронной почты на <xref:System.Net.Mail.SmtpClient.Send%2A> или <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.  
  
 Перед вызовом этого метода <xref:System.Net.Mail.SmtpClient.Host%2A> и <xref:System.Net.Mail.SmtpClient.Port%2A> свойства должны задаваться в файлах конфигурации или установив свойства или передача этих данных в <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> конструктора.  
  
 Если узел SMTP требует учетные данные, необходимо установить их перед вызовом этого метода. Чтобы указать учетные данные, используйте <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> или <xref:System.Net.Mail.SmtpClient.Credentials%2A> свойства.  
  
 При получении <xref:System.Net.Mail.SmtpException> исключение проверки <xref:System.Net.Mail.SmtpException.StatusCode%2A> свойство, чтобы найти причину операцию не удалось. <xref:System.Net.Mail.SmtpException> Также могут содержать внутреннее исключение, указывающее причину неудачного завершения операции.  
  
 При отправке электронной почты с использованием <xref:System.Net.Mail.SmtpClient.SendAsync%2A> нескольким получателям, если SMTP-сервер принимает некоторым получателям как допустимый и другие, отклоняет <xref:System.Net.Mail.SmtpException> со <xref:System.NullReferenceException> о внутреннем исключении. В этом случае <xref:System.Net.Mail.SmtpClient.SendAsync%2A> не удалось отправить все сообщения электронной почты.  
  
 Приложение может определять ошибка проверки сертификата сервера с помощью проверки <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> переданные свойство <xref:System.Net.Mail.SendCompletedEventHandler> делегата.  
  
 <xref:System.Net.Mail.SmtpClient.Timeout%2A> Свойство не имеет влияния <xref:System.Net.Mail.SmtpClient.SendAsync%2A> вызова.  
  
 Чтобы отправить почту и блока, передаваемые на сервер SMTP, воспользуйтесь одним из <xref:System.Net.Mail.SmtpClient.Send%2A> методы.  
  
> [!NOTE]
>  Если <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> свойству `true`, и SMTP-сервер не объявляет команды STARTTLS в ответ на команду EHLO, затем вызов <xref:System.Net.Mail.SmtpClient.Send%2A> или <xref:System.Net.Mail.SmtpClient.SendAsync%2A> методы создают исключение <xref:System.Net.Mail.SmtpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="from" /> имеет значение <see langword="null" />.  -или- <paramref name="recipient" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство <paramref name="from" /> имеет значение <see cref="F:System.String.Empty" />.  -или- <paramref name="recipient" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">Данный <see cref="T:System.Net.Mail.SmtpClient" /> в настоящий момент вызывает <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />.  -или- Свойству <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> задано значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />, а свойству <see cref="P:System.Net.Mail.SmtpClient.Host" /> задано значение <see langword="null" />.  -или- Свойству <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> задано значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> и <see cref="P:System.Net.Mail.SmtpClient.Host" /> равно пустой строке ("").  -или- Свойство <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> имеет значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />, а свойство <see cref="P:System.Net.Mail.SmtpClient.Port" /> равно нулю, отрицательно или больше 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Сбой подключения к серверу SMTP.  -или- Сбой проверки подлинности.  -или- Истекло время ожидания операции. -или- <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> имеет значение <see langword="true" />, а свойство <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> имеет значение <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> или <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  -или- Свойство <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> имеет значение <see langword="true," />, однако почтовый SMTP-сервер не отправил STARTTLS в ответ на команду EHLO.  -или- Сообщение не удалось доставить одному или нескольким получателям в <paramref name="recipients" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Чтобы подключиться к серверу SMTP. Связанное перечисление: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет асинхронную операцию отправки сообщения электронной почты.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> метод отменить ожидающие <xref:System.Net.Mail.SmtpClient.SendAsync%2A> операции. Если нет ожидающих отправки почты, данный метод освобождает ресурсы, используемые для хранения этой почты. Если нет ожидающих отправки почты, этот метод не выполняет никаких действий.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется асинхронная Отправка сообщения электронной почты. Пользователь имеет возможность отменить отправку почты, если он еще не было отправлено.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения асинхронной операции по отправке электронной почты.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.SendCompleted> Событие возникает при каждом сообщении электронной почты отправляется асинхронно после завершения операции отправки. Чтобы отправить сообщение электронной почты асинхронно, используйте <xref:System.Net.Mail.SmtpClient.SendAsync%2A> методы.  
  
 <xref:System.Net.Mail.SendCompletedEventHandler> Представляет делегат для <xref:System.Net.Mail.SmtpClient.SendCompleted>. <xref:System.ComponentModel.AsyncCompletedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется асинхронная Отправка сообщения электронной почты.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет указанное сообщение SMTP-серверу для доставки в качестве асинхронной операции.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">Объект <see cref="T:System.Net.Mail.MailMessage" />, который содержит отправляемое сообщение.</param>
        <summary>Отправляет указанное сообщение SMTP-серверу для доставки в качестве асинхронной операции.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task" />.  Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task>> объекта будет выполнена после отправки сообщения.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="message" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="recipients" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">Значение <see cref="T:System.String" />, содержащее информацию об адресе отправителя сообщения.</param>
        <param name="recipients">Значение <see cref="T:System.String" />, содержащее адреса, по которым отправляется сообщение.</param>
        <param name="subject">Значение <see cref="T:System.String" />, содержащее строку темы сообщения.</param>
        <param name="body">Значение <see cref="T:System.String" />, содержащее основную часть сообщения.</param>
        <summary>Отправляет указанное сообщение SMTP-серверу для доставки в качестве асинхронной операции. . Отправитель, получатели, тема и основная часть сообщения указываются с помощью объектов <see cref="T:System.String" />.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task" />.  Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task>> объекта будет выполнена после отправки сообщения.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="from" /> имеет значение <see langword="null" />.  -или- <paramref name="recipients" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство <paramref name="from" /> имеет значение <see cref="F:System.String.Empty" />.  -или- <paramref name="recipients" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает сетевое подключение, используемое для передачи сообщения электронной почты.</summary>
        <value>Объект <see cref="T:System.Net.ServicePoint" />, который подключается к свойству <see cref="P:System.Net.Mail.SmtpClient.Host" />, используемому для SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры для <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> свойство создаются с помощью значений по умолчанию, указанное в приложении или файлов конфигурации компьютера и <xref:System.Net.ServicePointManager> класса.  
  
   
  
## Examples  
 В следующем примере кода показано обращение к <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> свойство.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение <see cref="P:System.Net.Mail.SmtpClient.Host" /> равно <see langword="null" /> или пустой строке ("").  -или- <see cref="P:System.Net.Mail.SmtpClient.Port" /> равно нулю.</exception>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя поставщика услуг (SPN) для проверки подлинности при использовании расширенной защиты.</summary>
        <value>Объект <see cref="T:System.String" />, который задает SPN для расширенной защиты. Значение по умолчанию для этого имени SPN имеет форму «SMTPSVC /&lt;узла&gt;«где &lt;узла&gt; имя узла почтового SMTP-сервера.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.TargetName%2A> Свойство используется со встроенной проверкой подлинности Windows, когда приложение использует расширенную защиту. <xref:System.Net.Mail.SmtpClient> Может предоставить расширенную защиту, чтобы убедиться, что ответы на запрос учетных данных содержат сведения об определенной службы (SPN) и, при необходимости, канал конкретных сведений (токен привязки канала или CBT). С этой информацией в обмене учетных данных службы способны лучше защитить от несанкционированного использования запросам учетных данных, которые могут быть неправильно получен.  
  
 Значение по умолчанию для этого свойства можно также задать на машине или в файле конфигурации приложения. Любые изменения, внесенные <xref:System.Net.Mail.SmtpClient.TargetName%2A> свойство переопределить параметры файла конфигурации.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее промежуток времени, после которого для синхронного вызова <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> истечет время тайм-аута.</summary>
        <value>Значение <see cref="T:System.Int32" />, указывающее значение тайм-аута в миллисекундах. По умолчанию установлено значение 100,000 (100 секунд).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию, вызывает <xref:System.Net.Mail.SmtpClient.Send%2A> метод блокируется до завершения операции. Если задать <xref:System.Net.Mail.SmtpClient.Timeout%2A> положительное значение свойства и <xref:System.Net.Mail.SmtpClient.Send%2A> не удалось выполнить операцию за выделенное время <xref:System.Net.Mail.SmtpClient> класса вызывает <xref:System.Net.Mail.SmtpException> исключение.  
  
 Чтобы отправить сообщение и продолжить выполнение в потоке приложения, используйте <xref:System.Net.Mail.SmtpClient.SendAsync%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода показано получение и задание значения времени ожидания.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение, указанное для операции присвоения, меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Значение этого свойства нельзя изменить во время отправки электронной почты.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <see cref="T:System.Boolean" />, которое управляет отправкой учетных данных <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> вместе с запросами.</summary>
        <value>Значение <see langword="true" />, если используются учетные данные по умолчанию; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Некоторые SMTP требуют проверки подлинности клиента перед отправкой сообщения от его имени. Присвойте этому свойству значение `true` при этом <xref:System.Net.Mail.SmtpClient> объекта по запросу сервера, проверку подлинности с использованием учетных данных по умолчанию для пользователя, выполнившего вход. Для клиентских приложений это приемлемо в большинстве сценариев.  
  
 Учетные данные можно также задать с помощью файлов конфигурации компьютера и приложения. Дополнительные сведения см. в разделе [ &lt;mailSettings&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Если <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> свойству `false,` затем значение, заданное в <xref:System.Net.Mail.SmtpClient.Credentials%2A> свойство будет использоваться для учетных данных при подключении к серверу. Если <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> свойству `false` и <xref:System.Net.Mail.SmtpClient.Credentials%2A> свойство не задано, то почта отправляется на сервер анонимно.  
  
> [!CAUTION]
>  Если предоставить учетные данные для обычной проверки подлинности, они отправляются на сервер в виде открытого текста. Это может представлять угрозу безопасности, так как учетные данные могут видеть и затем используется другими пользователями.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование этого свойства.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение этого свойства нельзя изменить во время отправки электронной почты.</exception>
      </Docs>
    </Member>
  </Members>
</Type>