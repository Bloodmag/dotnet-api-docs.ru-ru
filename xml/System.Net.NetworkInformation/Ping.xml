<Type Name="Ping" FullName="System.Net.NetworkInformation.Ping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ca87d840e9ac849488a52a1432fd504e5c32ecd" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33683365" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Ping : System.ComponentModel.Component, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ping extends System.ComponentModel.Component implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.Ping" />
  <TypeSignature Language="VB.NET" Value="Public Class Ping&#xA;Inherits Component&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ping : System::ComponentModel::Component, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.MonoTODO("IPv6 support is missing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Позволяет приложению определить, доступен ли удаленный компьютер по сети.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения используют <xref:System.Net.NetworkInformation.Ping> класс, чтобы определить, доступен ли удаленного компьютера.  
  
 Определить топологию сети, можно ли <xref:System.Net.NetworkInformation.Ping> успешно могут обращаться к удаленному узлу. Наличие и конфигурации преобразования Сетевых адресов адрес сетевого оборудования, брандмауэров и прокси может быть невозможным <xref:System.Net.NetworkInformation.Ping> успешному выполнению. Успешное выполнение <xref:System.Net.NetworkInformation.Ping> указывает только то, что удаленный узел может быть достигнут в сети; наличие служб более высокого уровня (например, веб-сервера) на удаленном узле, не гарантируется.  
  
 Этот класс предоставляет функциональность, аналогичную Ping.exe средства командной строки. <xref:System.Net.NetworkInformation.Ping.Send%2A> И <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методы отправить сообщение запроса echo управления сообщений протокола ICMP (Internet) удаленный компьютер и ожидает сообщения ответа проверки связи ICMP с этого компьютера. Подробное описание сообщений протокола ICMP, см в [ https://www.ietf.org ](https://www.ietf.org/).  
  
 Следующие типы используются с <xref:System.Net.NetworkInformation.Ping> класса и подробно рассмотрены ниже.  
  
|**Имя типа**|**Описание**|  
|-------------------|---------------------|  
|<xref:System.Net.NetworkInformation.IPStatus>|Определяет коды состояния, которые описывают результат сообщения запроса проверки связи ICMP.|  
|<xref:System.Net.NetworkInformation.PingOptions>|Позволяет настроить или получить параметры, определяющие, сколько раз пакет запроса могут быть переадресованы (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), и является ли фрагментирована (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ).|  
|<xref:System.Net.NetworkInformation.PingReply>|Содержит результаты запроса проверки связи ICMP.|  
|<xref:System.Net.NetworkInformation.PingException>|Вызывается при возникновении неустранимой ошибки.|  
|<xref:System.Net.NetworkInformation.PingCompletedEventArgs>|Содержит данные, связанные с <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий, которые являются возникает, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызов завершается или отменяется.|  
|<xref:System.Net.NetworkInformation.PingCompletedEventHandler>|Делегат, который предоставляет метод обратного вызова вызывается при <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызов завершается или отменяется.|  
  
 <xref:System.Net.NetworkInformation.Ping.Send%2A> И <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методы возвращают ответ в <xref:System.Net.NetworkInformation.PingReply> объекта. <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=nameWithType> Возвращает <xref:System.Net.NetworkInformation.IPStatus> значение, указывающее результат запроса.  
  
 При отправке запроса необходимо указать удаленный компьютер. Это можно сделать, предоставляющим узел строку имени, IP-адрес в формате строки или <xref:System.Net.IPAddress> объекта.  
  
 Также можно указать любой из следующих типов данных:  
  
-   Данные, сопровождающие запрос. Указание `buffer` позволяет узнать количество времени, необходимые для пакета определенного размера передаются из удаленного узла и также MTU сетевого пути. (См. <xref:System.Net.NetworkInformation.Ping.Send%2A> или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузок, принимающих `buffer` параметров.)  
  
-   Можно ли степень пакетов проверки связи ICMP фрагментации во время передачи. (См. <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойство и <xref:System.Net.NetworkInformation.Ping.Send%2A> или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузок, принимающих `options` параметров.)  
  
-   Сколько раз узлов маршрутизации, такие как маршрутизаторы или шлюзы, может отправлять пакет, до достижения конечного компьютера или удаляется. (См. <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> и <xref:System.Net.NetworkInformation.Ping.Send%2A> или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузок, принимающих `options` параметров.)  
  
-   Ограничение времени, в течение которого должен быть получен ответ. (См. <xref:System.Net.NetworkInformation.Ping.Send%2A> или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузок, принимающих `timeout` параметра.  
  
 <xref:System.Net.NetworkInformation.Ping> Класс предоставляет синхронные и асинхронные методы для отправки запроса. Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> методы, эти методы являются синхронными. Если приложение не должно блокировать, используйте асинхронный <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методы. Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий. Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегат для указания метода, который вызывается для <xref:System.Net.NetworkInformation.Ping.PingCompleted> события. Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегат для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs> , содержащий <xref:System.Net.NetworkInformation.PingReply> , описывающий результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова.  
  
 Нельзя использовать тот же экземпляр <xref:System.Net.NetworkInformation.Ping> класса для создания нескольких одновременных запросов проверки связи ICMP. Вызов <xref:System.Net.NetworkInformation.Ping.Send%2A> при <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывается выполняется или вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> несколько раз до завершения всех предыдущих вызовов причины <xref:System.InvalidOperationException>.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Net.NetworkInformation.Ping> класса синхронно.  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 В следующем примере кода показано использование <xref:System.Net.NetworkInformation.Ping> класса асинхронно.  
  
 [!code-cpp[NCLPingASync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingASync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.NetworkInformation.Ping" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано создание <xref:System.Net.NetworkInformation.Ping> экземпляра. Полный пример доступен в <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          Значение <see langword="true" /> для освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.NetworkInformation.Ping" />, и опционально — управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.ComponentModel.Component.Finalize%2A> метод. Открытые `Dispose()` вызывает защищенный метод <xref:System.Net.NetworkInformation.Ping.Dispose%2A> метод с `disposing` равным `true`. <xref:System.ComponentModel.Component.Finalize%2A> вызывает `Dispose` с `disposing` значение `false`.  
  
 При `disposing` параметр `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Net.NetworkInformation.Ping> ссылки на объекты. Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPingCompleted">
      <MemberSignature Language="C#" Value="protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPingCompleted(class System.Net.NetworkInformation.PingCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnPingCompleted (e As PingCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnPingCompleted(System::Net::NetworkInformation::PingCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.NetworkInformation.PingCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.NetworkInformation.PingCompletedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Net.NetworkInformation.Ping.PingCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, наследующие от <xref:System.Net.NetworkInformation.Ping> класс может переопределить этот метод для выполнения дополнительных задач, например, ведение журнала данных, содержащихся в `e` параметра.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.NetworkInformation.Ping.OnPingCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PingCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.NetworkInformation.Ping.PingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PingCompleted As PingCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::NetworkInformation::PingCompletedEventHandler ^ PingCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении или отмене асинхронной операции отправки сообщения проверки связи ICMP и получения соответствующего сообщения ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения используют <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий для получения сведений о состоянии завершения и данные собираются путем вызова одного из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методы. <xref:System.Net.NetworkInformation.PingCompletedEventHandler> Делегат обеспечивает вызов метода обратного вызова при <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает это событие.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется указание метод обратного вызова для <xref:System.Net.NetworkInformation.Ping.PingCompleted> события. Полный пример доступен в <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 [!code-cpp[NCLPingAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#2)]
 [!code-csharp[NCLPingAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP на удаленный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IP-адрес, возвращенный любой из <xref:System.Net.NetworkInformation.Ping.Send%2A> перегруженные методы могут быть получены из вредоносных удаленного компьютера. Не подключиться к удаленному компьютеру с помощью этого. Используйте DNS, чтобы определить IP-адрес компьютера, к которому необходимо подключиться.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или описание причины сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод отправляет на узел, который задается параметром `address` 32 <xref:System.Byte> буфера данных с помощью проверки связи ICMP. Метод ожидает 5 секунд для сообщения ответа проверки связи ICMP. Если в это время не получает ответ, метод возвращает и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого метода.  
  
 [!code-cpp[NCLPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NCLPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод отправляет 32 <xref:System.Byte> буфера данных с помощью проверки связи ICMP. Метод ожидает 5 секунд для сообщения ответа проверки связи ICMP. Если в это время не получает ответ, метод возвращает и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого метода.  
  
 [!code-cpp[NCLPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NCLPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP. Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP с заданным буфером данных на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Этот метод позволяет указать тайм-аут операции.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, указанного в `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Пакет или его фрагменты могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример, демонстрирующий вызов <xref:System.Net.NetworkInformation.Ping.Send%2A> метода, в разделе <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Этот метод позволяет указать тайм-аут операции.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, указанного в `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример, демонстрирующий вызов <xref:System.Net.NetworkInformation.Ping.Send%2A> метода, в разделе <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP с заданным буфером данных на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено. Метод возвращает <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" />, если пакет превышает MTU.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, указанного в `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Пакет или его фрагменты могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод.  
  
 [!code-cpp[NCLPingSampler#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#6)]
 [!code-csharp[NCLPingSampler#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Параметр <paramref name="buffer" /> имеет значение <see langword="null" /> или размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65 500 байт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, указанного в `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Пакет или его фрагменты могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример, демонстрирующий вызов <xref:System.Net.NetworkInformation.Ping.Send%2A> перегрузки см. в разделе <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").  
  
 -или-  
  
 Параметр <paramref name="buffer" /> имеет значение <see langword="null" /> или размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65 500 байт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP с заданным буфером данных на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции и управлять значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено. Метод возвращает <see cref="F:System.Net.NetworkInformation.IPStatus.PacketTooBig" />, если пакет превышает MTU.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойство `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Используйте <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство, чтобы указать максимальное количество раз до достижения места назначения можно перенаправить сообщение проверки связи ICMP. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод.  
  
 [!code-cpp[NCLPingSampler#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#5)]
 [!code-csharp[NCLPingSampler#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Параметр <paramref name="buffer" /> имеет значение <see langword="null" /> или размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65 500 байт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.NetworkInformation.PingReply Send(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As PingReply" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::NetworkInformation::PingReply ^ Send(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingReply</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <summary>Предпринимает попытку отправки сообщения запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции и управлять значениями фрагментации и срока жизни пакета ICMP.</summary>
        <returns>Объект <see cref="T:System.Net.NetworkInformation.PingReply" />, предоставляющий сведения о сообщении ответа проверки связи ICMP, если оно было получено, или причину сбоя, если сообщение не было получено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойство `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Используйте <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство, чтобы указать максимальное количество раз до достижения места назначения можно перенаправить сообщение проверки связи ICMP. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод.  
  
 [!code-cpp[NCLPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NCLPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" /> или является строкой нулевой длины.  
  
 - или -  
  
 Параметр <paramref name="buffer" /> имеет значение <see langword="null" /> или размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65 500 байт.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP на компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эти методы не приводят к блокировке главного потока приложения. На время ожидания для сообщения ответа проверки связи ICMP, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> методы.  
  
> [!NOTE]
>  IP-адрес, возвращенный любой из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методы могут быть получены из вредоносных удаленного компьютера. Не подключиться к удаленному компьютеру с помощью этого. Используйте DNS, чтобы определить IP-адрес компьютера, к которому необходимо подключиться.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние для приложения. Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метод, если приложение не должно блокировать. Каждый вызов этого метода выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий. Чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие, необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегат для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs> , содержащий <xref:System.Net.NetworkInformation.PingReply> , описывающий результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> свойство. Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова.  
  
> [!NOTE]
>  Если приложение должно блокировать во время ожидания ответа, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A> методы, эти методы являются синхронными.  
  
 Этот метод отправляет 32 <xref:System.Byte> буфера данных с помощью проверки связи ICMP. Метод ожидает 5 секунд для сообщения ответа проверки связи ICMP. Если в это время не получает ответ, метод возвращает и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Пакет или его фрагменты могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример кода, демонстрирующий вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метода, в разделе <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов метода <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние для приложения. Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метод, если приложение не должно блокировать. Каждый вызов этого метода выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий. Чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие, необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегат для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs> , содержащий <xref:System.Net.NetworkInformation.PingReply> , описывающий результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> свойство. Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова.  
  
> [!NOTE]
>  Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> методы, эти методы являются синхронными.  
  
 Этот метод отправляет 32 <xref:System.Byte> буфера данных с помощью проверки связи ICMP. Метод ожидает 5 секунд для сообщения ответа проверки связи ICMP. Если он не получает ответ в это время метод возвращает и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Пакет или его фрагменты могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример кода, демонстрирующий вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метода, в разделе <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов метода <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          Параметр <paramref name="hostNameOrAddress" /> не удалось разрешить в допустимый IP-адрес.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP на удаленный компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние для приложения. Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метод, если приложение не должно блокировать. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий. Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегата, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие. Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегат для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs> , содержащий <xref:System.Net.NetworkInformation.PingReply> , описывающий результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> свойство. Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова.  
  
 Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> методы, эти методы являются синхронными.  
  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример кода, демонстрирующий вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузки см. в разделе <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов метода <see cref="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние для приложения. Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метод, если приложение не должно блокировать. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий. Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегата, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие. Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегат для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs> , содержащий <xref:System.Net.NetworkInformation.PingReply> , описывающий результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> свойство. Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова.  
  
 Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> методы, эти методы являются синхронными.  
  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример кода, демонстрирующий вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метода, в разделе <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="hostNameOrAddress" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          Параметр <paramref name="hostNameOrAddress" /> не удалось разрешить в допустимый IP-адрес.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние для приложения. Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метод, если приложение не должно блокировать. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий. Чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие, необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегат для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs> , содержащий <xref:System.Net.NetworkInformation.PingReply> , описывающий результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> свойство. Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова.  
  
> [!NOTE]
>  Если приложение выполняет блокировку во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> методы, эти методы являются синхронными.  
  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 Пример кода, демонстрирующий вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузки см. в разделе <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние для приложения. Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метод, если приложение не должно блокировать. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий. Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегата, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие. Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегат для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs> объект, содержащий <xref:System.Net.NetworkInformation.PingReply> , описывающий результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> свойство. Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова.  
  
 Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> методы, эти методы являются синхронными.  
  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойства `true`. Когда <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> — `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>. Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство нужное значение. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузки см. в разделе <xref:System.Net.NetworkInformation.Ping> Общие сведения о классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").  
  
 - или -  
  
 Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="hostNameOrAddress" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          Параметр <paramref name="hostNameOrAddress" /> не удалось разрешить в допустимый IP-адрес.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Net.IPAddress" />, идентифицирующий компьютер, на который будет направлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции и управлять значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние для приложения. Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метод, если приложение не должно блокировать. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий. Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегата, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие. Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегат для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs> , содержащий <xref:System.Net.NetworkInformation.PingReply> , описывающий результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> свойство. Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова.  
  
 Если приложение выполняет блокировку во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> методы, эти методы являются синхронными.  
  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойство `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Используйте <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство, чтобы указать максимальное количество раз до достижения места назначения можно перенаправить сообщение проверки связи ICMP. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод. Реализация метода обратного вызова, в разделе <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> перегрузка метода примера в разделе.  
  
 В следующем примере кода требуются следующие пространства имен:  
  
 [!code-cpp[NCLPingSampler#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#0)]
 [!code-csharp[NCLPingSampler#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#0)]  
  
 В следующем примере кода асинхронно отправляет сообщение проверки связи ICMP.  
  
 [!code-cpp[NCLPingSampler#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#7)]
 [!code-csharp[NCLPingSampler#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Объект <see cref="T:System.String" />, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="buffer">Значение <see cref="T:System.Int32" />, указывающее максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <param name="userToken">Объект, передаваемый в метод, вызываемый после завершении асинхронной операции.</param>
        <summary>Предпринимает попытку асинхронной отправки сообщения запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получения от него соответствующего сообщения ответа проверки связи ICMP. Эта перегруженная версия метода позволяет указать тайм-аут операции и управлять значениями фрагментации и срока жизни пакета ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние для приложения. Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> метод, если приложение не должно блокировать. Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted> событий. Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегата, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызывает событие. Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler> делегат для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>. Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs> , содержащий <xref:System.Net.NetworkInformation.PingReply> , описывающий результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова. <xref:System.Net.NetworkInformation.PingCompletedEventArgs> Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> свойство. Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> вызова.  
  
 Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A> методы, эти методы являются синхронными.  
  
 Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметр ICMP echo завершается ошибкой и <xref:System.Net.NetworkInformation.PingReply.Status%2A> свойству <xref:System.Net.NetworkInformation.IPStatus.TimedOut>.  
  
> [!NOTE]
>  При задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.  
  
 Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> свойство `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>.  
  
 Используйте <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> свойство, чтобы указать максимальное количество раз до достижения места назначения можно перенаправить сообщение проверки связи ICMP. Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой запроса проверки связи ICMP. В этом случае <xref:System.Net.NetworkInformation.PingReply.Status%2A> равно <xref:System.Net.NetworkInformation.IPStatus.TtlExpired>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать этот метод.  
  
 [!code-cpp[NCLPingAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#1)]
 [!code-csharp[NCLPingAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="hostNameOrAddress" /> равен <see langword="null" /> или является пустой строкой ("").  
  
 - или -  
  
 Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</exception>
        <exception cref="T:System.NotSupportedException">
          Параметр <paramref name="address" /> является IPv6-адресом, а на локальном компьютере установлена операционная система более ранней версии, чем Windows 2000.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          Параметр <paramref name="hostNameOrAddress" /> не удалось разрешить в допустимый IP-адрес.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер буфера, указанного в параметре <paramref name="buffer" />, превышает 65500 байт.</exception>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Чтобы отправить сообщение проверки связи ICMP.  
  
 Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет все ожидающие асинхронные запросы на отправку сообщений проверки связи ICMP и получает соответствующее сообщение ответа проверки связи ICMP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается для завершения каких-либо вызовов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> , не завершены.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendPingAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет сообщение запроса проверки связи ICMP на компьютер и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">IP-адрес, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  
  
 Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>> объекта будет выполнена после отправки пакета ICMP и получил ответ.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" />.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Компьютер, который является назначением для сообщения проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  
  
 Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>> объекта будет выполнена после отправки пакета ICMP и получил ответ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">IP-адрес, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  
  
 Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>> объекта будет выполнена после отправки пакета ICMP и получил ответ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Компьютер, который является назначением для сообщения проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегруженная версия метода позволяет указать тайм-аут операции.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  
  
 Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>> объекта будет выполнена после отправки пакета ICMP и получил ответ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">IP-адрес, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегрузка позволяет указать значение истечения времени ожидания для операции и буфер для использования для отправки и получения.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  
  
 Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>> объекта будет выполнена после отправки пакета ICMP и получил ответ.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" />.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер <paramref name="buffer" /> превышает 65 500 байт.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte()) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Компьютер, который является назначением для сообщения проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегрузка позволяет указать значение истечения времени ожидания для операции и буфер для использования для отправки и получения.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  
  
 Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>> объекта будет выполнена после отправки пакета ICMP и получил ответ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(class System.Net.IPAddress address, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (address As IPAddress, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::Net::IPAddress ^ address, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="address">IP-адрес, идентифицирующий компьютер, на который будет отправлено данное сообщение проверки связи ICMP.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на компьютер с указанным <see cref="T:System.Net.IPAddress" /> и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегруженная версия метода позволяет указать тайм-аут операции, буфер для использования для отправки и получения и управлять значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  
  
 Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>> объекта будет выполнена после отправки пакета ICMP и получил ответ.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="address" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="timeout" /> меньше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">Выполняется вызов <see cref="Overload:System.Net.NetworkInformation.Ping.SendPingAsync" />.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Возникло исключение при отправке или получении сообщений ICMP. Чтобы узнать, какое именно исключение возникло, обратитесь ко внутреннему исключению.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="address" /> не является допустимым IP-адресом.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект удален.</exception>
        <exception cref="T:System.ArgumentException">Размер <paramref name="buffer" /> превышает 65 500 байт.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendPingAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.NetworkInformation.PingReply&gt; SendPingAsync(string hostNameOrAddress, int32 timeout, unsigned int8[] buffer, class System.Net.NetworkInformation.PingOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPingAsync (hostNameOrAddress As String, timeout As Integer, buffer As Byte(), options As PingOptions) As Task(Of PingReply)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::NetworkInformation::PingReply ^&gt; ^ SendPingAsync(System::String ^ hostNameOrAddress, int timeout, cli::array &lt;System::Byte&gt; ^ buffer, System::Net::NetworkInformation::PingOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Net.NetworkInformation.PingOptions" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Компьютер, который является назначением для сообщения проверки связи ICMP. Заданное для этого параметра значение может быть именем узла или строковым представлением IP-адреса.</param>
        <param name="timeout">Максимальное время (после отправки сообщения проверки связи) ожидания сообщения ответа проверки связи ICMP в миллисекундах.</param>
        <param name="buffer">Массив <see cref="T:System.Byte" />, содержащие данные, отправляемые с сообщением проверки связи ICMP и возвращаемые с сообщением ответа проверки связи ICMP. Массив не может содержать более 65 500 байт.</param>
        <param name="options">Объект <see cref="T:System.Net.NetworkInformation.PingOptions" />, используемый для управления значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</param>
        <summary>Отправляет сообщение запроса проверки связи ICMP с заданным буфером данных на указанный компьютер и получает от него соответствующее сообщения ответа проверки связи ICMP как асинхронная операция. Эта перегруженная версия метода позволяет указать тайм-аут операции, буфер для использования для отправки и получения и управлять значениями фрагментации и срока жизни пакета сообщения проверки связи ICMP.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  
  
 Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>> объекта будет выполнена после отправки пакета ICMP и получил ответ.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.Ping.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>