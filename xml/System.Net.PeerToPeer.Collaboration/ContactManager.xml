<Type Name="ContactManager" FullName="System.Net.PeerToPeer.Collaboration.ContactManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3b5895c636a2c15423610a9f9978c4d8da7368c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460678" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ContactManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContactManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContactManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContactManager sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет коллекцию объектов <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, хранящихся в адресной книге Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс не имеет открытых конструкторов, так как возвращается ссылка на него <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> класса.  
  
 Адресных книг, которые связаны с <xref:System.Net.PeerToPeer.Collaboration.PeerContact> управления относятся связанные с однорангового узла и удаленного однорангового узла.  Любой компьютер может работать совместно с другими одноранговыми узлами. Когда одноранговый узел является локальным для удаленного однорангового узла, но не однорангового узла, его можно добавить к <xref:System.Net.PeerToPeer.Collaboration.ContactManager> из одноранговых узлов. Определенные операции над <xref:System.Net.PeerToPeer.Collaboration.ContactManager> класса, такие как <xref:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact%2A> и <xref:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact%2A>, согласовывать в связанные с ней операции, выполняемой по Windows адресной книге удаленного однорангового узла.  
  
 Одноранговый узел имеет доступ к постоянному хранилищу для <xref:System.Net.PeerToPeer.Collaboration.PeerContact> сведения, которые могут быть связаны с приложениями, в которых намерен участвовать одноранговый узел. Объект <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> можно идентифицировать себя как пользователь <xref:System.Net.PeerToPeer.Collaboration.ContactManager> постоянное хранилище на компьютере.  
  
   
  
## Examples  
 В следующем примере кода показано, как перечислить <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> и добавьте ее в качестве <xref:System.Net.PeerToPeer.Collaboration.PeerContact> локальной <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
  </Docs>
  <Members>
    <Member MemberName="AddContact">
      <MemberSignature Language="C#" Value="public void AddContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact">Экземпляр <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, который добавляется в <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</param>
        <summary>Добавляет указанный элемент <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> в <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> локального однорангового узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода требуется <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
   
  
## Examples  
 В следующем примере кода показано, как перечислить <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> и добавьте ее в качестве <xref:System.Net.PeerToPeer.Collaboration.PeerContact> локальной <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, определенный в <paramref name="peerContact" />, уже существует.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="peerContact" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Указанный элемент <paramref name="peerContact" /> удален.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, определенный в <paramref name="peerContact" />, невозможно воссоздать из сериализованного формата XML.  
  
-   Не удается добавить локальный одноранговый узел к создаваемому экземпляру <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Вызывается при изменении объекта <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />, связанного с контактом <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> в диспетчере контактов <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает только приложения, опубликованные контактами вызывающего однорангового узла.  
  
 Прежде чем это событие может возникнуть, текущий пользователь удаленного однорангового узла, необходимо подписаться на события совместной работы удаленного однорангового узла. Выполнить подписку с помощью <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> метод.  
  
 Это событие требует <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Вызывающий объект был удален.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="CreateContact">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContact CreateContact (System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContact CreateContact(class System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContact ^ CreateContact(System::Net::PeerToPeer::Collaboration::PeerNearMe ^ peerNearMe);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Parameters>
      <Docs>
        <param name="peerNearMe">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> для связывания с новым экземпляром <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Создает экземпляр объекта <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> для указанного объекта <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.</summary>
        <returns>Экземпляр <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> для заданного объекта <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода требуется <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="peerNearMe" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> удален.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   Не удается получить доступ к диспетчеру контактов удаленного однорангового узла, указанному параметром <paramref name="peerNearMe" />, или не удается прочитать из него контакт.  
  
-   Экземпляр <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />, указанный параметром <paramref name="peerNearMe" />, не содержит заданных конечных точек.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="CreateContactAsync">
      <MemberSignature Language="C#" Value="public void CreateContactAsync (System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateContactAsync(class System.Net.PeerToPeer.Collaboration.PeerNearMe peerNearMe, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateContactAsync(System::Net::PeerToPeer::Collaboration::PeerNearMe ^ peerNearMe, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerNearMe" Type="System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNearMe">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> для связывания с новым экземпляром <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="userToken">Определяемый пользователем объект <see cref="T:System.Object" />, который содержит сведения об операции <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />. Передается при обратном вызове асинхронной операции для идентификации.</param>
        <summary>Создает экземпляр контакта для указанного объекта <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода требуется <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="userToken" /> уже существует и используется.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="peerNearMe" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> был удален.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   Указанный экземпляр <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> не имеет заданных конечных точек.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="CreateContactCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; CreateContactCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt; CreateContactCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CreateContactCompleted As EventHandler(Of CreateContactCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::CreateContactCompletedEventArgs ^&gt; ^ CreateContactCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Вызывается при завершении метода <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает, когда <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync%2A> метод завершения. Она также возникает, если <xref:System.Net.PeerToPeer.Collaboration.ContactManager> операция завершится с ошибкой или отменяется.  
  
 Это событие требует <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Вызывающий объект был удален.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteContact">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Удаляет объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> или <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> из коллекции <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> локального однорангового узла.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteContact">
      <MemberSignature Language="C#" Value="public void DeleteContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact">Элемент <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, который требуется удалить из <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</param>
        <summary>Удаляет указанный элемент <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> из <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> локального однорангового узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода требуется <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
   
  
## Examples  
 В следующем примере кода показано, как удалить <xref:System.Net.PeerToPeer.Collaboration.PeerContact> из локальной <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  
  
 [!code-csharp[NCLPNRPContacts#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="peerContact" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteContact">
      <MemberSignature Language="C#" Value="public void DeleteContact (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteContact(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteContact(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> — связывается с <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> для удаления <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</param>
        <summary>Удаляет <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> (связывается с указанным свойством <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> из <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> однорангового узла).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода требуется <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
   
  
## Examples  
 В следующем примере кода показано, как удалить <xref:System.Net.PeerToPeer.Collaboration.PeerContact> из локальной <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  
  
 [!code-csharp[NCLPNRPContacts#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> — связывается с <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />; невозможно найти в диспетчере контактов.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="peerName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Этот объект ранее вызывался с помощью <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" /> и не может использоваться для будущих операций.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Не удается завершить операцию <see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContact">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContact GetContact (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContact GetContact(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContact ^ GetContact(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">Значение свойства <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />, связанное с объектом <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, который требуется извлечь.</param>
        <summary>Возвращает объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> для заданного имени однорангового узла <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</summary>
        <returns>
          Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, связанный с указанным именем однорангового узла <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода требуется <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="peerName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> удален.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   Контакт не обнаружен в  <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.  
  
-   Не удается получить контакт для указанного имени однорангового узла <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="GetContacts">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerContactCollection GetContacts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerContactCollection GetContacts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContacts () As PeerContactCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerContactCollection ^ GetContacts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContactCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />, содержащую все контакты из коллекции <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> удаленного однорангового узла.</summary>
        <returns>
          Коллекция <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />, содержащая все контакты из коллекции <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> удаленного однорангового узла.  
  
 Если диспетчер контактов является пустым, возвращается коллекция размера нуль (0) элементов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода требуется <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить <xref:System.Net.PeerToPeer.Collaboration.PeerContactCollection> представляющий контактов, содержащихся в локальном <xref:System.Net.PeerToPeer.Collaboration.ContactManager>:  
  
 [!code-csharp[NCLPNRPContacts#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> удален.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Возвращено недопустимое значение, когда данный метод попытался перечислить объект <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> в данной коллекции контактов одноранговых узелов.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="LocalContact">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact LocalContact { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerContact LocalContact" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LocalContact As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerContact ^ LocalContact { System::Net::PeerToPeer::Collaboration::PeerContact ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, представляющий локальный одноранговый узел.</summary>
        <value>Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />, представляющий локальный одноранговый узел.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если значение свойства не задано, то его значение по умолчанию — `null`.  
  
 С помощью этого свойства требуется <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      </Docs>
    </Member>
    <Member MemberName="NameChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; NameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; NameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NameChanged As EventHandler(Of NameChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::NameChangedEventArgs ^&gt; ^ NameChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Вызывается при изменении объекта <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />, связанного с объектом <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> в коллекции <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Связанного обратного вызова предоставляет ссылку на новый <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>.  
  
 Это событие требует <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Вызывающий объект был удален.</exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Вызывается при изменении одного из зарегистрированных в контакте объектов <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Прежде чем это событие может возникнуть, текущий пользователь удаленного однорангового узла, необходимо подписаться на события совместной работы однорангового узла. Выполнить подписку с помощью PeerContact <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> методы.  
  
 Это событие требует <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> был удален.</exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Вызывается при изменении состояния присутствия объекта <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> в коллекции <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Прежде чем это событие может возникнуть, текущий пользователь удаленного однорангового узла, необходимо подписаться на события совместной работы однорангового узла. Выполнить подписку с помощью <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> метод.  
  
 Это событие требует <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> был удален.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SubscriptionListChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; SubscriptionListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt; SubscriptionListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscriptionListChanged As EventHandler(Of SubscriptionListChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscriptionListChangedEventArgs ^&gt; ^ SubscriptionListChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Вызывается при изменении списка подписанных контактов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку подписки на пользователя не каждого процесса или каждого домена приложений, другое приложение, выполняющееся на узле также может вызывать это событие.  
  
 Это событие требует <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Объект был удален.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Если задано значение этого свойства, со всеми событиями, не просигналившими в результате асинхронной операции, будут связаны обработчики событий, осуществляющие обратный вызов в потоке, создавшем конкретный объект <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</summary>
        <value>Объект, реализующий интерфейс <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, используемый экземплярами этого типа для синхронизации обработчиков событий в создавшем его потоке.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение по умолчанию для этого свойства является `null`, указывающее, что все обработчики событий вызываются в потоке пула потоков системы.  
  
 Это свойство обычно устанавливается элемент пользовательского интерфейса, такие как <xref:System.Windows.Forms.Form> экземпляра.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Вызывающий объект был удален.</exception>
        <altmember cref="N:System.Windows.Forms" />
      </Docs>
    </Member>
    <Member MemberName="UpdateContact">
      <MemberSignature Language="C#" Value="public void UpdateContact (System.Net.PeerToPeer.Collaboration.PeerContact peerContact);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateContact(class System.Net.PeerToPeer.Collaboration.PeerContact peerContact) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateContact(System::Net::PeerToPeer::Collaboration::PeerContact ^ peerContact);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContact" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="peerContact">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> для обновления.</param>
        <summary>Обновляет данные, связанные с <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода требуется <xref:System.Security.Permissions.PermissionState> из <xref:System.Security.Permissions.PermissionState.Unrestricted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> отсутствует в <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="peerContact" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> удален.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Не удается завершить операцию <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)" />
      </Docs>
    </Member>
  </Members>
</Type>