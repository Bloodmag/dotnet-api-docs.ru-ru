<Type Name="PeerNameType" FullName="System.Net.PeerToPeer.PeerNameType">
  <TypeSignature Language="C#" Value="public enum PeerNameType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerNameType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerNameType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerNameType" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="b47bd-101">Определяет тип создаваемого объекта имени однорангового узла (<see cref="T:System.Net.PeerToPeer.PeerName" />).</span><span class="sxs-lookup"><span data-stu-id="b47bd-101">Defines the type of <see cref="T:System.Net.PeerToPeer.PeerName" /> to create.</span></span> <span data-ttu-id="b47bd-102">Имя однорангового узла может быть защищенным или незащищенным.</span><span class="sxs-lookup"><span data-stu-id="b47bd-102">A peer name is either secured or unsecured.</span></span> <span data-ttu-id="b47bd-103">Защищенное имя однорангового узла предоставляет свидетельство о владении именем.</span><span class="sxs-lookup"><span data-stu-id="b47bd-103">A secured peer name provides a proof of ownership of the name.</span></span> <span data-ttu-id="b47bd-104">Незащищенное имя однорангового узла не имеет связанной идентификации.</span><span class="sxs-lookup"><span data-stu-id="b47bd-104">An unsecured peer name has no identity associated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b47bd-105">Узел должен иметь доступ к закрытому ключу, связанному с открытым ключом, используемым при создании защищенного <xref:System.Net.PeerToPeer.PeerName>, чтобы подтвердить права владельца.</span><span class="sxs-lookup"><span data-stu-id="b47bd-105">A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership.</span></span> <span data-ttu-id="b47bd-106">Узел не имеет отношения к открытому ключу.</span><span class="sxs-lookup"><span data-stu-id="b47bd-106">The node does not have a relationship to a public key.</span></span>  
  
 <span data-ttu-id="b47bd-107">Недопустимый формат имени однорангового узла: *чувствительными к*.</span><span class="sxs-lookup"><span data-stu-id="b47bd-107">The format of a peer name is: *Authority.Classifier*.</span></span> <span data-ttu-id="b47bd-108">Значение <xref:System.Net.PeerToPeer.PeerName.Authority%2A> зависит от того, является ли имя имени однорангового узла защищенным или незащищенное имя однорангового узла.</span><span class="sxs-lookup"><span data-stu-id="b47bd-108">The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name.</span></span> <span data-ttu-id="b47bd-109"><xref:System.Net.PeerToPeer.PeerName.Classifier%2A> Часть имени можно задать любую строку, которая содержит 15 или меньше символов Юникода, включая `null` признака конца.</span><span class="sxs-lookup"><span data-stu-id="b47bd-109">The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator.</span></span> <span data-ttu-id="b47bd-110">Один раз <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> и установлено уровень безопасности однорангового узла, одноранговый узел может также ссылаться с относительное имя или имя узла.</span><span class="sxs-lookup"><span data-stu-id="b47bd-110">Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.</span></span>  
  
 <span data-ttu-id="b47bd-111">Только владелец или однорангового узла, можно зарегистрировать защищенное имя однорангового с [API поставщика пространства имен PNRP](http://go.microsoft.com/fwlink?LinkID=92731).</span><span class="sxs-lookup"><span data-stu-id="b47bd-111">Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731).</span></span> <span data-ttu-id="b47bd-112">Любой узел можно подтвердить владение к любому незащищенным <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="b47bd-112">Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 <span data-ttu-id="b47bd-113">**Примечание** с помощью защищенной <xref:System.Net.PeerToPeer.PeerName> не гарантирует общей безопасности сетевого приложения.</span><span class="sxs-lookup"><span data-stu-id="b47bd-113">**Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application.</span></span> <span data-ttu-id="b47bd-114">Безопасность приложения зависит от его реализации.</span><span class="sxs-lookup"><span data-stu-id="b47bd-114">Security of the application is implementation-dependent.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
    <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
  </Docs>
  <Members>
    <Member MemberName="Secured">
      <MemberSignature Language="C#" Value="Secured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Secured = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberSignature Language="VB.NET" Value="Secured" />
      <MemberSignature Language="C++ CLI" Value="Secured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b47bd-115">Создайте защищенный объект <see cref="T:System.Net.PeerToPeer.PeerName" />, используя удостоверение текущего пользователя.</span><span class="sxs-lookup"><span data-stu-id="b47bd-115">Create a secured <see cref="T:System.Net.PeerToPeer.PeerName" /> using the identity of current user.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unsecured">
      <MemberSignature Language="C#" Value="Unsecured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Unsecured = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberSignature Language="VB.NET" Value="Unsecured" />
      <MemberSignature Language="C++ CLI" Value="Unsecured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b47bd-116">Создайте незащищенный объект <see cref="T:System.Net.PeerToPeer.PeerName" />, используя удостоверение текущего пользователя.</span><span class="sxs-lookup"><span data-stu-id="b47bd-116">Create an unsecured <see cref="T:System.Net.PeerToPeer.PeerName" /> using the identity of current user.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>