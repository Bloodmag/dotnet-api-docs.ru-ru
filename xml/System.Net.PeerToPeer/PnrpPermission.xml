<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa800ff1deb4f0174a3bd9adba3f0d6d9db0f90d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460118" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Определяет значения, используемые в разрешениях объекта <see cref="N:System.Net.PeerToPeer" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разрешения по умолчанию позволяют всем локальным приложениям и приложениям зоны интрасети для доступа к службам протокола PNRP. Если разрешения по умолчанию не изменяются, всех локальных и локального сайта приложения имеют доступ к службам одноранговая сеть, но глобальные приложения (Интернет) не имеют доступа.  
  
 Экземпляры этого типа имеют два состояния разрешений: либо у них нет доступа к ресурсу, защищенному разрешением или они имеют неограниченный полный доступ к этим ресурсам.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Одно из значений в перечислении <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> с указанным исходным состоянием разрешения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Экземпляры этого типа имеют два состояния разрешений: либо у них нет доступа к ресурсу, защищенному разрешением или они имеют неограниченный полный доступ к этим ресурсам.  
  
 Если `state` имеет неограниченный, передает экземпляр класса PnrpPermission отклоняет все запросы. Если `state` имеет любое другое значение, экземпляр класса PnrpPermission отклоняет отклоняет все запросы.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает и возвращает идентичную копию текущего разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</summary>
        <returns>Объект с интерфейсом IPermission, экземпляр которого содержит копию текущего экземпляра класса <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Копия разрешения предоставляет такой же доступ к ресурсам, что само разрешение.  
  
 Экземпляры этого типа имеют два состояния разрешений: либо у них нет доступа к ресурсу, защищенному разрешением или они имеют неограниченный полный доступ к этим ресурсам.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   Параметр <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> не является допустимым элементом.  
  
-   Номер версии параметра не поддерживается.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр является пустой (<see langword="null" />) ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">Кодировка XML, используемая для восстановления разрешения.</param>
        <summary>Восстанавливает объект безопасности с указанным состоянием из кодировки XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Представляет объектную модель XML для кодирования объектов безопасности. Этот класс не наследуется.  
  
 Этот класс должен быть облегченная реализация простой объектной модели XML для использования в системе безопасности, а не для использования в качестве общей объектной модели XML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   Параметр <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> не является допустимым элементом.  
  
-   Номер версии параметра не поддерживается.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр является пустой (<see langword="null" />) ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Разрешение, пересечение которого с текущим нужно создать с помощью метода <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />. Его тип должен совпадать с типом текущего разрешения.</param>
        <summary>Создает и возвращает разрешение, представляющее собой пересечение текущего разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> и заданного разрешения.</summary>
        <returns>Новое разрешение, представляющее собой пересечение текущего разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> и указанного разрешения. Это новое разрешение представляет собой пустую ссылку (<see langword="null" />, в Visual Basic — <see langword="Nothing" />), если пересечение является пустым.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пересечение двух разрешений является разрешением, которое описывает набор операций, в обоих разрешениях. Только запрос, передающий оба исходных разрешения, передает их пересечение.  
  
 Следующие инструкции, обязательно `true` для всех реализаций метода Intersect. X и Y представляют <xref:System.Security.IPermission> ссылок на объекты, которые не являются `null` ссылкой (Nothing в Visual Basic).  
  
-   X.Intersect(X) возвращает значение X.  
  
-   X.Intersect(Y) возвращает то же значение, что Y.Intersect(X).  
  
-   X.Intersect ( `null` ссылки (`Nothing` в Visual Basic)) возвращает `null` ссылки (`Nothing` в Visual Basic).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр целевого объекта (target) не является пустой ссылкой (<see langword="null" />, в Visual Basic — <see langword="Nothing" />), а также не является экземпляром того же класса, что и текущее разрешение.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Разрешение, для которого требуется проверить отношение подмножества. Его тип должен совпадать с типом текущего разрешения.</param>
        <summary>Определяет, является ли текущее разрешение <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> подмножеством указанного разрешения.</summary>
        <returns>
          <see langword="True" />, если текущее разрешение является подмножеством заданного разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" />, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текущий <xref:System.Net.PeerToPeer.PnrpPermission> является подмножеством указанного разрешения, если текущее разрешение задает набор операций, полностью содержащихся в заданном разрешении. Например, разрешение, представляющее доступ к "*C:\example.txt*«является подмножеством разрешения, предоставляющего доступ к»*C:\\*». Если этот метод возвращает `true`, текущее разрешение не предоставляет большего доступа к защищенному ресурсу, чем указанное разрешение.  
  
 Следующие инструкции, обязательно `true` для всех реализаций метода IsSubsetOf. X, Y и Z представляют <xref:System.Security.IPermission> объектов, которые не являются `null` ссылки (`Nothing` в Visual Basic).  
  
-   Возвращает X.IsSubsetOf(X) `true`.  
  
-   X.IsSubsetOf(Y) возвращает то же значение, что Y.IsSubsetOf(X) только в том случае, если X и Y представляют один и тот же набор разрешений.  
  
-   Если X.IsSubsetOf(Y) и Y.IsSubsetOf(Z) возвращают `true`, X.IsSubsetOf(Z) возвращает `true`.  
  
-  
  
 Если X представляет пустой объект IPermission с состоянием разрешения *нет* , а Y — объект IPermission, `null` ссылки (`Nothing` в Visual Basic), X.IsSubsetOf(Y) возвращает `true`. Если Z также является пустым разрешением, то составная операция X.Union(Z). Также возвращает IsSubsetOf(Y) `true` из-за <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> двух пустых разрешений является пустое разрешение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр целевого объекта (target) не является пустой ссылкой (<see langword="null" />, в Visual Basic — <see langword="Nothing" />), а также не является экземпляром того же класса, что и текущее разрешение.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, определяющее, является ли текущее разрешение <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> неограниченным.</summary>
        <returns>
          Значение <see langword="True" />, если текущее разрешение неограниченно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Неограниченное разрешение представляет доступ ко всем ресурсам, защищенным с помощью разрешений.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает кодирование XML разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> и его текущего состояния.</summary>
        <returns>Объект <see cref="T:System.Security.SecurityElement" />, который содержит кодирование XML разрешения, включающее любые данные состояния.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Разрешение, которое требуется объединить с текущим разрешением. Его тип должен совпадать с типом текущего разрешения.</param>
        <summary>Создает разрешение, представляющее собой объединение текущего разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> и заданного разрешения.</summary>
        <returns>Новое разрешение, представляющее собой объединение текущего разрешения <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> и указанного разрешения, образованное с помощью метода <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Результат вызова <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> разрешение, которое представляет все операции, представленные как текущим <xref:System.Net.PeerToPeer.PnrpPermission> и указанного разрешений. Любой запрос, передающий любое разрешение, передает их объединение.  
  
 Следующие инструкции, обязательно `true` для всех реализаций метода Union. X и Y представляют <xref:System.Security.IPermission> объектов, которые не являются `null` ссылки (`Nothing` в Visual Basic).  
  
-   X.Union(X) возвращает объект, имеющий то же значение, что X.  
  
-   X.Union(Y) возвращает объект, имеющий то же значение, что и объект, возвращаемый y.Union(x).  
  
-   X.Union ( `null` ссылки (`Nothing` в Visual Basic)) возвращает объект, имеющий то же значение, что X.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="target" /> недопустим.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>