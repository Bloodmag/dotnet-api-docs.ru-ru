<Type Name="ResolveCompletedEventArgs" FullName="System.Net.PeerToPeer.ResolveCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb8d300c8d83189282dddde3e76716923e00b8c2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36473596" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResolveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveCompletedEventArgs extends System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveCompletedEventArgs&#xA;Inherits AsyncCompletedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveCompletedEventArgs : System::ComponentModel::AsyncCompletedEventArgs" />
  <TypeSignature Language="F#" Value="type ResolveCompletedEventArgs = class&#xA;    inherit AsyncCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.AsyncCompletedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Используется в сочетании с событием <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />, которое получает сигнал при завершении запроса на разрешение определенного имени однорангового узла, представленного объектом <see cref="T:System.Net.PeerToPeer.PeerName" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать объект ResolveCompletedEventArgs, следует создать <xref:System.Net.PeerToPeer.PeerNameResolver> объекта и использовать один из способов разрешения. Асинхронная обработка используется <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метод.  
  
 Когда распознаватель достигает конца облака для запроса <xref:System.Net.PeerToPeer.PeerName>, или для нее достигнуто максимальное число операций записи для <xref:System.Net.PeerToPeer.PeerNameRecordCollection> им, возникает событие, чтобы завершить процесс разрешения и связанный делегат в результате ResolveAsync для завершения. Событие также может вызываться для выполнения аварийных завершений, которые не возвращают коллекцию.  
  
 Это событие вызывается только один раз, когда были найдены все конечные точки.  
  
 Все ссылки на этот экземпляр объекта распознавателя координируются с помощью заданного маркера, который является уникальным определенным разработчиком идентификатором для этого запроса на асинхронное разрешение.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveCompletedEventArgs (System.Net.PeerToPeer.PeerNameRecordCollection peerNameRecordCollection, Exception error, bool canceled, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecordCollection peerNameRecordCollection, class System.Exception error, bool canceled, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveCompletedEventArgs(System::Net::PeerToPeer::PeerNameRecordCollection ^ peerNameRecordCollection, Exception ^ error, bool canceled, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.ResolveCompletedEventArgs : System.Net.PeerToPeer.PeerNameRecordCollection * Exception * bool * obj -&gt; System.Net.PeerToPeer.ResolveCompletedEventArgs" Usage="new System.Net.PeerToPeer.ResolveCompletedEventArgs (peerNameRecordCollection, error, canceled, userToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecordCollection" Type="System.Net.PeerToPeer.PeerNameRecordCollection" />
        <Parameter Name="error" Type="System.Exception" />
        <Parameter Name="canceled" Type="System.Boolean" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecordCollection">Коллекция, связанная с одноранговым именем, которое было разрешено.</param>
        <param name="error">Если возникает ошибка, возвращает исключение.</param>
        <param name="canceled">Значение <see langword="True" />, если операция <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> была отменена. В противном случае значение <see langword="False" />.</param>
        <param name="userToken">Токен пользователя, указанный при запуске операции <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecordCollection">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection PeerNameRecordCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecordCollection PeerNameRecordCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecordCollection As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecordCollection ^ PeerNameRecordCollection { System::Net::PeerToPeer::PeerNameRecordCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerNameRecordCollection : System.Net.PeerToPeer.PeerNameRecordCollection" Usage="System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, который требуется разрешить.</summary>
        <value>Объект <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, который требуется разрешить, является объектом, найденным в результате выполнения операции <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> над определенным объектом <see cref="T:System.Net.PeerToPeer.PeerName" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает, когда все облака были опрошены для данного имени однорангового узла, или в том случае, когда было получено максимальное число записи имени однорангового узла. Она возникает, помещая коллекции записей имен одноранговых в <xref:System.Net.PeerToPeer.ResolveCompletedEventArgs> аргумента события, для которого метод OnResolveCompleted находится в состоянии ожидания.  Изменение состояния пробуждающий режима сна процесс.  
  
 Если не указано явно, то значение по умолчанию всех свойств равно `null` для ссылочных типов и нуль (0) для свойств типа `int`. Если не найдены записи, `null` возвращается.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>