<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b032a613599100059450aa9f8c134c8ed44e75b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39732196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="600ca-101">Предоставляет клиентские подключения для сетевых служб протокола TCP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="600ca-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-102"><xref:System.Net.Sockets.TcpClient> Класс предоставляет простые методы для подключения, отправка, и получение потоковую передачу данных по сети в синхронном режиме блокировки.</span><span class="sxs-lookup"><span data-stu-id="600ca-102">The <xref:System.Net.Sockets.TcpClient> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="600ca-103">Чтобы <xref:System.Net.Sockets.TcpClient> для подключения и обмена данными, <xref:System.Net.Sockets.TcpListener> или <xref:System.Net.Sockets.Socket> создан с помощью TCP- <xref:System.Net.Sockets.ProtocolType> должен выполнять прослушивание входящих запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="600ca-103">In order for <xref:System.Net.Sockets.TcpClient> to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="600ca-104">Можно подключить к данному прослушивателю в одно из следующих двух способов:</span><span class="sxs-lookup"><span data-stu-id="600ca-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="600ca-105">Создание <xref:System.Net.Sockets.TcpClient> и вызвать один из трех доступных <xref:System.Net.Sockets.TcpClient.Connect%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="600ca-105">Create a <xref:System.Net.Sockets.TcpClient> and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="600ca-106">Создание <xref:System.Net.Sockets.TcpClient> с использованием имени узла и порта номер удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="600ca-106">Create a <xref:System.Net.Sockets.TcpClient> using the host name and port number of the remote host.</span></span> <span data-ttu-id="600ca-107">Этот конструктор автоматически попытается подключиться.</span><span class="sxs-lookup"><span data-stu-id="600ca-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-108">Если вы хотите отправлять датаграмм без установления соединения в синхронном режиме блокировки, используйте <xref:System.Net.Sockets.UdpClient> класса.</span><span class="sxs-lookup"><span data-stu-id="600ca-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-109">В следующем примере кода устанавливает <xref:System.Net.Sockets.TcpClient> подключения.</span><span class="sxs-lookup"><span data-stu-id="600ca-109">The following code example establishes a <xref:System.Net.Sockets.TcpClient> connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="600ca-110">Разрешение на установку исходящего подключения или примите входящего запроса.</span>
      <span class="sxs-lookup">
        <span data-stu-id="600ca-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="600ca-111">
        <para>Для отправки и получения данных, используйте <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> метод, чтобы получить <see cref="T:System.Net.Sockets.NetworkStream" />. Вызовите <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> и <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> методы <see cref="T:System.Net.Sockets.NetworkStream" /> для отправки и получения данных с удаленного узла. Используйте <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> метод для освобождения всех ресурсов, связанных с <see cref="T:System.Net.Sockets.TcpClient" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="600ca-111">
          <para>To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />. Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host. Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-112">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="600ca-113">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-114">Этот конструктор создает новый <xref:System.Net.Sockets.TcpClient> и позволяет основному поставщику услуг присвоить наиболее подходящий локальный IP-адрес и порт номер.</span><span class="sxs-lookup"><span data-stu-id="600ca-114">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="600ca-115">Сначала необходимо вызвать <xref:System.Net.Sockets.TcpClient.Connect%2A> метод до отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-115">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-116">Этот конструктор работает только с IPv4-адресами.</span><span class="sxs-lookup"><span data-stu-id="600ca-116">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-117">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-117">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-118">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-118">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-119">В следующем примере кода показано, как использовать конструктор по умолчанию для создания нового <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="600ca-119">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="600ca-120">Объект <see cref="T:System.Net.IPEndPoint" />, с которым связан объект <see cref="T:System.Net.Sockets.Socket" />, работающий по протоколу TCP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-121">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.TcpClient" /> и связывает его с заданной локальной конечной точкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-122">Этот конструктор создает новый <xref:System.Net.Sockets.TcpClient> и привязывает его к <xref:System.Net.IPEndPoint> определяется `localEP` параметра.</span><span class="sxs-lookup"><span data-stu-id="600ca-122">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="600ca-123">Перед вызовом этого конструктора необходимо создать <xref:System.Net.IPEndPoint> с помощью IP-номер адрес и порт, который предполагается использовать для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-123">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="600ca-124">Необходимо указать локальный IP-адрес и порт номер до подключения и обменом данными.</span><span class="sxs-lookup"><span data-stu-id="600ca-124">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="600ca-125">Если вы создаете <xref:System.Net.Sockets.TcpClient> с помощью любого другого конструктора, основной поставщик услуг назначит наиболее подходящий локальный IP-адрес и порт номер.</span><span class="sxs-lookup"><span data-stu-id="600ca-125">If you create a <xref:System.Net.Sockets.TcpClient> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="600ca-126">Необходимо вызвать <xref:System.Net.Sockets.TcpClient.Connect%2A> метод до отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-126">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-127">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-127">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-128">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-128">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-129">В следующем примере кода демонстрируется создание экземпляра <xref:System.Net.Sockets.TcpClient> класса с помощью локальной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="600ca-129">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-130">Параметр <paramref name="localEP" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="600ca-131">Параметр <see cref="P:System.Net.IPAddress.AddressFamily" /> протокола IP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-132">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.TcpClient" /> с заданным семейством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="600ca-133">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-133">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-134">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-134">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-135">В следующем примере кода демонстрируется создание экземпляра <xref:System.Net.Sockets.TcpClient> класса.</span><span class="sxs-lookup"><span data-stu-id="600ca-135">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="600ca-136">Значением параметра <paramref name="family" /> не является AddressFamily.InterNetwork</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork</span>
          </span>
          <span data-ttu-id="600ca-137">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-137">-or-</span>
          </span>
          <span data-ttu-id="600ca-138">Значением параметра <paramref name="family" /> не является AddressFamily.InterNetworkV6</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-138">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="600ca-139">DNS-имя удаленного узла, к которому планируется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-139">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="600ca-140">Имя порта удаленного узла, к которому планируется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-140">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-141">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.TcpClient" /> и подключает его к указанному порту заданного узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-141">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-142">Этот конструктор создает новый <xref:System.Net.Sockets.TcpClient> и выполняет асинхронного подключения пытаться указанное имя узла и номер порта.</span><span class="sxs-lookup"><span data-stu-id="600ca-142">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="600ca-143">Основной поставщик услуг назначит наиболее подходящий локальный IP-адрес и порт номер.</span><span class="sxs-lookup"><span data-stu-id="600ca-143">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="600ca-144"><xref:System.Net.Sockets.TcpClient> блокируется до установления соединения или завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="600ca-144"><xref:System.Net.Sockets.TcpClient> will block until it either connects or fails.</span></span> <span data-ttu-id="600ca-145">Этот конструктор позволяет инициализировать, разрешить имя узла DNS и подключение в одной удобной процедуры.</span><span class="sxs-lookup"><span data-stu-id="600ca-145">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="600ca-146">Если была включена поддержка IPv6 и <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> метод вызывается для подключения к узлу, который разрешается в IPv6 и IPv4-адреса, раньше IPv4-адрес, попытка установки соединения на IPv6, адресом будет.</span><span class="sxs-lookup"><span data-stu-id="600ca-146">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="600ca-147">Это может влиять на задержки во времени для установления соединения, если узел не прослушивает IPv6-адрес.</span><span class="sxs-lookup"><span data-stu-id="600ca-147">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-148">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-148">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-149">Получив этот код, можно ссылаться на [код ошибки API сокетов Windows версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) документации подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-149">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-150">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-150">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-151">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-151">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-152">В следующем примере кода демонстрируется создание экземпляра <xref:System.Net.Sockets.TcpClient> класса с использованием имени узла и номер порта.</span><span class="sxs-lookup"><span data-stu-id="600ca-152">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-153">Параметр <paramref name="hostname" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-153">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="600ca-154">Параметр <paramref name="port" /> не находится между <see cref="F:System.Net.IPEndPoint.MinPort" /> и <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-154">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-155">Произошла ошибка при обращении к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-155">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-156">Возвращает или задает значение, указывающее, установлено ли подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-156">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-157">Значение <see langword="true" />, если подключение установлено; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-157">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-158">Классы, производные от <xref:System.Net.Sockets.TcpClient> можно использовать это свойство, чтобы определить успешность попытки подключения.</span><span class="sxs-lookup"><span data-stu-id="600ca-158">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="600ca-159">Она не отслеживает состояние текущего соединения <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="600ca-159">It does not monitor the ongoing connection state of <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="600ca-160">Если удаленный узел закрывает соединение, <xref:System.Net.Sockets.TcpClient.Active%2A> не будет обновлен.</span><span class="sxs-lookup"><span data-stu-id="600ca-160">If the remote host closes the connection, <xref:System.Net.Sockets.TcpClient.Active%2A> will not be updated.</span></span> <span data-ttu-id="600ca-161">Если при наследовании от <xref:System.Net.Sockets.TcpClient> и требуют больше внимания состояния подключения, используйте <xref:System.Net.Sockets.Socket.Connected%2A> свойство <xref:System.Net.Sockets.Socket> возвращаемые <xref:System.Net.Sockets.TcpClient.Client%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-161">If you are deriving from <xref:System.Net.Sockets.TcpClient> and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-162">Возвращает значение, указывающее количество полученных из сети и доступных для чтения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-162">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-163">Количество байтов данных, полученных из сети и доступных для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-163">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-164"><xref:System.Net.Sockets.TcpClient.Available%2A> — Это способ определить, является ли данные в очереди для чтения.</span><span class="sxs-lookup"><span data-stu-id="600ca-164"><xref:System.Net.Sockets.TcpClient.Available%2A> is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="600ca-165">При наличии данных, вызовите <xref:System.Net.Sockets.NetworkStream.Read%2A> для получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-165">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="600ca-166">Доступные данные — это общий объем данных в очереди в сетевом буфере для чтения.</span><span class="sxs-lookup"><span data-stu-id="600ca-166">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="600ca-167">Если данные не помещается в очередь в сетевом буфере <xref:System.Net.Sockets.TcpClient.Available%2A> возвращает 0.</span><span class="sxs-lookup"><span data-stu-id="600ca-167">If no data is queued in the network buffer, <xref:System.Net.Sockets.TcpClient.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="600ca-168">Если удаленный узел завершает работу или закрывает соединение, <xref:System.Net.Sockets.TcpClient.Available%2A> может вызывать исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="600ca-168">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.TcpClient.Available%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="600ca-169">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-169">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-170">Получив этот код, можно ссылаться на сокетов Windows версии 2 API документации по кодам ошибок в библиотеке MSDN по адресу [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-170">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-171">В следующем примере кода показано использование <xref:System.Net.Sockets.TcpClient.Available%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="600ca-171">The following code example shows the use of the <xref:System.Net.Sockets.TcpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-172">Произошла ошибка при попытке доступа к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-172">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-173">
            <see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-173">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-174">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-174">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="600ca-175">Адрес <see cref="T:System.Net.IPAddress" /> удаленного узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-175">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="600ca-176">Номер порта удаленного узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-176">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="600ca-177">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-177">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="600ca-178">Пользовательский объект, содержащий информацию об операции подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-178">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="600ca-179">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-179">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-180">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-180">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="600ca-181">Удаленный узел задается объектом <see cref="T:System.Net.IPAddress" /> и номером порта (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-181">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="600ca-182">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-182">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-183">Асинхронный <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> операция должна быть завершена путем вызова <xref:System.Net.Sockets.TcpClient.EndConnect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-183">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="600ca-184">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="600ca-184">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="600ca-185">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="600ca-185">This method does not block until the operation completes.</span></span> <span data-ttu-id="600ca-186">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Sockets.TcpClient.Connect%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="600ca-186">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="600ca-187">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-187">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-188">В следующем примере кода создается <xref:System.Net.Sockets.TcpClient> и подключается к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="600ca-188">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-189">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-189">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-190">Произошла ошибка при попытке доступа к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-190">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-191">
            <see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-191">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="600ca-192">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-192">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="600ca-193">Недействительный номер порта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-193">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="600ca-194">По крайней мере один объект <see cref="T:System.Net.IPAddress" />, определяющий удаленные узлы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-194">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="600ca-195">Номер порта удаленных узлов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-195">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="600ca-196">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-196">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="600ca-197">Пользовательский объект, содержащий информацию об операции подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-197">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="600ca-198">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-198">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-199">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-199">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="600ca-200">Удаленный узел задается массивом <see cref="T:System.Net.IPAddress" /> и номером порта (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-200">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="600ca-201">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-201">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-202">Асинхронный <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> операция должна быть завершена путем вызова <xref:System.Net.Sockets.TcpClient.EndConnect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-202">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="600ca-203">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="600ca-203">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="600ca-204">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="600ca-204">This method does not block until the operation completes.</span></span> <span data-ttu-id="600ca-205">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Sockets.TcpClient.Connect%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="600ca-205">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="600ca-206">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-206">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="600ca-207">Этот метод обычно используется сразу же после вызова <xref:System.Net.Dns.BeginGetHostAddresses%2A> метод, который может возвращать несколько IP-адресов для одного узла.</span><span class="sxs-lookup"><span data-stu-id="600ca-207">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-208">В следующем примере кода создается <xref:System.Net.Sockets.TcpClient> и подключается к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="600ca-208">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-209">Параметр <paramref name="addresses" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-209">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-210">Произошла ошибка при попытке доступа к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-210">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-211">
            <see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-211">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="600ca-212">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-212">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="600ca-213">Недействительный номер порта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-213">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="600ca-214">Имя удаленного узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-214">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="600ca-215">Номер порта удаленного узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-215">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="600ca-216">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-216">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="600ca-217">Пользовательский объект, содержащий информацию об операции подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-217">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="600ca-218">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-218">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-219">Начинает выполнение асинхронного запроса для подключения к удаленному узлу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-219">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="600ca-220">Удаленный узел задается именем узла (<see cref="T:System.String" />) и номером порта (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-220">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="600ca-221">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-221">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-222">Асинхронный <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> операция должна быть завершена путем вызова <xref:System.Net.Sockets.TcpClient.EndConnect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-222">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="600ca-223">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="600ca-223">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="600ca-224">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="600ca-224">This method does not block until the operation completes.</span></span> <span data-ttu-id="600ca-225">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Sockets.TcpClient.Connect%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="600ca-225">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="600ca-226">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-226">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-227">В следующем примере кода создается <xref:System.Net.Sockets.TcpClient> и подключается к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="600ca-227">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-228">Параметр <paramref name="host" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-228">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-229">Произошла ошибка при попытке доступа к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-229">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-230">
            <see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-230">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="600ca-231">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-231">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="600ca-232">Недействительный номер порта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-232">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-233">Возвращает или задает базовый объект <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-233">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-234">Базовый сетевой объект <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-234">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-235"><xref:System.Net.Sockets.TcpClient> Создает <xref:System.Net.Sockets.Socket> для отправки и получения данных по сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-235"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="600ca-236">Классы, производные от <xref:System.Net.Sockets.TcpClient> это свойство можно использовать для получения или задания это <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="600ca-236">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="600ca-237">Используйте основной <xref:System.Net.Sockets.Socket> возвращаемые <xref:System.Net.Sockets.TcpClient.Client%2A> при необходимости доступа, чем, который <xref:System.Net.Sockets.TcpClient> предоставляет.</span><span class="sxs-lookup"><span data-stu-id="600ca-237">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.TcpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.TcpClient> provides.</span></span> <span data-ttu-id="600ca-238">Можно также использовать <xref:System.Net.Sockets.TcpClient.Client%2A> задать базовый <xref:System.Net.Sockets.Socket> к существующему <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="600ca-238">You can also use <xref:System.Net.Sockets.TcpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="600ca-239">Это может быть полезно в том случае, если вы хотите воспользоваться преимуществами простоты <xref:System.Net.Sockets.TcpClient> использующих уже существующий <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="600ca-239">This might be useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.TcpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-240">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.TcpClient.Client%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="600ca-240">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span> <span data-ttu-id="600ca-241">В этом примере размер буфера приема базового <xref:System.Net.Sockets.Socket> изменяется.</span><span class="sxs-lookup"><span data-stu-id="600ca-241">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="600ca-242">Удаляет данный экземпляр <see cref="T:System.Net.Sockets.TcpClient" /> и запрашивает закрытие базового подключения TCP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-242">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-243"><xref:System.Net.Sockets.TcpClient.Close%2A> Метод Отмечает экземпляр как удаленный объект и запрашивает связанный <xref:System.Net.Sockets.Socket> закрыть подключение TCP.</span><span class="sxs-lookup"><span data-stu-id="600ca-243">The <xref:System.Net.Sockets.TcpClient.Close%2A> method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="600ca-244">На основе <xref:System.Net.Sockets.TcpClient.LingerState%2A> свойство, TCP-подключения могут оставаться открытыми некоторое время после <xref:System.Net.Sockets.TcpClient.Close%2A> метод вызывается в том случае, если продолжается отправка данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-244">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the <xref:System.Net.Sockets.TcpClient.Close%2A> method is called when data remains to be sent.</span></span> <span data-ttu-id="600ca-245">Нет никакого оповещения, когда завершения закрытия базового соединения.</span><span class="sxs-lookup"><span data-stu-id="600ca-245">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="600ca-246">Вызов этого метода будет в конечном итоге привести закрытия связанного <xref:System.Net.Sockets.Socket> и также будут закрыты связанного <xref:System.Net.Sockets.NetworkStream> , используемый для отправки и получения данных, если он был создан.</span><span class="sxs-lookup"><span data-stu-id="600ca-246">Calling this method will eventually result in the close of the associated <xref:System.Net.Sockets.Socket> and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-247">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-247">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-248">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-248">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-249">В следующем примере кода демонстрируется закрытие <xref:System.Net.Sockets.TcpClient> путем вызова <xref:System.Net.Sockets.TcpClient.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-249">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-250">Подключает клиента к удаленному TCP-узлу, используя заданное имя узла и номер порта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-250">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="600ca-251">Объект <see cref="T:System.Net.IPEndPoint" />, к которому выполняется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-251">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-252">Подключает клиента к удаленному TCP-узлу, используя указанную удаленную сетевую конечную точку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-252">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-253">Вызовите этот метод для установления соединения синхронной удаленного узла в указанном <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="600ca-253">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="600ca-254">Перед вызовом метода <xref:System.Net.Sockets.TcpClient.Connect%2A> необходимо создать экземпляр <xref:System.Net.IPEndPoint> с использованием IP-адресом и номером порта.</span><span class="sxs-lookup"><span data-stu-id="600ca-254">Before you call <xref:System.Net.Sockets.TcpClient.Connect%2A> you must create an instance of the <xref:System.Net.IPEndPoint> class using an IP address and a port number.</span></span> <span data-ttu-id="600ca-255">Используйте этот <xref:System.Net.IPEndPoint> как `remoteEP` параметр.</span><span class="sxs-lookup"><span data-stu-id="600ca-255">Use this <xref:System.Net.IPEndPoint> as the `remoteEP` parameter.</span></span> <span data-ttu-id="600ca-256"><xref:System.Net.Sockets.TcpClient.Connect%2A> Метод будет заблокирован до установления соединения или завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="600ca-256">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="600ca-257">После подключения к удаленному узлу, используйте <xref:System.Net.Sockets.TcpClient.GetStream%2A> метод, чтобы получить основной <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="600ca-257">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="600ca-258">Используйте этот <xref:System.Net.Sockets.NetworkStream> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-258">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-259">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-259">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-260">Получив этот код, можно ссылаться на [код ошибки API сокетов Windows версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) документации подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-260">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-261">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-261">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-262">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="600ca-262">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-263">В следующем примере кода используется <xref:System.Net.IPEndPoint> для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="600ca-263">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-264">Параметр <paramref name="remoteEp" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-264">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-265">Произошла ошибка при обращении к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-265">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-266">Объект <see cref="T:System.Net.Sockets.TcpClient" /> закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-266">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="600ca-267">Объект <see cref="T:System.Net.IPAddress" /> узла, к которому выполняется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-267">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="600ca-268">Номер порта, к которому выполняется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-268">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-269">Подключает клиента к удаленному TCP-узлу, используя указанный IP-адрес и номер порта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-269">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-270">Вызовите этот метод для установления соединения синхронной удаленного узла в указанном <xref:System.Net.IPAddress> и номер порта.</span><span class="sxs-lookup"><span data-stu-id="600ca-270">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="600ca-271"><xref:System.Net.Sockets.TcpClient.Connect%2A> Метод будет заблокирован до установления соединения или завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="600ca-271">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="600ca-272">После подключения к удаленному узлу, используйте <xref:System.Net.Sockets.TcpClient.GetStream%2A> метод, чтобы получить основной <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="600ca-272">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="600ca-273">Используйте этот <xref:System.Net.Sockets.NetworkStream> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-273">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-274">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-274">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-275">Получив этот код, можно ссылаться на [код ошибки API сокетов Windows версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) документации подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-275">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-276">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-276">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-277">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-277">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-278">В следующем примере кода используется IP-адрес и номер порта для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="600ca-278">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-279">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-279">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="600ca-280">Параметр <paramref name="port" /> имеет значение, не лежащее в диапазоне между <see cref="F:System.Net.IPEndPoint.MinPort" /> и <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-280">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-281">Произошла ошибка при обращении к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-281">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-282">
            <see cref="T:System.Net.Sockets.TcpClient" /> закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-282">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="600ca-283">Массив <see cref="T:System.Net.IPAddress" /> узла, к которому выполняется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-283">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="600ca-284">Номер порта, к которому выполняется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-284">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-285">Подключает клиента к удаленному TCP-узлу, используя указанный IP-адрес и номер порта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-285">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-286">Этот метод обычно используется сразу же после вызова <xref:System.Net.Dns.BeginGetHostAddresses%2A> метод, который может возвращать несколько IP-адресов для одного узла.</span><span class="sxs-lookup"><span data-stu-id="600ca-286">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="600ca-287">Вызовите <xref:System.Net.Sockets.TcpClient.Connect%2A> метод для установления соединения синхронной удаленного узла для узла, указанного массива <xref:System.Net.IPAddress> элементов и номер порта.</span><span class="sxs-lookup"><span data-stu-id="600ca-287">Call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="600ca-288"><xref:System.Net.Sockets.TcpClient.Connect%2A> Метод будет заблокирован до установления соединения или завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="600ca-288">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="600ca-289">После подключения к удаленному узлу, используйте <xref:System.Net.Sockets.TcpClient.GetStream%2A> метод, чтобы получить основной <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="600ca-289">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="600ca-290">Используйте этот <xref:System.Net.Sockets.NetworkStream> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-290">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-291">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-291">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-292">Получив этот код, можно ссылаться на сокетов Windows версии 2 API документации по кодам ошибок в библиотеке MSDN по адресу [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-292">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-293">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-293">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-294">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-294">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-295">В следующем примере кода используется IP-адрес и номер порта для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="600ca-295">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-296">Параметр <paramref name="ipAddresses" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-296">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="600ca-297">Недействительный номер порта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-297">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-298">Произошла ошибка при попытке доступа к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-298">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-299">
            <see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-299">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="600ca-300">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-300">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="600ca-301">Этот метод может быть применен только для сокетов, которые используют флаг <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-301">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="600ca-302">DNS-имя удаленного узла, к которому планируется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-302">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="600ca-303">Имя порта удаленного узла, к которому планируется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-303">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-304">Подключает клиента к указанному порту заданного узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-304">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-305">Вызовите этот метод для подключения синхронной удаленного узла к указанное имя узла и номер порта.</span><span class="sxs-lookup"><span data-stu-id="600ca-305">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="600ca-306"><xref:System.Net.Sockets.TcpClient.Connect%2A> Метод будет заблокирован до установления соединения или завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="600ca-306">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="600ca-307">После подключения к удаленному узлу, используйте <xref:System.Net.Sockets.TcpClient.GetStream%2A> метод, чтобы получить основной <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="600ca-307">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="600ca-308">Используйте этот <xref:System.Net.Sockets.NetworkStream> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-308">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="600ca-309">Если была включена поддержка IPv6 и <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> метод вызывается для подключения к узлу, который разрешается в IPv6 и IPv4-адреса, раньше IPv4-адрес, попытка установки соединения на IPv6, адресом будет.</span><span class="sxs-lookup"><span data-stu-id="600ca-309">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="600ca-310">Это может влиять на задержки во времени для установления соединения, если узел не прослушивает IPv6-адрес.</span><span class="sxs-lookup"><span data-stu-id="600ca-310">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-311">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-311">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-312">Получив этот код, можно ссылаться на [код ошибки API сокетов Windows версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) документации подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-312">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-313">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-313">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-314">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-314">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-315">В следующем примере кода используется имя узла и номер порта для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="600ca-315">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-316">Параметр <paramref name="hostname" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-316">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="600ca-317">Параметр <paramref name="port" /> не находится между <see cref="F:System.Net.IPEndPoint.MinPort" /> и <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-317">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-318">Произошла ошибка при обращении к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-318">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-319">
            <see cref="T:System.Net.Sockets.TcpClient" /> закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-319">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-320">Подключает клиента к удаленному TCP-узлу, используя заданное имя узла и номер порта в асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-320">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="600ca-321">Объект <see cref="T:System.Net.IPAddress" /> узла, к которому выполняется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-321">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="600ca-322">Номер порта, к которому выполняется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-322">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-323">Подключает клиента к удаленному TCP-узлу, используя заданный IP-адрес и номер порта в асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-323">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="600ca-324">Возвращает <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-324">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="600ca-325">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-325">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-326">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="600ca-326">This operation will not block.</span></span> <span data-ttu-id="600ca-327">Возвращает возвращаемый <xref:System.Threading.Tasks.Task> объекта будет завершена после установления подключения TCP.</span><span class="sxs-lookup"><span data-stu-id="600ca-327">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="600ca-328">Этот метод не блокирует вызывающий поток во время запроса на подключение.</span><span class="sxs-lookup"><span data-stu-id="600ca-328">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="600ca-329">Вызовите этот метод для установления соединения синхронной удаленного узла в указанном <xref:System.Net.IPAddress> и номер порта в асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="600ca-329">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="600ca-330">После подключения к удаленному узлу, используйте <xref:System.Net.Sockets.TcpClient.GetStream%2A> метод, чтобы получить основной <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="600ca-330">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="600ca-331">Используйте этот <xref:System.Net.Sockets.NetworkStream> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-331">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-332">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-332">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-333">Получив этот код, можно ссылаться на [код ошибки API сокетов Windows версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) документации подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-333">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-334">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-334">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-335">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-335">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-336">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-336">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="600ca-337">Параметр <paramref name="port" /> имеет значение, не лежащее в диапазоне между <see cref="F:System.Net.IPEndPoint.MinPort" /> и <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-337">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-338">Произошла ошибка при обращении к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-338">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-339">
            <see cref="T:System.Net.Sockets.TcpClient" /> закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-339">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="600ca-340">Массив <see cref="T:System.Net.IPAddress" /> узла, к которому выполняется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-340">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="600ca-341">Номер порта, к которому выполняется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-341">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-342">Подключает клиента к удаленному TCP-узлу, используя заданные IP-адреса и номер порта в асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-342">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="600ca-343">Возвращает <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-343">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="600ca-344">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-344">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-345">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="600ca-345">This operation will not block.</span></span> <span data-ttu-id="600ca-346">Возвращает возвращаемый <xref:System.Threading.Tasks.Task> объекта будет завершена после установления подключения TCP.</span><span class="sxs-lookup"><span data-stu-id="600ca-346">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="600ca-347">Этот метод не блокирует вызывающий поток во время запроса на подключение.</span><span class="sxs-lookup"><span data-stu-id="600ca-347">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="600ca-348">Этот метод обычно используется сразу же после вызова <xref:System.Net.Dns.BeginGetHostAddresses%2A> метод, который может возвращать несколько IP-адресов для одного узла.</span><span class="sxs-lookup"><span data-stu-id="600ca-348">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="600ca-349">Вызовите этот метод для установления соединения синхронной удаленного узла для узла, указанного массива <xref:System.Net.IPAddress> элементов и номер порта в асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="600ca-349">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="600ca-350">После подключения к удаленному узлу, используйте <xref:System.Net.Sockets.TcpClient.GetStream%2A> метод, чтобы получить основной <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="600ca-350">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="600ca-351">Используйте этот <xref:System.Net.Sockets.NetworkStream> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-351">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-352">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-352">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-353">Получив этот код, можно ссылаться на сокетов Windows версии 2 API документации по кодам ошибок в библиотеке MSDN по адресу [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-353">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-354">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-354">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-355">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-355">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-356">Параметр <paramref name="ipAddresses" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-356">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="600ca-357">Недействительный номер порта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-357">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-358">Произошла ошибка при попытке доступа к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-358">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-359">
            <see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-359">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="600ca-360">Вызывающий объект, находящийся выше в стеке вызовов, не имеет разрешения на запрошенную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-360">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="600ca-361">Этот метод может быть применен только для сокетов, которые используют флаг <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-361">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="600ca-362">DNS-имя удаленного узла, к которому планируется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-362">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="600ca-363">Имя порта удаленного узла, к которому планируется подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-363">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-364">Подключает клиента к указанному TCP-порту заданного узла в асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-364">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="600ca-365">Возвращает <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-365">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="600ca-366">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-366">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-367">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="600ca-367">This operation will not block.</span></span> <span data-ttu-id="600ca-368">Возвращает возвращаемый <xref:System.Threading.Tasks.Task> объекта будет завершена после установления подключения TCP.</span><span class="sxs-lookup"><span data-stu-id="600ca-368">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="600ca-369">Этот метод не блокирует вызывающий поток во время запроса на подключение.</span><span class="sxs-lookup"><span data-stu-id="600ca-369">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="600ca-370">Этот метод синхронной удаленного узла подключения к указанное имя узла и портом номер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="600ca-370">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="600ca-371">После подключения к удаленному узлу, используйте <xref:System.Net.Sockets.TcpClient.GetStream%2A> метод, чтобы получить основной <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="600ca-371">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="600ca-372">Используйте этот <xref:System.Net.Sockets.NetworkStream> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-372">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="600ca-373">Если была включена поддержка IPv6 и <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> метод вызывается для подключения к узлу, который разрешается в IPv6 и IPv4-адреса, раньше IPv4-адрес, попытка установки соединения на IPv6, адресом будет.</span><span class="sxs-lookup"><span data-stu-id="600ca-373">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="600ca-374">Это может влиять на задержки во времени для установления соединения, если узел не прослушивает IPv6-адрес.</span><span class="sxs-lookup"><span data-stu-id="600ca-374">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-375">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-375">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-376">Получив этот код, можно ссылаться на [код ошибки API сокетов Windows версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) документации подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-376">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-377">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-377">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-378">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-378">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-379">Параметр <paramref name="hostname" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-379">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="600ca-380">Параметр <paramref name="port" /> не находится между <see cref="F:System.Net.IPEndPoint.MinPort" /> и <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-380">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-381">Произошла ошибка при обращении к сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-381">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-382">
            <see cref="T:System.Net.Sockets.TcpClient" /> закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-382">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-383">Возвращает значение, указывающее, подключен ли основной объект <see cref="T:System.Net.Sockets.Socket" /> для объекта <see cref="T:System.Net.Sockets.TcpClient" /> к удаленному узлу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-383">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-384">Значение <see langword="true" />, если сокет <see cref="P:System.Net.Sockets.TcpClient.Client" /> был подключен к удаленному узлу в результате последней операции; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-384">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-385"><xref:System.Net.Sockets.TcpClient.Connected%2A> Свойство получает состояние подключения <xref:System.Net.Sockets.TcpClient.Client%2A> сокета, начиная с последней операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="600ca-385">The <xref:System.Net.Sockets.TcpClient.Connected%2A> property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="600ca-386">При возврате `false`, <xref:System.Net.Sockets.TcpClient.Client%2A> сокет не подключен, или уже не подключен.</span><span class="sxs-lookup"><span data-stu-id="600ca-386">When it returns `false`, the <xref:System.Net.Sockets.TcpClient.Client%2A> socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="600ca-387">Так как <xref:System.Net.Sockets.TcpClient.Connected%2A> свойство только отражает состояние соединения, начиная с самой последней операции, следует попытаться отправить или получить сообщение, чтобы определить текущее состояние.</span><span class="sxs-lookup"><span data-stu-id="600ca-387">Because the <xref:System.Net.Sockets.TcpClient.Connected%2A> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="600ca-388">После неудачной попытки отправить сообщение, это свойство больше не возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="600ca-388">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="600ca-389">Обратите внимание, что это сделано намеренно.</span><span class="sxs-lookup"><span data-stu-id="600ca-389">Note that this behavior is by design.</span></span> <span data-ttu-id="600ca-390">Нельзя надежно проверить состояние подключения, так как по времени между тестом и отправки и получения, соединение может быть разорвано.</span><span class="sxs-lookup"><span data-stu-id="600ca-390">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="600ca-391">Ваш код должен предполагается сокет подключен и корректно обрабатывать неудавшиеся передачи.</span><span class="sxs-lookup"><span data-stu-id="600ca-391">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-392">В следующем примере кода подключается к удаленной конечной точки и затем проверяет подключение.</span><span class="sxs-lookup"><span data-stu-id="600ca-392">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="600ca-393">Освобождает все управляемые и неуправляемые ресурсы, используемые <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-393">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="600ca-394">Задайте значение <see langword="true" /> для освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-394">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-395">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.Sockets.TcpClient" />, а при необходимости освобождает также управляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-395">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-396">Этот метод вызывается открытым `Dispose()` метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-396">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="600ca-397">`Dispose()` вызывает этот метод с `disposing` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="600ca-397">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="600ca-398"><xref:System.Object.Finalize%2A> вызывает этот метод с `disposing` присвоено `false`.</span><span class="sxs-lookup"><span data-stu-id="600ca-398"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="600ca-399">Если параметр `disposing` имеет значение `true`, то данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, на которые ссылается этот объект <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="600ca-399">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="600ca-400">Это достигается путем вызова `Dispose()` метод каждого такого объекта.</span><span class="sxs-lookup"><span data-stu-id="600ca-400">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-401">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-401">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-402">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-402">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="600ca-403">
            <para>
              <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />. Дополнительные сведения о том, как реализовать <see langword="Dispose(Boolean)" />, см. в разделе [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-403">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="600ca-404">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове объекта <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-404">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="600ca-405">Завершает ожидающую асинхронную попытку на подключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-405">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-406">Этот метод блокируется до ее завершения.</span><span class="sxs-lookup"><span data-stu-id="600ca-406">This method blocks until the operation is complete.</span></span> <span data-ttu-id="600ca-407">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Sockets.TcpClient.Connect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-407">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-408">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-408">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-409">Получив этот код, можно ссылаться на сокетов Windows версии 2 API документации по кодам ошибок в библиотеке MSDN по адресу [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-409">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-410">В следующем примере кода завершается попытка асинхронного подключения.</span><span class="sxs-lookup"><span data-stu-id="600ca-410">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="600ca-411">Параметр <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-411">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="600ca-412">Значение параметра <paramref name="asyncResult" /> не было возвращено при вызове метода <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-412">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="600ca-413">Метод <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> был ранее вызван для асинхронного подключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-413">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-414">Произошла ошибка при попытке доступа к объекту <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-414">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-415">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-415">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-416">Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, разрешает ли объект <see cref="T:System.Net.Sockets.TcpClient" /> использовать порт только одному клиенту.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-416">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-417">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.TcpClient" /> разрешает только одному клиенту использовать конкретный порт; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-417">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="600ca-418">По умолчанию используется значение <see langword="true" /> для Windows Server 2003 и Windows XP с пакетом обновления 2 (SP2) и более поздней версии; для всех остальных версий по умолчанию используется значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-418">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-419">По умолчанию несколько клиентов могут использовать конкретный порт; Тем не менее только один из клиентов, можно выполнить операции на сетевой трафик, отправляемый на порт.</span><span class="sxs-lookup"><span data-stu-id="600ca-419">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="600ca-420">Можно использовать <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> свойство, чтобы предотвратить использование конкретного порта несколькими клиентами.</span><span class="sxs-lookup"><span data-stu-id="600ca-420">You can use the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="600ca-421">Это свойство должно иметь значение, прежде чем основном сокете привязан к порту клиента.</span><span class="sxs-lookup"><span data-stu-id="600ca-421">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="600ca-422">При вызове метода <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, или <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, порт клиентского привязан как побочный эффект метода и впоследствии невозможно задать <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> свойство</span><span class="sxs-lookup"><span data-stu-id="600ca-422">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-423">В следующем примере кода создается <xref:System.Net.Sockets.TcpClient> и получает и задает значение <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="600ca-423">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-424">Произошла ошибка при попытке доступа к основному сокету.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-424">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-425">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-425">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="600ca-426">Освобождает ресурсы, используемые классом <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-426">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-427">Этот метод переопределяет метод <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="600ca-427">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="600ca-428">Код приложения не следует вызывать этот метод; объекта <xref:System.Object.Finalize%2A> метод автоматически вызывается во время сборки мусора, если завершение работы сборщика мусора была отключена с помощью вызова <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-428">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="600ca-429"><xref:System.Net.Sockets.TcpClient> Метод завершения класса закрывает TCP-подключение и освобождает все управляемые ресурсы, связанные с <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="600ca-429">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="600ca-430">Эти ресурсы включают в себя базовый <xref:System.Net.Sockets.Socket> используется для соединения с удаленным узлом и <xref:System.Net.Sockets.NetworkStream> используется для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-430">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="600ca-431">Метод завершения не освобождает все неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="600ca-431">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="600ca-432">Дополнительные сведения см. в разделе [методы Finalize и деструкторы](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md), и [переопределение метода Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="600ca-432">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="600ca-433">Возвращает объект <see cref="T:System.Net.Sockets.NetworkStream" />, используемый для отправки и получения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-433">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="600ca-434">Базовый объект <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-434">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-435"><xref:System.Net.Sockets.TcpClient.GetStream%2A> Возвращает <xref:System.Net.Sockets.NetworkStream> можно использовать для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-435"><xref:System.Net.Sockets.TcpClient.GetStream%2A> returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="600ca-436"><xref:System.Net.Sockets.NetworkStream> Класс наследует от <xref:System.IO.Stream> класс, который предоставляет широкий набор методов и свойств, используемых для работы с сетевыми соединениями.</span><span class="sxs-lookup"><span data-stu-id="600ca-436">The <xref:System.Net.Sockets.NetworkStream> class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="600ca-437">Необходимо вызвать <xref:System.Net.Sockets.TcpClient.Connect%2A> метод во-первых, или <xref:System.Net.Sockets.TcpClient.GetStream%2A> метод вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="600ca-437">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="600ca-438">После получения <xref:System.Net.Sockets.NetworkStream>, вызовите <xref:System.Net.Sockets.NetworkStream.Write%2A> метод для отправки данных на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="600ca-438">After you have obtained the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="600ca-439">Вызовите <xref:System.Net.Sockets.NetworkStream.Read%2A> метод для получения данных, поступающих с удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="600ca-439">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="600ca-440">Оба эти методы блокируются до выполнить указанную операцию.</span><span class="sxs-lookup"><span data-stu-id="600ca-440">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="600ca-441">Можно избежать блокирования на операции чтения, установив <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="600ca-441">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="600ca-442">Объект `true` значение означает, что данных поступил с удаленного узла и доступны для чтения.</span><span class="sxs-lookup"><span data-stu-id="600ca-442">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="600ca-443">В этом случае <xref:System.Net.Sockets.NetworkStream.Read%2A> гарантированно выполняются немедленно.</span><span class="sxs-lookup"><span data-stu-id="600ca-443">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="600ca-444">Если удаленный узел отключил подключение, <xref:System.Net.Sockets.NetworkStream.Read%2A> немедленно вернет нулевыми байтами.</span><span class="sxs-lookup"><span data-stu-id="600ca-444">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-445">Необходимо закрыть <xref:System.Net.Sockets.NetworkStream> после завершения отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-445">You must close the <xref:System.Net.Sockets.NetworkStream> when you are through sending and receiving data.</span></span> <span data-ttu-id="600ca-446">Закрытие <xref:System.Net.Sockets.TcpClient> не освобождает <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="600ca-446">Closing <xref:System.Net.Sockets.TcpClient> does not release the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-447">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> для получения конкретного кода ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-447">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="600ca-448">Получив этот код, можно ссылаться на [код ошибки API сокетов Windows версии 2](/windows/desktop/winsock/windows-sockets-error-codes-2) документации подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="600ca-448">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="600ca-449">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-449">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="600ca-450">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="600ca-450">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-451">В следующем примере кода используется <xref:System.Net.Sockets.TcpClient.GetStream%2A> для получения базового <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="600ca-451">The following code example uses <xref:System.Net.Sockets.TcpClient.GetStream%2A> to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="600ca-452">После получения <xref:System.Net.Sockets.NetworkStream>, она отправляет и получает с помощью его <xref:System.Net.Sockets.NetworkStream.Write%2A> и <xref:System.Net.Sockets.NetworkStream.Read%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="600ca-452">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="600ca-453">Объект <see cref="T:System.Net.Sockets.TcpClient" /> не подключен к удаленному узлу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-453">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="600ca-454">
            <see cref="T:System.Net.Sockets.TcpClient" /> был закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-454">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-455">Возвращает или задает информацию о состоянии задержки связанного сокета.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-455">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-456">Объект <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-456">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="600ca-457">По умолчанию режим задержки отключен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-457">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-458"><xref:System.Net.Sockets.TcpClient.LingerState%2A> Свойство меняет способ отслеживания <xref:System.Net.Sockets.Socket.Close%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="600ca-458">The <xref:System.Net.Sockets.TcpClient.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="600ca-459">Когда это свойство установлено, оно изменяет условия, при которых подключение может быть изменена Winsock.</span><span class="sxs-lookup"><span data-stu-id="600ca-459">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="600ca-460">Сброс подключения можно по-прежнему происходит на основании поведение протокола IP.</span><span class="sxs-lookup"><span data-stu-id="600ca-460">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="600ca-461">Это свойство определяет продолжительность времени, которое TCP-подключение будет оставаться открытым после вызова <xref:System.Net.Sockets.TcpClient.Close%2A> Если продолжается отправка данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-461">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="600ca-462">При вызове <xref:System.Net.Sockets.NetworkStream.Write%2A> метод данных помещается в выходной буфер сети.</span><span class="sxs-lookup"><span data-stu-id="600ca-462">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="600ca-463">Это свойство может использоваться, чтобы убедиться, что эти данные отправляются на удаленный узел, прежде чем <xref:System.Net.Sockets.TcpClient.Close%2A> метод разрывает подключение.</span><span class="sxs-lookup"><span data-stu-id="600ca-463">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="600ca-464">Чтобы включить ожидание, создайте <xref:System.Net.Sockets.LingerOption> экземпляр, содержащий нужные значения и задайте <xref:System.Net.Sockets.TcpClient.LingerState%2A> свойство с данным экземпляром.</span><span class="sxs-lookup"><span data-stu-id="600ca-464">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="600ca-465">В следующей таблице описаны поведение <xref:System.Net.Sockets.TcpClient.Close%2A> метод для возможных значений параметра <xref:System.Net.Sockets.LingerOption.Enabled%2A> свойство и <xref:System.Net.Sockets.LingerOption.LingerTime%2A> хранимой в <xref:System.Net.Sockets.TcpClient.LingerState%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="600ca-465">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="600ca-466">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="600ca-466">LingerState.Enabled</span></span>|<span data-ttu-id="600ca-467">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="600ca-467">LingerState.LingerTime</span></span>|<span data-ttu-id="600ca-468">Поведение</span><span class="sxs-lookup"><span data-stu-id="600ca-468">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="600ca-469">`false` (отключено), значение по умолчанию</span><span class="sxs-lookup"><span data-stu-id="600ca-469">`false` (disabled), the default value</span></span>|<span data-ttu-id="600ca-470">Время ожидания не применяется (по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="600ca-470">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="600ca-471">Предпринимает попытку отправки ожидания данных, пока не истечет тайм-аут протокола IP-адрес по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="600ca-471">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="600ca-472">`true` (включено)</span><span class="sxs-lookup"><span data-stu-id="600ca-472">`true` (enabled)</span></span>|<span data-ttu-id="600ca-473">Ненулевое значение тайм-аута</span><span class="sxs-lookup"><span data-stu-id="600ca-473">A nonzero time-out</span></span>|<span data-ttu-id="600ca-474">Предпринимает попытку отправки ожидания данных, пока не истечет заданное время ожидания, и если попытка завершается неудачей, Winsock сбрасывает соединение.</span><span class="sxs-lookup"><span data-stu-id="600ca-474">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="600ca-475">`true` (включено)</span><span class="sxs-lookup"><span data-stu-id="600ca-475">`true` (enabled)</span></span>|<span data-ttu-id="600ca-476">Нулевое время ожидания.</span><span class="sxs-lookup"><span data-stu-id="600ca-476">A zero timeout.</span></span>|<span data-ttu-id="600ca-477">Отменяет все ожидающие данные и Winsock сбрасывает соединение.</span><span class="sxs-lookup"><span data-stu-id="600ca-477">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="600ca-478">Стек IP вычисляет период ожидания протокола IP-адрес по умолчанию для использования на основе времени кругового пути подключения.</span><span class="sxs-lookup"><span data-stu-id="600ca-478">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="600ca-479">В большинстве случаев тайм-аут вычисленное стеком более релевантные, чем один определенный приложением.</span><span class="sxs-lookup"><span data-stu-id="600ca-479">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="600ca-480">Это поведение по умолчанию для сокета при <xref:System.Net.Sockets.TcpClient.LingerState%2A> свойство не задано.</span><span class="sxs-lookup"><span data-stu-id="600ca-480">This is the default behavior for a socket when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="600ca-481">Когда <xref:System.Net.Sockets.LingerOption.LingerTime%2A> хранимой в <xref:System.Net.Sockets.TcpClient.LingerState%2A> свойство имеет значение больше таймаут по умолчанию для протокола IP-адрес, IP-адрес протокола по умолчанию время ожидания будет по-прежнему применяются, переопределяя.</span><span class="sxs-lookup"><span data-stu-id="600ca-481">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-482">В следующем примере кода в примере и получает задержки для сокетов времени.</span><span class="sxs-lookup"><span data-stu-id="600ca-482">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-483">Возвращает или задает значение, которое отключает задержку в том случае, когда буферы отправки и получения не заполнены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-483">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-484">Значение <see langword="true" />, если задержка отключена; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-484">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="600ca-485">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-485">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-486">Когда <xref:System.Net.Sockets.TcpClient.NoDelay%2A> — `false`, <xref:System.Net.Sockets.TcpClient> отправляет пакет по сети, пока не собранные значительный объем исходящих данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-486">When <xref:System.Net.Sockets.TcpClient.NoDelay%2A> is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="600ca-487">Из-за, объем нагрузки в сегмент TCP Отправка небольших объемов данных неэффективна.</span><span class="sxs-lookup"><span data-stu-id="600ca-487">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="600ca-488">Тем не менее существуют ситуации, когда нужно отправить очень небольших объемов данных или ожидать немедленной реакции из каждого пакета при отправке.</span><span class="sxs-lookup"><span data-stu-id="600ca-488">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="600ca-489">При принятии решения следует учитывать относительную важность эффективность сети и требования конкретных приложений.</span><span class="sxs-lookup"><span data-stu-id="600ca-489">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-490">В следующем примере кода отключает задержку.</span><span class="sxs-lookup"><span data-stu-id="600ca-490">The following code example disables the delay.</span></span> <span data-ttu-id="600ca-491">Затем он проверяет значение <xref:System.Net.Sockets.TcpClient.NoDelay%2A> чтобы убедиться, что свойство было успешно установлено.</span><span class="sxs-lookup"><span data-stu-id="600ca-491">It then checks the value of <xref:System.Net.Sockets.TcpClient.NoDelay%2A> to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-492">Возвращает или задает размер буфера приема.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-492">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-493">Размер буфера приема (в байтах).</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-493">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="600ca-494">Значение по умолчанию — 8192 байта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-494">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-495"><xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> Свойство получает или задает число байтов, чтобы сохранить в буфере приема для каждой операции чтения.</span><span class="sxs-lookup"><span data-stu-id="600ca-495">The <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="600ca-496">Фактически, это свойство управляет сетевого буфера, выделяемого для приема входных данных.</span><span class="sxs-lookup"><span data-stu-id="600ca-496">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="600ca-497">Размер буфера сети должен быть меньше размера буфера приложения, чтобы убедиться, что нужные данные будут доступны при вызове <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-497">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="600ca-498">Используйте <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> свойство, чтобы задать этот размер.</span><span class="sxs-lookup"><span data-stu-id="600ca-498">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="600ca-499">Если приложение будет принимать большое количество данных, следует передать <xref:System.Net.Sockets.NetworkStream.Read%2A> метод буфер очень большого приложения.</span><span class="sxs-lookup"><span data-stu-id="600ca-499">If your application will be receiving bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Read%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="600ca-500">Если в сетевом буфере меньше, чем объем данных запрашивается в <xref:System.Net.Sockets.NetworkStream.Read%2A> метод, вы не будет возможность получить нужный объем данных в одной операции чтения.</span><span class="sxs-lookup"><span data-stu-id="600ca-500">If the network buffer is smaller than the amount of data you request in the <xref:System.Net.Sockets.NetworkStream.Read%2A> method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="600ca-501">Это влечет за собой дополнительные издержки на дальнейшие вызовы <xref:System.Net.Sockets.NetworkStream.Read%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-501">This incurs the overhead of additional calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-502">В следующем примере кода задает и получает размер буфера приема.</span><span class="sxs-lookup"><span data-stu-id="600ca-502">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="600ca-503">Произошла ошибка при задании размера буфера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-503">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="600ca-504">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-504">-or-</span>
          </span>
          <span data-ttu-id="600ca-505">В приложениях .NET Compact Framework это свойство задать нельзя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-505">In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="600ca-506">Обходные пути см. в примечании, относящемся к платформам, в разделе "Примечания".</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-506">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-507">Возвращает или задает длительность временного интервала, в течение которого объект <see cref="T:System.Net.Sockets.TcpClient" /> будет ожидать получение данных после инициации операции чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-507">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-508">Значение времени ожидания подключения в миллисекундах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-508">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="600ca-509">Значение по умолчанию — 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-509">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-510"><xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> Свойство определяет количество времени, <xref:System.Net.Sockets.NetworkStream.Read%2A> метод выполняет блокировку, пока он не может получать данные.</span><span class="sxs-lookup"><span data-stu-id="600ca-510">The <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="600ca-511">Это время измеряется в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="600ca-511">This time is measured in milliseconds.</span></span> <span data-ttu-id="600ca-512">По истечении времени ожидания перед <xref:System.Net.Sockets.NetworkStream.Read%2A> в случае успешного выполнения <xref:System.Net.Sockets.TcpClient> вызывает <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="600ca-512">If the time-out expires before <xref:System.Net.Sockets.NetworkStream.Read%2A> successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="600ca-513">Нет отсутствие времени ожидания по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="600ca-513">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-514">В следующем примере кода задает и получает время ожидания получения.</span><span class="sxs-lookup"><span data-stu-id="600ca-514">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-515">Возвращает или задает размер буфера отправки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-515">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-516">Размер буфера отправки (в байтах).</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-516">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="600ca-517">Значение по умолчанию — 8192 байта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-517">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-518"><xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> Свойство получает или задает число байтов, которое отправляется в каждом вызове <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-518">The <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="600ca-519">Фактически, это свойство управляет сетевого буфера, выделяемого для операции отправки.</span><span class="sxs-lookup"><span data-stu-id="600ca-519">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="600ca-520">Размер буфера сети должен быть меньше размера буфера приложения, чтобы убедиться, что нужные данные будут храниться и отправлены в одной операции.</span><span class="sxs-lookup"><span data-stu-id="600ca-520">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="600ca-521">Используйте <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> свойство, чтобы задать этот размер.</span><span class="sxs-lookup"><span data-stu-id="600ca-521">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="600ca-522">Если приложение отправляет массовых данных, следует передать <xref:System.Net.Sockets.NetworkStream.Write%2A> метод буфер очень большого приложения.</span><span class="sxs-lookup"><span data-stu-id="600ca-522">If your application will be sending bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Write%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="600ca-523">Если в сетевом буфере меньше, чем объем данных, предоставляют <xref:System.Net.Sockets.NetworkStream.Write%2A> метод, несколько сетевых операции будут выполняться для каждого вызова, вносимые в <xref:System.Net.Sockets.NetworkStream.Write%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="600ca-523">If the network buffer is smaller than the amount of data you provide the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, several network send operations will be performed for every call you make to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="600ca-524">Можно добиться более высокую пропускную способность данных, гарантируя, что размер сетевого буфера меньше размера буфера приложения.</span><span class="sxs-lookup"><span data-stu-id="600ca-524">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-525">В следующем примере кода задает и получает размер буфера отправки.</span><span class="sxs-lookup"><span data-stu-id="600ca-525">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="600ca-526">Возвращает или задает длительность временного интервала, в течение которого объект <see cref="T:System.Net.Sockets.TcpClient" /> будет ожидать успешного завершения операции отправки данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-526">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="600ca-527">Значение времени ожидания отправки (в миллисекундах).</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-527">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="600ca-528">Значение по умолчанию — 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="600ca-528">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600ca-529"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A> Свойство определяет количество времени, <xref:System.Net.Sockets.Socket.Send%2A> метод выполняет блокировку, пока он не может вернуть успешно.</span><span class="sxs-lookup"><span data-stu-id="600ca-529">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="600ca-530">Это время измеряется в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="600ca-530">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="600ca-531">После вызова метода <xref:System.Net.Sockets.NetworkStream.Write%2A> метод, основной <xref:System.Net.Sockets.Socket> возвращает число байтов, фактически передаются на узел.</span><span class="sxs-lookup"><span data-stu-id="600ca-531">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="600ca-532"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A> Свойство определяет время <xref:System.Net.Sockets.TcpClient> будет ожидать до получения число байтов возврата.</span><span class="sxs-lookup"><span data-stu-id="600ca-532">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="600ca-533">По истечении времени ожидания перед <xref:System.Net.Sockets.Socket.Send%2A> в случае успешного выполнения метода <xref:System.Net.Sockets.TcpClient> вызовет <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="600ca-533">If the time-out expires before the <xref:System.Net.Sockets.Socket.Send%2A> method successfully completes, <xref:System.Net.Sockets.TcpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="600ca-534">Нет отсутствие времени ожидания по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="600ca-534">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="600ca-535">В следующем примере кода задает и получает <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> значение.</span><span class="sxs-lookup"><span data-stu-id="600ca-535">The following code example sets and gets the <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>