<Type Name="TcpListener" FullName="System.Net.Sockets.TcpListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33b505c306f1ff21ce7a37a4320193f1edde1fb9" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52740263" /></Metadata><TypeSignature Language="C#" Value="public class TcpListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpListener extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpListener" />
  <TypeSignature Language="F#" Value="type TcpListener = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ce75e-101">Прослушивает подключения от TCP-клиентов сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-101">Listens for connections from TCP network clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-102"><xref:System.Net.Sockets.TcpListener> Класс предоставляет простые методы, предназначенные для ожидания и приема входящих запросов на подключение в синхронном режиме блокировки.</span><span class="sxs-lookup"><span data-stu-id="ce75e-102">The <xref:System.Net.Sockets.TcpListener> class provides simple methods that listen for and accept incoming connection requests in blocking synchronous mode.</span></span> <span data-ttu-id="ce75e-103">Можно использовать либо <xref:System.Net.Sockets.TcpClient> или <xref:System.Net.Sockets.Socket> к сообществу <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-103">You can use either a <xref:System.Net.Sockets.TcpClient> or a <xref:System.Net.Sockets.Socket> to connect with a <xref:System.Net.Sockets.TcpListener>.</span></span> <span data-ttu-id="ce75e-104">Создание <xref:System.Net.Sockets.TcpListener> с помощью <xref:System.Net.IPEndPoint>, локальный IP-адрес и номер порта или номер порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-104">Create a <xref:System.Net.Sockets.TcpListener> using an <xref:System.Net.IPEndPoint>, a Local IP address and port number, or just a port number.</span></span> <span data-ttu-id="ce75e-105">Укажите <xref:System.Net.IPAddress.Any> для локального IP-адреса и 0 номер локального порта, если требуется, чтобы у основного поставщика услуг, чтобы назначить эти значения автоматически.</span><span class="sxs-lookup"><span data-stu-id="ce75e-105">Specify <xref:System.Net.IPAddress.Any> for the local IP address and 0 for the local port number if you want the underlying service provider to assign those values for you.</span></span> <span data-ttu-id="ce75e-106">Если вы решили сделать это, можно использовать <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> свойство для идентификации связанных сведений, после подключения сокета.</span><span class="sxs-lookup"><span data-stu-id="ce75e-106">If you choose to do this, you can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the assigned information, after the socket has connected.</span></span>  
  
 <span data-ttu-id="ce75e-107">Используйте <xref:System.Net.Sockets.TcpListener.Start%2A> метод, чтобы начать прослушивание входящих запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-107">Use the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests.</span></span> <span data-ttu-id="ce75e-108"><xref:System.Net.Sockets.TcpListener.Start%2A> очередь входящих подключений до вызова <xref:System.Net.Sockets.TcpListener.Stop%2A> метода или он поставил в очередь <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-108"><xref:System.Net.Sockets.TcpListener.Start%2A> will queue incoming connections until you either call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method or it has queued <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span></span> <span data-ttu-id="ce75e-109">Использовать <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> или <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> для приема подключения из входной очереди запросов.</span><span class="sxs-lookup"><span data-stu-id="ce75e-109">Use either <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> to pull a connection from the incoming connection request queue.</span></span> <span data-ttu-id="ce75e-110">Эти два метода будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="ce75e-110">These two methods will block.</span></span> <span data-ttu-id="ce75e-111">Если вы хотите избежать блокирования, можно использовать <xref:System.Net.Sockets.TcpListener.Pending%2A> метод, чтобы определить, если запросы на подключение в очереди.</span><span class="sxs-lookup"><span data-stu-id="ce75e-111">If you want to avoid blocking, you can use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method first to determine if connection requests are available in the queue.</span></span>  
  
 <span data-ttu-id="ce75e-112">Вызовите <xref:System.Net.Sockets.TcpListener.Stop%2A> метод для закрытия <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-112">Call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-113"><xref:System.Net.Sockets.TcpListener.Stop%2A> Метод не закрывает все допустимые подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-113">The <xref:System.Net.Sockets.TcpListener.Stop%2A> method does not close any accepted connections.</span></span> <span data-ttu-id="ce75e-114">Вы отвечаете за закрытие их отдельно.</span><span class="sxs-lookup"><span data-stu-id="ce75e-114">You are responsible for closing these separately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-115">В следующем примере кода создается <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-115">The following code example creates a <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 <span data-ttu-id="ce75e-116">См. в разделе <xref:System.Net.Sockets.TcpClient> пример для клиента.</span><span class="sxs-lookup"><span data-stu-id="ce75e-116">See <xref:System.Net.Sockets.TcpClient> for a client example.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="ce75e-117">Чтобы установить исходящее подключение, или принять входящий запрос.</span><span class="sxs-lookup"><span data-stu-id="ce75e-117">to establish an outgoing connection or accept an incoming request.</span></span></permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce75e-118">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-118">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use TcpListener (IPAddress address, int port) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use TcpListener(IPAddress localaddr, int port).")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="ce75e-119">Порт, на котором производится ожидание входящих попыток подключений.</span><span class="sxs-lookup"><span data-stu-id="ce75e-119">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="ce75e-120">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.TcpListener" />, который ожидает передачу данных для указанного порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-121">Этот конструктор является устаревшим.</span><span class="sxs-lookup"><span data-stu-id="ce75e-121">This constructor is obsolete.</span></span> <span data-ttu-id="ce75e-122">Используйте <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> или <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> конструкторы.</span><span class="sxs-lookup"><span data-stu-id="ce75e-122">Use the <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructors.</span></span>  
  
 <span data-ttu-id="ce75e-123">Этот конструктор позволяет указать номер порта, на котором производится ожидание входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-123">This constructor allows you to specify the port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="ce75e-124">В этом конструкторе основному поставщику услуг назначает наиболее подходящий сетевой адрес.</span><span class="sxs-lookup"><span data-stu-id="ce75e-124">With this constructor, the underlying service provider assigns the most appropriate network address.</span></span> <span data-ttu-id="ce75e-125">Если неважно, какой локальный порт используется, можно указать 0 для номера порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-125">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="ce75e-126">В этом случае поставщик услуг назначит доступный временный номер порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-126">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="ce75e-127">При использовании этого подхода, можно выяснить, какой локальный сетевой адрес и номер порта присвоены с помощью <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="ce75e-127">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="ce75e-128">Вызовите <xref:System.Net.Sockets.TcpListener.Start%2A> метод, чтобы начать прослушивание входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-128">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-129">В следующем примере кода создается <xref:System.Net.Sockets.TcpListener> с использованием номера локального порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-129">The following code example creates a <xref:System.Net.Sockets.TcpListener> using a local port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce75e-130">Значение параметра <paramref name="port" /> не находится в диапазоне между значениями <see cref="F:System.Net.IPEndPoint.MinPort" /> и <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-130"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="ce75e-131">Объект <see cref="T:System.Net.IPEndPoint" />, представляющий локальную конечную точка, назначенную для связывания со слушателем <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-131">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="ce75e-132">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.TcpListener" /> с заданной локальной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="ce75e-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-133">Этот конструктор позволяет указать локальный IP-адрес и номер порта, на котором производится ожидание входящего подключения попыток.</span><span class="sxs-lookup"><span data-stu-id="ce75e-133">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="ce75e-134">Прежде чем использовать этот конструктор, необходимо создать <xref:System.Net.IPEndPoint> с помощью нужный локальный IP-адрес и порт номер.</span><span class="sxs-lookup"><span data-stu-id="ce75e-134">Before using this constructor, you must create an <xref:System.Net.IPEndPoint> using the desired local IP address and port number.</span></span> <span data-ttu-id="ce75e-135">Передайте этот <xref:System.Net.IPEndPoint> в конструктор в качестве `localEP` параметра.</span><span class="sxs-lookup"><span data-stu-id="ce75e-135">Pass this <xref:System.Net.IPEndPoint> to the constructor as the `localEP` parameter.</span></span>  
  
 <span data-ttu-id="ce75e-136">Если неважно, какой локальный адрес назначен, вы можете создать <xref:System.Net.IPEndPoint> с помощью <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> параметр address, а базовая служба поставщика будет назначать наиболее подходящий сетевой адрес.</span><span class="sxs-lookup"><span data-stu-id="ce75e-136">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="ce75e-137">Это поможет упростить приложение, если у вас есть несколько сетевых интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="ce75e-137">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="ce75e-138">Если неважно, какой локальный порт используется, можно создать <xref:System.Net.IPEndPoint> используется значение 0 для номера порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-138">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="ce75e-139">В этом случае поставщик услуг назначит доступный временный номер порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-139">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="ce75e-140">При использовании этого подхода, можно выяснить, какой локальный сетевой адрес и номер порта присвоены с помощью <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="ce75e-140">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="ce75e-141">Вызовите <xref:System.Net.Sockets.TcpListener.Start%2A> метод, чтобы начать прослушивание входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-141">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-142">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-142">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-143">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-143">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-144">В следующем примере кода создается экземпляр <xref:System.Net.Sockets.TcpListener> класса с помощью локальной конечной точке.</span><span class="sxs-lookup"><span data-stu-id="ce75e-144">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using the local endpoint.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce75e-145">Свойство <paramref name="localEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-145"><paramref name="localEP" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPAddress localaddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress localaddr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localaddr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPAddress ^ localaddr, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPAddress * int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener (localaddr, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localaddr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localaddr"><span data-ttu-id="ce75e-146">Объект <see cref="T:System.Net.IPAddress" />, представляющий локальный IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="ce75e-146">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address.</span></span></param>
        <param name="port"><span data-ttu-id="ce75e-147">Порт, на котором производится ожидание входящих попыток подключений.</span><span class="sxs-lookup"><span data-stu-id="ce75e-147">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="ce75e-148">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.TcpListener" />, который выполняет ожидание входящих попыток подключения для заданных локального IP-адреса и номера локального порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-148">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-149">Этот конструктор позволяет указать локальный IP-адрес и номер порта, на котором производится ожидание входящего подключения попыток.</span><span class="sxs-lookup"><span data-stu-id="ce75e-149">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="ce75e-150">Перед вызовом этого конструктора необходимо сначала создать <xref:System.Net.IPAddress> с помощью необходимый локальный адрес.</span><span class="sxs-lookup"><span data-stu-id="ce75e-150">Before calling this constructor you must first create an <xref:System.Net.IPAddress> using the desired local address.</span></span> <span data-ttu-id="ce75e-151">Передайте этот <xref:System.Net.IPAddress> в конструктор в качестве `localaddr` параметра.</span><span class="sxs-lookup"><span data-stu-id="ce75e-151">Pass this <xref:System.Net.IPAddress> to the constructor as the `localaddr` parameter.</span></span> <span data-ttu-id="ce75e-152">Если неважно, какой локальный адрес назначен, укажите <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> для `localaddr` параметра и основному поставщику услуг назначит наиболее подходящий сетевой адрес.</span><span class="sxs-lookup"><span data-stu-id="ce75e-152">If you do not care which local address is assigned, specify <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> for the `localaddr` parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="ce75e-153">Это поможет упростить приложение, если у вас есть несколько сетевых интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="ce75e-153">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="ce75e-154">Если неважно, какой локальный порт используется, можно указать 0 для номера порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-154">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="ce75e-155">В этом случае поставщик услуг назначит доступный номер порта от 1024 до 5000.</span><span class="sxs-lookup"><span data-stu-id="ce75e-155">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span> <span data-ttu-id="ce75e-156">При использовании этого подхода, можно выяснить, какой локальный сетевой адрес и номер порта присвоены с помощью <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="ce75e-156">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="ce75e-157">Вызовите <xref:System.Net.Sockets.TcpListener.Start%2A> метод, чтобы начать прослушивание входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-157">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-158">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-158">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-159">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-159">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-160">В следующем примере кода создается экземпляр <xref:System.Net.Sockets.TcpListener> класса, используя локальный IP-адрес и порт номер.</span><span class="sxs-lookup"><span data-stu-id="ce75e-160">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using a local IP address and port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce75e-161">Свойство <paramref name="localaddr" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-161"><paramref name="localaddr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce75e-162">Значение параметра <paramref name="port" /> не находится в диапазоне между значениями <see cref="F:System.Net.IPEndPoint.MinPort" /> и <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-162"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket AcceptSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocket () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ AcceptSocket();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocket : unit -&gt; System.Net.Sockets.Socket" Usage="tcpListener.AcceptSocket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce75e-163">Принимает ожидающий запрос на подключение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-163">Accepts a pending connection request.</span></span></summary>
        <returns><span data-ttu-id="ce75e-164">Объект <see cref="T:System.Net.Sockets.Socket" />, используемый для приема и передачи данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-164">A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> — Это блокирующий метод, возвращающий <xref:System.Net.Sockets.Socket> можно использовать для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> is a blocking method that returns a <xref:System.Net.Sockets.Socket> that you can use to send and receive data.</span></span> <span data-ttu-id="ce75e-166">Если вы хотите избежать блокирования, используйте <xref:System.Net.Sockets.TcpListener.Pending%2A> метод, чтобы определить, если запросы на подключение будут доступны в очереди входящих подключений.</span><span class="sxs-lookup"><span data-stu-id="ce75e-166">If you want to avoid blocking, use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue.</span></span>  
  
 <span data-ttu-id="ce75e-167"><xref:System.Net.Sockets.Socket> Возвращается инициализируется с помощью IP-адреса и порта удаленного узла, номер.</span><span class="sxs-lookup"><span data-stu-id="ce75e-167">The <xref:System.Net.Sockets.Socket> returned is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="ce75e-168">Можно использовать любой из <xref:System.Net.Sockets.Socket.Send%2A> и <xref:System.Net.Sockets.Socket.Receive%2A> методы, доступные в <xref:System.Net.Sockets.Socket> класс для взаимодействия с удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="ce75e-168">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="ce75e-169">При завершении работы с помощью <xref:System.Net.Sockets.Socket>, необходимо вызвать его <xref:System.Net.Sockets.Socket.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-169">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="ce75e-170">Если приложение является относительно простым, рассмотрите возможность использования <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> метод вместо <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-170">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="ce75e-171"><xref:System.Net.Sockets.TcpClient> предоставляет простые методы для отправки и получения данных по сети в синхронном режиме блокировки.</span><span class="sxs-lookup"><span data-stu-id="ce75e-171"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-172">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-172">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-173">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-173">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-174">В следующем примере кода <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> метод используется для возврата <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-174">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method is used to return a <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="ce75e-175">Это <xref:System.Net.Sockets.Socket> используется для связи с вновь подключенными клиентскими.</span><span class="sxs-lookup"><span data-stu-id="ce75e-175">This <xref:System.Net.Sockets.Socket> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ce75e-176">Слушатель не запущен с помощью вызова метода <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-176">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt; AcceptSocketAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.Socket&gt; AcceptSocketAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocketAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocketAsync () As Task(Of Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::Socket ^&gt; ^ AcceptSocketAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocketAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;" Usage="tcpListener.AcceptSocketAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce75e-177">Принимает запрос ожидающего подключения как асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="ce75e-177">Accepts a pending connection request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="ce75e-178">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-178">Returns <see cref="T:System.Threading.Tasks.Task`1" /></span></span>  
  
<span data-ttu-id="ce75e-179">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="ce75e-179">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="ce75e-180">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.Net.Sockets.Socket" />, используемый для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-180">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-181">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="ce75e-181">This operation will not block.</span></span> <span data-ttu-id="ce75e-182">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет завершена после принятия подключение через сокет.</span><span class="sxs-lookup"><span data-stu-id="ce75e-182">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the socket connection has been accepted.</span></span>  
  
 <span data-ttu-id="ce75e-183"><xref:System.Net.Sockets.Socket> Возвращаются в <xref:System.Threading.Tasks.Task%601> инициализируется с помощью IP-адреса и порта удаленного узла, номер.</span><span class="sxs-lookup"><span data-stu-id="ce75e-183">The <xref:System.Net.Sockets.Socket> returned in <xref:System.Threading.Tasks.Task%601> is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="ce75e-184">Можно использовать любой из <xref:System.Net.Sockets.Socket.Send%2A> и <xref:System.Net.Sockets.Socket.Receive%2A> методы, доступные в <xref:System.Net.Sockets.Socket> класс для взаимодействия с удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="ce75e-184">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="ce75e-185">При завершении работы с помощью <xref:System.Net.Sockets.Socket>, необходимо вызвать его <xref:System.Net.Sockets.Socket.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-185">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="ce75e-186">Если приложение является относительно простым, рассмотрите возможность использования <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> метод вместо <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-186">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> method.</span></span> <span data-ttu-id="ce75e-187"><xref:System.Net.Sockets.TcpClient> предоставляет простые методы для отправки и получения данных по сети в синхронном режиме блокировки.</span><span class="sxs-lookup"><span data-stu-id="ce75e-187"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-188">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-188">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-189">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-189">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ce75e-190">Слушатель не запущен с помощью вызова метода <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-190">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient AcceptTcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient AcceptTcpClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClient () As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ AcceptTcpClient();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClient : unit -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.AcceptTcpClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce75e-191">Принимает ожидающий запрос на подключение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-191">Accepts a pending connection request.</span></span></summary>
        <returns><span data-ttu-id="ce75e-192">Объект <see cref="T:System.Net.Sockets.TcpClient" />, используемый для приема и передачи данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-192">A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-193"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> — Это блокирующий метод, возвращающий <xref:System.Net.Sockets.TcpClient> можно использовать для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-193"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> is a blocking method that returns a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="ce75e-194">Используйте <xref:System.Net.Sockets.TcpListener.Pending%2A> метод, чтобы определить, если запросы на подключение доступны в очереди входящих подключений, если вы хотите избежать блокирования.</span><span class="sxs-lookup"><span data-stu-id="ce75e-194">Use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue if you want to avoid blocking.</span></span>  
  
 <span data-ttu-id="ce75e-195">Используйте <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> метод, чтобы получить основной <xref:System.Net.Sockets.NetworkStream> возвращаемого <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-195">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="ce75e-196"><xref:System.Net.Sockets.NetworkStream> Предоставит вам методы для отправки и получения с удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="ce75e-196">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="ce75e-197">После завершения с <xref:System.Net.Sockets.TcpClient>, необходимо вызвать его <xref:System.Net.Sockets.TcpClient.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-197">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="ce75e-198">Если вы хотите, чтобы большую гибкость, чем <xref:System.Net.Sockets.TcpClient> предложений, рассмотрите возможность использования <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-198">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-199">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-199">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-200">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-201">В следующем примере кода <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> метод используется для возврата <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-201">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is used to return a <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="ce75e-202">Это <xref:System.Net.Sockets.TcpClient> используется для связи с вновь подключенными клиентскими.</span><span class="sxs-lookup"><span data-stu-id="ce75e-202">This <xref:System.Net.Sockets.TcpClient> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListenerExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListenerExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListenerExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListenerExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListenerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListenerExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ce75e-203">Слушатель не запущен с помощью вызова метода <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-203">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="ce75e-204">Для получения кода ошибки можно воспользоваться свойством <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-204">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="ce75e-205">Получив этот код, можно обратиться за подробным описанием ошибки к документации <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Коды ошибок API для сокетов Windows версии 2</see>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-205">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClientAsync () As Task(Of TcpClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::TcpClient ^&gt; ^ AcceptTcpClientAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClientAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;" Usage="tcpListener.AcceptTcpClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce75e-206">Принимает запрос ожидающего подключения как асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="ce75e-206">Accepts a pending connection request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="ce75e-207">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-207">Returns <see cref="T:System.Threading.Tasks.Task`1" /></span></span>  
  
<span data-ttu-id="ce75e-208">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="ce75e-208">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="ce75e-209">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.Net.Sockets.TcpClient" />, используемый для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-209">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-210">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="ce75e-210">This operation will not block.</span></span> <span data-ttu-id="ce75e-211">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта завершится после подтверждения TCP-соединение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-211">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the TCP connection has been accepted.</span></span>  
  
 <span data-ttu-id="ce75e-212">Используйте <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> метод, чтобы получить основной <xref:System.Net.Sockets.NetworkStream> возвращаемого <xref:System.Net.Sockets.TcpClient> в <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-212">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient> in the <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="ce75e-213"><xref:System.Net.Sockets.NetworkStream> Предоставит вам методы для отправки и получения с удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="ce75e-213">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="ce75e-214">После завершения с <xref:System.Net.Sockets.TcpClient>, необходимо вызвать его <xref:System.Net.Sockets.TcpClient.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-214">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="ce75e-215">Если вы хотите, чтобы большую гибкость, чем <xref:System.Net.Sockets.TcpClient> предложений, рассмотрите возможность использования <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> или <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-215">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-216">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-216">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-217">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-217">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ce75e-218">Слушатель не запущен с помощью вызова метода <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-218">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="ce75e-219">Для получения кода ошибки можно воспользоваться свойством <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-219">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="ce75e-220">Получив этот код, можно обратиться за подробным описанием ошибки к документации <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Коды ошибок API для сокетов Windows версии 2</see>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-220">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Active" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool" Usage="System.Net.Sockets.TcpListener.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce75e-221">Получает значение, указывающее, является ли активным объект <see cref="T:System.Net.Sockets.TcpListener" />, выполняющий прослушивание клиентских подключений.</span><span class="sxs-lookup"><span data-stu-id="ce75e-221">Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</span></span></summary>
        <value><span data-ttu-id="ce75e-222">Значение <see langword="true" />, если прослушивающий объект <see cref="T:System.Net.Sockets.TcpListener" /> активен; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-222"><see langword="true" /> if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-223">Классы, производные от <xref:System.Net.Sockets.TcpListener> это свойство можно использовать для определения <xref:System.Net.Sockets.Socket> в настоящий момент ожидает входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-223">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to determine if the <xref:System.Net.Sockets.Socket> is currently listening for incoming connection attempts.</span></span> <span data-ttu-id="ce75e-224"><xref:System.Net.Sockets.TcpClient.Active%2A> Свойство может использоваться, чтобы избежать избыточного <xref:System.Net.Sockets.TcpListener.Start%2A> попыток.</span><span class="sxs-lookup"><span data-stu-id="ce75e-224">The <xref:System.Net.Sockets.TcpClient.Active%2A> property can be used to avoid redundant <xref:System.Net.Sockets.TcpListener.Start%2A> attempts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="tcpListener.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed"><span data-ttu-id="ce75e-225">Логическое значение, указывающее, что надо включить или выключить обход NAT.</span><span class="sxs-lookup"><span data-stu-id="ce75e-225">A Boolean value that specifies whether to enable or disable NAT traversal.</span></span></param>
        <summary><span data-ttu-id="ce75e-226">Включает или отключает обход механизма преобразования сетевых адресов (NAT) для экземпляра <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-226">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-227"><xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> Метод используется для включения или отключения обхода NAT для <xref:System.Net.Sockets.TcpListener> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ce75e-227">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span> <span data-ttu-id="ce75e-228">Обход NAT может предоставляться с помощью Teredo, 6to4 или туннель ISATAP.</span><span class="sxs-lookup"><span data-stu-id="ce75e-228">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="ce75e-229">Когда `allowed` параметр имеет значение false, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> на связанного сокета включен режим <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-229">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="ce75e-230">Это явно отключает обхода NAT для <xref:System.Net.Sockets.TcpListener> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="ce75e-230">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span>  
  
 <span data-ttu-id="ce75e-231">Когда `allowed` параметр имеет значение true, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> на связанного сокета включен режим <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-231">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="ce75e-232">Это может позволить обойти NAT для <xref:System.Net.Sockets.TcpListener> в зависимости от правил брандмауэра на месте в системе.</span><span class="sxs-lookup"><span data-stu-id="ce75e-232">This may allow NAT traversal for a <xref:System.Net.Sockets.TcpListener> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="ce75e-233"><xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> Метод должен вызываться до вызова метода <xref:System.Net.Sockets.TcpListener.Start%2A> метод, чтобы начать прослушивание входящих запросов на подключение (перед привязкой сокет).</span><span class="sxs-lookup"><span data-stu-id="ce75e-233">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method must be invoked prior to calling the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests (before the socket is bound).</span></span> <span data-ttu-id="ce75e-234">Если <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> был вызван после <xref:System.Net.Sockets.TcpListener.Start%2A> метод, а затем <xref:System.InvalidOperationException> будет создано.</span><span class="sxs-lookup"><span data-stu-id="ce75e-234">If <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is called after the <xref:System.Net.Sockets.TcpListener.Start%2A> method, then an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="ce75e-235">Адрес Teredo — IPv6-адрес с префиксом 2001:: / 32.</span><span class="sxs-lookup"><span data-stu-id="ce75e-235">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="ce75e-236">Адреса Teredo может быть возвращенные с помощью обычного разрешения имен DNS или перечислены как IPv6-адрес локального интерфейса.</span><span class="sxs-lookup"><span data-stu-id="ce75e-236">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ce75e-237">Метод <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> был вызван после метода <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-237">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</span></span></exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptSocket">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptSocket (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptSocket(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptSocket (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptSocket(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptSocket : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptSocket (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ce75e-238">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="ce75e-238">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="ce75e-239">Пользовательский объект, содержащий информацию о данной операции принятия запроса на подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-239">A user-defined object containing information about the accept operation.</span></span> <span data-ttu-id="ce75e-240">Этот объект передается делегату <paramref name="callback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="ce75e-240">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="ce75e-241">Начинает асинхронную операцию, чтобы принять попытку входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-241">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="ce75e-242">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное создание объекта <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-242">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-243">Асинхронный <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> операция должна быть завершена путем вызова <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-243">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method.</span></span> <span data-ttu-id="ce75e-244">Как правило, вызывается метод `callback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="ce75e-244">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="ce75e-245">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="ce75e-245">This method does not block until the operation completes.</span></span> <span data-ttu-id="ce75e-246">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-246">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
 <span data-ttu-id="ce75e-247">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-247">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-248">Можно вызвать <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> свойства возвращаемого <xref:System.Net.Sockets.Socket> для идентификации удаленный узел сети адрес и номер порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-248">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-249">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> свойство для получения конкретного кода ошибки и обратитесь к документации Windows Socket версии 2 API ошибки кода в библиотеке MSDN по адресу [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) для подробных сведений Описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="ce75e-249">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-250">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-250">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-251">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-251">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-252">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> метод для создания и подключения сокета.</span><span class="sxs-lookup"><span data-stu-id="ce75e-252">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="ce75e-253">Вызывает делегат обратного вызова <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> для завершения асинхронного запроса.</span><span class="sxs-lookup"><span data-stu-id="ce75e-253">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="ce75e-254">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="ce75e-254">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ce75e-255"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="ce75e-255">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptTcpClient">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptTcpClient (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptTcpClient(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptTcpClient (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptTcpClient(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptTcpClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptTcpClient (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ce75e-256">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="ce75e-256">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="ce75e-257">Пользовательский объект, содержащий информацию о данной операции принятия запроса на подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-257">A user-defined object containing information about the accept operation.</span></span> <span data-ttu-id="ce75e-258">Этот объект передается делегату <paramref name="callback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="ce75e-258">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="ce75e-259">Начинает асинхронную операцию, чтобы принять попытку входящего подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-259">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="ce75e-260">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронное создание объекта <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-260">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-261">Асинхронный <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> операция должна быть завершена путем вызова <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-261">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method.</span></span> <span data-ttu-id="ce75e-262">Как правило, вызывается метод `callback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="ce75e-262">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="ce75e-263">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="ce75e-263">This method does not block until the operation completes.</span></span> <span data-ttu-id="ce75e-264">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-264">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
 <span data-ttu-id="ce75e-265">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-265">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-266">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> свойство для получения конкретного кода ошибки и обратитесь к документации Windows Socket версии 2 API ошибки кода в библиотеке MSDN по адресу [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) для подробных сведений Описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="ce75e-266">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-267">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-267">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-268">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-268">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-269">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> метод для создания и подключения сокета.</span><span class="sxs-lookup"><span data-stu-id="ce75e-269">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="ce75e-270">Вызывает делегат обратного вызова <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> для завершения асинхронного запроса.</span><span class="sxs-lookup"><span data-stu-id="ce75e-270">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="ce75e-271">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="ce75e-271">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ce75e-272"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="ce75e-272">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Sockets.TcpListener Create (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Sockets.TcpListener Create(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (port As Integer) As TcpListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Sockets::TcpListener ^ Create(int port);" />
      <MemberSignature Language="F#" Value="static member Create : int -&gt; System.Net.Sockets.TcpListener" Usage="System.Net.Sockets.TcpListener.Create port" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="ce75e-273">Порт, на котором производится ожидание входящих попыток подключений.</span><span class="sxs-lookup"><span data-stu-id="ce75e-273">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="ce75e-274">Создает Новый экземпляр <see cref="T:System.Net.Sockets.TcpListener" />, который должен прослушивать на определенном порту.</span><span class="sxs-lookup"><span data-stu-id="ce75e-274">Creates a new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span></span></summary>
        <returns><span data-ttu-id="ce75e-275">Возвращает <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-275">Returns <see cref="T:System.Net.Sockets.TcpListener" />.</span></span>  
  
<span data-ttu-id="ce75e-276">Новый экземпляр <see cref="T:System.Net.Sockets.TcpListener" />, который должен прослушивать на определенном порту.</span><span class="sxs-lookup"><span data-stu-id="ce75e-276">A new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAcceptSocket (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAcceptSocket(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptSocket (asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAcceptSocket(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptSocket : IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="tcpListener.EndAcceptSocket asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ce75e-277">Объект <see cref="T:System.IAsyncResult" /> возвращен посредством вызова метода <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-277">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="ce75e-278">Асинхронно принимает входящие попытки подключения и создает новый объект <see cref="T:System.Net.Sockets.Socket" /> для связи с удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="ce75e-278">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="ce75e-279">Объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-279">A <see cref="T:System.Net.Sockets.Socket" />.</span></span>  
  
<span data-ttu-id="ce75e-280">Объект <see cref="T:System.Net.Sockets.Socket" />, используемый для приема и передачи данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-280">The <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-281">Этот метод блокируется до ее завершения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-281">This method blocks until the operation is complete.</span></span> <span data-ttu-id="ce75e-282">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-282">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-283">Можно вызвать <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> свойства возвращаемого <xref:System.Net.Sockets.Socket> для идентификации удаленный узел сети адрес и номер порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-283">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-284">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> свойство для получения конкретного кода ошибки и обратитесь к документации Windows Socket версии 2 API ошибки кода в библиотеке MSDN по адресу [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) для подробных сведений Описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="ce75e-284">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-285">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-285">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-286">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-286">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-287">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> метод для создания и подключения сокета.</span><span class="sxs-lookup"><span data-stu-id="ce75e-287">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="ce75e-288">Вызывает делегат обратного вызова <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> для завершения асинхронного запроса.</span><span class="sxs-lookup"><span data-stu-id="ce75e-288">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ce75e-289">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="ce75e-289">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce75e-290">Параметр <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-290">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce75e-291">Значение параметра <paramref name="asyncResult" /> не было создано при вызове метода <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-291">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ce75e-292">Был ранее вызван метод <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-292">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="ce75e-293">Произошла ошибка при попытке доступа к объекту <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-293">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient EndAcceptTcpClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient EndAcceptTcpClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptTcpClient (asyncResult As IAsyncResult) As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ EndAcceptTcpClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptTcpClient : IAsyncResult -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.EndAcceptTcpClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ce75e-294">Объект <see cref="T:System.IAsyncResult" /> возвращен посредством вызова метода <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-294">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="ce75e-295">Асинхронно принимает входящие попытки подключения и создает новый объект <see cref="T:System.Net.Sockets.TcpClient" /> для связи с удаленным узлом.</span><span class="sxs-lookup"><span data-stu-id="ce75e-295">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="ce75e-296">Объект <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-296">A <see cref="T:System.Net.Sockets.TcpClient" />.</span></span>  
  
<span data-ttu-id="ce75e-297">Объект <see cref="T:System.Net.Sockets.TcpClient" />, используемый для приема и передачи данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-297">The <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-298">Этот метод блокируется до ее завершения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-298">This method blocks until the operation is complete.</span></span> <span data-ttu-id="ce75e-299">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-299">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-300">Можно вызвать <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> свойство основного сокета (<xref:System.Net.Sockets.TcpClient.Client%2A>) для идентификации удаленный узел сети адрес и номер порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-300">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the underlying socket (<xref:System.Net.Sockets.TcpClient.Client%2A>) to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-301">Если вы получили <xref:System.Net.Sockets.SocketException>, использовать <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> свойство для получения конкретного кода ошибки и обратитесь к документации Windows Socket версии 2 API ошибки кода в библиотеке MSDN по адресу [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) для подробных сведений Описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="ce75e-301">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-302">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-302">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-303">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-303">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-304">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> метод для создания и подключения сокета.</span><span class="sxs-lookup"><span data-stu-id="ce75e-304">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="ce75e-305">Вызывает делегат обратного вызова <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> для завершения асинхронного запроса.</span><span class="sxs-lookup"><span data-stu-id="ce75e-305">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce75e-306">Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, позволяет ли объект <see cref="T:System.Net.Sockets.TcpListener" /> осуществлять ожидание передачи данных только на одном основном сокете на указанном порту.</span><span class="sxs-lookup"><span data-stu-id="ce75e-306">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</span></span></summary>
        <value><span data-ttu-id="ce75e-307">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.TcpListener" /> разрешает осуществлять ожидание передачи данных только на одном объекте <see cref="T:System.Net.Sockets.TcpListener" /> на указанном порту; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-307"><see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ce75e-308">.</span><span class="sxs-lookup"><span data-stu-id="ce75e-308">.</span></span> <span data-ttu-id="ce75e-309">По умолчанию используется значение <see langword="true" /> для Windows Server 2003 и Windows XP с пакетом обновления 2 (SP2) и более поздней версии; для всех остальных версий по умолчанию используется значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-309">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-310">По умолчанию несколько прослушивателей можно прослушивать определенный порт.</span><span class="sxs-lookup"><span data-stu-id="ce75e-310">By default, multiple listeners can listen to a specific port.</span></span> <span data-ttu-id="ce75e-311">Тем не менее только один из прослушивателей, можно выполнить операции на сетевой трафик, отправляемый на порт.</span><span class="sxs-lookup"><span data-stu-id="ce75e-311">However, only one of the listeners can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="ce75e-312">Если несколько прослушивателей пытается выполнить привязку к конкретному порту, с более конкретные IP-адрес обрабатывает сетевой трафик, отправляемый на этот порт.</span><span class="sxs-lookup"><span data-stu-id="ce75e-312">If more than one listener attempts to bind to a particular port, then the one with the more specific IP address handles the network traffic sent to that port.</span></span> <span data-ttu-id="ce75e-313">Можно использовать <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> свойство, чтобы предотвратить прослушивание определенного порта несколько прослушивателей.</span><span class="sxs-lookup"><span data-stu-id="ce75e-313">You can use the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property to prevent multiple listeners from listening to a specific port.</span></span>  
  
 <span data-ttu-id="ce75e-314">Задайте это свойство перед вызовом <xref:System.Net.Sockets.TcpListener.Start%2A>, или вызвать <xref:System.Net.Sockets.TcpListener.Stop%2A> метод и задайте для этого свойства.</span><span class="sxs-lookup"><span data-stu-id="ce75e-314">Set this property before calling <xref:System.Net.Sockets.TcpListener.Start%2A>, or call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method and then set this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-315">В следующем примере кода возвращает и задает <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="ce75e-315">The following code example gets and sets the <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#2)]
 [!code-vb[System.Net.Sockets.TcpListener1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ce75e-316">Объект <see cref="T:System.Net.Sockets.TcpListener" /> запущен.</span><span class="sxs-lookup"><span data-stu-id="ce75e-316">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started.</span></span> <span data-ttu-id="ce75e-317">Вызовите метод <see cref="M:System.Net.Sockets.TcpListener.Stop" />, а затем задайте свойство <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-317">Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="ce75e-318">Произошла ошибка при попытке доступа к основному сокету.</span><span class="sxs-lookup"><span data-stu-id="ce75e-318">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ce75e-319">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="ce75e-319">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpListener ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpListener.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce75e-320">Освобождает ресурсы, используемые классом <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-320">Frees resources used by the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="ce75e-321"><xref:System.Net.Sockets.TcpListener> Класса метода завершения бесплатные ресурсы, связанные с <xref:System.Net.Sockets.TcpListener> экземпляр.</span><span class="sxs-lookup"><span data-stu-id="ce75e-321">The <xref:System.Net.Sockets.TcpListener> class finalizer free resources associated with the <xref:System.Net.Sockets.TcpListener> instance.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalEndpoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndpoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndpoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndpoint : System.Net.EndPoint" Usage="System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce75e-322">Получает основной объект <see cref="T:System.Net.EndPoint" /> для текущего объекта <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-322">Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</span></span></summary>
        <value><span data-ttu-id="ce75e-323">Объект <see cref="T:System.Net.EndPoint" />, с которым связан объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-323">The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-324">Можно использовать <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> свойство для идентификации локальной сетевой интерфейс и номер порта, используемый для прослушивания входящих клиентских запросов на подключение после подключения к сокету.</span><span class="sxs-lookup"><span data-stu-id="ce75e-324">You can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the local network interface and port number being used to listen for incoming client connection requests, after a socket connection has been made.</span></span> <span data-ttu-id="ce75e-325">Необходимо сначала привести <xref:System.Net.EndPoint> для <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-325">You must first cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="ce75e-326">Затем можно вызвать <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> свойство для извлечения локальный IP-адрес и <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> свойства, чтобы получить номер локального порта.</span><span class="sxs-lookup"><span data-stu-id="ce75e-326">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> property to retrieve the local IP address, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> property to retrieve the local port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-327">В следующем примере кода отображает локальный IP-адреса и порта номер, на котором <xref:System.Net.Sockets.TcpListener> прослушивание входящих запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-327">The following code example displays the local IP address and port number on which the <xref:System.Net.Sockets.TcpListener> is listening for incoming connection requests.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Pending">
      <MemberSignature Language="C#" Value="public bool Pending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Pending() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Pending" />
      <MemberSignature Language="VB.NET" Value="Public Function Pending () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Pending();" />
      <MemberSignature Language="F#" Value="member this.Pending : unit -&gt; bool" Usage="tcpListener.Pending " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce75e-328">Определяет, имеются ли ожидающие запросы на подключение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-328">Determines if there are pending connection requests.</span></span></summary>
        <returns><span data-ttu-id="ce75e-329">Значение <see langword="true" />, если имеются ожидающие подключения; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-329"><see langword="true" /> if connections are pending; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-330">Этот метод без блокировки определяет, имеются все ожидающие запросы на подключение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-330">This non-blocking method determines if there are any pending connection requests.</span></span> <span data-ttu-id="ce75e-331">Так как <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> и <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> методы блокируются выполнения до <xref:System.Net.Sockets.TcpListener.Start%2A> метод поставил в очередь входящий запрос на подключение, <xref:System.Net.Sockets.TcpListener.Pending%2A> метод может использоваться для определения того, если подключения, прежде чем принять их.</span><span class="sxs-lookup"><span data-stu-id="ce75e-331">Because the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> and <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> methods block execution until the <xref:System.Net.Sockets.TcpListener.Start%2A> method has queued an incoming connection request, the <xref:System.Net.Sockets.TcpListener.Pending%2A> method can be used to determine if connections are available before attempting to accept them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-332">В следующем примере кода в примере выполняется проверка <xref:System.Net.Sockets.TcpListener.Pending%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-332">The following code example checks the <xref:System.Net.Sockets.TcpListener.Pending%2A> method.</span></span> <span data-ttu-id="ce75e-333">Если запрос на подключение ожидает был принят, затем вызов <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="ce75e-333">If a connection request is waiting to be accepted, then a call to the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is made.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ce75e-334">Слушатель не запущен с помощью вызова метода <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-334">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Server" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Server { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Net.Sockets.Socket" Usage="System.Net.Sockets.TcpListener.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce75e-335">Получает основной сетевой объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-335">Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="ce75e-336">Базовый объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-336">The underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-337"><xref:System.Net.Sockets.TcpListener> Создает <xref:System.Net.Sockets.Socket> для прослушивания входящих клиентских запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-337"><xref:System.Net.Sockets.TcpListener> creates a <xref:System.Net.Sockets.Socket> to listen for incoming client connection requests.</span></span> <span data-ttu-id="ce75e-338">Классы, производные от <xref:System.Net.Sockets.TcpListener> это свойство можно использовать для получения этого <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-338">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to get this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="ce75e-339">Используйте основной <xref:System.Net.Sockets.Socket> возвращаемые <xref:System.Net.Sockets.TcpListener.Server%2A> свойство, если требуется доступа, чем, который <xref:System.Net.Sockets.TcpListener> предоставляет.</span><span class="sxs-lookup"><span data-stu-id="ce75e-339">Use the underlying <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpListener.Server%2A> property if you require access beyond that which <xref:System.Net.Sockets.TcpListener> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-340"><xref:System.Net.Sockets.TcpListener.Server%2A> Свойство возвращает только <xref:System.Net.Sockets.Socket> использовать для прослушивания входящих клиентских запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-340">The <xref:System.Net.Sockets.TcpListener.Server%2A> property only returns the <xref:System.Net.Sockets.Socket> used to listen for incoming client connection requests.</span></span> <span data-ttu-id="ce75e-341">Используйте <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> метод, чтобы принять ожидающий запрос на подключение и получить <xref:System.Net.Sockets.Socket> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-341">Use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.Socket> for sending and receiving data.</span></span> <span data-ttu-id="ce75e-342">Можно также использовать <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> метод, чтобы принять ожидающий запрос на подключение и получить <xref:System.Net.Sockets.TcpClient> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-342">You can also use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.TcpClient> for sending and receiving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-343">В следующем примере кода демонстрируется использование <xref:System.Net.Sockets.TcpListener.Server%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="ce75e-343">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.Server%2A> property.</span></span> <span data-ttu-id="ce75e-344">Базовый <xref:System.Net.Sockets.Socket> извлекается и <xref:System.Net.Sockets.SocketOptionName.Linger> <xref:System.Net.Sockets.Socket> параметр настроен на время ожидания через 10 секунд, если данные по-прежнему остаются в сетевом буфере после закрытия соединения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-344">The underlying <xref:System.Net.Sockets.Socket> is retrieved and the <xref:System.Net.Sockets.SocketOptionName.Linger><xref:System.Net.Sockets.Socket> option is configured to time out after 10 seconds if data still remains in the network buffer after the connection is closed.</span></span>  
  
 [!code-csharp[TcpListenerProtectedMembers1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListenerProtectedMembers1/CS/source.cs#1)]
 [!code-vb[TcpListenerProtectedMembers1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListenerProtectedMembers1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce75e-345">Запускает ожидание входящих запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-345">Starts listening for incoming connection requests.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="tcpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce75e-346">Запускает ожидание входящих запросов на подключение.</span><span class="sxs-lookup"><span data-stu-id="ce75e-346">Starts listening for incoming connection requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-347"><xref:System.Net.Sockets.TcpListener.Start%2A> Метод инициализирует базовый <xref:System.Net.Sockets.Socket>, привязывает его к локальной конечной точки и ожидает передачи входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-347">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="ce75e-348">Если поступает запрос на подключение, <xref:System.Net.Sockets.TcpListener.Start%2A> будет в очередь запрос и продолжит ожидание дополнительные запросы, пока не будет вызван метод <xref:System.Net.Sockets.TcpListener.Stop%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-348">If a connection request is received, the <xref:System.Net.Sockets.TcpListener.Start%2A> method will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="ce75e-349">Если <xref:System.Net.Sockets.TcpListener> получает запрос на подключение после его в очереди уже имеется максимальное число подключений, возникнет исключение <xref:System.Net.Sockets.SocketException> на стороне клиента.</span><span class="sxs-lookup"><span data-stu-id="ce75e-349">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections, it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="ce75e-350">Чтобы удалить подключение из входной очереди, используйте <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> метод или <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-350">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="ce75e-351"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> Метод удаляет соединение из очереди и возвращать <xref:System.Net.Sockets.TcpClient> можно использовать для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-351">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="ce75e-352"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> Метод возвратит <xref:System.Net.Sockets.Socket> можно использовать те же возможности.</span><span class="sxs-lookup"><span data-stu-id="ce75e-352">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="ce75e-353">Если приложению требуется только синхронный ввод-вывод, используйте <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-353">If your application only requires synchronous I/O, use <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="ce75e-354">Для детального контроля поведения используйте <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-354">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span> <span data-ttu-id="ce75e-355">Оба эти метода блокировать выполнение до запроса на подключение в очереди.</span><span class="sxs-lookup"><span data-stu-id="ce75e-355">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="ce75e-356">Используйте <xref:System.Net.Sockets.TcpListener.Stop%2A> метод для закрытия <xref:System.Net.Sockets.TcpListener> и прекратить прослушивание.</span><span class="sxs-lookup"><span data-stu-id="ce75e-356">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="ce75e-357">Вы отвечаете за закрытие подключений принятые отдельно.</span><span class="sxs-lookup"><span data-stu-id="ce75e-357">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-358">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-358">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-359">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-359">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-360">В следующем примере кода показано, как <xref:System.Net.Sockets.TcpListener.Start%2A> используется для прослушивания входящих попыток клиентских подключений.</span><span class="sxs-lookup"><span data-stu-id="ce75e-360">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="ce75e-361">Для получения кода ошибки можно воспользоваться свойством <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-361">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="ce75e-362">Получив этот код, можно обратиться за подробным описанием ошибки к документации <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Коды ошибок API для сокетов Windows версии 2</see>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-362">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(int backlog);" />
      <MemberSignature Language="F#" Value="member this.Start : int -&gt; unit" Usage="tcpListener.Start backlog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="backlog"><span data-ttu-id="ce75e-363">Максимальная длина очереди ожидающих подключений.</span><span class="sxs-lookup"><span data-stu-id="ce75e-363">The maximum length of the pending connections queue.</span></span></param>
        <summary><span data-ttu-id="ce75e-364">Запускает ожидание входящих запросов на подключение с максимальным числом ожидающих подключений.</span><span class="sxs-lookup"><span data-stu-id="ce75e-364">Starts listening for incoming connection requests with a maximum number of pending connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-365"><xref:System.Net.Sockets.TcpListener.Start%2A> Метод инициализирует базовый <xref:System.Net.Sockets.Socket>, привязывает его к локальной конечной точки и ожидает передачи входящих попыток подключения.</span><span class="sxs-lookup"><span data-stu-id="ce75e-365">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="ce75e-366">Если поступает запрос на подключение, <xref:System.Net.Sockets.TcpListener.Start%2A> будет ставить в очередь запрос и продолжит ожидание дополнительные запросы, пока не будет вызван <xref:System.Net.Sockets.TcpListener.Stop%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-366">If a connection request is received, <xref:System.Net.Sockets.TcpListener.Start%2A> will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="ce75e-367">Если <xref:System.Net.Sockets.TcpListener> получает запрос на подключение, после его в очереди уже имеется максимальное число подключений, возникнет исключение <xref:System.Net.Sockets.SocketException> на стороне клиента.</span><span class="sxs-lookup"><span data-stu-id="ce75e-367">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="ce75e-368">Чтобы удалить подключение из входной очереди, используйте <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> метод или <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-368">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="ce75e-369"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> Метод удаляет соединение из очереди и возвращать <xref:System.Net.Sockets.TcpClient> можно использовать для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="ce75e-369">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="ce75e-370"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> Метод возвратит <xref:System.Net.Sockets.Socket> можно использовать те же возможности.</span><span class="sxs-lookup"><span data-stu-id="ce75e-370">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="ce75e-371">Если приложению требуется только синхронный ввод-вывод, используйте <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-371">If your application only requires synchronous I/O, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="ce75e-372">Для детального контроля поведения используйте <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ce75e-372">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="ce75e-373">Оба эти метода блокировать выполнение до запроса на подключение в очереди.</span><span class="sxs-lookup"><span data-stu-id="ce75e-373">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="ce75e-374">Используйте <xref:System.Net.Sockets.TcpListener.Stop%2A> метод для закрытия <xref:System.Net.Sockets.TcpListener> и прекратить прослушивание.</span><span class="sxs-lookup"><span data-stu-id="ce75e-374">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="ce75e-375">Вы отвечаете за закрытие подключений принятые отдельно.</span><span class="sxs-lookup"><span data-stu-id="ce75e-375">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-376">Используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> свойство для получения конкретного кода ошибки и обратитесь к документации Windows Socket версии 2 API ошибки кода в библиотеке MSDN по адресу [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) подробное описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="ce75e-376">Use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-377">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-377">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-378">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-378">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-379">В следующем примере кода показано, как <xref:System.Net.Sockets.TcpListener.Start%2A> используется для прослушивания входящих попыток клиентских подключений.</span><span class="sxs-lookup"><span data-stu-id="ce75e-379">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="ce75e-380">Произошла ошибка при получении доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="ce75e-380">An error occurred while accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce75e-381">Значение параметра <paramref name="backlog" /> меньше нуля или превышает максимальное число разрешенных подключений.</span><span class="sxs-lookup"><span data-stu-id="ce75e-381">The <paramref name="backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ce75e-382">Основной объект <see cref="T:System.Net.Sockets.Socket" /> имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="ce75e-382">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="tcpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce75e-383">Закрывает слушатель.</span><span class="sxs-lookup"><span data-stu-id="ce75e-383">Closes the listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce75e-384"><xref:System.Net.Sockets.TcpListener.Stop%2A> Закрывает слушатель.</span><span class="sxs-lookup"><span data-stu-id="ce75e-384"><xref:System.Net.Sockets.TcpListener.Stop%2A> closes the listener.</span></span> <span data-ttu-id="ce75e-385">Запросы на подключение, неподдерживаемого в очереди будут потеряны.</span><span class="sxs-lookup"><span data-stu-id="ce75e-385">Any unaccepted connection requests in the queue will be lost.</span></span> <span data-ttu-id="ce75e-386">Вызывает исключение удаленных узлов, Ожидание подключения был принят <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-386">Remote hosts waiting for a connection to be accepted will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="ce75e-387">Вы отвечаете за закрытие подключений принятые отдельно.</span><span class="sxs-lookup"><span data-stu-id="ce75e-387">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce75e-388">Данный член генерирует сведения трассировки, если в приложении включена трассировка сети.</span><span class="sxs-lookup"><span data-stu-id="ce75e-388">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ce75e-389">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="ce75e-389">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce75e-390">В следующем примере кода показано использование <xref:System.Net.Sockets.TcpListener.Stop%2A> метод для закрытия базового <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-390">The following code example demonstrates using the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="ce75e-391">Для получения кода ошибки можно воспользоваться свойством <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-391">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="ce75e-392">Получив этот код, можно обратиться за подробным описанием ошибки к документации <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Коды ошибок API для сокетов Windows версии 2</see>.</span><span class="sxs-lookup"><span data-stu-id="ce75e-392">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="ce75e-393"><see cref="M:System.Net.Sockets.TcpListener.Stop" /> Метод также закрывает базовый <see cref="T:System.Net.Sockets.Socket" />и создает новый <see cref="T:System.Net.Sockets.Socket" /> для <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-393">The <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method also closes the underlying <see cref="T:System.Net.Sockets.Socket" />, and creates a new <see cref="T:System.Net.Sockets.Socket" /> for the <see cref="T:System.Net.Sockets.TcpListener" />.</span></span> <span data-ttu-id="ce75e-394">Если значение любого свойства для базового <see cref="T:System.Net.Sockets.Socket" /> до вызова метода <see cref="M:System.Net.Sockets.TcpListener.Stop" /> метод, эти свойства будут не переносятся в новый <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="ce75e-394">If you set any properties on the underlying <see cref="T:System.Net.Sockets.Socket" /> prior to calling the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method, those properties will not carry over to the new <see cref="T:System.Net.Sockets.Socket" />.</span></span></para></block>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
  </Members>
</Type>