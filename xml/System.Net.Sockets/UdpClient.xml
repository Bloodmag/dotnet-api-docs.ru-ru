<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2ef52-101">Предоставляет сетевые службы по протоколу UDP (User Datagram Protocol).</span><span class="sxs-lookup"><span data-stu-id="2ef52-101">Provides User Datagram Protocol (UDP) network services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-102"><xref:System.Net.Sockets.UdpClient> Класс предоставляет простые методы для отправки и получения датаграмм UDP без установления соединения в блокирующем синхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="2ef52-103">Поскольку UDP является протоколом без установления соединения транспорта, необязательно для установления подключения к удаленному узлу до отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="2ef52-104">Однако иметь параметр для задания удаленного узла по умолчанию в одном из следующих двух способов:</span><span class="sxs-lookup"><span data-stu-id="2ef52-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="2ef52-105">Создайте экземпляр класса <xref:System.Net.Sockets.UdpClient> класса, используя имя удаленного узла и номер порта в качестве параметров.</span><span class="sxs-lookup"><span data-stu-id="2ef52-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="2ef52-106">Создайте экземпляр класса <xref:System.Net.Sockets.UdpClient> класса, а затем вызвать <xref:System.Net.Sockets.UdpClient.Connect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="2ef52-107">Можно использовать любой из методов передачи, обеспечиваемых <xref:System.Net.Sockets.UdpClient> для отправки данных на удаленном устройстве.</span><span class="sxs-lookup"><span data-stu-id="2ef52-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="2ef52-108">Используйте <xref:System.Net.Sockets.UdpClient.Receive%2A> метод для получения данных с удаленных узлов.</span><span class="sxs-lookup"><span data-stu-id="2ef52-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-109">Не вызывайте <xref:System.Net.Sockets.UdpClient.Send%2A> с использованием имени узла или <xref:System.Net.IPEndPoint> при указании удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="2ef52-110">В противном случае <xref:System.Net.Sockets.UdpClient> вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="2ef52-111"><xref:System.Net.Sockets.UdpClient> методы позволяют отправлять и получать многоадресные датаграммы.</span><span class="sxs-lookup"><span data-stu-id="2ef52-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="2ef52-112">Используйте <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> метод подписаться <xref:System.Net.Sockets.UdpClient> в группу многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="2ef52-113">Используйте <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> метод отказаться <xref:System.Net.Sockets.UdpClient> из группы многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-114">Следующий пример устанавливает <xref:System.Net.Sockets.UdpClient> соединение с использованием имени хоста www.contoso.com на порт 11000.</span><span class="sxs-lookup"><span data-stu-id="2ef52-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name www.contoso.com on port 11000.</span></span> <span data-ttu-id="2ef52-115">Небольшое строковое сообщение отправляется на два отдельных компьютера удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="2ef52-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="2ef52-116"><xref:System.Net.Sockets.UdpClient.Receive%2A> Метод блокирует выполнение, пока не будет получено сообщение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="2ef52-117">С помощью <xref:System.Net.IPEndPoint> передаваемый <xref:System.Net.Sockets.UdpClient.Receive%2A>, выявленной удостоверение узла, отвечает на запросы.</span><span class="sxs-lookup"><span data-stu-id="2ef52-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="2ef52-118">Чтобы установить исходящее соединение или принять входящий запрос.</span><span class="sxs-lookup"><span data-stu-id="2ef52-118">To establish an outgoing connection or accept an incoming request.</span></span></permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ef52-119">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.UdpClient" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-119">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ef52-120">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.UdpClient" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-121">Этот конструктор создает новый <xref:System.Net.Sockets.UdpClient> и позволяет основному поставщику услуг присвоить наиболее подходящий локальный IPv4 адрес и номер порта.</span><span class="sxs-lookup"><span data-stu-id="2ef52-121">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="2ef52-122">Если используется этот конструктор, <xref:System.Net.Sockets.UdpClient> набор экземпляров с семейству адресов IPv4, который не может быть изменен или перезаписана при вызове метода соединение с целевым IPv6.</span><span class="sxs-lookup"><span data-stu-id="2ef52-122">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-123">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-123">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-124">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-124">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2ef52-125">Этот конструктор не годится для объединения группы многоадресной рассылки, так как он не позволяет выполнять привязку сокета.</span><span class="sxs-lookup"><span data-stu-id="2ef52-125">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="2ef52-126">Кроме того он работает только с IPv4-адресами.</span><span class="sxs-lookup"><span data-stu-id="2ef52-126">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-127">Ниже приведен пример, как использовать конструктор по умолчанию для создания экземпляра <xref:System.Net.Sockets.UdpClient> класса.</span><span class="sxs-lookup"><span data-stu-id="2ef52-127">The following example demonstrates how to use the default constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-128">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-128">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="2ef52-129">Номер локального порта, который планируется использовать для связи.</span><span class="sxs-lookup"><span data-stu-id="2ef52-129">The local port number from which you intend to communicate.</span></span></param>
        <summary><span data-ttu-id="2ef52-130">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.UdpClient" /> и связывает его с заданным номером локального порта.</span><span class="sxs-lookup"><span data-stu-id="2ef52-130">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-131">Этот конструктор создает основной <xref:System.Net.Sockets.Socket> и связывает его с номером порта, который предполагается использовать для обмена данными.</span><span class="sxs-lookup"><span data-stu-id="2ef52-131">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="2ef52-132">Этот конструктор используется, если нужны только при задании номера локального порта.</span><span class="sxs-lookup"><span data-stu-id="2ef52-132">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="2ef52-133">Основной поставщик услуг присвоит локальный IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="2ef52-133">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="2ef52-134">Если в конструктор передается значение 0, основной поставщик услуг назначит номер порта.</span><span class="sxs-lookup"><span data-stu-id="2ef52-134">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="2ef52-135">Если используется этот конструктор, <xref:System.Net.Sockets.UdpClient> набор экземпляров с семейству адресов IPv4, который не может быть изменен или перезаписана при вызове метода соединение с целевым IPv6.</span><span class="sxs-lookup"><span data-stu-id="2ef52-135">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-136">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-136">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-137">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-137">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2ef52-138">Этот конструктор работает только с IPv4-адресами.</span><span class="sxs-lookup"><span data-stu-id="2ef52-138">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-139">В следующем примере показано использование номера локального порта для создания экземпляра <xref:System.Net.Sockets.UdpClient> класса.</span><span class="sxs-lookup"><span data-stu-id="2ef52-139">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2ef52-140">Параметр <paramref name="port" /> больше значения <see cref="F:System.Net.IPEndPoint.MaxPort" /> или меньше значения <see cref="F:System.Net.IPEndPoint.MinPort" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-140">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-141">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-141">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="2ef52-142">Объект <see cref="T:System.Net.IPEndPoint" />, предоставляющий локальную конечную точку, к которой выполняется привязка UDP-подключения.</span><span class="sxs-lookup"><span data-stu-id="2ef52-142">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection.</span></span></param>
        <summary><span data-ttu-id="2ef52-143">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.UdpClient" /> и связывает его с заданной локальной конечной точкой.</span><span class="sxs-lookup"><span data-stu-id="2ef52-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-144">Этот конструктор создает новый <xref:System.Net.Sockets.UdpClient> и привязывает его к <xref:System.Net.IPEndPoint> заданные `localEP` параметра.</span><span class="sxs-lookup"><span data-stu-id="2ef52-144">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="2ef52-145">Перед вызовом этого конструктора необходимо создать <xref:System.Net.IPEndPoint> с помощью IP-номер адреса и порта, который предполагается использовать для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-145">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="2ef52-146">Необходимо указать локальный IP-адрес и порт номер для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-146">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="2ef52-147">Если этого не сделать, основной поставщик услуг присвоит наиболее подходящий локальный IP-адрес и порт номер.</span><span class="sxs-lookup"><span data-stu-id="2ef52-147">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="2ef52-148">Если используется этот конструктор, <xref:System.Net.Sockets.UdpClient> набор экземпляров с заданные семейство адресов `localEP` параметр, который не может быть изменен или перезаписана при вызове метода connect с семейством другой адрес.</span><span class="sxs-lookup"><span data-stu-id="2ef52-148">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-149">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-149">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-150">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-150">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-151">Следующий пример демонстрирует создание экземпляра <xref:System.Net.Sockets.UdpClient> класса, используя локальную конечную точку.</span><span class="sxs-lookup"><span data-stu-id="2ef52-151">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-152">Свойство <paramref name="localEP" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-152"><paramref name="localEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-153">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-153">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="2ef52-154">Одно из значений <see cref="T:System.Net.Sockets.AddressFamily" />, которое задает схему адресации для сокета.</span><span class="sxs-lookup"><span data-stu-id="2ef52-154">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span></span></param>
        <summary><span data-ttu-id="2ef52-155">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.UdpClient" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-155">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-156">`family` Параметр определяет, является ли прослушиватель использует IP-адрес версии 4 (IPv4) или IP версии 6 (IPv6) адрес.</span><span class="sxs-lookup"><span data-stu-id="2ef52-156">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="2ef52-157">Чтобы использовать адрес IPv4, передайте <xref:System.Net.Sockets.AddressFamily.InterNetwork> значение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-157">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="2ef52-158">Чтобы использовать IPv6-адрес, передайте <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> значение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-158">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="2ef52-159">Передача любого другого значения вызывает метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-159">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="2ef52-160">Если используется этот конструктор, <xref:System.Net.Sockets.UdpClient> набор экземпляров с заданные семейство адресов `family` параметр, который не может быть изменен или перезаписана при вызове метода connect с семейством другой адрес.</span><span class="sxs-lookup"><span data-stu-id="2ef52-160">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-161">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-161">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-162">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-162">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2ef52-163"><xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> Не подходит для присоединения к многоадресной группе, так как он не позволяет выполнять привязку сокета.</span><span class="sxs-lookup"><span data-stu-id="2ef52-163">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ef52-164">Свойству <paramref name="family" /> задано значение, отличное от <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-164"><paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-165">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-165">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="2ef52-166">Порт, на котором производится ожидание входящих попыток подключений.</span><span class="sxs-lookup"><span data-stu-id="2ef52-166">The port on which to listen for incoming connection attempts.</span></span></param>
        <param name="family"><span data-ttu-id="2ef52-167">Одно из значений <see cref="T:System.Net.Sockets.AddressFamily" />, которое задает схему адресации для сокета.</span><span class="sxs-lookup"><span data-stu-id="2ef52-167">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span></span></param>
        <summary><span data-ttu-id="2ef52-168">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.UdpClient" /> и связывает его с заданным номером локального порта.</span><span class="sxs-lookup"><span data-stu-id="2ef52-168">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-169">Этот конструктор создает основной <xref:System.Net.Sockets.Socket> и связывает его с номером порта, который предполагается использовать для обмена данными.</span><span class="sxs-lookup"><span data-stu-id="2ef52-169">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="2ef52-170">`family` Параметр определяет, является ли прослушиватель использует IP-адрес версии 4 (IPv4) или IP версии 6 (IPv6) адрес.</span><span class="sxs-lookup"><span data-stu-id="2ef52-170">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="2ef52-171">Чтобы использовать адрес IPv4, передайте <xref:System.Net.Sockets.AddressFamily.InterNetwork> значение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-171">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="2ef52-172">Чтобы использовать IPv6-адрес, передайте <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> значение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-172">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="2ef52-173">Передача любого другого значения вызывает метод выдает исключение <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-173">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="2ef52-174">Если используется этот конструктор, <xref:System.Net.Sockets.UdpClient> набор экземпляров с заданные семейство адресов `family` параметр, который не может быть изменен или перезаписана при вызове метода connect с семейством другой адрес.</span><span class="sxs-lookup"><span data-stu-id="2ef52-174">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-175">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-175">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-176">Получив этот код, см. Подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-176">Once you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-177">В следующем примере кода показано, как создать клиент для использования в группу многоадресной рассылки UDP.</span><span class="sxs-lookup"><span data-stu-id="2ef52-177">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ef52-178">Свойству <paramref name="family" /> задано значение, отличное от <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-178"><paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ef52-179"><paramref name="port" /> больше <see cref="F:System.Net.IPEndPoint.MaxPort" /> или меньше <see cref="F:System.Net.IPEndPoint.MinPort" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-179"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-180">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-180">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="2ef52-181">Имя удаленного DNS-узла, к которому планируется подключение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-181">The name of the remote DNS host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="2ef52-182">Номер удаленного порта, к которому планируется выполнить подключение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-182">The remote port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="2ef52-183">Инициализирует новый экземпляр класса <see cref="T:System.Net.Sockets.UdpClient" /> и устанавливает удаленный узел, используемый по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-183">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-184">Этот конструктор инициализирует новый <xref:System.Net.Sockets.UdpClient> и устанавливает удаленному узлу, используя `hostname` и `port` параметров.</span><span class="sxs-lookup"><span data-stu-id="2ef52-184">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="2ef52-185">Установка удаленный узел по умолчанию является необязательным.</span><span class="sxs-lookup"><span data-stu-id="2ef52-185">Establishing a default remote host is optional.</span></span> <span data-ttu-id="2ef52-186">При использовании этого конструктора не нужно указывать удаленный хост при каждом обращении к <xref:System.Net.Sockets.UdpClient.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-186">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2ef52-187">Указание удаленный узел по умолчанию ограничена только узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-187">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="2ef52-188">Удаленный узел по умолчанию можно изменить в любое время путем вызова <xref:System.Net.Sockets.UdpClient.Connect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-188">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2ef52-189">Если вы хотите указать удаленного узла при вызове <xref:System.Net.Sockets.UdpClient.Send%2A> метода, не используйте этот конструктор.</span><span class="sxs-lookup"><span data-stu-id="2ef52-189">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-190">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-190">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-191">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-191">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-192">Следующий пример демонстрирует создание экземпляра <xref:System.Net.Sockets.UdpClient> класса, используя имя узла и номер порта.</span><span class="sxs-lookup"><span data-stu-id="2ef52-192">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-193">Свойство <paramref name="hostname" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-193"><paramref name="hostname" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ef52-194">Значение параметра <paramref name="port" /> не находится в диапазоне между значениями <see cref="F:System.Net.IPEndPoint.MinPort" /> и <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-194"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-195">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-195">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef52-196">Получает или задает значение, указывающее, установлен ли удаленный узел, используемый по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-196">Gets or sets a value indicating whether a default remote host has been established.</span></span></summary>
        <value>
          <span data-ttu-id="2ef52-197">Значение <see langword="true" />, если подключение активно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-197"><see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-198">Классы, производные от <xref:System.Net.Sockets.UdpClient> это свойство можно использовать для определения того, установлен ли удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-198">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="2ef52-199">Удаленный узел по умолчанию можно установить с помощью соответствующего конструктора или путем вызова <xref:System.Net.Sockets.UdpClient.Connect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-199">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2ef52-200">Если установить удаленный узел по умолчанию, невозможно указать удаленный узел в вызове <xref:System.Net.Sockets.UdpClient.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-200">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed"><span data-ttu-id="2ef52-201">Логическое значение, указывающее, что надо включить или выключить обход NAT.</span><span class="sxs-lookup"><span data-stu-id="2ef52-201">A Boolean value that specifies whether to enable or disable NAT traversal.</span></span></param>
        <summary><span data-ttu-id="2ef52-202">Включает или отключает обход механизма преобразования сетевых адресов (NAT) для экземпляра <see cref="T:System.Net.Sockets.UdpClient" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-202">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-203"><xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> Метод используется для включения или отключения прохождения NAT для <xref:System.Net.Sockets.UdpClient> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2ef52-203">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="2ef52-204">Обход NAT может предоставляться Teredo, 6to4 или туннель ISATAP.</span><span class="sxs-lookup"><span data-stu-id="2ef52-204">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="2ef52-205">Когда `allowed` параметр имеет значение false, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> на связанного сокета был установлен в <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-205">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="2ef52-206">Это явно отключает прохождения NAT для <xref:System.Net.Sockets.UdpClient> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2ef52-206">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="2ef52-207">Когда `allowed` параметр имеет значение true, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> на связанного сокета был установлен в <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-207">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="2ef52-208">Это может позволить прохождения NAT для <xref:System.Net.Sockets.UdpClient> в зависимости от правил брандмауэра на месте в системе.</span><span class="sxs-lookup"><span data-stu-id="2ef52-208">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="2ef52-209">Адрес Teredo — IPv6-адрес с префиксом 2001:: / 32.</span><span class="sxs-lookup"><span data-stu-id="2ef52-209">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="2ef52-210">Адреса Teredo можно возвращенные с помощью обычного разрешения имен DNS или перечислены как IPv6-адрес локального интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2ef52-210">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef52-211">Возвращает значение, указывающее количество полученных из сети и доступных для чтения данных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-211">Gets the amount of data received from the network that is available to read.</span></span></summary>
        <value><span data-ttu-id="2ef52-212">Число байтов данных, полученных из сети.</span><span class="sxs-lookup"><span data-stu-id="2ef52-212">The number of bytes of data received from the network.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-213"><xref:System.Net.Sockets.UdpClient.Available%2A> Свойство используется для определения объема данных, помещенных в сетевой буфер для чтения.</span><span class="sxs-lookup"><span data-stu-id="2ef52-213">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="2ef52-214">При наличии данных, вызовите <xref:System.Net.Sockets.NetworkStream.Read%2A> для получения данных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-214">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="2ef52-215">Если данные недоступны, <xref:System.Net.Sockets.UdpClient.Available%2A> свойство возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="2ef52-215">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="2ef52-216">Если удаленный узел отключает или закрывает соединение, <xref:System.Net.Sockets.UdpClient.Available%2A> свойство выдает <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-216">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-217">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки и обратитесь к документации Windows Sockets версии 2 API ошибок кода в библиотеке MSDN по [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)/ подробное описание Произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="2ef52-217">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)/ for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-218">В следующем примере кода показано использование <xref:System.Net.Sockets.UdpClient.Available%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2ef52-218">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-219">Произошла ошибка при попытке доступа к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-219">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-220"><see cref="T:System.Net.Sockets.Socket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-220">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback"><span data-ttu-id="2ef52-221">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-221">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="2ef52-222">Пользовательский объект, содержащий информацию об операции приема.</span><span class="sxs-lookup"><span data-stu-id="2ef52-222">A user-defined object that contains information about the receive operation.</span></span> <span data-ttu-id="2ef52-223">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-223">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="2ef52-224">Принимает датаграмму с удаленного узла в асинхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-224">Receives a datagram from a remote host asynchronously.</span></span></summary>
        <returns><span data-ttu-id="2ef52-225">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный прием.</span><span class="sxs-lookup"><span data-stu-id="2ef52-225">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-226">Асинхронная <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> операция должна быть завершена, вызвав <xref:System.Net.Sockets.UdpClient.EndReceive%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-226">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="2ef52-227">Как правило, вызывается метод `requestCallback` делегата.</span><span class="sxs-lookup"><span data-stu-id="2ef52-227">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="2ef52-228">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-228">This method does not block until the operation is complete.</span></span> <span data-ttu-id="2ef52-229">Для блокирования до завершения операции, используйте <xref:System.Net.Sockets.UdpClient.Receive%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-229">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="2ef52-230">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2ef52-230">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-231">Следующий пример кода использует <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> для асинхронного получения ответа сервера.</span><span class="sxs-lookup"><span data-stu-id="2ef52-231">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ef52-232">Отправляет датаграмму на удаленный узел в асинхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-232">Sends a datagram to a remote host asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="2ef52-233">Массив <see cref="T:System.Byte" />, содержащий отправляемые данные.</span><span class="sxs-lookup"><span data-stu-id="2ef52-233">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span></span></param>
        <param name="bytes"><span data-ttu-id="2ef52-234">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-234">The number of bytes to send.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="2ef52-235">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-235">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="2ef52-236">Пользовательский объект, содержащий информацию об операции отправки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-236">A user-defined object that contains information about the send operation.</span></span> <span data-ttu-id="2ef52-237">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-237">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="2ef52-238">Отправляет датаграмму на удаленный узел в асинхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-238">Sends a datagram to a remote host asynchronously.</span></span> <span data-ttu-id="2ef52-239">Пункт назначения был задан заранее путем обращения к объекту <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-239">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span></span></summary>
        <returns><span data-ttu-id="2ef52-240">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную отправку.</span><span class="sxs-lookup"><span data-stu-id="2ef52-240">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-241">Асинхронная <xref:System.Net.Sockets.UdpClient.BeginSend%2A> операция должна быть завершена, вызвав <xref:System.Net.Sockets.UdpClient.EndSend%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-241">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="2ef52-242">Как правило, вызывается метод `requestCallback` делегата.</span><span class="sxs-lookup"><span data-stu-id="2ef52-242">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="2ef52-243">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-243">This method does not block until the operation completes.</span></span> <span data-ttu-id="2ef52-244">Для блокирования до завершения операции, воспользуйтесь одним из <xref:System.Net.Sockets.UdpClient.Send%2A> перегруженных версий метода.</span><span class="sxs-lookup"><span data-stu-id="2ef52-244">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="2ef52-245">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2ef52-245">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-246">Следующий пример кода использует <xref:System.Net.Sockets.UdpClient.BeginSend%2A> асинхронно отправлять запросы на сервер.</span><span class="sxs-lookup"><span data-stu-id="2ef52-246">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="2ef52-247">Массив <see cref="T:System.Byte" />, содержащий отправляемые данные.</span><span class="sxs-lookup"><span data-stu-id="2ef52-247">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span></span></param>
        <param name="bytes"><span data-ttu-id="2ef52-248">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-248">The number of bytes to send.</span></span></param>
        <param name="endPoint"><span data-ttu-id="2ef52-249">Объект <see cref="T:System.Net.EndPoint" />, представляющий пункт назначения для данных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-249">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="2ef52-250">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-250">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="2ef52-251">Пользовательский объект, содержащий информацию об операции отправки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-251">A user-defined object that contains information about the send operation.</span></span> <span data-ttu-id="2ef52-252">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-252">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="2ef52-253">Отправляет датаграмму в пункт назначения в асинхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-253">Sends a datagram to a destination asynchronously.</span></span> <span data-ttu-id="2ef52-254">Пункт назначения задается объектом <see cref="T:System.Net.EndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-254">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span></span></summary>
        <returns><span data-ttu-id="2ef52-255">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную отправку.</span><span class="sxs-lookup"><span data-stu-id="2ef52-255">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-256">Асинхронная <xref:System.Net.Sockets.UdpClient.BeginSend%2A> операция должна быть завершена, вызвав <xref:System.Net.Sockets.UdpClient.EndSend%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-256">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="2ef52-257">Как правило, вызывается метод `requestCallback` делегата.</span><span class="sxs-lookup"><span data-stu-id="2ef52-257">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="2ef52-258">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-258">This method does not block until the operation is complete.</span></span> <span data-ttu-id="2ef52-259">Для блокирования до завершения операции, воспользуйтесь одним из <xref:System.Net.Sockets.UdpClient.Send%2A> перегруженных версий метода.</span><span class="sxs-lookup"><span data-stu-id="2ef52-259">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="2ef52-260">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2ef52-260">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-261">Следующий пример кода использует <xref:System.Net.Sockets.UdpClient.BeginSend%2A> асинхронно отправлять запросы на сервер.</span><span class="sxs-lookup"><span data-stu-id="2ef52-261">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="2ef52-262">Массив <see cref="T:System.Byte" />, содержащий отправляемые данные.</span><span class="sxs-lookup"><span data-stu-id="2ef52-262">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span></span></param>
        <param name="bytes"><span data-ttu-id="2ef52-263">Количество байтов для отправки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-263">The number of bytes to send.</span></span></param>
        <param name="hostname"><span data-ttu-id="2ef52-264">узел назначения.</span><span class="sxs-lookup"><span data-stu-id="2ef52-264">The destination host.</span></span></param>
        <param name="port"><span data-ttu-id="2ef52-265">Номер порта узла назначения.</span><span class="sxs-lookup"><span data-stu-id="2ef52-265">The destination port number.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="2ef52-266">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-266">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="2ef52-267">Пользовательский объект, содержащий информацию об операции отправки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-267">A user-defined object that contains information about the send operation.</span></span> <span data-ttu-id="2ef52-268">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-268">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="2ef52-269">Отправляет датаграмму в пункт назначения в асинхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-269">Sends a datagram to a destination asynchronously.</span></span> <span data-ttu-id="2ef52-270">Пункт назначения задается именем узла и номером порта.</span><span class="sxs-lookup"><span data-stu-id="2ef52-270">The destination is specified by the host name and port number.</span></span></summary>
        <returns><span data-ttu-id="2ef52-271">Объект <see cref="T:System.IAsyncResult" />, который ссылается на асинхронную отправку.</span><span class="sxs-lookup"><span data-stu-id="2ef52-271">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-272">Асинхронная <xref:System.Net.Sockets.UdpClient.BeginSend%2A> операция должна быть завершена, вызвав <xref:System.Net.Sockets.UdpClient.EndSend%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-272">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="2ef52-273">Как правило, вызывается метод `requestCallback` делегата.</span><span class="sxs-lookup"><span data-stu-id="2ef52-273">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="2ef52-274">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="2ef52-274">This method does not block until the operation is complete.</span></span> <span data-ttu-id="2ef52-275">Для блокирования до завершения операции, воспользуйтесь одним из <xref:System.Net.Sockets.UdpClient.Send%2A> перегруженных версий метода.</span><span class="sxs-lookup"><span data-stu-id="2ef52-275">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="2ef52-276">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2ef52-276">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-277">Следующий пример кода использует <xref:System.Net.Sockets.UdpClient.BeginSend%2A> асинхронно отправлять запросы на сервер.</span><span class="sxs-lookup"><span data-stu-id="2ef52-277">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef52-278">Получает или задает основной сетевой объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-278">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="2ef52-279">Основной сетевой объект <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-279">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-280"><xref:System.Net.Sockets.UdpClient> Создает <xref:System.Net.Sockets.Socket> используется для отправки и получения данных по сети.</span><span class="sxs-lookup"><span data-stu-id="2ef52-280"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="2ef52-281">Классы, производные от <xref:System.Net.Sockets.UdpClient> это свойство можно использовать для получения или задания это <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-281">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="2ef52-282">Используйте основной <xref:System.Net.Sockets.Socket> , возвращенные <xref:System.Net.Sockets.UdpClient.Client%2A> при необходимости доступа, чем, который <xref:System.Net.Sockets.UdpClient> предоставляет.</span><span class="sxs-lookup"><span data-stu-id="2ef52-282">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="2ef52-283">Можно также использовать <xref:System.Net.Sockets.UdpClient.Client%2A> Чтобы задать основной <xref:System.Net.Sockets.Socket> к существующему <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-283">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="2ef52-284">Это полезно, если вы хотите воспользоваться преимуществами Простота <xref:System.Net.Sockets.UdpClient> использование уже существующей <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-284">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-285">В следующем примере показано использование <xref:System.Net.Sockets.UdpClient.Client%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2ef52-285">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="2ef52-286">В этом примере широковещательная рассылка включена для базового <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-286">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ef52-287">Закрывает UDP-подключение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-287">Closes the UDP connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-288"><xref:System.Net.Sockets.UdpClient.Close%2A> Отключает основной <xref:System.Net.Sockets.Socket> и освобождает все управляемые и неуправляемые ресурсы, связанные с <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-288">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-289">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-290">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-290">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-291">В следующем примере демонстрируется закрывающей <xref:System.Net.Sockets.UdpClient> путем вызова <xref:System.Net.Sockets.UdpClient.Close%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-291">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-292">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-292">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ef52-293">Устанавливает удаленный узел, используемый по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-293">Establishes a default remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint"><span data-ttu-id="2ef52-294">Объект <see cref="T:System.Net.IPEndPoint" />, задающий сетевую конечную точку, которую предполагается использовать для передачи данных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-294">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span></span></param>
        <summary><span data-ttu-id="2ef52-295">Устанавливает удаленный узел по умолчанию, используя заданную сетевую конечную точку.</span><span class="sxs-lookup"><span data-stu-id="2ef52-295">Establishes a default remote host using the specified network endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-296"><xref:System.Net.Sockets.UdpClient.Connect%2A> Метод устанавливает удаленный узел по умолчанию, используя значение, указанное в `endPoint` параметра.</span><span class="sxs-lookup"><span data-stu-id="2ef52-296">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="2ef52-297">После установления не нужно указывать удаленный хост при каждом обращении к <xref:System.Net.Sockets.UdpClient.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-297">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="2ef52-298">Установка удаленный узел по умолчанию является необязательным.</span><span class="sxs-lookup"><span data-stu-id="2ef52-298">Establishing a default remote host is optional.</span></span> <span data-ttu-id="2ef52-299">Указание удаленный узел по умолчанию ограничена только узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-299">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="2ef52-300">Если вы хотите отправить датаграмм другой удаленный хост, необходимо выполнение другого вызова <xref:System.Net.Sockets.UdpClient.Connect%2A> метода или создайте другой <xref:System.Net.Sockets.UdpClient> без удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-300">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="2ef52-301">Если установлено значение по умолчанию удаленного узла и также предоставляют удаленного узла при вызове <xref:System.Net.Sockets.UdpClient.Send%2A> метода <xref:System.Net.Sockets.UdpClient.Send%2A> вызовет <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-301">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-302">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-302">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-303">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-303">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2ef52-304">При вызове <xref:System.Net.Sockets.Socket.Connect%2A> метода, любые датаграммы, поступившие с адреса, отличного от заданного по умолчанию будут потеряны.</span><span class="sxs-lookup"><span data-stu-id="2ef52-304">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="2ef52-305">Невозможно задать удаленный узел по умолчанию адрес широковещательной рассылки, если не используется наследование от <xref:System.Net.Sockets.UdpClient>, использовать метод, чтобы получить основной <xref:System.Net.Sockets.Socket>, а для параметра сокета <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-305">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2ef52-306">Однако вы можете, широковещательных данных по умолчанию широковещательный адрес 255.255.255.255, при указании <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> при вызове <xref:System.Net.Sockets.UdpClient.Send%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2ef52-306">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2ef52-307">Если приложению требуется больший контроль над широковещательные адреса, можно также можно вернуться к использованию <xref:System.Net.Sockets.Socket> класса.</span><span class="sxs-lookup"><span data-stu-id="2ef52-307">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-308">Поскольку протокол UDP является протоколом без установления соединения, <xref:System.Net.Sockets.UdpClient.Connect%2A> метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ef52-308">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="2ef52-309">Не вызывайте <xref:System.Net.Sockets.UdpClient.Connect%2A> метод, если вы собираетесь прием многоадресных датаграмм.</span><span class="sxs-lookup"><span data-stu-id="2ef52-309">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-310">В следующем примере используется <xref:System.Net.IPEndPoint> установить удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-310">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-311">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-311">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-312">Свойство <paramref name="endPoint" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-312"><paramref name="endPoint" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-313">Объект <see cref="T:System.Net.Sockets.UdpClient" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-313">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr"><span data-ttu-id="2ef52-314">Объект <see cref="T:System.Net.IPAddress" /> удаленного узла, которому предполагается передавать данные.</span><span class="sxs-lookup"><span data-stu-id="2ef52-314">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span></span></param>
        <param name="port"><span data-ttu-id="2ef52-315">Номер порта, на который предполагается передавать данные.</span><span class="sxs-lookup"><span data-stu-id="2ef52-315">The port number to which you intend send data.</span></span></param>
        <summary><span data-ttu-id="2ef52-316">Устанавливает удаленный узел по умолчанию, используя заданный IP-адрес и номер порта.</span><span class="sxs-lookup"><span data-stu-id="2ef52-316">Establishes a default remote host using the specified IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-317"><xref:System.Net.Sockets.UdpClient.Connect%2A> Метод устанавливает удаленный узел по умолчанию, используя значения, указанные в `addr` и `port` параметров.</span><span class="sxs-lookup"><span data-stu-id="2ef52-317">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="2ef52-318">После установления не нужно указывать удаленный хост при каждом обращении к <xref:System.Net.Sockets.UdpClient.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-318">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="2ef52-319">Установка удаленный узел по умолчанию является необязательным.</span><span class="sxs-lookup"><span data-stu-id="2ef52-319">Establishing a default remote host is optional.</span></span> <span data-ttu-id="2ef52-320">Указание удаленный узел по умолчанию ограничена только узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-320">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="2ef52-321">Если вы хотите отправить датаграмм другой удаленный хост, необходимо выполнение другого вызова <xref:System.Net.Sockets.UdpClient.Connect%2A> метода или создайте другой <xref:System.Net.Sockets.UdpClient> без удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-321">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="2ef52-322">Если установлено значение по умолчанию удаленного узла и также предоставляют удаленного узла при вызове <xref:System.Net.Sockets.UdpClient.Send%2A> метода <xref:System.Net.Sockets.UdpClient.Send%2A> вызовет <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-322">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-323">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-323">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-324">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-324">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2ef52-325">При вызове <xref:System.Net.Sockets.Socket.Connect%2A> метода, любые датаграммы, поступившие с адреса, отличного от заданного по умолчанию будут потеряны.</span><span class="sxs-lookup"><span data-stu-id="2ef52-325">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="2ef52-326">Невозможно задать удаленный узел по умолчанию адрес широковещательной рассылки, если не используется наследование от <xref:System.Net.Sockets.UdpClient>, использовать метод, чтобы получить основной <xref:System.Net.Sockets.Socket>, а для параметра сокета <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-326">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2ef52-327">Однако вы можете, широковещательных данных по умолчанию широковещательный адрес 255.255.255.255, при указании <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> при вызове <xref:System.Net.Sockets.UdpClient.Send%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2ef52-327">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2ef52-328">Если приложению требуется больший контроль над широковещательные адреса, можно также можно вернуться к использованию <xref:System.Net.Sockets.Socket> класса.</span><span class="sxs-lookup"><span data-stu-id="2ef52-328">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-329">Поскольку протокол UDP является протоколом без установления соединения, <xref:System.Net.Sockets.UdpClient.Connect%2A> метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ef52-329">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="2ef52-330">Не вызывайте <xref:System.Net.Sockets.UdpClient.Connect%2A> метод, если вы собираетесь прием многоадресных датаграмм.</span><span class="sxs-lookup"><span data-stu-id="2ef52-330">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-331">В следующем примере IP адрес и номер порта для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="2ef52-331">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2ef52-332"><see cref="T:System.Net.Sockets.UdpClient" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-332"><see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-333">Свойство <paramref name="addr" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-333"><paramref name="addr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ef52-334">Значение параметра <paramref name="port" /> не находится в диапазоне между значениями <see cref="F:System.Net.IPEndPoint.MinPort" /> и <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-334"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-335">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-335">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="2ef52-336">DNS-имя удаленного узла, на который предполагается передавать данные.</span><span class="sxs-lookup"><span data-stu-id="2ef52-336">The DNS name of the remote host to which you intend send data.</span></span></param>
        <param name="port"><span data-ttu-id="2ef52-337">Имя порта удаленного узла, на который предполагается передавать данные.</span><span class="sxs-lookup"><span data-stu-id="2ef52-337">The port number on the remote host to which you intend to send data.</span></span></param>
        <summary><span data-ttu-id="2ef52-338">Устанавливает удаленный узел по умолчанию, используя заданное имя узла и номер порта.</span><span class="sxs-lookup"><span data-stu-id="2ef52-338">Establishes a default remote host using the specified host name and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-339"><xref:System.Net.Sockets.UdpClient.Connect%2A> Метод устанавливает удаленный узел по умолчанию, используя значения, указанные в `port` и `hostname` параметров.</span><span class="sxs-lookup"><span data-stu-id="2ef52-339">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="2ef52-340">После установления не нужно указывать удаленный хост при каждом обращении к <xref:System.Net.Sockets.UdpClient.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-340">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="2ef52-341">Установка удаленный узел по умолчанию является необязательным.</span><span class="sxs-lookup"><span data-stu-id="2ef52-341">Establishing a default remote host is optional.</span></span> <span data-ttu-id="2ef52-342">Указание удаленный узел по умолчанию ограничена только узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-342">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="2ef52-343">Если вы хотите отправить датаграмм другой удаленный хост, необходимо выполнение другого вызова <xref:System.Net.Sockets.UdpClient.Connect%2A> метода или создайте другой <xref:System.Net.Sockets.UdpClient> без удаленный узел по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-343">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="2ef52-344">Если установлено значение по умолчанию удаленного узла и также предоставляют удаленного узла при вызове <xref:System.Net.Sockets.UdpClient.Send%2A> метода <xref:System.Net.Sockets.UdpClient.Send%2A> вызовет <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-344">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-345">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-345">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-346">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-346">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2ef52-347">При вызове <xref:System.Net.Sockets.Socket.Connect%2A> метода, любые датаграммы, поступившие с адреса, отличного от заданного по умолчанию будут потеряны.</span><span class="sxs-lookup"><span data-stu-id="2ef52-347">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="2ef52-348">Невозможно задать удаленный узел по умолчанию адрес широковещательной рассылки, если не используется наследование от <xref:System.Net.Sockets.UdpClient>, использовать метод, чтобы получить основной <xref:System.Net.Sockets.Socket>, а для параметра сокета <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-348">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2ef52-349">Однако вы можете, широковещательных данных по умолчанию широковещательный адрес 255.255.255.255, при указании <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> при вызове <xref:System.Net.Sockets.UdpClient.Send%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2ef52-349">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2ef52-350">Если приложению требуется больший контроль над широковещательные адреса, можно также можно вернуться к использованию <xref:System.Net.Sockets.Socket> класса.</span><span class="sxs-lookup"><span data-stu-id="2ef52-350">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-351">Поскольку протокол UDP является протоколом без установления соединения, <xref:System.Net.Sockets.UdpClient.Connect%2A> метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="2ef52-351">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="2ef52-352">Не вызывайте <xref:System.Net.Sockets.UdpClient.Connect%2A> метод, если вы собираетесь прием многоадресных датаграмм.</span><span class="sxs-lookup"><span data-stu-id="2ef52-352">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-353">В следующем примере используется имя узла и номер порта для подключения к удаленному узлу.</span><span class="sxs-lookup"><span data-stu-id="2ef52-353">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-354">Объект <see cref="T:System.Net.Sockets.UdpClient" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-354">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2ef52-355">Значение параметра <paramref name="port" /> не находится в диапазоне между значениями <see cref="F:System.Net.IPEndPoint.MinPort" /> и <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-355"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-356">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-356">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ef52-357">Освобождает все управляемые и неуправляемые ресурсы, используемые <see cref="T:System.Net.Sockets.UdpClient" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-357">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2ef52-358">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="2ef52-358"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="2ef52-359">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.Sockets.UdpClient" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="2ef52-359">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-360">Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-360">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2ef52-361">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`.</span><span class="sxs-lookup"><span data-stu-id="2ef52-361">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2ef52-362"><xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` значение `false`.</span><span class="sxs-lookup"><span data-stu-id="2ef52-362"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="2ef52-363">При `disposing` параметр имеет значение true, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Net.Sockets.UdpClient> ссылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-363">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="2ef52-364">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="2ef52-364">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2ef52-365">Метод <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="2ef52-365"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="2ef52-366">При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами метода <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-366">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="2ef52-367">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />, в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2ef52-367">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="2ef52-368">Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="2ef52-368">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef52-369">Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, разрешает ли объект <see cref="T:System.Net.Sockets.UdpClient" /> выполнение фрагментации датаграмм протокола IP.</span><span class="sxs-lookup"><span data-stu-id="2ef52-369">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span></span></summary>
        <value>
          <span data-ttu-id="2ef52-370">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.UdpClient" /> разрешает фрагментацию датаграмм; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-370"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2ef52-371">Значение по умолчанию: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-371">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-372">Необходима фрагментация датаграмм, когда их размер превышает максимальный передачи единицы (MTU) среды передачи.</span><span class="sxs-lookup"><span data-stu-id="2ef52-372">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="2ef52-373">Может фрагментация датаграмм, отправляющим узлом или промежуточным маршрутизатором.</span><span class="sxs-lookup"><span data-stu-id="2ef52-373">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="2ef52-374">Если необходимо Фрагментировано датаграмм и <xref:System.Net.Sockets.Socket.DontFragment%2A> был установлен, датаграмма отбрасывается и сообщение об ошибке управления сообщений протокола ICMP (Internet) отправляется обратно отправителю датаграммы.</span><span class="sxs-lookup"><span data-stu-id="2ef52-374">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-375">В следующем примере кода показано использование <xref:System.Net.Sockets.Socket.DontFragment%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2ef52-375">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2ef52-376">Это свойство может быть установлено только для сокетов, которые используют флаг <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> или <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-376">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ef52-377">Покидает группу многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-377">Leaves a multicast group.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="2ef52-378">Удаляемый объект <see cref="T:System.Net.IPAddress" /> группы многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-378">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span></span></param>
        <summary><span data-ttu-id="2ef52-379">Покидает группу многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-379">Leaves a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-380"><xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Метод удаления объекта <xref:System.Net.Sockets.UdpClient> из группы многоадресной рассылки, определяемый указанным <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-380">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="2ef52-381">После вызова метода <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> базовый метод <xref:System.Net.Sockets.Socket> отправляет пакет протокола управления группы Интернета (IGMP) на маршрутизатор, удаляя маршрутизатор из группы многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-381">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="2ef52-382">После <xref:System.Net.Sockets.UdpClient> удаления объекта из группы, он не будет возможности приема датаграмм, посылаемых в эту группу.</span><span class="sxs-lookup"><span data-stu-id="2ef52-382">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-383">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-383">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-384">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-384">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-385">Ниже приведен пример, как удалить группу многоадресной рассылки, указав адрес многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-385">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-386">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-386">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-387">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-387">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2ef52-388">IP-адрес несовместим со значением <see cref="T:System.Net.Sockets.AddressFamily" />, которое определяет схему адресации сокета.</span><span class="sxs-lookup"><span data-stu-id="2ef52-388">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-389">Свойство <paramref name="multicastAddr" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-389"><paramref name="multicastAddr" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="2ef52-390">Удаляемый объект <see cref="T:System.Net.IPAddress" /> группы многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-390">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span></span></param>
        <param name="ifindex"><span data-ttu-id="2ef52-391">Локальный адрес удаляемой группы многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-391">The local address of the multicast group to leave.</span></span></param>
        <summary><span data-ttu-id="2ef52-392">Покидает группу многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-392">Leaves a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-393"><xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Метод удаления объекта <xref:System.Net.Sockets.UdpClient> из группы многоадресной рассылки, определяемый указанным <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-393">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="2ef52-394">После вызова метода <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> базовый метод <xref:System.Net.Sockets.Socket> отправляет пакет протокола управления группы Интернета (IGMP) на маршрутизатор, удаляя маршрутизатор из группы многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-394">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="2ef52-395">После <xref:System.Net.Sockets.UdpClient> удаления объекта из группы, он не будет возможности приема датаграмм, посылаемых в эту группу.</span><span class="sxs-lookup"><span data-stu-id="2ef52-395">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-396">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> , чтобы получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-396">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-397">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-397">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-398">В следующем примере кода показано, как удалить группу многоадресной рассылки, указав адрес многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-398">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-399">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-399">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-400">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-400">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2ef52-401">IP-адрес несовместим со значением <see cref="T:System.Net.Sockets.AddressFamily" />, которое определяет схему адресации сокета.</span><span class="sxs-lookup"><span data-stu-id="2ef52-401">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-402">Свойство <paramref name="multicastAddr" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-402"><paramref name="multicastAddr" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef52-403">Получает или задает значение <see cref="T:System.Boolean" />, указывающее, может ли объект <see cref="T:System.Net.Sockets.UdpClient" /> производить отправку или прием широковещательных пакетов.</span><span class="sxs-lookup"><span data-stu-id="2ef52-403">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span></span></summary>
        <value>
          <span data-ttu-id="2ef52-404">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.UdpClient" /> разрешает использование широковещательных пакетов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-404"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2ef52-405">Значение по умолчанию: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-405">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-406">Широковещательная рассылка ограничена определенной подсети.</span><span class="sxs-lookup"><span data-stu-id="2ef52-406">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="2ef52-407">Можно выполнить рассылку в локальной подсети путем отправки пакета по адресу 255.255.255.255; или можно использовать адрес направленной широковещательной рассылки, который является частью сети Интернет протокола IP-адрес с установлены все биты в часть узла.</span><span class="sxs-lookup"><span data-stu-id="2ef52-407">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="2ef52-408">Например если IP-адреса 192.168.1.40 (это адрес класса C с сетевой части как первые три октета, а часть узла – это последний октет), направленный широковещательный адрес — 192.168.1.255.</span><span class="sxs-lookup"><span data-stu-id="2ef52-408">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-409">В следующем примере кода показано использование <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2ef52-409">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="2ef52-410">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове объекта <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-410">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="2ef52-411">Заданная удаленная конечная точка.</span><span class="sxs-lookup"><span data-stu-id="2ef52-411">The specified remote endpoint.</span></span></param>
        <summary><span data-ttu-id="2ef52-412">Завершает отложенный асинхронный прием.</span><span class="sxs-lookup"><span data-stu-id="2ef52-412">Ends a pending asynchronous receive.</span></span></summary>
        <returns><span data-ttu-id="2ef52-413">В случае успешного выполнения массив байтов, который содержит данные датаграммы.</span><span class="sxs-lookup"><span data-stu-id="2ef52-413">If successful, an array of bytes that contains datagram data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-414">Этот метод блокируется до операции завершения.</span><span class="sxs-lookup"><span data-stu-id="2ef52-414">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="2ef52-415">Для синхронного выполнения этой операции, используйте <xref:System.Net.Sockets.UdpClient.Receive%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-415">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-416">Следующий пример кода использует <xref:System.Net.Sockets.UdpClient.BeginSend%2A> для завершения асинхронного получения ответа сервера.</span><span class="sxs-lookup"><span data-stu-id="2ef52-416">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-417">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-417"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ef52-418">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-418"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ef52-419">Метод <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> был ранее вызван для асинхронного чтения.</span><span class="sxs-lookup"><span data-stu-id="2ef52-419"><see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-420">Произошла ошибка при попытке доступа к основному объекту <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-420">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-421">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-421">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="2ef52-422">Объект <see cref="T:System.IAsyncResult" />, возвращаемый при вызове объекта <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-422">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span></span></param>
        <summary><span data-ttu-id="2ef52-423">Завершает отложенную операцию асинхронной передачи.</span><span class="sxs-lookup"><span data-stu-id="2ef52-423">Ends a pending asynchronous send.</span></span></summary>
        <returns><span data-ttu-id="2ef52-424">Количество отправленных объекту <see cref="T:System.Net.Sockets.UdpClient" /> байтов, если операция успешно выполнена.</span><span class="sxs-lookup"><span data-stu-id="2ef52-424">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-425">Этот метод блокируется до операции завершения.</span><span class="sxs-lookup"><span data-stu-id="2ef52-425">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="2ef52-426">Для синхронного выполнения этой операции, используйте <xref:System.Net.Sockets.UdpClient.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-426">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-427">Следующий пример кода использует <xref:System.Net.Sockets.UdpClient.BeginSend%2A> для завершения асинхронная Отправка запроса на сервер.</span><span class="sxs-lookup"><span data-stu-id="2ef52-427">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-428">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-428"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ef52-429">Параметр <paramref name="asyncResult" /> не был возвращен вызовом метода <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-429"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ef52-430">Метод <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> был ранее вызван для асинхронного чтения.</span><span class="sxs-lookup"><span data-stu-id="2ef52-430"><see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-431">Произошла ошибка при попытке доступа к основному сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-431">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-432">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-432">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef52-433">Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, разрешает ли объект <see cref="T:System.Net.Sockets.UdpClient" /> использовать порт только одному клиенту.</span><span class="sxs-lookup"><span data-stu-id="2ef52-433">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span></span></summary>
        <value>
          <span data-ttu-id="2ef52-434">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.UdpClient" /> разрешает только одному клиенту использовать конкретный порт; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-434"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2ef52-435">По умолчанию используется значение <see langword="true" /> для Windows Server 2003 и Windows XP с пакетом обновления 2 (SP2) и более поздней версии; для всех остальных версий по умолчанию используется значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-435">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-436">По умолчанию несколько клиентов могут использовать конкретный порт; Однако только один из клиентов может выполняться на сетевом трафике, отправляемом на порт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-436">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="2ef52-437">Можно использовать <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> свойства, чтобы предотвратить использование определенного порта несколько клиентов.</span><span class="sxs-lookup"><span data-stu-id="2ef52-437">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="2ef52-438">Это свойство задается перед привязкой базового сокета с клиентским портом.</span><span class="sxs-lookup"><span data-stu-id="2ef52-438">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="2ef52-439">При вызове метода <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, или <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, порт клиента привязан как побочный эффект конструктора, а впоследствии невозможно задать <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> свойства</span><span class="sxs-lookup"><span data-stu-id="2ef52-439">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-440">В следующем примере кода создается <xref:System.Net.Sockets.UdpClient>и возвращает и задает <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="2ef52-440">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-441">Произошла ошибка при попытке доступа к основному сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-441">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-442">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-442">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ef52-443">Добавляет объект <see cref="T:System.Net.Sockets.UdpClient" /> в группу многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-443">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="2ef52-444">Групповой адрес <see cref="T:System.Net.IPAddress" /> для группы, к которой производится присоединение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-444">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span></span></param>
        <summary><span data-ttu-id="2ef52-445">Добавляет объект <see cref="T:System.Net.Sockets.UdpClient" /> в группу многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-445">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-446"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Метод подписывается <xref:System.Net.Sockets.UdpClient> в группу многоадресной рассылки, используя указанный <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-446">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="2ef52-447">После вызова метода <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> базовый метод <xref:System.Net.Sockets.Socket> отправляет пакет протокола управления группы Интернета (IGMP) на маршрутизатор, запросившего членство в группе многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-447">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="2ef52-448">Диапазон адресов многоадресной рассылки: от 224.0.0.0 до 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="2ef52-448">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="2ef52-449">При указании адреса за пределами этого диапазона или маршрутизатора, на который производится запрос не многоадресной рассылки включен, <xref:System.Net.Sockets.UdpClient> вызовет <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-449">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-450">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-450">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-451">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-451">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span> <span data-ttu-id="2ef52-452">Один раз <xref:System.Net.Sockets.UdpClient> указана с маршрутизатора в качестве члена группы многоадресной рассылки, будут иметь возможность получать групповых датаграмм, посылаемых по указанному <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-452">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-453">Необходимо создать <xref:System.Net.Sockets.UdpClient> с помощью номера портов для многоадресной рассылки; в противном случае нельзя получать групповых датаграмм.</span><span class="sxs-lookup"><span data-stu-id="2ef52-453">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="2ef52-454">Не вызывайте <xref:System.Net.Sockets.UdpClient.Connect%2A> метод до вызова метода <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> метод, или <xref:System.Net.Sockets.UdpClient.Receive%2A> метод не будет работать.</span><span class="sxs-lookup"><span data-stu-id="2ef52-454">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="2ef52-455">Необходимо входить в группу многоадресной рассылки для отправки датаграмм многоадресной IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="2ef52-455">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="2ef52-456">Перед присоединением к группе многоадресной рассылки, убедитесь, что сокет связан с портом или конечной точки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-456">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="2ef52-457">Для этого вызова одного из конструкторов, принимающих порта или конечной точки в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="2ef52-457">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="2ef52-458">Чтобы прекратить прием групповых датаграмм, вызовите <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> метод и предоставить <xref:System.Net.IPAddress> группы, из которого вы хотите снять.</span><span class="sxs-lookup"><span data-stu-id="2ef52-458">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-459">В случае IPv6 имеется несколько диапазонов адресов многоадресной рассылки, можно выбрать из.</span><span class="sxs-lookup"><span data-stu-id="2ef52-459">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="2ef52-460">Обратитесь к документу IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="2ef52-460">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-461">Не удается вызвать <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> на <xref:System.Net.Sockets.UdpClient> созданных без определенного локального порта (то есть с использованием <xref:System.Net.Sockets.UdpClient.%23ctor> или <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> конструктора).</span><span class="sxs-lookup"><span data-stu-id="2ef52-461">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-462">В следующем примере кода показано, как присоединить группу многоадресной рассылки, указав адрес многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-462">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-463">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-463">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-464">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-464">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2ef52-465">IP-адрес несовместим со значением <see cref="T:System.Net.Sockets.AddressFamily" />, которое определяет схему адресации сокета.</span><span class="sxs-lookup"><span data-stu-id="2ef52-465">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex"><span data-ttu-id="2ef52-466">Индекс интерфейса, связанный с локальным IP-адресом, по которому требуется присоединиться к группе многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-466">The interface index associated with the local IP address on which to join the multicast group.</span></span></param>
        <param name="multicastAddr"><span data-ttu-id="2ef52-467">Групповой адрес <see cref="T:System.Net.IPAddress" /> для группы, к которой производится присоединение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-467">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span></span></param>
        <summary><span data-ttu-id="2ef52-468">Добавляет объект <see cref="T:System.Net.Sockets.UdpClient" /> в группу многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-468">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-469">Перед присоединением к группе многоадресной рассылки, убедитесь, что сокет связан с портом или конечной точки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-469">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="2ef52-470">Это можно сделать путем вызова одного из конструкторов, принимающих порта или конечной точки в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="2ef52-470">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="2ef52-471">`infindex` Параметр используется для идентификации аппаратного интерфейса на той же связи.</span><span class="sxs-lookup"><span data-stu-id="2ef52-471">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-472">Имеется несколько диапазонов адресов многоадресной рассылки для выбора.</span><span class="sxs-lookup"><span data-stu-id="2ef52-472">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="2ef52-473">Обратитесь к документу IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="2ef52-473">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-474">Не удается вызвать <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> на <xref:System.Net.Sockets.UdpClient> созданных без определенного локального порта (то есть с использованием <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> или <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> конструктора).</span><span class="sxs-lookup"><span data-stu-id="2ef52-474">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-475">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-475">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-476">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-476">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="2ef52-477">Объект <see cref="T:System.Net.IPAddress" />, присоединяемый к группе многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-477">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span></span></param>
        <param name="timeToLive"><span data-ttu-id="2ef52-478">Параметр TTL (Time to Live), измеряемый в количестве переходов между марштутизаторами.</span><span class="sxs-lookup"><span data-stu-id="2ef52-478">The Time to Live (TTL), measured in router hops.</span></span></param>
        <summary><span data-ttu-id="2ef52-479">Добавьте в группу многоадресной рассылки объект <see cref="T:System.Net.Sockets.UdpClient" /> с заданным параметром времени существования TTL (Time to Live).</span><span class="sxs-lookup"><span data-stu-id="2ef52-479">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-480"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Метод подписывается <xref:System.Net.Sockets.UdpClient> в группу многоадресной рассылки, используя указанный <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-480">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="2ef52-481">После вызова метода <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> базовый метод <xref:System.Net.Sockets.Socket> отправляет пакет протокола управления группы Интернета (IGMP) на маршрутизатор, запросившего членство в группе многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-481">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="2ef52-482">Диапазон адресов многоадресной рассылки: от 224.0.0.0 до 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="2ef52-482">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="2ef52-483">При указании адреса за пределами этого диапазона или маршрутизатора, на который производится запрос не многоадресной рассылки включен, <xref:System.Net.Sockets.UdpClient> вызовет <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-483">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-484">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-484">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-485">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-485">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span> <span data-ttu-id="2ef52-486">`timeToLive` Параметр указывает, сколько прыжков маршрутизатора может для многоадресной датаграммы уничтожается.</span><span class="sxs-lookup"><span data-stu-id="2ef52-486">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="2ef52-487">Один раз <xref:System.Net.Sockets.UdpClient> указана с маршрутизатора в качестве члена группы многоадресной рассылки, будут иметь возможность получать групповых датаграмм, посылаемых по указанному <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-487">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-488">Необходимо создать <xref:System.Net.Sockets.UdpClient> с помощью номера порта многоадресной рассылки в противном случае вы не сможете получать групповых датаграмм.</span><span class="sxs-lookup"><span data-stu-id="2ef52-488">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="2ef52-489">Не вызывайте <xref:System.Net.Sockets.UdpClient.Connect%2A> метод до вызова метода <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> метода или метода получения не будет работать.</span><span class="sxs-lookup"><span data-stu-id="2ef52-489">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="2ef52-490">Необходимо входить в группу многоадресной рассылки для отправки датаграмм многоадресной IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="2ef52-490">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="2ef52-491">Перед присоединением к группе многоадресной рассылки убедитесь, что сокет связан с портом или конечной точки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-491">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="2ef52-492">Для этого вызова одного из конструкторов, которые принимают в качестве параметра порта или конечной точки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-492">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="2ef52-493">Чтобы прекратить прием групповых датаграмм, вызовите <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> метод и предоставить <xref:System.Net.IPAddress> группы, из которого вы хотите снять.</span><span class="sxs-lookup"><span data-stu-id="2ef52-493">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-494">Не удается вызвать <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> на <xref:System.Net.Sockets.UdpClient> созданных без определенного локального порта (то есть с использованием <xref:System.Net.Sockets.UdpClient.%23ctor> или <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> конструктора).</span><span class="sxs-lookup"><span data-stu-id="2ef52-494">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-495">Ниже приведен пример, как присоединить группу многоадресной рассылки, предоставляя два параметра, адрес многоадресной рассылки и номер, представляющий значение срока ЖИЗНИ.</span><span class="sxs-lookup"><span data-stu-id="2ef52-495">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2ef52-496">Указанное значение параметра TTL не находится в диапазоне от 0 до 255.</span><span class="sxs-lookup"><span data-stu-id="2ef52-496">The TTL provided is not between 0 and 255</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-497">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-497">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-498">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-498">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-499">Свойство <paramref name="multicastAddr" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-499"><paramref name="multicastAddr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2ef52-500">IP-адрес несовместим со значением <see cref="T:System.Net.Sockets.AddressFamily" />, которое определяет схему адресации сокета.</span><span class="sxs-lookup"><span data-stu-id="2ef52-500">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="2ef52-501">Групповой адрес <see cref="T:System.Net.IPAddress" /> для группы, к которой производится присоединение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-501">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span></span></param>
        <param name="localAddress"><span data-ttu-id="2ef52-502">Локальный адрес <see cref="T:System.Net.IPAddress" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-502">The local <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <summary><span data-ttu-id="2ef52-503">Добавляет объект <see cref="T:System.Net.Sockets.UdpClient" /> в группу многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-503">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-504">Перед присоединением группы многоадресной рассылки, убедитесь, что сокет связан с портом или конечной точки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-504">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="2ef52-505">Это можно сделать путем вызова одного из конструкторов, принимающих порта или конечной точки в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="2ef52-505">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-506">Имеется несколько диапазонов адресов многоадресной рассылки для выбора.</span><span class="sxs-lookup"><span data-stu-id="2ef52-506">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="2ef52-507">Их можно найти в описание см.</span><span class="sxs-lookup"><span data-stu-id="2ef52-507">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-508">Не удается вызвать <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> на <xref:System.Net.Sockets.UdpClient> созданных без определенного локального порта (то есть с использованием <xref:System.Net.Sockets.UdpClient.%23ctor> или <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> конструктора).</span><span class="sxs-lookup"><span data-stu-id="2ef52-508">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-509">В следующем примере кода показано использование <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="2ef52-509">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-510">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-510">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-511">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-511">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef52-512">Получает или задает значение <see cref="T:System.Boolean" />, указывающее, могут ли доставляться исходящие пакеты многоадресной рассылки в передающем приложении.</span><span class="sxs-lookup"><span data-stu-id="2ef52-512">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span></span></summary>
        <value>
          <span data-ttu-id="2ef52-513">Значение <see langword="true" />, если объект <see cref="T:System.Net.Sockets.UdpClient" /> получает исходящие пакеты многоадресной рассылки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-513"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-514">Многоадресная рассылка — это масштабируемая метод многие ко многим обмен данными через Интернет.</span><span class="sxs-lookup"><span data-stu-id="2ef52-514">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="2ef52-515">Если процесс подписывается на адрес многоадресной рассылки, любые пакеты, отправленные этим процессом, получаются любым другим процессом, который подписался на адрес многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-515">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-516">В следующем примере кода показано использование <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2ef52-516">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="remoteEP"><span data-ttu-id="2ef52-517">Объект <see cref="T:System.Net.IPEndPoint" />, представляющий удаленный узел, с которого выполняется передача данных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-517">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span></span></param>
        <summary><span data-ttu-id="2ef52-518">Возвращает UDP-датаграмму, которая была послана на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-518">Returns a UDP datagram that was sent by a remote host.</span></span></summary>
        <returns><span data-ttu-id="2ef52-519">Массив типа <see cref="T:System.Byte" />, который содержит данные датаграммы.</span><span class="sxs-lookup"><span data-stu-id="2ef52-519">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-520"><xref:System.Net.Sockets.UdpClient.Receive%2A> Метод будет блокироваться, пока не получена датаграмма с удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="2ef52-520">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="2ef52-521">Если данные доступны, <xref:System.Net.Sockets.UdpClient.Receive%2A> метод считывает первой датаграммы из очереди и вернет блок данных в виде массива байтов.</span><span class="sxs-lookup"><span data-stu-id="2ef52-521">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="2ef52-522">Этот метод заполняет `remoteEP` параметр с <xref:System.Net.IPAddress> и номер порта отправителя.</span><span class="sxs-lookup"><span data-stu-id="2ef52-522">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="2ef52-523">При указании удаленный узел по умолчанию в <xref:System.Net.Sockets.UdpClient.Connect%2A> метода <xref:System.Net.Sockets.UdpClient.Receive%2A> метод принимает датаграмм только с этого хоста.</span><span class="sxs-lookup"><span data-stu-id="2ef52-523">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="2ef52-524">Все остальные датаграммы будут отменены.</span><span class="sxs-lookup"><span data-stu-id="2ef52-524">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="2ef52-525">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-525">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-526">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-526">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-527">Если вы собираетесь прием многоадресных датаграмм, не следует вызывать <xref:System.Net.Sockets.UdpClient.Connect%2A> метод до вызова метода <xref:System.Net.Sockets.UdpClient.Receive%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-527">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="2ef52-528"><xref:System.Net.Sockets.UdpClient> Используется для получения датаграммы должны создаваться с помощью номера портов для многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-528">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-529">В следующем примере демонстрируется <xref:System.Net.Sockets.UdpClient.Receive%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-529">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="2ef52-530"><xref:System.Net.Sockets.UdpClient.Receive%2A> Метод блокирует выполнение, пока не получит сообщение.</span><span class="sxs-lookup"><span data-stu-id="2ef52-530">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="2ef52-531">С помощью <xref:System.Net.IPEndPoint> передаваемый <xref:System.Net.Sockets.UdpClient.Receive%2A>, выявленной удостоверение узла, отвечает на запросы.</span><span class="sxs-lookup"><span data-stu-id="2ef52-531">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-532">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-532">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-533">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-533">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ef52-534">Асинхронно возвращает UDP-датаграмму, которая была послана на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-534">Returns a UDP datagram asynchronously that was sent by a remote host.</span></span></summary>
        <returns><span data-ttu-id="2ef52-535">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-535">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span>  
  
 <span data-ttu-id="2ef52-536">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-536">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-537">Эта операция не будет блокирована.</span><span class="sxs-lookup"><span data-stu-id="2ef52-537">This operation will not block.</span></span> <span data-ttu-id="2ef52-538">Возвращенный <xref:System.Threading.Tasks.Task%601>> объекта будет выполнена после получения пакетов UDP.</span><span class="sxs-lookup"><span data-stu-id="2ef52-538">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="2ef52-539">Если указан удаленный узел по умолчанию в <xref:System.Net.Sockets.UdpClient.Connect%2A> метод, этот метод принимает датаграмм только с этого хоста.</span><span class="sxs-lookup"><span data-stu-id="2ef52-539">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="2ef52-540">Все остальные датаграммы будут отменены.</span><span class="sxs-lookup"><span data-stu-id="2ef52-540">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="2ef52-541">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-541">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-542">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-542">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2ef52-543">Если вы собираетесь прием многоадресных датаграмм, не следует вызывать <xref:System.Net.Sockets.UdpClient.Connect%2A> метод до вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="2ef52-543">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="2ef52-544"><xref:System.Net.Sockets.UdpClient> Используется для получения датаграммы должны создаваться с помощью номера портов для многоадресной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-544">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-545">Основной объект <see cref="T:System.Net.Sockets.Socket" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-545">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-546">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-546">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ef52-547">Отправляет датаграмму UDP в удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-547">Sends a UDP datagram to a remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram"><span data-ttu-id="2ef52-548">Массив типа <see cref="T:System.Byte" />, задающий UDP-датаграмму, которую предполагается послать в виде байтового массива.</span><span class="sxs-lookup"><span data-stu-id="2ef52-548">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="2ef52-549">Число байт в датаграмме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-549">The number of bytes in the datagram.</span></span></param>
        <summary><span data-ttu-id="2ef52-550">Отправляет датаграмму UDP в удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-550">Sends a UDP datagram to a remote host.</span></span></summary>
        <returns><span data-ttu-id="2ef52-551">Число отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="2ef52-551">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-552">Эта перегрузка датаграмм удаленного узла, заданного в <xref:System.Net.Sockets.UdpClient.Connect%2A> метод и возвращает число байтов, отправленных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-552">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="2ef52-553">Если вы не вызываете <xref:System.Net.Sockets.UdpClient.Connect%2A> перед вызовом этой перегрузки <xref:System.Net.Sockets.UdpClient.Send%2A> метод вызывает исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-553">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-554">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-554">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-555">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-555">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2ef52-556">Если вы хотите отправить датаграмм другой удаленный хост, необходимо вызвать <xref:System.Net.Sockets.UdpClient.Connect%2A> метод и укажите нужное удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="2ef52-556">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="2ef52-557">Используйте один из других <xref:System.Net.Sockets.UdpClient.Send%2A> перегруженных версий метода для отправки датаграмм адрес широковещательной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-557">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-558">В следующем примере демонстрируется <xref:System.Net.Sockets.UdpClient.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-558">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2ef52-559">Необходимо установить удаленный узел по умолчанию перед использованием этой перегрузки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-559">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-560">Свойство <paramref name="dgram" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-560"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ef52-561">Для объекта <see cref="T:System.Net.Sockets.UdpClient" /> уже установлен удаленный узел, используемый по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-561">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-562">Объект <see cref="T:System.Net.Sockets.UdpClient" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-562">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-563">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-563">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="dgram"><span data-ttu-id="2ef52-564">Массив типа <see cref="T:System.Byte" />, задающий UDP-датаграмму, которую предполагается послать в виде байтового массива.</span><span class="sxs-lookup"><span data-stu-id="2ef52-564">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="2ef52-565">Число байт в датаграмме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-565">The number of bytes in the datagram.</span></span></param>
        <param name="endPoint"><span data-ttu-id="2ef52-566">Объект <see cref="T:System.Net.IPEndPoint" />, предоставляющий узел и порт, на которые передается датаграмма.</span><span class="sxs-lookup"><span data-stu-id="2ef52-566">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span></span></param>
        <summary><span data-ttu-id="2ef52-567">Отправляет UDP-датаграмму в узел в указанной удаленной конечной точке.</span><span class="sxs-lookup"><span data-stu-id="2ef52-567">Sends a UDP datagram to the host at the specified remote endpoint.</span></span></summary>
        <returns><span data-ttu-id="2ef52-568">Число отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="2ef52-568">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-569"><xref:System.Net.Sockets.UdpClient.Send%2A> Метод датаграмм, на указанную конечную точку и возвращает количество успешно отправленных байт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-569">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="2ef52-570">Перед вызовом этой перегрузки необходимо сначала создать <xref:System.Net.IPEndPoint> с помощью IP-адреса и порта удаленного узла, на который будут доставляться датаграммы номер.</span><span class="sxs-lookup"><span data-stu-id="2ef52-570">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="2ef52-571">По умолчанию широковещательные сможет отправить датаграмму адресов, 255.255.255.255, указав <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> для <xref:System.Net.IPAddress.Address%2A> свойство <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-571">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="2ef52-572">После создания этого <xref:System.Net.IPEndPoint>, передайте его <xref:System.Net.Sockets.UdpClient.Send%2A> метод как `endPoint` параметр.</span><span class="sxs-lookup"><span data-stu-id="2ef52-572">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="2ef52-573">Если вы хотите отправить датаграмм широковещательный адрес, используйте <xref:System.Net.Sockets.UdpClient.Client%2A> метод, чтобы получить основной <xref:System.Net.Sockets.Socket>и для параметра сокета <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-573">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2ef52-574">Также можно вернуться к использованию <xref:System.Net.Sockets.Socket> класса.</span><span class="sxs-lookup"><span data-stu-id="2ef52-574">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-575">Не имеют `endPoint` параметр этого метода, если вы уже установили удаленного узла с <xref:System.Net.Sockets.UdpClient.Connect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-575">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2ef52-576">В противном случае <xref:System.Net.Sockets.UdpClient.Send%2A> метод вызывает исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-576">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-577">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-577">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-578">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-578">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-579">В следующем примере демонстрируется <xref:System.Net.Sockets.UdpClient.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-579">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2ef52-580">В этом примере используется <xref:System.Net.IPEndPoint> для указания целевого узла.</span><span class="sxs-lookup"><span data-stu-id="2ef52-580">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-581">Свойство <paramref name="dgram" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-581"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ef52-582">Для объекта <see cref="T:System.Net.Sockets.UdpClient" /> уже установлен удаленный узел, используемый по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-582"><see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2ef52-583"><see cref="T:System.Net.Sockets.UdpClient" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-583"><see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-584">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-584">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram"><span data-ttu-id="2ef52-585">Массив типа <see cref="T:System.Byte" />, задающий UDP-датаграмму, которую предполагается послать в виде байтового массива.</span><span class="sxs-lookup"><span data-stu-id="2ef52-585">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="2ef52-586">Число байт в датаграмме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-586">The number of bytes in the datagram.</span></span></param>
        <param name="hostname"><span data-ttu-id="2ef52-587">Имя удаленного узла, на который планируется отправить датаграмму.</span><span class="sxs-lookup"><span data-stu-id="2ef52-587">The name of the remote host to which you intend to send the datagram.</span></span></param>
        <param name="port"><span data-ttu-id="2ef52-588">Номер удаленного порта, с которым планируется обмен данных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-588">The remote port number with which you intend to communicate.</span></span></param>
        <summary><span data-ttu-id="2ef52-589">Отправляет UDP-датаграмму на заданный порт указанного удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="2ef52-589">Sends a UDP datagram to a specified port on a specified remote host.</span></span></summary>
        <returns><span data-ttu-id="2ef52-590">Число отправленных байтов.</span><span class="sxs-lookup"><span data-stu-id="2ef52-590">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-591"><xref:System.Net.Sockets.UdpClient.Send%2A> Метод датаграмм значения, указанные в `hostname` и `port` параметров и возвращает количество успешно переданных байтов.</span><span class="sxs-lookup"><span data-stu-id="2ef52-591">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="2ef52-592">Можно посылать датаграммы адрес широковещательной рассылки по умолчанию путем задания значения «255.255.255.255» для `hostname` значение параметра.</span><span class="sxs-lookup"><span data-stu-id="2ef52-592">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="2ef52-593">Если вы хотите отправить датаграмм широковещательный адрес, используйте <xref:System.Net.Sockets.UdpClient.Client%2A> метод, чтобы получить основной <xref:System.Net.Sockets.Socket>и для параметра сокета <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-593">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2ef52-594">Также можно вернуться к использованию <xref:System.Net.Sockets.Socket> класса.</span><span class="sxs-lookup"><span data-stu-id="2ef52-594">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ef52-595">Не задавайте имя хоста или номер_порта этот метод, если вы уже установили удаленного узла с <xref:System.Net.Sockets.UdpClient.Connect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-595">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2ef52-596">В противном случае <xref:System.Net.Sockets.UdpClient.Send%2A> метод вызывает исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-596">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-597">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-597">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-598">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-598">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-599">В следующем примере демонстрируется <xref:System.Net.Sockets.UdpClient.Send%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-599">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2ef52-600">В этом примере используется имя узла и номер порта для определения целевого узла.</span><span class="sxs-lookup"><span data-stu-id="2ef52-600">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-601">Свойство <paramref name="dgram" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-601"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ef52-602">Для объекта <see cref="T:System.Net.Sockets.UdpClient" /> уже установлен удаленный узел, используемый по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-602">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-603">Объект <see cref="T:System.Net.Sockets.UdpClient" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-603">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-604">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-604">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ef52-605">Асинхронно отправляет датаграмму UPD на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-605">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="2ef52-606">Массив типа <see cref="T:System.Byte" />, задающий UDP-датаграмму, которую предполагается послать в виде байтового массива.</span><span class="sxs-lookup"><span data-stu-id="2ef52-606">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="2ef52-607">Число байт в датаграмме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-607">The number of bytes in the datagram.</span></span></param>
        <summary><span data-ttu-id="2ef52-608">Асинхронно отправляет датаграмму UPD на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-608">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
        <returns><span data-ttu-id="2ef52-609">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-609">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-610">Эта перегрузка датаграмм удаленного узла, заданного в <xref:System.Net.Sockets.UdpClient.Connect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-610">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2ef52-611">Если вы не вызываете <xref:System.Net.Sockets.UdpClient.Connect%2A> перед вызовом этой перегрузки, метод вызывает исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-611">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-612">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-612">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-613">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-613">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2ef52-614">Если вы хотите отправить датаграмм другой удаленный хост, необходимо вызвать <xref:System.Net.Sockets.UdpClient.Connect%2A> метод и укажите нужное удаленного узла.</span><span class="sxs-lookup"><span data-stu-id="2ef52-614">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="2ef52-615">Используйте один из других <xref:System.Net.Sockets.UdpClient.SendAsync%2A> перегруженных версий метода для отправки датаграмм адрес широковещательной рассылки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-615">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-616">Свойство <paramref name="dgram" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-616"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ef52-617">Для объекта <see cref="T:System.Net.Sockets.UdpClient" /> уже установлен удаленный узел, используемый по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-617">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-618">Объект <see cref="T:System.Net.Sockets.UdpClient" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-618">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-619">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-619">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="2ef52-620">Массив типа <see cref="T:System.Byte" />, задающий UDP-датаграмму, которую предполагается послать в виде байтового массива.</span><span class="sxs-lookup"><span data-stu-id="2ef52-620">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="2ef52-621">Число байт в датаграмме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-621">The number of bytes in the datagram.</span></span></param>
        <param name="endPoint"><span data-ttu-id="2ef52-622">Объект <see cref="T:System.Net.IPEndPoint" />, предоставляющий узел и порт, на которые передается датаграмма.</span><span class="sxs-lookup"><span data-stu-id="2ef52-622">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span></span></param>
        <summary><span data-ttu-id="2ef52-623">Асинхронно отправляет датаграмму UPD на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-623">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
        <returns><span data-ttu-id="2ef52-624">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-624">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-625">Этот метод отправляет датаграммы на указанную конечную точку.</span><span class="sxs-lookup"><span data-stu-id="2ef52-625">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="2ef52-626">Перед вызовом этой перегрузки необходимо сначала создать <xref:System.Net.IPEndPoint> с помощью IP-адреса и порта удаленного узла, на который будут доставляться датаграммы номер.</span><span class="sxs-lookup"><span data-stu-id="2ef52-626">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="2ef52-627">По умолчанию широковещательные сможет отправить датаграмму адресов, 255.255.255.255, указав <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> для <xref:System.Net.IPAddress.Address%2A> свойство <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-627">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="2ef52-628">После создания этого <xref:System.Net.IPEndPoint>, передать его этому методу в качестве `endPoint` параметра.</span><span class="sxs-lookup"><span data-stu-id="2ef52-628">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="2ef52-629">Если вы хотите отправить датаграмм широковещательный адрес, используйте <xref:System.Net.Sockets.UdpClient.Client%2A> метод, чтобы получить основной <xref:System.Net.Sockets.Socket>и для параметра сокета <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-629">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2ef52-630">Также можно вернуться к использованию <xref:System.Net.Sockets.Socket> класса.</span><span class="sxs-lookup"><span data-stu-id="2ef52-630">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2ef52-631">Не имеют `endPoint` параметр этого метода, если вы уже установили удаленного узла с <xref:System.Net.Sockets.UdpClient.Connect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-631">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2ef52-632">В противном случае этот метод вызывает исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-632">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-633">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-633">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-634">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-634">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-635">Свойство <paramref name="dgram" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-635"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ef52-636">Для объекта <see cref="T:System.Net.Sockets.UdpClient" /> уже установлен удаленный узел, используемый по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-636"><see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2ef52-637"><see cref="T:System.Net.Sockets.UdpClient" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-637"><see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-638">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-638">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="2ef52-639">Массив типа <see cref="T:System.Byte" />, задающий UDP-датаграмму, которую предполагается послать в виде байтового массива.</span><span class="sxs-lookup"><span data-stu-id="2ef52-639">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="2ef52-640">Число байт в датаграмме.</span><span class="sxs-lookup"><span data-stu-id="2ef52-640">The number of bytes in the datagram.</span></span></param>
        <param name="hostname"><span data-ttu-id="2ef52-641">Имя удаленного узла, на который планируется отправить датаграмму.</span><span class="sxs-lookup"><span data-stu-id="2ef52-641">The name of the remote host to which you intend to send the datagram.</span></span></param>
        <param name="port"><span data-ttu-id="2ef52-642">Номер удаленного порта, с которым планируется обмен данных.</span><span class="sxs-lookup"><span data-stu-id="2ef52-642">The remote port number with which you intend to communicate.</span></span></param>
        <summary><span data-ttu-id="2ef52-643">Асинхронно отправляет датаграмму UPD на удаленный узел.</span><span class="sxs-lookup"><span data-stu-id="2ef52-643">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
        <returns><span data-ttu-id="2ef52-644">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-644">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-645">Этот метод передает датаграммы на значения, указанные в `hostname` и `port` параметров.</span><span class="sxs-lookup"><span data-stu-id="2ef52-645">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="2ef52-646">Можно посылать датаграммы адрес широковещательной рассылки по умолчанию путем задания значения «255.255.255.255» для `hostname` значение параметра.</span><span class="sxs-lookup"><span data-stu-id="2ef52-646">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="2ef52-647">Если вы хотите отправить датаграмм широковещательный адрес, используйте <xref:System.Net.Sockets.UdpClient.Client%2A> метод, чтобы получить основной <xref:System.Net.Sockets.Socket>и для параметра сокета <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-647">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2ef52-648">Также можно вернуться к использованию <xref:System.Net.Sockets.Socket> класса.</span><span class="sxs-lookup"><span data-stu-id="2ef52-648">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2ef52-649">Не задавайте имя хоста или номер_порта этот метод, если вы уже установили удаленного узла с <xref:System.Net.Sockets.UdpClient.Connect%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2ef52-649">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2ef52-650">В противном случае этот метод вызывает исключение <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2ef52-650">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2ef52-651">При получении <xref:System.Net.Sockets.SocketException>, используйте <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> получить конкретный код ошибки.</span><span class="sxs-lookup"><span data-stu-id="2ef52-651">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2ef52-652">Получив этот код можно было подробное описание ошибки документации по кодам ошибок API Windows Sockets версии 2 в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="2ef52-652">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ef52-653">Свойство <paramref name="dgram" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-653"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ef52-654">Для объекта <see cref="T:System.Net.Sockets.UdpClient" /> уже установлен удаленный узел, используемый по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2ef52-654">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2ef52-655">Объект <see cref="T:System.Net.Sockets.UdpClient" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="2ef52-655">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="2ef52-656">Произошла ошибка при обращении к сокету.</span><span class="sxs-lookup"><span data-stu-id="2ef52-656">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ef52-657">Получает или задает значение, указывающее время существования TTL (Time To Live) для IP-пакетов, отправленных объектом <see cref="T:System.Net.Sockets.UdpClient" />.</span><span class="sxs-lookup"><span data-stu-id="2ef52-657">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span></span></summary>
        <value><span data-ttu-id="2ef52-658">Значение времени существования TTL.</span><span class="sxs-lookup"><span data-stu-id="2ef52-658">The TTL value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ef52-659">Значение TTL указывает максимальное число маршрутизаторов, пакет может пересекать перед маршрутизатор отменяет пакет и протокол управления сообщений протокола ICMP (Internet) «Превышено TTL» отправителю возвращается сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="2ef52-659">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ef52-660">В следующем примере кода показано использование <xref:System.Net.Sockets.UdpClient.Ttl%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2ef52-660">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>