<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22d8e0a33fcc708ac83a1356d04077ab35d0449c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460938" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Приемник клиента для многоадресного трафика, отправляемого из одного источника. Этот трафик также называется многоадресной рассылкой, зависящей от отправителя (Source Specific Multicast, SSM).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Должен быть известен адрес группы многоадресной рассылки и исходный адрес отправителя.  
  
 Кроме получения данных от определенного отправителя <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> клиент также может отправлять обратно отправителю одноадресной передачи данных.  
  
 Чтобы получать многоадресные из нескольких источников или при источники не известна заранее, используйте <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> вместо этого класс.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Исходный адрес отправителя, на который должен подписаться данный получатель.</param>
        <param name="groupAddress">Адрес группы многоадресной рассылки, на который должен подписаться данный получатель.</param>
        <param name="localPort">Локальный порт, к которому должен привязываться данный получатель.</param>
        <summary>Создает новый UDP-клиент <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />, который может подписаться на адрес группы и принимать датаграммы от одного отправителя.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> Конструктор связывает многоадресной рассылки UDP-сокет групповой адрес и порт, но не привязки или в ином случае используйте сокета.  
  
 `groupAddress` Параметр может быть IPv4 или IPv6 многоадресной рассылки адрес. Однако семейства адресов `sourceAddress` и `groupAddress` параметров должно быть таким же.  
  
 `localPort` Не должна указывать параметр порта меньше 1024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Семейства адресов <paramref name="sourceAddress" /> и <paramref name="groupAddress" /> должны быть одинаковыми.</exception>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="sourceAddress" /> является ссылкой на null (Nothing в Visual Basic).  
  
 - или -  
  
 Параметр <paramref name="groupAddress" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="localPort" /> меньше 0.  
  
 - или -  
  
 Значение <paramref name="localPort" /> больше 65 535.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          Значение <paramref name="localPort" /> меньше 1024.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Метод обратного вызова, вызываемый после завершения операции.</param>
        <param name="state">Необязательные сведения о состоянии для передачи в метод <c>callback</c> для этой операции.</param>
        <summary>Привязывает сокет и начинает операцию присоединения для группы многоадресной рассылки, чтобы обеспечить получение датаграмм из одного адреса-источника.</summary>
        <returns>Возвращает <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" />, который ссылается на эту операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> Метод привязывает локальный порт многоадресной рассылки UDP-сокет и присоединяет группу многоадресной рассылки, чтобы разрешить получение датаграмм из одного адреса-источника. Адрес группы многоадресной рассылки, одного адреса-источника и локальный порт для привязки к указаны в <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> конструктора.  
  
 Метод, указанный в `callback` вызывается при завершении операции в группу многоадресной рассылки.  
  
 При необходимости средой выполнения, <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> метод также выполняет проверку политики, чтобы подтвердить допустимость клиента для доступа к группе многоадресной рассылки. Если клиент не разрешен доступ, <xref:System.Net.Sockets.SocketException> со <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки уже присоединена или операции присоединения в данный момент выполняется.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Буфер для хранения полученных данных.</param>
        <param name="offset">Смещение в байтах от начала <c>buffer</c>, где должны храниться данные.</param>
        <param name="count">Максимальное число байтов для получения и сохранения в <c>buffer</c>.</param>
        <param name="callback">Метод обратного вызова, вызываемый после завершения операции.</param>
        <param name="state">Необязательные сведения о состоянии для передачи в метод <c>callback</c> для этой операции.</param>
        <summary>Начинает операцию получения пакета из присоединенной группы многоадресной рассылки и вызывает заданный обратный вызов при поступлении пакета в группу от указанного отправителя.</summary>
        <returns>Возвращает <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" />, который ссылается на эту операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> Метод начинает операцию получения пакета UDP из соединяемых группы многоадресной рассылки от одного отправителя. Локальный порт, от группы многоадресной рассылки и исходный адрес отправителя указаны в <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> конструктора. Многоадресного клиента необходимо также выполнить соединение для группы многоадресной рассылки.  
  
 Метод, указанный в `callback` был вызван, когда получил пакет.  
  
 Это могут быть ошибка сокета при сбое операции receive синхронно, несмотря на то что нередко с UDP. В случае сбоя сокета <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="buffer" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> меньше 0.  
  
 - или -  
  
 <paramref name="offset" /> превышает длину <paramref name="buffer" />.  
  
 - или -  
  
 <paramref name="count" /> меньше 0.  
  
 - или -  
  
 <paramref name="offset" /> + количество превышает длину этого экземпляра <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету для получения.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Буфер, содержащий данные для отправки.</param>
        <param name="offset">Смещение в байтах от начала <c>buffer</c> для чтения отправляемых данных.</param>
        <param name="count">Количество байтов, которые необходимо отправить из <c>buffer</c>.</param>
        <param name="remotePort">Удаленный порт, в который нужно отправить пакет. Удаленный адрес задается конструктором <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />.</param>
        <param name="callback">Метод обратного вызова, вызываемый после завершения операции.</param>
        <param name="state">Необязательные сведения о состоянии для передачи в метод <c>callback</c> для этой операции.</param>
        <summary>Начинает операцию отправки одноадресного пакета в предварительно указанный источник.</summary>
        <returns>Возвращает <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" />, который ссылается на эту операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> Метод начинает операцию отправки пакета UDP для предварительно указанный источник.  
  
 Некоторые протоколы использовать эту информацию для передачи управления потоком, качество статистики службы или восстановления сообщений.  
  
 Метод, указанный в `callback` был вызван после отправки пакета.  
  
 Клиента необходимо выполнить соединение для группы многоадресной рассылки.  
  
 Если указан порт назначения в `remotePort` параметр является менее 1 024 <xref:System.Net.Sockets.SocketException> со <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Можно иметь ошибка сокета, если операция отправки была неудачной синхронно, несмотря на то что нередко с UDP. В случае сбоя сокета <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="buffer" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> меньше 0.  
  
 - или -  
  
 <paramref name="offset" /> превышает длину <paramref name="buffer" />.  
  
 - или -  
  
 <paramref name="count" /> меньше 0.  
  
 - или -  
  
 <paramref name="offset" /> + количество превышает длину этого экземпляра <paramref name="buffer" />.  
  
 - или -  
  
 Параметр <paramref name="remotePort" /> имеет значение меньше 0 или больше 65 535.</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Производит отключение от группы многоадресной рассылки и освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> и базовым объектом <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите метод <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> по окончании использования класса <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. Метод <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> оставляет класс <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> в непригодном для использования состоянии. После вызова метода <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> , сборщик мусора мог освободить память, <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> занимаемую.  
  
 Всегда вызывайте метод <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> перед освобождением последней ссылки на класс <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. В противном случае используемые им ресурсы не будут освобождены до тех пор, пока сборщик мусора не вызовет для объекта <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> метод <xref:System.Object.Finalize%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Результат асинхронной операции присоединения.</param>
        <summary>Завершает операцию асинхронного присоединения группы в группу многоадресной рассылки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> Метод завершения привязку в асинхронной операции сокета и соединения в группу многоадресной рассылки.  
  
 При необходимости средой выполнения, <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> метод также выполняет проверку политики, чтобы подтвердить допустимость клиента для доступа к группе многоадресной рассылки. Если клиент не разрешен доступ, <xref:System.Net.Sockets.SocketException> со <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Если происходит ошибка сокета при выполнении операции группы соединения, <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="result" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">Результат асинхронной операции получения.</param>
        <param name="sourcePort">Конечная точка источника, из которой был получен пакет.</param>
        <summary>Завершает асинхронную операцию получения пакета из присоединенных групп многоадресной рассылки и предоставляет полученную информацию.</summary>
        <returns>Возвращает <see cref="T:System.Int32" />.  
  
 Длина в байтах сообщения, сохраненного в параметре <paramref name="buffer" />, переданном в метод <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> Метод завершает асинхронную операцию получения пакета из одного источника в группу многоадресной рассылки.  
  
 Если происходит ошибка сокета при выполнении операции получения <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="result" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Результат асинхронной операции отправки.</param>
        <summary>Завершает операцию отправки одноадресного пакета в один источник.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> Метод завершает асинхронную операцию, чтобы отправить пакет в одной предварительно указанный источник.  
  
 Если происходит ошибка сокета при выполнении операции получения <xref:System.Net.Sockets.SocketException> возникает исключение. Сообщение об ошибке указывается как член <xref:System.Net.Sockets.SocketError> перечисления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="result" /> является ссылкой на null (Nothing в Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> удален.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Произошла ошибка при попытке доступа к сокету.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает размер в байтах буфера приема объекта <see cref="T:System.Net.Sockets.Socket" />, используемого для многоадресных операций получения в этом экземпляре <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</summary>
        <value>Возвращает <see cref="T:System.Int32" />.  
  
 Размер буфера приема (в байтах).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReceiveBufferSize` Свойство Возвращает или задает размер в байтах буфера приема базового <xref:System.Net.Sockets.Socket> для многоадресных операций получения в этом <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> экземпляр. В частности `ReceiveBufferSize` свойство управляет размером буфера, используемого стека при поступлении, но приложение еще не вызван <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> метод. Если этот буфер заполняется, и сохранить поступающих пакетов перед приложение вызывает <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> и <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> методы старого пакеты будут удалены. Приложения не смогут получать старые пакеты и получат более новые пакеты при вызове <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> метода.  
  
 Размер буфера приема в Windows по умолчанию равно 8192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанный размер буфера меньше 0.</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает размер в байтах буфера отправки объекта <see cref="T:System.Net.Sockets.Socket" />, используемого для многоадресных операций отправки в этом экземпляре <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</summary>
        <value>Возвращает <see cref="T:System.Int32" />.  
  
 Размер буфера отправки в байтах.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SendBufferSize, свойство Возвращает или задает размер в байтах буфера отправки базового <xref:System.Net.Sockets.Socket> для многоадресных операций отправки в это <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> экземпляра.  
  
 В Mac OS X <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> свойство определяет, сколько байтов может быть в буфере ожидания отправки сетевой стек перед дальнейшие вызовы <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> начинаются сбои в метод. В Mac OS X могут нужен беспокоиться это свойство, если они отправляют большое количество пакетов UDP за короткий промежуток времени.  
  
 В Windows, вызовы <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> метод займет больше времени, для вызова функции обратного вызова, в зависимости от значения <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> свойство при заполнении буфера отправки. <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> Только свойство, управляет ли буфер пользователя остается заблокированной в физической памяти, до завершения отправки.  
  
 Размер буфера отправки в Windows по умолчанию равно 8192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанный размер буфера меньше 0.</exception>
        <exception cref="T:System.InvalidOperationException">Группа многоадресной рассылки еще не присоединена.</exception>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> удален.</exception>
      </Docs>
    </Member>
  </Members>
</Type>