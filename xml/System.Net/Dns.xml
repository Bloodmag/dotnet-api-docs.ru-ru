<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7936f4ec86c64ed688d27d3a411d4dccadafcfe5" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53332628" /></Metadata><TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5e954-101">Предоставляет простые функциональные возможности разрешения доменных имен.</span><span class="sxs-lookup"><span data-stu-id="5e954-101">Provides simple domain name resolution functionality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-102"><xref:System.Net.Dns> Класс является статическим классом, который извлекает сведения о конкретном узле из доменных имен (DNS) Интернета.</span><span class="sxs-lookup"><span data-stu-id="5e954-102">The <xref:System.Net.Dns> class is a static class that retrieves information about a specific host from the Internet Domain Name System (DNS).</span></span>  
  
 <span data-ttu-id="5e954-103">Сведения об узле из запроса DNS возвращается в экземпляре <xref:System.Net.IPHostEntry> класса.</span><span class="sxs-lookup"><span data-stu-id="5e954-103">The host information from the DNS query is returned in an instance of the <xref:System.Net.IPHostEntry> class.</span></span> <span data-ttu-id="5e954-104">Если указанный узел имеет более одной записи в базе данных DNS, <xref:System.Net.IPHostEntry> содержит несколько IP-адресов и псевдонимов.</span><span class="sxs-lookup"><span data-stu-id="5e954-104">If the specified host has more than one entry in the DNS database, <xref:System.Net.IPHostEntry> contains multiple IP addresses and aliases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e954-105">В следующем примере запрашивается DNS информации из базы данных для узла www.contoso.com.</span><span class="sxs-lookup"><span data-stu-id="5e954-105">The following example queries the DNS database for information on the host www.contoso.com.</span></span>  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="5e954-106">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-106">The host name or IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="5e954-107">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-107">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="5e954-108">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-108">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="5e954-109">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-109">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="5e954-110">Асинхронно возвращает IP-адреса для указанного узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-110">Asynchronously returns the Internet Protocol (IP) addresses for the specified host.</span></span></summary>
        <returns><span data-ttu-id="5e954-111">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span><span class="sxs-lookup"><span data-stu-id="5e954-111">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-112"><xref:System.Net.Dns.BeginGetHostAddresses%2A> Метод асинхронно запрашивает DNS-сервера для IP-адреса, которые связаны с именем узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-112">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method asynchronously queries a DNS server for the IP addresses that are associated with a host name.</span></span> <span data-ttu-id="5e954-113">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запросов на DNS-сервере.</span><span class="sxs-lookup"><span data-stu-id="5e954-113">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-114">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-114">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-115">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-115">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="5e954-116">Если пустая строка передается как `hostNameOrAddress` аргумента, то этот метод возвращает IPv4 и IPv6-адреса локального узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-116">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="5e954-117">Асинхронный <xref:System.Net.Dns.BeginGetHostAddresses%2A> операция должна быть завершена путем вызова <xref:System.Net.Dns.EndGetHostAddresses%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-117">The asynchronous <xref:System.Net.Dns.BeginGetHostAddresses%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostAddresses%2A> method.</span></span> <span data-ttu-id="5e954-118">Как правило, вызывается метод `requestCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="5e954-118">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="5e954-119">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-119">This method does not block until the operation is complete.</span></span> <span data-ttu-id="5e954-120">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Dns.GetHostAddresses%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-120">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostAddresses%2A> method.</span></span>  
  
 <span data-ttu-id="5e954-121">Дополнительные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5e954-121">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-122">Свойство <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-122"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e954-123">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="5e954-123">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-124">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-124">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e954-125"><paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-125"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-126">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-126">for accessing DNS information.</span></span> <span data-ttu-id="5e954-127">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-127">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="5e954-128">DNS-имя узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-128">The DNS name of the host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="5e954-129">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-129">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="5e954-130">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-130">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="5e954-131">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-131">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="5e954-132">Начинает асинхронный запрос сведений <see cref="T:System.Net.IPHostEntry" /> об указанном DNS-имени узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-132">Begins an asynchronous request for <see cref="T:System.Net.IPHostEntry" /> information about the specified DNS host name.</span></span></summary>
        <returns><span data-ttu-id="5e954-133">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span><span class="sxs-lookup"><span data-stu-id="5e954-133">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-134">Асинхронный <xref:System.Net.Dns.BeginGetHostByName%2A> операция должна быть завершена путем вызова <xref:System.Net.Dns.EndGetHostByName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-134">The asynchronous <xref:System.Net.Dns.BeginGetHostByName%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostByName%2A> method.</span></span> <span data-ttu-id="5e954-135">Как правило, вызывается метод `requestCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="5e954-135">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="5e954-136">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-136">This method does not block until the operation is complete.</span></span> <span data-ttu-id="5e954-137">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Dns.GetHostByName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-137">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="5e954-138">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-138">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-139">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-139">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-140">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-140">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-141">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-141"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-142">При выполнении запроса DNS произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-142">An error was encountered executing the DNS query.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-143">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-143">for accessing DNS information.</span></span> <span data-ttu-id="5e954-144">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-144">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="5e954-145">Обзор асинхронного программирования</span><span class="sxs-lookup"><span data-stu-id="5e954-145">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e954-146">Асинхронно разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-146">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5e954-147">IP-адрес, который следует разрешить.</span><span class="sxs-lookup"><span data-stu-id="5e954-147">The IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="5e954-148">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-148">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="5e954-149">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-149">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="5e954-150">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-150">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="5e954-151">Асинхронно разрешает IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-151">Asynchronously resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5e954-152">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span><span class="sxs-lookup"><span data-stu-id="5e954-152">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-153"><xref:System.Net.Dns.BeginGetHostEntry%2A> Метод асинхронно запрашивает DNS-сервера для IP-адресов и псевдонимов, связанных с IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-153">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method asynchronously queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="5e954-154">**Примечание** этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-154">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-155">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-155">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="5e954-156">Асинхронный <xref:System.Net.Dns.BeginGetHostEntry%2A> операция должна быть завершена путем вызова <xref:System.Net.Dns.EndGetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-156">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="5e954-157">Как правило, вызывается метод `requestCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="5e954-157">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="5e954-158">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-158">This method does not block until the operation is complete.</span></span> <span data-ttu-id="5e954-159">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Dns.GetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-159">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="5e954-160">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="5e954-160">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e954-161">В следующем примере кода используется <xref:System.Net.Dns.BeginGetHostEntry%2A> метод разрешение IP-адрес для <xref:System.Net.IPHostEntry> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5e954-161">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-162">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-162"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-163">При разрешении <paramref name="address" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-163">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e954-164"><paramref name="address" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-164"><paramref name="address" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-165">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-165">for accessing DNS information.</span></span> <span data-ttu-id="5e954-166">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-166">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="5e954-167">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-167">The host name or IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="5e954-168">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-168">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="5e954-169">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-169">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="5e954-170">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-170">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="5e954-171">Асинхронно разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-171">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5e954-172">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span><span class="sxs-lookup"><span data-stu-id="5e954-172">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-173"><xref:System.Net.Dns.BeginGetHostEntry%2A> Метод запрашивает DNS-сервера для IP-адрес, связанный с именем узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-173">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="5e954-174">**Примечание** этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-174">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-175">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-175">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="5e954-176">Асинхронный <xref:System.Net.Dns.BeginGetHostEntry%2A> операция должна быть завершена путем вызова <xref:System.Net.Dns.EndGetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-176">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="5e954-177">Как правило, вызывается метод `requestCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="5e954-177">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="5e954-178">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-178">This method does not block until the operation is complete.</span></span> <span data-ttu-id="5e954-179">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Dns.GetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-179">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="5e954-180">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-180">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e954-181">В следующем примере кода используется <xref:System.Net.Dns.BeginGetHostEntry%2A> метод разрешение IP-адрес для <xref:System.Net.IPHostEntry> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5e954-181">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-182">Свойство <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-182"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e954-183">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="5e954-183">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-184">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-184">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e954-185"><paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-185"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-186">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-186">for accessing DNS information.</span></span> <span data-ttu-id="5e954-187">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-187">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="5e954-188">DNS-имя узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-188">The DNS name of the host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="5e954-189">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-189">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="5e954-190">Пользовательский объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-190">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="5e954-191">Этот объект передается делегату <paramref name="requestCallback" /> по завершении операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-191">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="5e954-192">Начинает асинхронный запрос для разрешения DNS-имени узла или IP-адреса в экземпляр <see cref="T:System.Net.IPAddress" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-192">Begins an asynchronous request to resolve a DNS host name or IP address to an <see cref="T:System.Net.IPAddress" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5e954-193">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span><span class="sxs-lookup"><span data-stu-id="5e954-193">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-194">Асинхронный <xref:System.Net.Dns.BeginResolve%2A> операция должна быть завершена путем вызова <xref:System.Net.Dns.EndResolve%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-194">The asynchronous <xref:System.Net.Dns.BeginResolve%2A> operation must be completed by calling the <xref:System.Net.Dns.EndResolve%2A> method.</span></span> <span data-ttu-id="5e954-195">Как правило, вызывается метод `requestCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="5e954-195">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="5e954-196">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="5e954-196">This method does not block until the operation is complete.</span></span> <span data-ttu-id="5e954-197">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Dns.Resolve%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-197">To block until the operation is complete, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
 <span data-ttu-id="5e954-198">Дополнительные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-198">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-199">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-199">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-200">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e954-201">В следующем примере используется <xref:System.Net.Dns.BeginResolve%2A> для разрешения имени узла DNS для <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="5e954-201">The following example uses <xref:System.Net.Dns.BeginResolve%2A> to resolve a DNS host name to an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-202">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-202"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-203">Вызывающий код не имеет разрешения на доступ к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-203">The caller does not have permission to access DNS information.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-204">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-204">for accessing DNS information.</span></span> <span data-ttu-id="5e954-205">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-205">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="5e954-206">Обзор асинхронного программирования</span><span class="sxs-lookup"><span data-stu-id="5e954-206">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="5e954-207">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-207">An <see cref="T:System.IAsyncResult" /> instance returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="5e954-208">Завершает асинхронный запрос сведений DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-208">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="5e954-209">Массив типа <see cref="T:System.Net.IPAddress" />, в котором содержатся IP-адреса для узла, указанного в параметре <paramref name="hostNameOrAddress" /> объекта <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-209">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host specified by the <paramref name="hostNameOrAddress" /> parameter of <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-210"><xref:System.Net.Dns.BeginGetHostAddresses%2A> Метод запрашивает DNS-сервера для IP-адресов, связанный с именем узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-210">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="5e954-211">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запросов на DNS-сервере.</span><span class="sxs-lookup"><span data-stu-id="5e954-211">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 <span data-ttu-id="5e954-212">Если пустая строка передается как `hostNameOrAddress` аргумента, то этот метод возвращает IPv4 и IPv6-адреса локального узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-212">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="5e954-213">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-213">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-214">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-214">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="5e954-215">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-215">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="5e954-216">Завершает асинхронный запрос сведений DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-216">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="5e954-217">Объект <see cref="T:System.Net.IPHostEntry" />, содержащий сведения DNS об узле.</span><span class="sxs-lookup"><span data-stu-id="5e954-217">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-218">Этот метод блокируется до ее завершения.</span><span class="sxs-lookup"><span data-stu-id="5e954-218">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="5e954-219">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Dns.GetHostByName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-219">To perform this operation synchronously, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="5e954-220">Если <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> свойству `true`, <xref:System.Net.IPHostEntry.Aliases%2A> свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="5e954-220">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-221">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-221">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-222">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-222">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-223">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-223"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="5e954-224">Обзор асинхронного программирования</span><span class="sxs-lookup"><span data-stu-id="5e954-224">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="5e954-225">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="Overload:System.Net.Dns.BeginGetHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-225">An <see cref="T:System.IAsyncResult" /> instance returned by a call to an <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> method.</span></span></param>
        <summary><span data-ttu-id="5e954-226">Завершает асинхронный запрос сведений DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-226">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="5e954-227">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу.</span><span class="sxs-lookup"><span data-stu-id="5e954-227">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-228">Этот метод блокируется до ее завершения.</span><span class="sxs-lookup"><span data-stu-id="5e954-228">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="5e954-229"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="5e954-229">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="5e954-230">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Dns.GetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-230">To perform this operation synchronously, use a <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-231">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-231">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-232">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-232">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-233">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-233"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="5e954-234">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-234">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="5e954-235">Завершает асинхронный запрос сведений DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-235">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="5e954-236">Объект <see cref="T:System.Net.IPHostEntry" />, содержащий сведения DNS об узле.</span><span class="sxs-lookup"><span data-stu-id="5e954-236">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-237">Этот метод блокируется до ее завершения.</span><span class="sxs-lookup"><span data-stu-id="5e954-237">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="5e954-238">Если <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> присваивается `true`, <xref:System.Net.IPHostEntry.Aliases%2A> свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="5e954-238">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="5e954-239">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Dns.Resolve%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="5e954-239">To perform this operation synchronously, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-240">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-240">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-241">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-241">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e954-242">Следующий пример завершает асинхронный запрос сведений DNS о хосте.</span><span class="sxs-lookup"><span data-stu-id="5e954-242">The following example ends an asynchronous request for DNS host information.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-243">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-243"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="5e954-244">Обзор асинхронного программирования</span><span class="sxs-lookup"><span data-stu-id="5e954-244">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="5e954-245">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-245">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="5e954-246">Возвращает IP-адреса для указанного узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-246">Returns the Internet Protocol (IP) addresses for the specified host.</span></span></summary>
        <returns><span data-ttu-id="5e954-247">Массив типа <see cref="T:System.Net.IPAddress" />, в котором содержатся IP-адреса для узла, указанного в параметре <paramref name="hostNameOrAddress" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-247">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-248"><xref:System.Net.Dns.GetHostAddresses%2A> Метод запрашивает подсистема DNS для IP-адресов, связанный с именем узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-248">The <xref:System.Net.Dns.GetHostAddresses%2A> method queries the DNS subsystem for the IP addresses associated with a host name.</span></span> <span data-ttu-id="5e954-249">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запросов на DNS-сервере.</span><span class="sxs-lookup"><span data-stu-id="5e954-249">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>
  
 <span data-ttu-id="5e954-250">Если пустая строка передается как `hostNameOrAddress` аргумента, то этот метод возвращает IPv4 и IPv6-адреса локального узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-250">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="5e954-251">IPv6-адреса будут отфильтрованы из результатов <xref:System.Net.Dns.GetHostAddresses%2A> метод, если локальный компьютер не поддерживает IPv6 установлен.</span><span class="sxs-lookup"><span data-stu-id="5e954-251">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostAddresses%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="5e954-252">Таким образом, можно вернуть пустой <xref:System.Net.IPAddress> экземпляра, если только IPv6 результаты, если они доступны для `hostNameOrAddress`.parameter.</span><span class="sxs-lookup"><span data-stu-id="5e954-252">As a result, it is possible to get back an empty <xref:System.Net.IPAddress> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-253">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-253">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-254">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-254">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e954-255">В следующем примере кода используется <xref:System.Net.Dns.GetHostAddresses%2A> метод для разрешения IP-адресом в массив объектов типа <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="5e954-255">The following code example uses the <xref:System.Net.Dns.GetHostAddresses%2A> method to resolve an IP address to an array of type <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-256">Свойство <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-256"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e954-257">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="5e954-257">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-258">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-258">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e954-259"><paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-259"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-260">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-260">for accessing DNS information.</span></span> <span data-ttu-id="5e954-261">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-261">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="5e954-262">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-262">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="5e954-263">Возвращает IP-адреса для указанного узла как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="5e954-263">Returns the Internet Protocol (IP) addresses for the specified host as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="5e954-264">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="5e954-264">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="5e954-265">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> объекта задачи возвращает Массив типа <see cref="T:System.Net.IPAddress" />, в котором содержатся IP-адреса для узла, указанного в параметре <paramref name="hostNameOrAddress" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-265">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-266">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="5e954-266">This operation will not block.</span></span> <span data-ttu-id="5e954-267">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после `hostNameOrAddress` будет разрешена.</span><span class="sxs-lookup"><span data-stu-id="5e954-267">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="5e954-268">Этот метод отправляет запрос DNS-сервера для IP-адресов, связанный с именем узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-268">This method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="5e954-269">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запросов на DNS-сервере.</span><span class="sxs-lookup"><span data-stu-id="5e954-269">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-270">Свойство <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-270"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e954-271">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="5e954-271">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-272">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-272">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e954-273"><paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-273"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e954-274">Возвращает сведения DNS об узле для IP-адреса.</span><span class="sxs-lookup"><span data-stu-id="5e954-274">Gets DNS host information for an IP address.</span></span> <span data-ttu-id="5e954-275">В настоящее время эти методы считаются устаревшими.</span><span class="sxs-lookup"><span data-stu-id="5e954-275">These methods are now obsolete.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5e954-276">Объект <see cref="T:System.Net.IPAddress" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-276">An <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <summary><span data-ttu-id="5e954-277">Создает экземпляр <see cref="T:System.Net.IPHostEntry" /> из указанного объекта <see cref="T:System.Net.IPAddress" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-277">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from the specified <see cref="T:System.Net.IPAddress" />.</span></span></summary>
        <returns><span data-ttu-id="5e954-278">Экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-278">An <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5e954-279">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-279">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-280">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-280">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e954-281">В следующем примере создается <xref:System.Net.IPHostEntry> из <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="5e954-281">The following example creates a <xref:System.Net.IPHostEntry> from an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-282">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-282"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-283">При разрешении <paramref name="address" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-283">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-284">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-284">for accessing DNS information.</span></span> <span data-ttu-id="5e954-285">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-285">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5e954-286">IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-286">An IP address.</span></span></param>
        <summary><span data-ttu-id="5e954-287">Создает экземпляр <see cref="T:System.Net.IPHostEntry" /> из IP-адреса.</span><span class="sxs-lookup"><span data-stu-id="5e954-287">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from an IP address.</span></span></summary>
        <returns><span data-ttu-id="5e954-288">Экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-288">An <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5e954-289">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-289">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-290">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-290">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-291">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-291"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-292">При разрешении <paramref name="address" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-292">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="5e954-293"><paramref name="address" /> не является допустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-293"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-294">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-294">for accessing DNS information.</span></span> <span data-ttu-id="5e954-295">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-295">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="5e954-296">DNS-имя узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-296">The DNS name of the host.</span></span></param>
        <summary><span data-ttu-id="5e954-297">Возвращает сведения DNS для указанного DNS-имени узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-297">Gets the DNS information for the specified DNS host name.</span></span></summary>
        <returns><span data-ttu-id="5e954-298">Объект <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об узле для адреса, указанного в <paramref name="hostName" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-298">An <see cref="T:System.Net.IPHostEntry" /> object that contains host information for the address specified in <paramref name="hostName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-299"><xref:System.Net.Dns.GetHostByName%2A> Метод DNS в Интернете отправляет серверу запрос на сведения об узле.</span><span class="sxs-lookup"><span data-stu-id="5e954-299">The <xref:System.Net.Dns.GetHostByName%2A> method queries the Internet DNS server for host information.</span></span> <span data-ttu-id="5e954-300">Если передать пустую строку в качестве имени узла, этот метод получает стандартное имя узла для локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="5e954-300">If you pass an empty string as the host name, this method retrieves the standard host name for the local computer.</span></span>  
  
 <span data-ttu-id="5e954-301">Для асинхронного доступа к сведениям DNS используйте <xref:System.Net.Dns.BeginGetHostByName%2A> и <xref:System.Net.Dns.EndGetHostByName%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="5e954-301">For asynchronous access to DNS information, use the <xref:System.Net.Dns.BeginGetHostByName%2A> and <xref:System.Net.Dns.EndGetHostByName%2A> methods.</span></span>  
  
 <span data-ttu-id="5e954-302">Если <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> свойству `true`, <xref:System.Net.IPHostEntry.Aliases%2A> свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="5e954-302">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-303">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-303">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-304">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-304">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e954-305">В следующем примере используется <xref:System.Net.Dns.GetHostByName%2A> метод, чтобы получить сведения о DNS для указанного имени узла DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-305">The following example uses the <xref:System.Net.Dns.GetHostByName%2A> method to get the DNS information for the specified DNS host name.</span></span>  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-306">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-306"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e954-307">Длина <paramref name="hostName" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="5e954-307">The length of <paramref name="hostName" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-308">При разрешении <paramref name="hostName" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-308">An error is encountered when resolving <paramref name="hostName" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-309">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-309">for accessing DNS information.</span></span> <span data-ttu-id="5e954-310">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-310">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e954-311">Разрешает имя узла или IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-311">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5e954-312">IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-312">An IP address.</span></span></param>
        <summary><span data-ttu-id="5e954-313">Разрешает IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-313">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5e954-314">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу, указанному в параметре <paramref name="address" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-314">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-315"><xref:System.Net.Dns.GetHostEntry%2A> Метод запрашивает DNS-сервера для IP-адресов и псевдонимов, связанных с IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-315">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="5e954-316">IPv6-адреса будут отфильтрованы из результатов <xref:System.Net.Dns.GetHostEntry%2A> метод, если локальный компьютер не поддерживает IPv6 установлен.</span><span class="sxs-lookup"><span data-stu-id="5e954-316">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="5e954-317">Таким образом, можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляра, если только IPv6 результаты, если они доступны для `address` параметра.</span><span class="sxs-lookup"><span data-stu-id="5e954-317">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="5e954-318"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="5e954-318">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-319">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-319">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-320">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-320">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  

## Examples  
 <span data-ttu-id="5e954-321">В следующем примере кода используется <xref:System.Net.Dns.GetHostEntry%2A> метод разрешение IP-адрес для <xref:System.Net.IPHostEntry> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5e954-321">The following code example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-322">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-322"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-323">При разрешении <paramref name="address" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-323">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e954-324"><paramref name="address" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-324"><paramref name="address" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-325">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-325">for accessing DNS information.</span></span> <span data-ttu-id="5e954-326">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-326">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="5e954-327">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-327">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="5e954-328">Разрешает имя узла или IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-328">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5e954-329">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу, указанному в параметре <paramref name="hostNameOrAddress" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-329">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-330"><xref:System.Net.Dns.GetHostEntry%2A> Метод запрашивает DNS-сервера для IP-адрес, связанный с именем узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-330">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="5e954-331">Если пустая строка передается как `hostNameOrAddress` аргумента, то этот метод возвращает IPv4 и IPv6-адреса локального узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-331">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="5e954-332">Если не удается найти имя узла, <xref:System.Net.Sockets.SocketException> со значением 11001 (ошибка Windows Sockets WSAHOST_NOT_FOUND) возвращается исключение.</span><span class="sxs-lookup"><span data-stu-id="5e954-332">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="5e954-333">Это исключение может быть возвращено, если DNS-сервер не отвечает.</span><span class="sxs-lookup"><span data-stu-id="5e954-333">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="5e954-334">Это исключение также может быть возвращено, если имя не является официальным именем узла или псевдоним, или он не найден в запрашиваемой.</span><span class="sxs-lookup"><span data-stu-id="5e954-334">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="5e954-335"><xref:System.ArgumentException> Исключение также возвращается, если `hostNameOrAddress` параметр содержит <xref:System.Net.IPAddress.Any> или <xref:System.Net.IPAddress.IPv6Any>.</span><span class="sxs-lookup"><span data-stu-id="5e954-335">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="5e954-336"><xref:System.Net.Dns.GetHostEntry%2A> Метод предполагает, что если передается символьная строка IP-адрес `hostNameOrAddress` параметр, который приложению <xref:System.Net.IPHostEntry> возвращен экземпляр со всеми заданными свойствами.</span><span class="sxs-lookup"><span data-stu-id="5e954-336">The <xref:System.Net.Dns.GetHostEntry%2A> method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="5e954-337">Эти свойства включают в себя <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, и <xref:System.Net.IPHostEntry.HostName%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e954-337">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="5e954-338">В результате реализации <xref:System.Net.Dns.GetHostEntry%2A> метод видно следующее поведение при передаче строки символов:</span><span class="sxs-lookup"><span data-stu-id="5e954-338">As a result, the implementation of the <xref:System.Net.Dns.GetHostEntry%2A> method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="5e954-339">Метод пытается проанализировать адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-339">The method tries to parse the address.</span></span> <span data-ttu-id="5e954-340">Если `hostNameOrAddress` параметр содержит допустимые IP-адрес строковый литерал, а затем первый этап завершается успешно.</span><span class="sxs-lookup"><span data-stu-id="5e954-340">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="5e954-341">Обратный просмотр с помощью IP-адрес строки символов выполняется попытка получить имя узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-341">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="5e954-342">Этот параметр установлен как <xref:System.Net.IPHostEntry.HostName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5e954-342">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="5e954-343">Имя узла из обратного поиска используется снова для получения всех возможных IP-адресов связаны с именем и задать в качестве <xref:System.Net.IPHostEntry.AddressList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5e954-343">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="5e954-344">Для символьной строки IPv4 все три перечисленные выше действия может завершиться успешно.</span><span class="sxs-lookup"><span data-stu-id="5e954-344">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="5e954-345">Но возможно устаревшие записи DNS для IPv4-адрес, на самом деле принадлежит на другой узел, должны быть возвращены.</span><span class="sxs-lookup"><span data-stu-id="5e954-345">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="5e954-346">Это может привести к шаг #3 с ошибкой и выдать исключение (есть запись DNS PTR для IPv4-адрес, но нет записи DNS A для IPv4-адрес).</span><span class="sxs-lookup"><span data-stu-id="5e954-346">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="5e954-347">Для IPv6 шаг #2 может завершиться ошибкой, так как в большинстве случаев IPv6 не регистрировать обратную запись (PTR) для IPv6-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-347">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="5e954-348">Поэтому этот метод может возвращать литерал как имя узла полное доменное (имя FQDN) в строке IPv6 <xref:System.Net.IPHostEntry.HostName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5e954-348">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="5e954-349"><xref:System.Net.Dns.GetHostAddresses%2A> Метод имеет разное поведение по отношению к литералы IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-349">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="5e954-350">Если шаг #1 выше завершается успешно (он успешно выполняет разбор IP-адрес), что адрес немедленно возвращается в результате.</span><span class="sxs-lookup"><span data-stu-id="5e954-350">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="5e954-351">Нет никаких попыток обратного поиска.</span><span class="sxs-lookup"><span data-stu-id="5e954-351">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="5e954-352">IPv6-адреса будут отфильтрованы из результатов <xref:System.Net.Dns.GetHostEntry%2A> метод, если локальный компьютер не поддерживает IPv6 установлен.</span><span class="sxs-lookup"><span data-stu-id="5e954-352">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="5e954-353">Таким образом, можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляра, если только IPv6 результаты, если они доступны для `hostNameOrAddress`.parameter.</span><span class="sxs-lookup"><span data-stu-id="5e954-353">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="5e954-354"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="5e954-354">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-355">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-355">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-356">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-356">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e954-357">В следующем примере используется <xref:System.Net.Dns.GetHostEntry%2A> метод разрешение IP-адрес для <xref:System.Net.IPHostEntry> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5e954-357">The following example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-358">Параметр <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-358">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e954-359">Длина параметра <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="5e954-359">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-360">При попытке разрешения параметра <paramref name="hostNameOrAddress" /> произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-360">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e954-361">Параметр <paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-361">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-362">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-362">for accessing DNS information.</span></span> <span data-ttu-id="5e954-363">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-363">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e954-364">Разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" /> как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="5e954-364">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5e954-365">IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-365">An IP address.</span></span></param>
        <summary><span data-ttu-id="5e954-366">Разрешает IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" /> как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="5e954-366">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="5e954-367">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="5e954-367">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="5e954-368">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий информацию адреса об узле, указанного в <paramref name="address" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-368">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-369">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="5e954-369">This operation will not block.</span></span> <span data-ttu-id="5e954-370">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после `address` будет разрешена.</span><span class="sxs-lookup"><span data-stu-id="5e954-370">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `address` has been resolved.</span></span>  
  
 <span data-ttu-id="5e954-371">Этот метод отправляет запрос DNS-сервера для IP-адресов и псевдонимов, связанных с IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-371">This method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="5e954-372">IPv6-адреса будут отфильтрованы из результатов этого метода, если локальный компьютер не поддерживает IPv6 установлен.</span><span class="sxs-lookup"><span data-stu-id="5e954-372">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="5e954-373">Таким образом, можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляра, если только IPv6 результаты, если они доступны для `address` параметра.</span><span class="sxs-lookup"><span data-stu-id="5e954-373">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="5e954-374"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="5e954-374">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-375">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-375">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-376">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-376">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-377">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-377"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-378">При разрешении <paramref name="address" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-378">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e954-379"><paramref name="address" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-379"><paramref name="address" /> is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="5e954-380">Разрешаемое имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-380">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="5e954-381">Разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" /> как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="5e954-381">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="5e954-382">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="5e954-382">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="5e954-383">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий информацию адреса об узле, указанного в <paramref name="hostNameOrAddress" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-383">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-384">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="5e954-384">This operation will not block.</span></span> <span data-ttu-id="5e954-385">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после `hostNameOrAddress` будет разрешена.</span><span class="sxs-lookup"><span data-stu-id="5e954-385">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="5e954-386">Этот метод отправляет запрос DNS-сервера для IP-адрес, связанный с именем узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-386">This method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="5e954-387">Если пустая строка передается как `hostNameOrAddress` аргумента, то этот метод возвращает IPv4 и IPv6-адреса локального узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-387">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="5e954-388">Если не удается найти имя узла, <xref:System.Net.Sockets.SocketException> со значением 11001 (ошибка Windows Sockets WSAHOST_NOT_FOUND) возвращается исключение.</span><span class="sxs-lookup"><span data-stu-id="5e954-388">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="5e954-389">Это исключение может быть возвращено, если DNS-сервер не отвечает.</span><span class="sxs-lookup"><span data-stu-id="5e954-389">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="5e954-390">Это исключение также может быть возвращено, если имя не является официальным именем узла или псевдоним, или он не найден в запрашиваемой.</span><span class="sxs-lookup"><span data-stu-id="5e954-390">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="5e954-391"><xref:System.ArgumentException> Исключение также возвращается, если `hostNameOrAddress` параметр содержит <xref:System.Net.IPAddress.Any> или <xref:System.Net.IPAddress.IPv6Any>.</span><span class="sxs-lookup"><span data-stu-id="5e954-391">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="5e954-392">Этот метод предполагает, что если передается символьная строка IP-адрес `hostNameOrAddress` параметр, который приложению <xref:System.Net.IPHostEntry> возвращен экземпляр со всеми заданными свойствами.</span><span class="sxs-lookup"><span data-stu-id="5e954-392">This method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="5e954-393">Эти свойства включают в себя <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, и <xref:System.Net.IPHostEntry.HostName%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e954-393">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="5e954-394">В результате реализации этого метода существуют следующие особенности при передаче строки символов.</span><span class="sxs-lookup"><span data-stu-id="5e954-394">As a result, the implementation of this method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="5e954-395">Метод пытается проанализировать адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-395">The method tries to parse the address.</span></span> <span data-ttu-id="5e954-396">Если `hostNameOrAddress` параметр содержит допустимые IP-адрес строковый литерал, а затем первый этап завершается успешно.</span><span class="sxs-lookup"><span data-stu-id="5e954-396">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="5e954-397">Обратный просмотр с помощью IP-адрес строки символов выполняется попытка получить имя узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-397">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="5e954-398">Этот параметр установлен как <xref:System.Net.IPHostEntry.HostName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5e954-398">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="5e954-399">Имя узла из обратного поиска используется снова для получения всех возможных IP-адресов связаны с именем и задать в качестве <xref:System.Net.IPHostEntry.AddressList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5e954-399">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="5e954-400">Для символьной строки IPv4 все три перечисленные выше действия может завершиться успешно.</span><span class="sxs-lookup"><span data-stu-id="5e954-400">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="5e954-401">Но возможно устаревшие записи DNS для IPv4-адрес, на самом деле принадлежит на другой узел, должны быть возвращены.</span><span class="sxs-lookup"><span data-stu-id="5e954-401">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="5e954-402">Это может привести к шаг #3 с ошибкой и выдать исключение (есть запись DNS PTR для IPv4-адрес, но нет записи DNS A для IPv4-адрес).</span><span class="sxs-lookup"><span data-stu-id="5e954-402">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="5e954-403">Для IPv6 шаг #2 может завершиться ошибкой, так как в большинстве случаев IPv6 не регистрировать обратную запись (PTR) для IPv6-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-403">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="5e954-404">Поэтому этот метод может возвращать литерал как имя узла полное доменное (имя FQDN) в строке IPv6 <xref:System.Net.IPHostEntry.HostName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="5e954-404">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="5e954-405"><xref:System.Net.Dns.GetHostAddresses%2A> Метод имеет разное поведение по отношению к литералы IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-405">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="5e954-406">Если шаг #1 выше завершается успешно (он успешно выполняет разбор IP-адрес), что адрес немедленно возвращается в результате.</span><span class="sxs-lookup"><span data-stu-id="5e954-406">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="5e954-407">Нет никаких попыток обратного поиска.</span><span class="sxs-lookup"><span data-stu-id="5e954-407">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="5e954-408">IPv6-адреса будут отфильтрованы из результатов этого метода, если локальный компьютер не поддерживает IPv6 установлен.</span><span class="sxs-lookup"><span data-stu-id="5e954-408">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="5e954-409">Таким образом, можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляра, если только IPv6 результаты, если они доступны для `hostNameOrAddress`.parameter.</span><span class="sxs-lookup"><span data-stu-id="5e954-409">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="5e954-410"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="5e954-410">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-411">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-411">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-412">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-412">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-413">Параметр <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-413">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e954-414">Длина параметра <paramref name="hostNameOrAddress" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="5e954-414">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-415">При попытке разрешения параметра <paramref name="hostNameOrAddress" /> произошла ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-415">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5e954-416">Параметр <paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="5e954-416">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e954-417">Возвращает имя узла локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="5e954-417">Gets the host name of the local computer.</span></span></summary>
        <returns><span data-ttu-id="5e954-418">Строка, содержащая DNS-имя узла локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="5e954-418">A string that contains the DNS host name of the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5e954-419">В следующем примере используется <xref:System.Net.Dns.GetHostName%2A> метод, чтобы получить имя узла локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="5e954-419">The following example uses the <xref:System.Net.Dns.GetHostName%2A> method to obtain the host name of the local computer.</span></span>  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-420">При преобразовании имени локального узла возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-420">An error is encountered when resolving the local host name.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-421">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-421">for accessing DNS information.</span></span> <span data-ttu-id="5e954-422">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-422">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="5e954-423">DNS-имя узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-423">A DNS-style host name or IP address.</span></span></param>
        <summary><span data-ttu-id="5e954-424">Разрешает DNS-имя узла или IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-424">Resolves a DNS host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5e954-425">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу, указанному в параметре <paramref name="hostName" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-425">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e954-426"><xref:System.Net.Dns.Resolve%2A> Метод запрашивает DNS-сервера для IP-адреса, связанные с именем узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="5e954-426">The <xref:System.Net.Dns.Resolve%2A> method queries a DNS server for the IP address associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="5e954-427">Когда `hostName` DNS-имя узла, связанный с несколькими IP-адресами, возвращается только первый IP-адрес, который разрешается в это имя узла.</span><span class="sxs-lookup"><span data-stu-id="5e954-427">When `hostName` is a DNS-style host name associated with multiple IP addresses, only the first IP address that resolves to that host name is returned.</span></span>  
  
 <span data-ttu-id="5e954-428">Если <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> свойству `true`, <xref:System.Net.IPHostEntry.Aliases%2A> свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="5e954-428">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e954-429">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="5e954-429">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5e954-430">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="5e954-430">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e954-431">В следующем примере используется <xref:System.Net.Dns.Resolve%2A> метод разрешение IP-адрес для <xref:System.Net.IPHostEntry> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5e954-431">The following example uses the <xref:System.Net.Dns.Resolve%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e954-432">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e954-432"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5e954-433">Длина <paramref name="hostName" /> превышает 255 символов.</span><span class="sxs-lookup"><span data-stu-id="5e954-433">The length of <paramref name="hostName" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5e954-434">При разрешении <paramref name="hostName" /> возникает ошибка.</span><span class="sxs-lookup"><span data-stu-id="5e954-434">An error is encountered when resolving <paramref name="hostName" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="5e954-435">для доступа к сведениям DNS.</span><span class="sxs-lookup"><span data-stu-id="5e954-435">for accessing DNS information.</span></span> <span data-ttu-id="5e954-436">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e954-436">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>