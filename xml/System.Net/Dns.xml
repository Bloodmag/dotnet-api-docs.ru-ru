<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c36777eb52ffb7fb5628d102ca009f4b86723b4" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51906717" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1281c-101">Предоставляет простые функциональные возможности разрешения доменных имен.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1281c-101">Provides simple domain name resolution functionality.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-102"><xref:System.Net.Dns> Класс является статическим классом, который извлекает сведения о конкретном узле из доменных имен (DNS) Интернета.</span><span class="sxs-lookup"><span data-stu-id="1281c-102">The <xref:System.Net.Dns> class is a static class that retrieves information about a specific host from the Internet Domain Name System (DNS).</span></span>  
  
 <span data-ttu-id="1281c-103">Сведения об узле из запроса DNS возвращается в экземпляре <xref:System.Net.IPHostEntry> класса.</span><span class="sxs-lookup"><span data-stu-id="1281c-103">The host information from the DNS query is returned in an instance of the <xref:System.Net.IPHostEntry> class.</span></span> <span data-ttu-id="1281c-104">Если указанный узел имеет более одной записи в базе данных DNS, <xref:System.Net.IPHostEntry> содержит несколько IP-адресов и псевдонимов.</span><span class="sxs-lookup"><span data-stu-id="1281c-104">If the specified host has more than one entry in the DNS database, <xref:System.Net.IPHostEntry> contains multiple IP addresses and aliases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1281c-105">В следующем примере запрашивается DNS информации из базы данных для узла www.contoso.com.</span><span class="sxs-lookup"><span data-stu-id="1281c-105">The following example queries the DNS database for information on the host www.contoso.com.</span></span>  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="1281c-106">Разрешаемое имя узла или IP-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-106">The host name or IP address to resolve.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="1281c-107">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-107">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="1281c-108">Пользовательский объект, содержащий сведения об операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-108">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1281c-109">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-109">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-110">Асинхронно возвращает IP-адреса для указанного узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-110">Asynchronously returns the Internet Protocol (IP) addresses for the specified host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-111">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-111">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-112"><xref:System.Net.Dns.BeginGetHostAddresses%2A> Метод асинхронно запрашивает DNS-сервера для IP-адреса, которые связаны с именем узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-112">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method asynchronously queries a DNS server for the IP addresses that are associated with a host name.</span></span> <span data-ttu-id="1281c-113">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запросов на DNS-сервере.</span><span class="sxs-lookup"><span data-stu-id="1281c-113">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-114">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-114">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-115">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-115">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="1281c-116">Если пустая строка передается как `hostNameOrAddress` аргумента, то этот метод возвращает IPv4 и IPv6-адреса локального узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-116">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="1281c-117">Асинхронный <xref:System.Net.Dns.BeginGetHostAddresses%2A> операция должна быть завершена путем вызова <xref:System.Net.Dns.EndGetHostAddresses%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-117">The asynchronous <xref:System.Net.Dns.BeginGetHostAddresses%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostAddresses%2A> method.</span></span> <span data-ttu-id="1281c-118">Как правило, вызывается метод `requestCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="1281c-118">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="1281c-119">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="1281c-119">This method does not block until the operation is complete.</span></span> <span data-ttu-id="1281c-120">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Dns.GetHostAddresses%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-120">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostAddresses%2A> method.</span></span>  
  
 <span data-ttu-id="1281c-121">Дополнительные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="1281c-121">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-122">Свойство <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-122">
              <paramref name="hostNameOrAddress" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1281c-123">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-123">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-124">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-124">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1281c-125">
            <paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-125">
              <paramref name="hostNameOrAddress" /> is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-126">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-126">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-127">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-127">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">
          <span data-ttu-id="1281c-128">DNS-имя узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-128">The DNS name of the host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="1281c-129">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-129">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="1281c-130">Пользовательский объект, содержащий сведения об операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-130">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1281c-131">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-131">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-132">Начинает асинхронный запрос сведений <see cref="T:System.Net.IPHostEntry" /> об указанном DNS-имени узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-132">Begins an asynchronous request for <see cref="T:System.Net.IPHostEntry" /> information about the specified DNS host name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-133">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-133">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-134">Асинхронный <xref:System.Net.Dns.BeginGetHostByName%2A> операция должна быть завершена путем вызова <xref:System.Net.Dns.EndGetHostByName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-134">The asynchronous <xref:System.Net.Dns.BeginGetHostByName%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostByName%2A> method.</span></span> <span data-ttu-id="1281c-135">Как правило, вызывается метод `requestCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="1281c-135">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="1281c-136">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="1281c-136">This method does not block until the operation is complete.</span></span> <span data-ttu-id="1281c-137">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Dns.GetHostByName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-137">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="1281c-138">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-138">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-139">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-139">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-140">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-140">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-141">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-141">
              <paramref name="hostName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-142">При выполнении запроса DNS произошла ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-142">An error was encountered executing the DNS query.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-143">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-143">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-144">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-144">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">
          <span data-ttu-id="1281c-145">Обзор асинхронного программирования</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-145">Asynchronous Programming Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1281c-146">Асинхронно разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-146">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="1281c-147">IP-адрес, который следует разрешить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-147">The IP address to resolve.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="1281c-148">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-148">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="1281c-149">Пользовательский объект, содержащий сведения об операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-149">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1281c-150">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-150">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-151">Асинхронно разрешает IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-151">Asynchronously resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-152">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-152">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-153"><xref:System.Net.Dns.BeginGetHostEntry%2A> Метод асинхронно запрашивает DNS-сервера для IP-адресов и псевдонимов, связанных с IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="1281c-153">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method asynchronously queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="1281c-154">**Примечание** этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-154">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-155">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-155">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="1281c-156">Асинхронный <xref:System.Net.Dns.BeginGetHostEntry%2A> операция должна быть завершена путем вызова <xref:System.Net.Dns.EndGetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-156">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="1281c-157">Как правило, вызывается метод `requestCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="1281c-157">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="1281c-158">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="1281c-158">This method does not block until the operation is complete.</span></span> <span data-ttu-id="1281c-159">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Dns.GetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-159">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="1281c-160">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="1281c-160">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1281c-161">В следующем примере кода используется <xref:System.Net.Dns.BeginGetHostEntry%2A> метод разрешение IP-адрес для <xref:System.Net.IPHostEntry> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1281c-161">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-162">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-162">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-163">При разрешении <paramref name="address" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-163">An error is encountered when resolving <paramref name="address" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1281c-164">
            <paramref name="address" /> является недопустимым IP-адресом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-164">
              <paramref name="address" /> is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-165">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-165">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-166">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-166">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="1281c-167">Разрешаемое имя узла или IP-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-167">The host name or IP address to resolve.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="1281c-168">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-168">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="1281c-169">Пользовательский объект, содержащий сведения об операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-169">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1281c-170">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-170">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-171">Асинхронно разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-171">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-172">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-172">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-173"><xref:System.Net.Dns.BeginGetHostEntry%2A> Метод запрашивает DNS-сервера для IP-адрес, связанный с именем узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="1281c-173">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="1281c-174">**Примечание** этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-174">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-175">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-175">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="1281c-176">Асинхронный <xref:System.Net.Dns.BeginGetHostEntry%2A> операция должна быть завершена путем вызова <xref:System.Net.Dns.EndGetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-176">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="1281c-177">Как правило, вызывается метод `requestCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="1281c-177">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="1281c-178">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="1281c-178">This method does not block until the operation is complete.</span></span> <span data-ttu-id="1281c-179">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Dns.GetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-179">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="1281c-180">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-180">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1281c-181">В следующем примере кода используется <xref:System.Net.Dns.BeginGetHostEntry%2A> метод разрешение IP-адрес для <xref:System.Net.IPHostEntry> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1281c-181">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-182">Свойство <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-182">
              <paramref name="hostNameOrAddress" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1281c-183">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-183">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-184">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-184">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1281c-185">
            <paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-185">
              <paramref name="hostNameOrAddress" /> is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-186">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-186">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-187">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-187">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">
          <span data-ttu-id="1281c-188">DNS-имя узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-188">The DNS name of the host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="1281c-189">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, вызываемый по завершении данной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-189">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="1281c-190">Пользовательский объект, содержащий сведения об операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-190">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="1281c-191">Этот объект передается делегату <c>requestCallback</c> по завершении операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-191">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-192">Начинает асинхронный запрос для разрешения DNS-имени узла или IP-адреса в экземпляр <see cref="T:System.Net.IPAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-192">Begins an asynchronous request to resolve a DNS host name or IP address to an <see cref="T:System.Net.IPAddress" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-193">Экземпляр <see cref="T:System.IAsyncResult" />, который ссылается на асинхронный запрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-193">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-194">Асинхронный <xref:System.Net.Dns.BeginResolve%2A> операция должна быть завершена путем вызова <xref:System.Net.Dns.EndResolve%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-194">The asynchronous <xref:System.Net.Dns.BeginResolve%2A> operation must be completed by calling the <xref:System.Net.Dns.EndResolve%2A> method.</span></span> <span data-ttu-id="1281c-195">Как правило, вызывается метод `requestCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="1281c-195">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="1281c-196">Этот метод не приводит к блокировке до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="1281c-196">This method does not block until the operation is complete.</span></span> <span data-ttu-id="1281c-197">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Dns.Resolve%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-197">To block until the operation is complete, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
 <span data-ttu-id="1281c-198">Дополнительные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-198">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-199">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-199">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-200">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1281c-201">В следующем примере используется <xref:System.Net.Dns.BeginResolve%2A> для разрешения имени узла DNS для <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="1281c-201">The following example uses <xref:System.Net.Dns.BeginResolve%2A> to resolve a DNS host name to an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-202">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-202">
              <paramref name="hostName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-203">Вызывающий код не имеет разрешения на доступ к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-203">The caller does not have permission to access DNS information.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-204">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-204">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-205">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-205">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">
          <span data-ttu-id="1281c-206">Обзор асинхронного программирования</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-206">Asynchronous Programming Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1281c-207">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-207">An <see cref="T:System.IAsyncResult" /> instance returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-208">Завершает асинхронный запрос сведений DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-208">Ends an asynchronous request for DNS information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-209">Массив типа <see cref="T:System.Net.IPAddress" />, в котором содержатся IP-адреса для узла, указанного в параметре <paramref name="hostNameOrAddress" /> объекта <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-209">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host specified by the <paramref name="hostNameOrAddress" /> parameter of <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-210"><xref:System.Net.Dns.BeginGetHostAddresses%2A> Метод запрашивает DNS-сервера для IP-адресов, связанный с именем узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-210">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="1281c-211">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запросов на DNS-сервере.</span><span class="sxs-lookup"><span data-stu-id="1281c-211">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 <span data-ttu-id="1281c-212">Если пустая строка передается как `hostNameOrAddress` аргумента, то этот метод возвращает IPv4 и IPv6-адреса локального узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-212">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="1281c-213">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-213">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-214">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-214">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1281c-215">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-215">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-216">Завершает асинхронный запрос сведений DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-216">Ends an asynchronous request for DNS information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-217">Объект <see cref="T:System.Net.IPHostEntry" />, содержащий сведения DNS об узле.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-217">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-218">Этот метод блокируется до ее завершения.</span><span class="sxs-lookup"><span data-stu-id="1281c-218">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="1281c-219">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Dns.GetHostByName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-219">To perform this operation synchronously, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="1281c-220">Если <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> свойству `true`, <xref:System.Net.IPHostEntry.Aliases%2A> свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="1281c-220">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-221">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-221">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-222">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-222">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-223">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-223">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">
          <span data-ttu-id="1281c-224">Обзор асинхронного программирования</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-224">Asynchronous Programming Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1281c-225">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="Overload:System.Net.Dns.BeginGetHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-225">An <see cref="T:System.IAsyncResult" /> instance returned by a call to an <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-226">Завершает асинхронный запрос сведений DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-226">Ends an asynchronous request for DNS information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-227">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-227">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-228">Этот метод блокируется до ее завершения.</span><span class="sxs-lookup"><span data-stu-id="1281c-228">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="1281c-229"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="1281c-229">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="1281c-230">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Dns.GetHostEntry%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-230">To perform this operation synchronously, use a <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-231">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-231">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-232">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-232">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-233">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-233">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="1281c-234">Экземпляр <see cref="T:System.IAsyncResult" />, возвращенный вызовом метода <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-234">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-235">Завершает асинхронный запрос сведений DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-235">Ends an asynchronous request for DNS information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-236">Объект <see cref="T:System.Net.IPHostEntry" />, содержащий сведения DNS об узле.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-236">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-237">Этот метод блокируется до ее завершения.</span><span class="sxs-lookup"><span data-stu-id="1281c-237">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="1281c-238">Если <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> присваивается `true`, <xref:System.Net.IPHostEntry.Aliases%2A> свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="1281c-238">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="1281c-239">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Dns.Resolve%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1281c-239">To perform this operation synchronously, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-240">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-240">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-241">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-241">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1281c-242">Следующий пример завершает асинхронный запрос сведений DNS о хосте.</span><span class="sxs-lookup"><span data-stu-id="1281c-242">The following example ends an asynchronous request for DNS host information.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-243">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-243">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">
          <span data-ttu-id="1281c-244">Обзор асинхронного программирования</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-244">Asynchronous Programming Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="1281c-245">Разрешаемое имя узла или IP-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-245">The host name or IP address to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-246">Возвращает IP-адреса для указанного узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-246">Returns the Internet Protocol (IP) addresses for the specified host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-247">Массив типа <see cref="T:System.Net.IPAddress" />, в котором содержатся IP-адреса для узла, указанного в параметре <paramref name="hostNameOrAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-247">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-248"><xref:System.Net.Dns.GetHostAddresses%2A> Метод запрашивает подсистема DNS для IP-адресов, связанный с именем узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-248">The <xref:System.Net.Dns.GetHostAddresses%2A> method queries the DNS subsystem for the IP addresses associated with a host name.</span></span> <span data-ttu-id="1281c-249">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запросов на DNS-сервере.</span><span class="sxs-lookup"><span data-stu-id="1281c-249">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>
  
 <span data-ttu-id="1281c-250">Если пустая строка передается как `hostNameOrAddress` аргумента, то этот метод возвращает IPv4 и IPv6-адреса локального узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-250">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="1281c-251">IPv6-адреса будут отфильтрованы из результатов <xref:System.Net.Dns.GetHostAddresses%2A> метод, если локальный компьютер не поддерживает IPv6 установлен.</span><span class="sxs-lookup"><span data-stu-id="1281c-251">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostAddresses%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="1281c-252">Таким образом, можно вернуть пустой <xref:System.Net.IPAddress> экземпляра, если только IPv6 результаты, если они доступны для `hostNameOrAddress`.parameter.</span><span class="sxs-lookup"><span data-stu-id="1281c-252">As a result, it is possible to get back an empty <xref:System.Net.IPAddress> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-253">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-253">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-254">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-254">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1281c-255">В следующем примере кода используется <xref:System.Net.Dns.GetHostAddresses%2A> метод для разрешения IP-адресом в массив объектов типа <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="1281c-255">The following code example uses the <xref:System.Net.Dns.GetHostAddresses%2A> method to resolve an IP address to an array of type <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-256">Свойство <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-256">
              <paramref name="hostNameOrAddress" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1281c-257">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-257">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-258">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-258">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1281c-259">
            <paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-259">
              <paramref name="hostNameOrAddress" /> is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-260">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-260">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-261">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-261">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="1281c-262">Разрешаемое имя узла или IP-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-262">The host name or IP address to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-263">Возвращает IP-адреса для указанного узла как асинхронная операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-263">Returns the Internet Protocol (IP) addresses for the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-264">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-264">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="1281c-265">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-265">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="1281c-266">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> объекта задачи возвращает Массив типа <see cref="T:System.Net.IPAddress" />, в котором содержатся IP-адреса для узла, указанного в параметре <paramref name="hostNameOrAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-266">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-267">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="1281c-267">This operation will not block.</span></span> <span data-ttu-id="1281c-268">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после `hostNameOrAddress` будет разрешена.</span><span class="sxs-lookup"><span data-stu-id="1281c-268">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="1281c-269">Этот метод отправляет запрос DNS-сервера для IP-адресов, связанный с именем узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-269">This method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="1281c-270">Если `hostNameOrAddress` является IP-адресом, этот адрес возвращается без запросов на DNS-сервере.</span><span class="sxs-lookup"><span data-stu-id="1281c-270">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-271">Свойство <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-271">
              <paramref name="hostNameOrAddress" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1281c-272">Длина <paramref name="hostNameOrAddress" /> превышает 255 символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-272">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-273">При разрешении <paramref name="hostNameOrAddress" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-273">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1281c-274">
            <paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-274">
              <paramref name="hostNameOrAddress" /> is an invalid IP address.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1281c-275">Возвращает сведения DNS об узле для IP-адреса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-275">Gets DNS host information for an IP address.</span>
          </span>
          <span data-ttu-id="1281c-276">В настоящее время эти методы считаются устаревшими.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-276">These methods are now obsolete.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="1281c-277">Объект <see cref="T:System.Net.IPAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-277">An <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-278">Создает экземпляр <see cref="T:System.Net.IPHostEntry" /> из указанного объекта <see cref="T:System.Net.IPAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-278">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from the specified <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-279">Объект <see cref="T:System.Net.IPHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-279">An <see cref="T:System.Net.IPHostEntry" />.</span>
          </span>
          <span data-ttu-id="1281c-280">Экземпляр <see cref="T:System.Net.IPHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-280">An <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1281c-281">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-281">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-282">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-282">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1281c-283">В следующем примере создается <xref:System.Net.IPHostEntry> из <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="1281c-283">The following example creates a <xref:System.Net.IPHostEntry> from an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-284">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-284">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-285">При разрешении <paramref name="address" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-285">An error is encountered when resolving <paramref name="address" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-286">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-286">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-287">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-287">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="1281c-288">IP-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-288">An IP address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-289">Создает экземпляр <see cref="T:System.Net.IPHostEntry" /> из IP-адреса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-289">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from an IP address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-290">Экземпляр <see cref="T:System.Net.IPHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-290">An <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1281c-291">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-291">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-292">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-292">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-293">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-293">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-294">При разрешении <paramref name="address" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-294">An error is encountered when resolving <paramref name="address" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1281c-295">
            <paramref name="address" /> не является допустимым IP-адресом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-295">
              <paramref name="address" /> is not a valid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-296">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-296">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-297">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-297">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">
          <span data-ttu-id="1281c-298">DNS-имя узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-298">The DNS name of the host.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-299">Возвращает сведения DNS для указанного DNS-имени узла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-299">Gets the DNS information for the specified DNS host name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-300">Объект <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об узле для адреса, указанного в <paramref name="hostName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-300">An <see cref="T:System.Net.IPHostEntry" /> object that contains host information for the address specified in <paramref name="hostName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-301"><xref:System.Net.Dns.GetHostByName%2A> Метод DNS в Интернете отправляет серверу запрос на сведения об узле.</span><span class="sxs-lookup"><span data-stu-id="1281c-301">The <xref:System.Net.Dns.GetHostByName%2A> method queries the Internet DNS server for host information.</span></span> <span data-ttu-id="1281c-302">Если передать пустую строку в качестве имени узла, этот метод получает стандартное имя узла для локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="1281c-302">If you pass an empty string as the host name, this method retrieves the standard host name for the local computer.</span></span>  
  
 <span data-ttu-id="1281c-303">Для асинхронного доступа к сведениям DNS используйте <xref:System.Net.Dns.BeginGetHostByName%2A> и <xref:System.Net.Dns.EndGetHostByName%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="1281c-303">For asynchronous access to DNS information, use the <xref:System.Net.Dns.BeginGetHostByName%2A> and <xref:System.Net.Dns.EndGetHostByName%2A> methods.</span></span>  
  
 <span data-ttu-id="1281c-304">Если <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> свойству `true`, <xref:System.Net.IPHostEntry.Aliases%2A> свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="1281c-304">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-305">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-305">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-306">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-306">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1281c-307">В следующем примере используется <xref:System.Net.Dns.GetHostByName%2A> метод, чтобы получить сведения о DNS для указанного имени узла DNS.</span><span class="sxs-lookup"><span data-stu-id="1281c-307">The following example uses the <xref:System.Net.Dns.GetHostByName%2A> method to get the DNS information for the specified DNS host name.</span></span>  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-308">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-308">
              <paramref name="hostName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1281c-309">Длина <paramref name="hostName" /> превышает 255 символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-309">The length of <paramref name="hostName" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-310">При разрешении <paramref name="hostName" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-310">An error is encountered when resolving <paramref name="hostName" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-311">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-311">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-312">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-312">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1281c-313">Разрешает имя узла или IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-313">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="1281c-314">IP-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-314">An IP address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-315">Разрешает IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-315">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-316">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу, указанному в параметре <paramref name="address" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-316">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-317"><xref:System.Net.Dns.GetHostEntry%2A> Метод запрашивает DNS-сервера для IP-адресов и псевдонимов, связанных с IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="1281c-317">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="1281c-318">IPv6-адреса будут отфильтрованы из результатов <xref:System.Net.Dns.GetHostEntry%2A> метод, если локальный компьютер не поддерживает IPv6 установлен.</span><span class="sxs-lookup"><span data-stu-id="1281c-318">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="1281c-319">Таким образом, можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляра, если только IPv6 результаты, если они доступны для `address` параметра.</span><span class="sxs-lookup"><span data-stu-id="1281c-319">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="1281c-320"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="1281c-320">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-321">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-321">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-322">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-322">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  

## Examples  
 <span data-ttu-id="1281c-323">В следующем примере кода используется <xref:System.Net.Dns.GetHostEntry%2A> метод разрешение IP-адрес для <xref:System.Net.IPHostEntry> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1281c-323">The following code example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-324">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-324">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-325">При разрешении <paramref name="address" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-325">An error is encountered when resolving <paramref name="address" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1281c-326">
            <paramref name="address" /> является недопустимым IP-адресом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-326">
              <paramref name="address" /> is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-327">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-327">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-328">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-328">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="1281c-329">Разрешаемое имя узла или IP-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-329">The host name or IP address to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-330">Разрешает имя узла или IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-330">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-331">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу, указанному в параметре <paramref name="hostNameOrAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-331">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-332"><xref:System.Net.Dns.GetHostEntry%2A> Метод запрашивает DNS-сервера для IP-адрес, связанный с именем узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="1281c-332">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="1281c-333">Если пустая строка передается как `hostNameOrAddress` аргумента, то этот метод возвращает IPv4 и IPv6-адреса локального узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-333">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="1281c-334">Если не удается найти имя узла, <xref:System.Net.Sockets.SocketException> со значением 11001 (ошибка Windows Sockets WSAHOST_NOT_FOUND) возвращается исключение.</span><span class="sxs-lookup"><span data-stu-id="1281c-334">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="1281c-335">Это исключение может быть возвращено, если DNS-сервер не отвечает.</span><span class="sxs-lookup"><span data-stu-id="1281c-335">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="1281c-336">Это исключение также может быть возвращено, если имя не является официальным именем узла или псевдоним, или он не найден в запрашиваемой.</span><span class="sxs-lookup"><span data-stu-id="1281c-336">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="1281c-337"><xref:System.ArgumentException> Исключение также возвращается, если `hostNameOrAddress` параметр содержит <xref:System.Net.IPAddress.Any> или <xref:System.Net.IPAddress.IPv6Any>.</span><span class="sxs-lookup"><span data-stu-id="1281c-337">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="1281c-338"><xref:System.Net.Dns.GetHostEntry%2A> Метод предполагает, что если передается символьная строка IP-адрес `hostNameOrAddress` параметр, который приложению <xref:System.Net.IPHostEntry> возвращен экземпляр со всеми заданными свойствами.</span><span class="sxs-lookup"><span data-stu-id="1281c-338">The <xref:System.Net.Dns.GetHostEntry%2A> method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="1281c-339">Эти свойства включают в себя <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, и <xref:System.Net.IPHostEntry.HostName%2A>.</span><span class="sxs-lookup"><span data-stu-id="1281c-339">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="1281c-340">В результате реализации <xref:System.Net.Dns.GetHostEntry%2A> метод видно следующее поведение при передаче строки символов:</span><span class="sxs-lookup"><span data-stu-id="1281c-340">As a result, the implementation of the <xref:System.Net.Dns.GetHostEntry%2A> method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="1281c-341">Метод пытается проанализировать адрес.</span><span class="sxs-lookup"><span data-stu-id="1281c-341">The method tries to parse the address.</span></span> <span data-ttu-id="1281c-342">Если `hostNameOrAddress` параметр содержит допустимые IP-адрес строковый литерал, а затем первый этап завершается успешно.</span><span class="sxs-lookup"><span data-stu-id="1281c-342">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="1281c-343">Обратный просмотр с помощью IP-адрес строки символов выполняется попытка получить имя узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-343">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="1281c-344">Этот параметр установлен как <xref:System.Net.IPHostEntry.HostName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1281c-344">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="1281c-345">Имя узла из обратного поиска используется снова для получения всех возможных IP-адресов связаны с именем и задать в качестве <xref:System.Net.IPHostEntry.AddressList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1281c-345">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="1281c-346">Для символьной строки IPv4 все три перечисленные выше действия может завершиться успешно.</span><span class="sxs-lookup"><span data-stu-id="1281c-346">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="1281c-347">Но возможно устаревшие записи DNS для IPv4-адрес, на самом деле принадлежит на другой узел, должны быть возвращены.</span><span class="sxs-lookup"><span data-stu-id="1281c-347">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="1281c-348">Это может привести к шаг #3 с ошибкой и выдать исключение (есть запись DNS PTR для IPv4-адрес, но нет записи DNS A для IPv4-адрес).</span><span class="sxs-lookup"><span data-stu-id="1281c-348">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="1281c-349">Для IPv6 шаг #2 может завершиться ошибкой, так как в большинстве случаев IPv6 не регистрировать обратную запись (PTR) для IPv6-адрес.</span><span class="sxs-lookup"><span data-stu-id="1281c-349">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="1281c-350">Поэтому этот метод может возвращать литерал как имя узла полное доменное (имя FQDN) в строке IPv6 <xref:System.Net.IPHostEntry.HostName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1281c-350">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="1281c-351"><xref:System.Net.Dns.GetHostAddresses%2A> Метод имеет разное поведение по отношению к литералы IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="1281c-351">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="1281c-352">Если шаг #1 выше завершается успешно (он успешно выполняет разбор IP-адрес), что адрес немедленно возвращается в результате.</span><span class="sxs-lookup"><span data-stu-id="1281c-352">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="1281c-353">Нет никаких попыток обратного поиска.</span><span class="sxs-lookup"><span data-stu-id="1281c-353">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="1281c-354">IPv6-адреса будут отфильтрованы из результатов <xref:System.Net.Dns.GetHostEntry%2A> метод, если локальный компьютер не поддерживает IPv6 установлен.</span><span class="sxs-lookup"><span data-stu-id="1281c-354">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="1281c-355">Таким образом, можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляра, если только IPv6 результаты, если они доступны для `hostNameOrAddress`.parameter.</span><span class="sxs-lookup"><span data-stu-id="1281c-355">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="1281c-356"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="1281c-356">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-357">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-357">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-358">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-358">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1281c-359">В следующем примере используется <xref:System.Net.Dns.GetHostEntry%2A> метод разрешение IP-адрес для <xref:System.Net.IPHostEntry> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1281c-359">The following example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-360">Параметр <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-360">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1281c-361">Длина параметра <paramref name="hostNameOrAddress" /> превышает 255 символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-361">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-362">При попытке разрешения параметра <paramref name="hostNameOrAddress" /> произошла ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-362">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1281c-363">Параметр <paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-363">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-364">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-364">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-365">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-365">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1281c-366">Разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" /> как асинхронная операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-366">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="1281c-367">IP-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-367">An IP address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-368">Разрешает IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" /> как асинхронная операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-368">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-369">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-369">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="1281c-370">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-370">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="1281c-371">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий информацию адреса об узле, указанного в <paramref name="address" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-371">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-372">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="1281c-372">This operation will not block.</span></span> <span data-ttu-id="1281c-373">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после `address` будет разрешена.</span><span class="sxs-lookup"><span data-stu-id="1281c-373">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `address` has been resolved.</span></span>  
  
 <span data-ttu-id="1281c-374">Этот метод отправляет запрос DNS-сервера для IP-адресов и псевдонимов, связанных с IP-адресом.</span><span class="sxs-lookup"><span data-stu-id="1281c-374">This method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="1281c-375">IPv6-адреса будут отфильтрованы из результатов этого метода, если локальный компьютер не поддерживает IPv6 установлен.</span><span class="sxs-lookup"><span data-stu-id="1281c-375">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="1281c-376">Таким образом, можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляра, если только IPv6 результаты, если они доступны для `address` параметра.</span><span class="sxs-lookup"><span data-stu-id="1281c-376">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="1281c-377"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="1281c-377">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-378">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-378">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-379">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-379">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-380">Свойство <paramref name="address" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-380">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-381">При разрешении <paramref name="address" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-381">An error is encountered when resolving <paramref name="address" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1281c-382">
            <paramref name="address" /> является недопустимым IP-адресом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-382">
              <paramref name="address" /> is an invalid IP address.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">
          <span data-ttu-id="1281c-383">Разрешаемое имя узла или IP-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-383">The host name or IP address to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-384">Разрешает имя узла или IP-адрес экземпляра <see cref="T:System.Net.IPHostEntry" /> как асинхронная операция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-384">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-385">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-385">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="1281c-386">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-386">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="1281c-387">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий информацию адреса об узле, указанного в <paramref name="hostNameOrAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-387">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-388">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="1281c-388">This operation will not block.</span></span> <span data-ttu-id="1281c-389">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после `hostNameOrAddress` будет разрешена.</span><span class="sxs-lookup"><span data-stu-id="1281c-389">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="1281c-390">Этот метод отправляет запрос DNS-сервера для IP-адрес, связанный с именем узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="1281c-390">This method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="1281c-391">Если пустая строка передается как `hostNameOrAddress` аргумента, то этот метод возвращает IPv4 и IPv6-адреса локального узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-391">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="1281c-392">Если не удается найти имя узла, <xref:System.Net.Sockets.SocketException> со значением 11001 (ошибка Windows Sockets WSAHOST_NOT_FOUND) возвращается исключение.</span><span class="sxs-lookup"><span data-stu-id="1281c-392">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="1281c-393">Это исключение может быть возвращено, если DNS-сервер не отвечает.</span><span class="sxs-lookup"><span data-stu-id="1281c-393">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="1281c-394">Это исключение также может быть возвращено, если имя не является официальным именем узла или псевдоним, или он не найден в запрашиваемой.</span><span class="sxs-lookup"><span data-stu-id="1281c-394">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="1281c-395"><xref:System.ArgumentException> Исключение также возвращается, если `hostNameOrAddress` параметр содержит <xref:System.Net.IPAddress.Any> или <xref:System.Net.IPAddress.IPv6Any>.</span><span class="sxs-lookup"><span data-stu-id="1281c-395">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="1281c-396">Этот метод предполагает, что если передается символьная строка IP-адрес `hostNameOrAddress` параметр, который приложению <xref:System.Net.IPHostEntry> возвращен экземпляр со всеми заданными свойствами.</span><span class="sxs-lookup"><span data-stu-id="1281c-396">This method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="1281c-397">Эти свойства включают в себя <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, и <xref:System.Net.IPHostEntry.HostName%2A>.</span><span class="sxs-lookup"><span data-stu-id="1281c-397">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="1281c-398">В результате реализации этого метода существуют следующие особенности при передаче строки символов.</span><span class="sxs-lookup"><span data-stu-id="1281c-398">As a result, the implementation of this method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="1281c-399">Метод пытается проанализировать адрес.</span><span class="sxs-lookup"><span data-stu-id="1281c-399">The method tries to parse the address.</span></span> <span data-ttu-id="1281c-400">Если `hostNameOrAddress` параметр содержит допустимые IP-адрес строковый литерал, а затем первый этап завершается успешно.</span><span class="sxs-lookup"><span data-stu-id="1281c-400">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="1281c-401">Обратный просмотр с помощью IP-адрес строки символов выполняется попытка получить имя узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-401">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="1281c-402">Этот параметр установлен как <xref:System.Net.IPHostEntry.HostName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1281c-402">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="1281c-403">Имя узла из обратного поиска используется снова для получения всех возможных IP-адресов связаны с именем и задать в качестве <xref:System.Net.IPHostEntry.AddressList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1281c-403">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="1281c-404">Для символьной строки IPv4 все три перечисленные выше действия может завершиться успешно.</span><span class="sxs-lookup"><span data-stu-id="1281c-404">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="1281c-405">Но возможно устаревшие записи DNS для IPv4-адрес, на самом деле принадлежит на другой узел, должны быть возвращены.</span><span class="sxs-lookup"><span data-stu-id="1281c-405">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="1281c-406">Это может привести к шаг #3 с ошибкой и выдать исключение (есть запись DNS PTR для IPv4-адрес, но нет записи DNS A для IPv4-адрес).</span><span class="sxs-lookup"><span data-stu-id="1281c-406">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="1281c-407">Для IPv6 шаг #2 может завершиться ошибкой, так как в большинстве случаев IPv6 не регистрировать обратную запись (PTR) для IPv6-адрес.</span><span class="sxs-lookup"><span data-stu-id="1281c-407">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="1281c-408">Поэтому этот метод может возвращать литерал как имя узла полное доменное (имя FQDN) в строке IPv6 <xref:System.Net.IPHostEntry.HostName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="1281c-408">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="1281c-409"><xref:System.Net.Dns.GetHostAddresses%2A> Метод имеет разное поведение по отношению к литералы IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="1281c-409">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="1281c-410">Если шаг #1 выше завершается успешно (он успешно выполняет разбор IP-адрес), что адрес немедленно возвращается в результате.</span><span class="sxs-lookup"><span data-stu-id="1281c-410">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="1281c-411">Нет никаких попыток обратного поиска.</span><span class="sxs-lookup"><span data-stu-id="1281c-411">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="1281c-412">IPv6-адреса будут отфильтрованы из результатов этого метода, если локальный компьютер не поддерживает IPv6 установлен.</span><span class="sxs-lookup"><span data-stu-id="1281c-412">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="1281c-413">Таким образом, можно вернуть пустой <xref:System.Net.IPHostEntry> экземпляра, если только IPv6 результаты, если они доступны для `hostNameOrAddress`.parameter.</span><span class="sxs-lookup"><span data-stu-id="1281c-413">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="1281c-414"><xref:System.Net.IPHostEntry.Aliases%2A> Свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="1281c-414">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-415">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-415">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-416">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-416">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-417">Параметр <paramref name="hostNameOrAddress" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-417">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1281c-418">Длина параметра <paramref name="hostNameOrAddress" /> превышает 255 символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-418">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-419">При попытке разрешения параметра <paramref name="hostNameOrAddress" /> произошла ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-419">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1281c-420">Параметр <paramref name="hostNameOrAddress" /> является недопустимым IP-адресом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-420">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1281c-421">Возвращает имя узла локального компьютера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-421">Gets the host name of the local computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-422">Строка, содержащая DNS-имя узла локального компьютера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-422">A string that contains the DNS host name of the local computer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1281c-423">В следующем примере используется <xref:System.Net.Dns.GetHostName%2A> метод, чтобы получить имя узла локального компьютера.</span><span class="sxs-lookup"><span data-stu-id="1281c-423">The following example uses the <xref:System.Net.Dns.GetHostName%2A> method to obtain the host name of the local computer.</span></span>  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-424">При преобразовании имени локального узла возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-424">An error is encountered when resolving the local host name.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-425">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-425">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-426">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-426">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">
          <span data-ttu-id="1281c-427">DNS-имя узла или IP-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-427">A DNS-style host name or IP address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1281c-428">Разрешает DNS-имя узла или IP-адрес в экземпляр <see cref="T:System.Net.IPHostEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-428">Resolves a DNS host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1281c-429">Экземпляр <see cref="T:System.Net.IPHostEntry" />, содержащий сведения об адресе, относящиеся к узлу, указанному в параметре <paramref name="hostName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-429">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1281c-430"><xref:System.Net.Dns.Resolve%2A> Метод запрашивает DNS-сервера для IP-адреса, связанные с именем узла или IP-адрес.</span><span class="sxs-lookup"><span data-stu-id="1281c-430">The <xref:System.Net.Dns.Resolve%2A> method queries a DNS server for the IP address associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="1281c-431">Когда `hostName` DNS-имя узла, связанный с несколькими IP-адресами, возвращается только первый IP-адрес, который разрешается в это имя узла.</span><span class="sxs-lookup"><span data-stu-id="1281c-431">When `hostName` is a DNS-style host name associated with multiple IP addresses, only the first IP address that resolves to that host name is returned.</span></span>  
  
 <span data-ttu-id="1281c-432">Если <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> свойству `true`, <xref:System.Net.IPHostEntry.Aliases%2A> свойство <xref:System.Net.IPHostEntry> экземпляр, возвращаемый этим методом не заполняется и всегда будет пустым.</span><span class="sxs-lookup"><span data-stu-id="1281c-432">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1281c-433">Этот член генерирует сведения трассировки, при включении трассировки сети в приложении.</span><span class="sxs-lookup"><span data-stu-id="1281c-433">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="1281c-434">Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="1281c-434">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1281c-435">В следующем примере используется <xref:System.Net.Dns.Resolve%2A> метод разрешение IP-адрес для <xref:System.Net.IPHostEntry> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1281c-435">The following example uses the <xref:System.Net.Dns.Resolve%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1281c-436">Свойство <paramref name="hostName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-436">
              <paramref name="hostName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1281c-437">Длина <paramref name="hostName" /> превышает 255 символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-437">The length of <paramref name="hostName" /> is greater than 255 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="1281c-438">При разрешении <paramref name="hostName" /> возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-438">An error is encountered when resolving <paramref name="hostName" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.DnsPermission">
          <span data-ttu-id="1281c-439">для доступа к сведениям DNS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-439">for accessing DNS information.</span>
          </span>
          <span data-ttu-id="1281c-440">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1281c-440">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>