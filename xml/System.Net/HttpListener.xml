<Type Name="HttpListener" FullName="System.Net.HttpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f82a2afb3da34caaf3cfdf48b3993f0b10396de1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39732072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListener sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="61faf-101">Предоставляет простой программно управляемый прослушиватель протокола HTTP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61faf-101">Provides a simple, programmatically controlled HTTP protocol listener.</span>
      </span>
      <span data-ttu-id="61faf-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61faf-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-103">С помощью <xref:System.Net.HttpListener> класса, можно создать простой прослушиватель протокола HTTP, который отвечает на HTTP-запросы.</span><span class="sxs-lookup"><span data-stu-id="61faf-103">Using the <xref:System.Net.HttpListener> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</span></span> <span data-ttu-id="61faf-104">Прослушиватель активен в течение времени существования <xref:System.Net.HttpListener> объекта и выполняется в приложении с помощью его разрешения.</span><span class="sxs-lookup"><span data-stu-id="61faf-104">The listener is active for the lifetime of the <xref:System.Net.HttpListener> object and runs within your application with its permissions.</span></span>
   
 <span data-ttu-id="61faf-105">Для использования <xref:System.Net.HttpListener>, создайте новый экземпляр класса с использованием <xref:System.Net.HttpListener> конструктор и используйте <xref:System.Net.HttpListener.Prefixes%2A> свойство для получения доступа к коллекции, содержащий строки, которые указывают, какой универсальный код ресурса (URI) префиксы <xref:System.Net.HttpListener>должен обрабатывать.</span><span class="sxs-lookup"><span data-stu-id="61faf-105">To use <xref:System.Net.HttpListener>, create a new instance of the class using the <xref:System.Net.HttpListener> constructor and use the <xref:System.Net.HttpListener.Prefixes%2A> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <xref:System.Net.HttpListener> should process.</span></span>
  
 <span data-ttu-id="61faf-106">Строка префикса URI представляет собой схему (http или https), узел, дополнительного порта и дополнительный путь.</span><span class="sxs-lookup"><span data-stu-id="61faf-106">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</span></span> <span data-ttu-id="61faf-107">Например, строку завершения префикса * http://www.contoso.com:8080/customerData/ *.</span><span class="sxs-lookup"><span data-stu-id="61faf-107">An example of a complete prefix string is *http://www.contoso.com:8080/customerData/*.</span></span> <span data-ttu-id="61faf-108">Префиксы должны заканчиваться косой чертой («/»).</span><span class="sxs-lookup"><span data-stu-id="61faf-108">Prefixes must end in a forward slash ("/").</span></span> <span data-ttu-id="61faf-109"><xref:System.Net.HttpListener> Объекта с префиксом, наиболее точно соответствующий запрашиваемому URL-АДРЕСУ ответа на запрос.</span><span class="sxs-lookup"><span data-stu-id="61faf-109">The <xref:System.Net.HttpListener> object with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="61faf-110">Несколько <xref:System.Net.HttpListener> объектов не удается добавить тот же префикс; <xref:System.ComponentModel.Win32Exception> исключение вызывается в том случае, если <xref:System.Net.HttpListener> добавляет префикс, который уже используется.</span><span class="sxs-lookup"><span data-stu-id="61faf-110">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix; a <xref:System.ComponentModel.Win32Exception> exception is thrown if a <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>
  
 <span data-ttu-id="61faf-111">Если указан порт, элемент узла может быть заменен с "\*" Указывает, что <xref:System.Net.HttpListener> принимает запросы, отправленные в порт, если запрошенный URI не соответствует любой другой префикс.</span><span class="sxs-lookup"><span data-stu-id="61faf-111">When a port is specified, the host element can be replaced with "\*" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="61faf-112">Например, чтобы получать все запросы отправляются к порту 8080, когда запрошенный URI не обрабатывается каким-либо <xref:System.Net.HttpListener>, используется префикс *http://\*: 8080 /*.</span><span class="sxs-lookup"><span data-stu-id="61faf-112">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <xref:System.Net.HttpListener>, the prefix is *http://\*:8080/*.</span></span> <span data-ttu-id="61faf-113">Аналогичным образом чтобы указать, что <xref:System.Net.HttpListener> принимает все запросы, отправляемые на порт, замените элемент узла символ «+».</span><span class="sxs-lookup"><span data-stu-id="61faf-113">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "+" character.</span></span> <span data-ttu-id="61faf-114">Например, *https://+:8080*.</span><span class="sxs-lookup"><span data-stu-id="61faf-114">For example, *https://+:8080*.</span></span> <span data-ttu-id="61faf-115">"\*" И «+» символы могут быть представлены в префиксах, содержащих пути.</span><span class="sxs-lookup"><span data-stu-id="61faf-115">The "\*" and "+" characters can be present in prefixes that include paths.</span></span>
  
 <span data-ttu-id="61faf-116">Начиная с .NET Core 2.0 или .NET Framework 4.6 в Windows 10, дочерние домены с подстановочными знаками поддерживаются в URI-префиксов, которые управляются <xref:System.Net.HttpListener> объекта.</span><span class="sxs-lookup"><span data-stu-id="61faf-116">Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="61faf-117">Чтобы указать дочерний домен с подстановочными знаками, используйте "\*" символ как часть имени узла в префикс URI.</span><span class="sxs-lookup"><span data-stu-id="61faf-117">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix.</span></span> <span data-ttu-id="61faf-118">Например *http://\*.foo.com/*.</span><span class="sxs-lookup"><span data-stu-id="61faf-118">For example, *http://\*.foo.com/*.</span></span> <span data-ttu-id="61faf-119">Это передается в качестве аргумента для <xref:System.Net.HttpListenerPrefixCollection.Add%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-119">Pass this as the argument to the <xref:System.Net.HttpListenerPrefixCollection.Add%2A> method.</span></span> <span data-ttu-id="61faf-120">Это работает, начиная с .NET Core 2.0 или .NET Framework 4.6 в Windows 10; в более ранних версий, это приводит к возникновению ошибки <xref:System.Net.HttpListenerException>.</span><span class="sxs-lookup"><span data-stu-id="61faf-120">This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <xref:System.Net.HttpListenerException>.</span></span>

 > [!WARNING]
 > <span data-ttu-id="61faf-121">Поставить (*http://\*: 8080 /* и \* http://+:8080 \*) следует **не** использоваться.</span><span class="sxs-lookup"><span data-stu-id="61faf-121">Top-level wildcard bindings (*http://\*:8080/* and *http://+:8080*) should **not** be used.</span></span> <span data-ttu-id="61faf-122">Это может создать уязвимость и поставить ваше приложение под угрозу.</span><span class="sxs-lookup"><span data-stu-id="61faf-122">Top-level wildcard bindings can open up your app to security vulnerabilities.</span></span> <span data-ttu-id="61faf-123">Сюда относятся и строгие, и нестрогие подстановочные знаки.</span><span class="sxs-lookup"><span data-stu-id="61faf-123">This applies to both strong and weak wildcards.</span></span> <span data-ttu-id="61faf-124">Вместо этого используйте имена узлов в явном виде.</span><span class="sxs-lookup"><span data-stu-id="61faf-124">Use explicit host names rather than wildcards.</span></span> <span data-ttu-id="61faf-125">Привязки с подстановочными знаками на уровне дочерних доменов (например `*.mysub.com`) не создают таких угроз безопасности, если вы полностью контролируете родительский домен (в отличие от варианта `*.com`, создающего уязвимость).</span><span class="sxs-lookup"><span data-stu-id="61faf-125">Subdomain wildcard binding (for example, `*.mysub.com`) doesn't have this security risk if you control the entire parent domain (as opposed to `*.com`, which is vulnerable).</span></span> <span data-ttu-id="61faf-126">Дополнительные сведения см. в документе [rfc7230, раздел 5.4](https://tools.ietf.org/html/rfc7230#section-5.4).</span><span class="sxs-lookup"><span data-stu-id="61faf-126">See [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) for more information.</span></span>
  
 <span data-ttu-id="61faf-127">Чтобы начать прослушивать запросы от клиентов, добавьте префиксы URI для коллекции и вызвать <xref:System.Net.HttpListener.Start%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-127">To begin listening for requests from clients, add the URI prefixes to the collection and call the <xref:System.Net.HttpListener.Start%2A> method.</span></span> <span data-ttu-id="61faf-128"><xref:System.Net.HttpListener> включает в себя как синхронные, так и асинхронную модели обработки клиентских запросов.</span><span class="sxs-lookup"><span data-stu-id="61faf-128"><xref:System.Net.HttpListener> offers both synchronous and asynchronous models for processing client requests.</span></span> <span data-ttu-id="61faf-129">Запросы и ответы на них связанные осуществляется с помощью <xref:System.Net.HttpListenerContext> объект, возвращаемый <xref:System.Net.HttpListener.GetContext%2A> метода или его асинхронной аналоги, <xref:System.Net.HttpListener.BeginGetContext%2A> и <xref:System.Net.HttpListener.EndGetContext%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="61faf-129">Requests and their associated responses are accessed using the <xref:System.Net.HttpListenerContext> object returned by the <xref:System.Net.HttpListener.GetContext%2A> method or its asynchronous counterparts, the <xref:System.Net.HttpListener.BeginGetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods.</span></span>
  
 <span data-ttu-id="61faf-130">Синхронная модель подходит в том случае, если приложения должны блокировать во время ожидания для запроса клиента, и если вы хотите обрабатывать только один запрос единовременно.</span><span class="sxs-lookup"><span data-stu-id="61faf-130">The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</span></span> <span data-ttu-id="61faf-131">С помощью синхронной модели, вызовите <xref:System.Net.HttpListener.GetContext%2A> метод, который ожидает клиента для отправки запроса.</span><span class="sxs-lookup"><span data-stu-id="61faf-131">Using the synchronous model, call the <xref:System.Net.HttpListener.GetContext%2A> method, which waits for a client to send a request.</span></span> <span data-ttu-id="61faf-132">Этот метод возвращает <xref:System.Net.HttpListenerContext> объект для обработки, когда один происходит.</span><span class="sxs-lookup"><span data-stu-id="61faf-132">The method returns an <xref:System.Net.HttpListenerContext> object to you for processing when one occurs.</span></span>
  
 <span data-ttu-id="61faf-133">В более сложных асинхронной модели приложение не блокируется во время ожидания запросов и каждый запрос обрабатывается в своем собственном потоке выполнения.</span><span class="sxs-lookup"><span data-stu-id="61faf-133">In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</span></span> <span data-ttu-id="61faf-134">Используйте <xref:System.Net.HttpListener.BeginGetContext%2A> метод, чтобы указать метод, определяемый приложением, позволяющий вызывать для каждого входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="61faf-134">Use the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify an application-defined method to be called for each incoming request.</span></span> <span data-ttu-id="61faf-135">В этом методе, вызывать <xref:System.Net.HttpListener.EndGetContext%2A> метод, чтобы получить запрос, обрабатывать их и реагировать.</span><span class="sxs-lookup"><span data-stu-id="61faf-135">Within that method, call the <xref:System.Net.HttpListener.EndGetContext%2A> method to obtain the request, process it, and respond.</span></span>
  
 <span data-ttu-id="61faf-136">В любой модели входящих запросов осуществляется с помощью <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> на них свойства, представленного <xref:System.Net.HttpListenerRequest> объектов.</span><span class="sxs-lookup"><span data-stu-id="61faf-136">In either model, incoming requests are accessed using the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerRequest> objects.</span></span> <span data-ttu-id="61faf-137">Аналогичным образом, ответы осуществляется с помощью <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> на них свойства, представленного <xref:System.Net.HttpListenerResponse> объектов.</span><span class="sxs-lookup"><span data-stu-id="61faf-137">Similarly, responses are accessed using the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerResponse> objects.</span></span> <span data-ttu-id="61faf-138">Эти объекты используют некоторые функциональные возможности с <xref:System.Net.HttpWebRequest> и <xref:System.Net.HttpWebResponse> объекты, но последний объектов не может использоваться в сочетании с <xref:System.Net.HttpListener> так, как они реализуют поведение клиента, а не сервера.</span><span class="sxs-lookup"><span data-stu-id="61faf-138">These objects share some functionality with the <xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> objects, but the latter objects cannot be used in conjunction with <xref:System.Net.HttpListener> because they implement client, not server, behaviors.</span></span>
  
 <span data-ttu-id="61faf-139"><xref:System.Net.HttpListener> Можно потребовать проверку подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="61faf-139">An <xref:System.Net.HttpListener> can require client authentication.</span></span> <span data-ttu-id="61faf-140">Можно указать определенную схему для проверки подлинности, или можно указать делегат, который определяет схему, которая используется.</span><span class="sxs-lookup"><span data-stu-id="61faf-140">You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</span></span> <span data-ttu-id="61faf-141">Необходимо использовать некоторую форму проверки подлинности для получения сведений об идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="61faf-141">You must require some form of authentication to obtain information about the client's identity.</span></span> <span data-ttu-id="61faf-142">Дополнительные сведения см. в разделе <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, и <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="61faf-142">For additional information, see the <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, and <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> properties.</span></span>
  
> [!NOTE]
> <span data-ttu-id="61faf-143">Если вы создаете <xref:System.Net.HttpListener> по протоколу https, необходимо выбрать сертификат сервера для этого прослушивателя.</span><span class="sxs-lookup"><span data-stu-id="61faf-143">If you create an <xref:System.Net.HttpListener> using https, you must select a Server Certificate for that listener.</span></span> <span data-ttu-id="61faf-144">В противном случае <xref:System.Net.HttpWebRequest> подзапрос этого <xref:System.Net.HttpListener> завершится с неожиданный запрос закрытия соединения.</span><span class="sxs-lookup"><span data-stu-id="61faf-144">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span>
  
> [!NOTE]
> <span data-ttu-id="61faf-145">Сертификаты сервера и другие параметры прослушивателя можно настроить с помощью сетевой оболочки (netsh.exe).</span><span class="sxs-lookup"><span data-stu-id="61faf-145">You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</span></span> <span data-ttu-id="61faf-146">См. в разделе [сетевой оболочки (Netsh)](/windows-server/networking/technologies/netsh/netsh) для получения дополнительных сведений.</span><span class="sxs-lookup"><span data-stu-id="61faf-146">See [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) for more details.</span></span> <span data-ttu-id="61faf-147">Исполняемый файл поставляются с Windows Server 2008 и Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="61faf-147">The executable began shipping with Windows Server 2008 and Windows Vista.</span></span>
  
> [!NOTE]
> <span data-ttu-id="61faf-148">При указании нескольких схем проверки подлинности для <xref:System.Net.HttpListener>, прослушиватель требует клиентов в следующем порядке: `Negotiate`, `NTLM`, `Digest`, а затем `Basic`.</span><span class="sxs-lookup"><span data-stu-id="61faf-148">If you specify multiple authentication schemes for the <xref:System.Net.HttpListener>, the listener will challenge clients in the following order: `Negotiate`, `NTLM`, `Digest`, and then `Basic`.</span></span>
  
   
  
## Examples
 <span data-ttu-id="61faf-149">В следующем примере кода показано использование <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="61faf-149">The following code example demonstrates using a <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61faf-150">Инициализирует новый экземпляр класса <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-151">Прежде чем использовать экземпляр, возвращаемый этим конструктором, необходимо вызвать его <xref:System.Net.HttpListener.Start%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-151">Before using the instance returned by this constructor, you must invoke its <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-152">В следующем примере кода показано использование <xref:System.Net.HttpListener> конструктор для создания нового <xref:System.Net.HttpListener> объекта.</span><span class="sxs-lookup"><span data-stu-id="61faf-152">The following code example demonstrates using the <xref:System.Net.HttpListener> constructor to create a new <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="61faf-153">Полный пример см. в разделе <xref:System.Net.HttpListener> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="61faf-153">For the complete example, see the <xref:System.Net.HttpListener> class topic.</span></span>  
  
 [!code-csharp[Net_listener_Basic#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61faf-154">Этот класс не может использоваться в этой операционной системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-154">This class cannot be used on the current operating system.</span>
          </span>
          <span data-ttu-id="61faf-155">Для использования экземпляров этого класса требуется операционная система Windows Server 2003 или Windows XP с пакетом обновления 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="61faf-156">
            <para>Примечание: Данный член генерирует сведения трассировки, при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-156">
              <para>Note: This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpListener.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61faf-157">Незамедлительно завершает работу объекта <see cref="T:System.Net.HttpListener" />, отменяя все текущие запросы в очереди.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-157">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-158">Этот метод освобождает все ресурсы, удерживаемые этим прослушивателем.</span><span class="sxs-lookup"><span data-stu-id="61faf-158">This method disposes of all resources held by this listener.</span></span> <span data-ttu-id="61faf-159">Не удалось завершить ожидающие запросы:</span><span class="sxs-lookup"><span data-stu-id="61faf-159">Any pending requests are unable to complete.</span></span>  
  
 <span data-ttu-id="61faf-160">После вызова этого метода, вы получите <xref:System.ObjectDisposedException> при попытке использовать этот <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="61faf-160">After calling this method, you will receive an <xref:System.ObjectDisposedException> if you attempt to use this <xref:System.Net.HttpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-161">В следующем примере кода демонстрируется вызов этого метода.</span><span class="sxs-lookup"><span data-stu-id="61faf-161">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="61faf-162">
            <para>Данный член генерирует сведения трассировки, при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-162">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationSchemes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemes" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemes As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationSchemes { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemes : System.Net.AuthenticationSchemes with get, set" Usage="System.Net.HttpListener.AuthenticationSchemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-163">Возвращает или задает схему, используемую для аутентификации клиентов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-163">Gets or sets the scheme used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-164">Битовая комбинация значений перечисления <see cref="T:System.Net.AuthenticationSchemes" />, которая указывает, как клиенты должны проходить аутентификацию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-164">A bitwise combination of <see cref="T:System.Net.AuthenticationSchemes" /> enumeration values that indicates how clients are to be authenticated.</span>
          </span>
          <span data-ttu-id="61faf-165">Значение по умолчанию — <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-165">The default value is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-166"><xref:System.Net.HttpListener> Использует указанную схему для проверки подлинности всех входящих запросов.</span><span class="sxs-lookup"><span data-stu-id="61faf-166">The <xref:System.Net.HttpListener> uses the specified scheme to authenticate all incoming requests.</span></span> <span data-ttu-id="61faf-167"><xref:System.Net.HttpListener.GetContext%2A> И <xref:System.Net.HttpListener.EndGetContext%2A> методы возвращают входящего клиентского запроса только в том случае, если <xref:System.Net.HttpListener> успешно проверяет подлинность запроса.</span><span class="sxs-lookup"><span data-stu-id="61faf-167">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming client request only if the <xref:System.Net.HttpListener> successfully authenticates the request.</span></span>  
  
 <span data-ttu-id="61faf-168">Можно запросить удостоверение успешно прошедшего проверку подлинности клиента с помощью <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="61faf-168">You can interrogate the identity of a successfully authenticated client by using the <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="61faf-169">Если вы хотите, чтобы <xref:System.Net.HttpListener> объект для использования в различных механизмов проверки подлинности на основе характеристик запросов, он получает (например, запроса <xref:System.Net.HttpListenerRequest.Url%2A> или <xref:System.Net.HttpListenerRequest.UserHostName%2A> свойства), необходимо реализовать метод, который выбирает Схема проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="61faf-169">If you want an <xref:System.Net.HttpListener> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostName%2A> property), you must implement a method that chooses the authentication scheme.</span></span> <span data-ttu-id="61faf-170">Инструкции о том, как это сделать, см. в разделе <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> документации свойства.</span><span class="sxs-lookup"><span data-stu-id="61faf-170">For instructions about how to do this, see the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61faf-171">Чтобы установить это свойство, чтобы включить хэш-кода, NTLM или Negotiate, необходимо <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="61faf-171">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-172">В следующем примере кода показано использование <xref:System.Net.HttpListener.AuthenticationSchemes%2A> свойство, чтобы указать схему проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="61faf-172">The following code example demonstrates using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property to specify an authentication scheme.</span></span>  
  
 [!code-csharp[Net_listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-173">Объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-173">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemeSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemeSelectorDelegate As AuthenticationSchemeSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemeSelector ^ AuthenticationSchemeSelectorDelegate { System::Net::AuthenticationSchemeSelector ^ get(); void set(System::Net::AuthenticationSchemeSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemeSelectorDelegate : System.Net.AuthenticationSchemeSelector with get, set" Usage="System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemeSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-174">Возвращает или задает делегат, вызываемый для определения протокола, который будет использоваться для аутентификации клиентов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-174">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-175">Делегат <see cref="T:System.Net.AuthenticationSchemeSelector" />, который вызывает метод, используемый для выбора протокола аутентификации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-175">An <see cref="T:System.Net.AuthenticationSchemeSelector" /> delegate that invokes the method used to select an authentication protocol.</span>
          </span>
          <span data-ttu-id="61faf-176">Значение по умолчанию — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-176">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="61faf-177">Если требуется, чтобы один и тот же протокол проверки подлинности для всех запросов, обрабатываемых конкретного экземпляра <xref:System.Net.HttpListener>, необходимо задать это свойство.</span><span class="sxs-lookup"><span data-stu-id="61faf-177">If you want the same authentication protocol to be used for all requests handled by a particular instance of <xref:System.Net.HttpListener>, you do not need to set this property.</span></span> <span data-ttu-id="61faf-178">Чтобы указать протокол, используемый для всех запросов клиентов, используйте <xref:System.Net.HttpListener.AuthenticationSchemes%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="61faf-178">To specify a protocol to be used for all client requests, use the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property.</span></span>  
  
 <span data-ttu-id="61faf-179">Если клиент не указал сведения для проверки подлинности в заголовках, <xref:System.Net.HttpListener> вызывает указанный делегат для каждого не прошедших проверку подлинности входящего запроса определить, какой протокол использовать для проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="61faf-179">If the client has not specified authentication information in its headers, the <xref:System.Net.HttpListener> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</span></span> <span data-ttu-id="61faf-180"><xref:System.Net.HttpListener.GetContext%2A> И <xref:System.Net.HttpListener.EndGetContext%2A> методы возвращают входящих только если запрос <xref:System.Net.HttpListener> успешно прошел проверку подлинности запроса.</span><span class="sxs-lookup"><span data-stu-id="61faf-180">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming request only if the <xref:System.Net.HttpListener> successfully authenticated the request.</span></span> <span data-ttu-id="61faf-181">Если запрос не может пройти проверку подлинности, <xref:System.Net.HttpListener> автоматически отправляет обратно ответ 401.</span><span class="sxs-lookup"><span data-stu-id="61faf-181">If a request cannot be authenticated, the <xref:System.Net.HttpListener> automatically sends back a 401 response.</span></span> <span data-ttu-id="61faf-182">Вы можете получить удостоверение успешно прошедшего проверку подлинности клиента с помощью <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="61faf-182">You can get the identity of a successfully authenticated client using the <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="61faf-183">Возможность делегировать Выбор протокола проверки подлинности к методу относящиеся к приложению полезно, если требуется экземпляр <xref:System.Net.HttpListener> для использования различных протоколов проверки подлинности в зависимости от характеристик получит (для запросов Например, запрос <xref:System.Net.HttpListenerRequest.Url%2A> или <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> свойство).</span><span class="sxs-lookup"><span data-stu-id="61faf-183">The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <xref:System.Net.HttpListener> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61faf-184">Чтобы установить это свойство, чтобы включить хэш-кода, NTLM или Negotiate, необходимо <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="61faf-184">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-185">В следующем примере кода задает значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="61faf-185">The following code example sets the value of this property.</span></span>  
  
 [!code-csharp[NclListener#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#2)]
 [!code-vb[NclListener#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#2)]  
  
 <span data-ttu-id="61faf-186">В следующем примере кода предоставляет реализацию метода, вызванного <xref:System.Net.AuthenticationSchemeSelector> делегировать.</span><span class="sxs-lookup"><span data-stu-id="61faf-186">The following code example provides an implementation of a method invoked by an <xref:System.Net.AuthenticationSchemeSelector> delegate.</span></span>  
  
 [!code-csharp[NclListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#1)]
 [!code-vb[NclListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-187">Объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-187">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetContext">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetContext (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetContext(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetContext (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetContext(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetContext : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListener.BeginGetContext (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="61faf-188">Делегат <see cref="T:System.AsyncCallback" />, ссылающийся на метод, который следует вызвать при наличии клиентского запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-188">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="61faf-189">Пользовательский объект, содержащий сведения об операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-189">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="61faf-190">Этот объект передается делегату <c>callback</c> по завершении операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-190">This object is passed to the <c>callback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61faf-191">Начинает асинхронное получение входящего запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-191">Begins asynchronously retrieving an incoming request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61faf-192">Объект <see cref="T:System.IAsyncResult" />, представляющий состояние асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-192">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-193"><xref:System.Net.HttpListener.BeginGetContext%2A> Метод начинает асинхронный вызов (без блокировки) для получения входящих клиентских запросов.</span><span class="sxs-lookup"><span data-stu-id="61faf-193">The <xref:System.Net.HttpListener.BeginGetContext%2A> method begins an asynchronous (non-blocking) call to receive incoming client requests.</span></span> <span data-ttu-id="61faf-194">Перед вызовом этого метода, необходимо вызвать <xref:System.Net.HttpListener.Start%2A> метод и добавьте по крайней мере один префикс универсальный код ресурса (URI) для прослушивания путем добавления строки URI для <xref:System.Net.HttpListenerPrefixCollection> возвращаемые <xref:System.Net.HttpListener.Prefixes%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="61faf-194">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="61faf-195">Завершите асинхронную операцию путем вызова <xref:System.Net.HttpListener.EndGetContext%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-195">The asynchronous operation must be completed by calling the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span> <span data-ttu-id="61faf-196">Как правило, вызывается метод `callback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="61faf-196">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="61faf-197">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="61faf-197">This method does not block while the operation completes.</span></span> <span data-ttu-id="61faf-198">Чтобы получить входящего запроса и блок до завершения операции, вызовите <xref:System.Net.HttpListener.GetContext%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-198">To get an incoming request and block until the operation completes, call the <xref:System.Net.HttpListener.GetContext%2A> method.</span></span>  
  
 <span data-ttu-id="61faf-199">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61faf-199">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-200">В следующем примере кода показано использование <xref:System.Net.HttpListener.BeginGetContext%2A> метод, чтобы определить метод обратного вызова, который будет обрабатывать входящие клиентские запросы.</span><span class="sxs-lookup"><span data-stu-id="61faf-200">The following code example demonstrates using the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify a callback method that will handle incoming client requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 <span data-ttu-id="61faf-201">В следующем примере кода реализуется метод обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="61faf-201">The following code example implements a callback method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="61faf-202">Вызов функции Win32 завершился с ошибкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-202">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="61faf-203">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-203">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61faf-204">Этот объект не был запущен или в настоящее время остановлен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-204">This object has not been started or is currently stopped.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-205">Данный объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-205">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="61faf-206">
            <para>Данный член генерирует сведения трассировки, при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-206">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="httpListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61faf-207">Завершает работу <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-207">Shuts down the <see cref="T:System.Net.HttpListener" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-208">После вызова этого метода, больше не используется <xref:System.Net.HttpListener> объекта.</span><span class="sxs-lookup"><span data-stu-id="61faf-208">After calling this method, you can no longer use the <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="61faf-209">Чтобы временно приостановить <xref:System.Net.HttpListener> , используйте <xref:System.Net.HttpListener.Stop%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-209">To temporarily pause an <xref:System.Net.HttpListener> object, use the <xref:System.Net.HttpListener.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="61faf-210">Этот метод завершает раскрывающихся списков <xref:System.Net.HttpListener> объекта без обработки запросов в очереди.</span><span class="sxs-lookup"><span data-stu-id="61faf-210">This method shut downs the <xref:System.Net.HttpListener> object without processing queued requests.</span></span> <span data-ttu-id="61faf-211">Не удалось завершить ожидающие запросы:</span><span class="sxs-lookup"><span data-stu-id="61faf-211">Any pending requests are unable to complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-212">В следующем примере кода демонстрируется вызов этого метода.</span><span class="sxs-lookup"><span data-stu-id="61faf-212">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="61faf-213">
            <para>Данный член генерирует сведения трассировки, при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-213">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultServiceNames">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.DefaultServiceNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultServiceNames As ServiceNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ DefaultServiceNames { System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultServiceNames : System.Security.Authentication.ExtendedProtection.ServiceNameCollection" Usage="System.Net.HttpListener.DefaultServiceNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ServiceNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-214">Получает список имен поставщиков услуг (SPN) по умолчанию в соответствии с зарегистрированными префиксами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-214">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-215">Объект <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />, содержащий список SPN.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-215">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains a list of SPNs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-216"><xref:System.Net.HttpListener.DefaultServiceNames%2A> Свойство используется со встроенной проверкой подлинности Windows для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="61faf-216">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="61faf-217">Список SPN инициализируется из <xref:System.Net.HttpListener.Prefixes%2A> свойства в случае, если доступ к и очищается при добавлении новых префиксов <xref:System.Net.HttpListener.Prefixes%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="61faf-217">The list of SPNs is initialized from the <xref:System.Net.HttpListener.Prefixes%2A> property when accessed and cleared when new prefixes are added to the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="61faf-218"><xref:System.Net.HttpListener.DefaultServiceNames%2A> Свойство используется в том случае, если приложение не задает <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> свойства на его расширенную политику защиты.</span><span class="sxs-lookup"><span data-stu-id="61faf-218">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used if an application doesn't set the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> property on its extended protection policy.</span></span>  
  
 <span data-ttu-id="61faf-219"><xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> , Полученного с помощью <xref:System.Net.HttpListener.DefaultServiceNames%2A> свойство построена на основе <xref:System.Net.HttpListener.Prefixes%2A> свойство согласно следующим правилам:</span><span class="sxs-lookup"><span data-stu-id="61faf-219">The <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> that is retrieved with the <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is built from the <xref:System.Net.HttpListener.Prefixes%2A> property according to the following rules:</span></span>  
  
1.  <span data-ttu-id="61faf-220">Если имя узла «+», «*», или литерал IPv4 или IPv6 (эквивалентно "\*" но ограничивается в определенном локальном интерфейсе), добавляются следующие SPN:</span><span class="sxs-lookup"><span data-stu-id="61faf-220">If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "\*" but restricted to a specific local interface), the following SPN is added:</span></span>  
  
 <span data-ttu-id="61faf-221">`"HTTP/"` а также полное доменное имя компьютера.</span><span class="sxs-lookup"><span data-stu-id="61faf-221">`"HTTP/"` plus the fully qualified domain name of the computer.</span></span>  
  
1.  <span data-ttu-id="61faf-222">Если имя узла содержит не точки (не домены или поддомены), будет предпринята попытка разрешить полное доменное имя, с помощью DNS (же поведение, используемое <xref:System.Net.HttpWebRequest>).</span><span class="sxs-lookup"><span data-stu-id="61faf-222">If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <xref:System.Net.HttpWebRequest>).</span></span> <span data-ttu-id="61faf-223">Если полное доменное имя может быть разрешено, добавляются следующие SPN:</span><span class="sxs-lookup"><span data-stu-id="61faf-223">If the fully-qualified domain name can be resolved, the following SPNs are added:</span></span>  
  
 <span data-ttu-id="61faf-224">`"HTTP/"` Кроме того, имя узла (короткое имя).</span><span class="sxs-lookup"><span data-stu-id="61faf-224">`"HTTP/"` plus the hostname (the short name).</span></span>  
  
 <span data-ttu-id="61faf-225">`"HTTP/"` а также полное доменное имя для имени узла.</span><span class="sxs-lookup"><span data-stu-id="61faf-225">`"HTTP/"` plus the fully qualified domain name for the hostname.</span></span>  
  
1.  <span data-ttu-id="61faf-226">Если имя узла содержит не точки (не домены или поддомены) и полное доменное имя не может быть разрешена, добавляется следующий SPN:</span><span class="sxs-lookup"><span data-stu-id="61faf-226">If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</span></span>  
  
 <span data-ttu-id="61faf-227">`"HTTP/"` Кроме того, имя узла.</span><span class="sxs-lookup"><span data-stu-id="61faf-227">`"HTTP/"` plus the hostname.</span></span>  
  
1.  <span data-ttu-id="61faf-228">Если имя узла содержит точки (домены или поддомены), добавляется следующий SPN:</span><span class="sxs-lookup"><span data-stu-id="61faf-228">If the hostname contains dots (domains or subdomains), the following SPN is added:</span></span>  
  
 <span data-ttu-id="61faf-229">`"HTTP/"` Кроме того, имя узла.</span><span class="sxs-lookup"><span data-stu-id="61faf-229">`"HTTP/"` plus the hostname.</span></span>  
  
 <span data-ttu-id="61faf-230"><xref:System.Net.HttpListener.DefaultServiceNames%2A> Свойство может использоваться приложением, чтобы просмотреть список SPN по умолчанию, которые будут использоваться для проверки подлинности, если пользовательский список не предоставляется.</span><span class="sxs-lookup"><span data-stu-id="61faf-230">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</span></span> <span data-ttu-id="61faf-231">Если требуются другие имена участников-служб, приложение можно добавить с помощью одного из <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="61faf-231">If other SPNs are needed, an application can add them using one of the <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> methods.</span></span>  
  
 <span data-ttu-id="61faf-232">Не является безопасным при использовании расширенной защиты для принятия решений согласно политике, основанных на запрошенного URL-адреса, поскольку это может быть перехвачены.</span><span class="sxs-lookup"><span data-stu-id="61faf-232">It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</span></span> <span data-ttu-id="61faf-233">Вместо этого приложения следует полагаться на <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> или <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> свойства для принятия таких решений политики.</span><span class="sxs-lookup"><span data-stu-id="61faf-233">Rather, applications should rely on the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> or <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> properties to make such policy decisions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EndGetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext EndGetContext (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext EndGetContext(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetContext (asyncResult As IAsyncResult) As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ EndGetContext(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetContext : IAsyncResult -&gt; System.Net.HttpListenerContext" Usage="httpListener.EndGetContext asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="61faf-234">Объект <see cref="T:System.IAsyncResult" />, который был получен при запуске асинхронной операции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-234">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61faf-235">Завершает асинхронную операцию получения входящего клиентского запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-235">Completes an asynchronous operation to retrieve an incoming client request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61faf-236">Объект <see cref="T:System.Net.HttpListenerContext" />, представляющий клиентский запрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-236">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-237"><xref:System.Net.HttpListener.EndGetContext%2A> Вызывается метод, обычно в методе обратного вызова, определяемые приложением, ни делегатом, чтобы получить <xref:System.Net.HttpListenerContext> , содержащий первый клиентский запрос и его связанного ответа.</span><span class="sxs-lookup"><span data-stu-id="61faf-237">The <xref:System.Net.HttpListener.EndGetContext%2A> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <xref:System.Net.HttpListenerContext> object that contains an incoming client request and its associated response.</span></span> <span data-ttu-id="61faf-238">Этот метод завершает операцию запущены ранее путем вызова <xref:System.Net.HttpListener.BeginGetContext%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-238">This method completes an operation previously started by calling the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="61faf-239">Если операция не завершена, этот метод блокируется до завершения удаления.</span><span class="sxs-lookup"><span data-stu-id="61faf-239">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="61faf-240">Поскольку вызов <xref:System.Net.HttpListener.EndGetContext%2A> метод требует <xref:System.Net.HttpListener> объекта, этот объект обычно передается в метод обратного вызова, используя состояние объекта, переданного в <xref:System.Net.HttpListener.BeginGetContext%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-240">Because calling the <xref:System.Net.HttpListener.EndGetContext%2A> method requires the <xref:System.Net.HttpListener> object, this object is typically passed into a callback method by using the state object passed into the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="61faf-241">Этот объект состояния можно получить с помощью <xref:System.IAsyncResult.AsyncState%2A> свойство `asyncResult` объекта.</span><span class="sxs-lookup"><span data-stu-id="61faf-241">You can obtain this state object by using the <xref:System.IAsyncResult.AsyncState%2A> property of the `asyncResult` object.</span></span>  
  
 <span data-ttu-id="61faf-242">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61faf-242">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-243">В следующем примере кода показана реализация метода обратного вызова, который вызывает <xref:System.Net.HttpListener.EndGetContext%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-243">The following code example shows the implementation of a callback method that calls the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61faf-244">Значение параметра <paramref name="asyncResult" /> не получено вызовом метода <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-244">
              <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61faf-245">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-245">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61faf-246">Метод <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> уже был вызван для указанного объекта <paramref name="asyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-246">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-247">Данный объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-247">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="61faf-248">
            <para>Данный член генерирует сведения трассировки, при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-248">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionPolicy : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy with get, set" Usage="System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("not used anywhere in the implementation")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-249">Возвращает или задает объект <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который используется для расширенной защиты сеанса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-249">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-250">Объект <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который задает политику для расширенной защиты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-250">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-251"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> Свойство используется со встроенной проверкой подлинности Windows для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="61faf-251">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="61faf-252"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> Свойство позволяет задать конфигурацию политики расширенной защиты для всего <xref:System.Net.HttpListener> сеанса.</span><span class="sxs-lookup"><span data-stu-id="61faf-252">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="61faf-253"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> Свойство позволяет задать конфигурацию политики расширенной защиты для каждого отдельного запроса.</span><span class="sxs-lookup"><span data-stu-id="61faf-253">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy for each individual request.</span></span>  
  
 <span data-ttu-id="61faf-254">Свойство <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> должно иметь значение `null`.</span><span class="sxs-lookup"><span data-stu-id="61faf-254">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="61faf-255"><xref:System.Net.HttpListener> Экземпляр получает канал привязки токена (CBT) непосредственно из собственного сеанса TLS, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="61faf-255">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61faf-256">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />, но свойство <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> не имело значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-256">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61faf-257">Предпринята попытка задать свойству <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-257">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61faf-258">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> после вызова метода <see cref="M:System.Net.HttpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-258">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-259">Данный объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-259">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61faf-260">Свойству <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> было присвоено значение <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> на платформе, не поддерживающей расширенную защиту.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-260">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener.ExtendedProtectionSelector ExtendedProtectionSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener/ExtendedProtectionSelector ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionSelectorDelegate As HttpListener.ExtendedProtectionSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener::ExtendedProtectionSelector ^ ExtendedProtectionSelectorDelegate { System::Net::HttpListener::ExtendedProtectionSelector ^ get(); void set(System::Net::HttpListener::ExtendedProtectionSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionSelectorDelegate : System.Net.HttpListener.ExtendedProtectionSelector with get, set" Usage="System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener+ExtendedProtectionSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-261">Возвращает или задает делегат, вызываемый для определения объекта <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который следует использовать для каждого запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-261">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-262">Объект <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />, который задает политику для расширенной защиты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-262">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-263"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> Свойство используется со встроенной проверкой подлинности Windows для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="61faf-263">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="61faf-264"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> Свойство позволяет задать конфигурацию политики расширенной защиты для всего <xref:System.Net.HttpListener> сеанса.</span><span class="sxs-lookup"><span data-stu-id="61faf-264">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="61faf-265"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> Свойство позволяет настраивать политику расширенной защиты для отдельного запроса.</span><span class="sxs-lookup"><span data-stu-id="61faf-265">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy per individual request.</span></span>  
  
 <span data-ttu-id="61faf-266">Свойство <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> должно иметь значение `null`.</span><span class="sxs-lookup"><span data-stu-id="61faf-266">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="61faf-267"><xref:System.Net.HttpListener> Экземпляр получает канал привязки токена (CBT) непосредственно из собственного сеанса TLS, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="61faf-267">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 <span data-ttu-id="61faf-268">Для каждого запроса, делегат может выбрать параметры, <xref:System.Net.HttpListener> экземпляр будет использовать для обеспечения расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="61faf-268">For each request, the delegate can choose the settings that the <xref:System.Net.HttpListener> instance will use to provide extended protection.</span></span>  
  
 <span data-ttu-id="61faf-269">Если делегат возвращает `null` для этого свойства представляет <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> которой <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> свойство значение <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="61faf-269">If a delegate returns `null` for this property, this represents a <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> which the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> property set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61faf-270">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />, но свойство <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> должно иметь значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-270">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61faf-271">Предпринята попытка задать свойству <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-271">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61faf-272">Предпринята попытка установить свойство <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> после вызова метода <see cref="M:System.Net.HttpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-272">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-273">Данный объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-273">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61faf-274">Предпринята попытка задать свойство  <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> на платформе, не поддерживающей расширенную защиту.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-274">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ GetContext();" />
      <MemberSignature Language="F#" Value="member this.GetContext : unit -&gt; System.Net.HttpListenerContext" Usage="httpListener.GetContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61faf-275">Ожидает входящий запрос и выполняет возврат при его получении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-275">Waits for an incoming request and returns when one is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61faf-276">Объект <see cref="T:System.Net.HttpListenerContext" />, представляющий клиентский запрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-276">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-277">Перед вызовом этого метода, необходимо вызвать <xref:System.Net.HttpListener.Start%2A> метод и добавьте по крайней мере один префикс URI для прослушивания путем добавления строки URI для <xref:System.Net.HttpListenerPrefixCollection> возвращаемые <xref:System.Net.HttpListener.Prefixes%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="61faf-277">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="61faf-278">Подробное описание префиксов, см. в разделе <xref:System.Net.HttpListener> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="61faf-278">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 <span data-ttu-id="61faf-279">Этот метод блокируется во время ожидания для входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="61faf-279">This method blocks while waiting for an incoming request.</span></span> <span data-ttu-id="61faf-280">Входящие запросы обрабатывались асинхронно (в отдельных потоках), чтобы не блокировать приложения, используйте <xref:System.Net.HttpListener.BeginGetContext%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-280">If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-281">В следующем примере кода демонстрируется вызов этого метода.</span><span class="sxs-lookup"><span data-stu-id="61faf-281">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="61faf-282">Вызов функции Win32 завершился с ошибкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-282">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="61faf-283">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-283">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61faf-284">Этот объект не был запущен или в настоящее время остановлен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-284">This object has not been started or is currently stopped.</span>
          </span>
          <span data-ttu-id="61faf-285">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-285">-or-</span>
          </span>
          <span data-ttu-id="61faf-286">Прослушиватель <see cref="T:System.Net.HttpListener" /> не имеет префиксов URI для ответа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-286">The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-287">Данный объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-287">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="61faf-288">
            <para>Данный член генерирует сведения трассировки, при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-288">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetContextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt; GetContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.HttpListenerContext&gt; GetContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextAsync () As Task(Of HttpListenerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::HttpListenerContext ^&gt; ^ GetContextAsync();" />
      <MemberSignature Language="F#" Value="member this.GetContextAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;" Usage="httpListener.GetContextAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61faf-289">Ожидает входящий запрос как асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-289">Waits for an incoming request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61faf-290">Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-290">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="61faf-291">Объект задачи, представляющий асинхронную операцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-291">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="61faf-292">Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> объекта задачи возвращает объект <see cref="T:System.Net.HttpListenerContext" />, представляющий запрос клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-292">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-293">Эта операция не будет блокировать.</span><span class="sxs-lookup"><span data-stu-id="61faf-293">This operation will not block.</span></span> <span data-ttu-id="61faf-294">Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена при получении входящего запроса.</span><span class="sxs-lookup"><span data-stu-id="61faf-294">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the incoming request has been received.</span></span>  
  
 <span data-ttu-id="61faf-295">Перед вызовом этого метода, необходимо вызвать <xref:System.Net.HttpListener.Start%2A> метод и добавьте по крайней мере один префикс URI для прослушивания путем добавления строки URI для <xref:System.Net.HttpListenerPrefixCollection> возвращаемые <xref:System.Net.HttpListener.Prefixes%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="61faf-295">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="61faf-296">Подробное описание префиксов, см. в разделе <xref:System.Net.HttpListener> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="61faf-296">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListenerContext" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWriteExceptions">
      <MemberSignature Language="C#" Value="public bool IgnoreWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWriteExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWriteExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWriteExceptions : bool with get, set" Usage="System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-297">Возвращает или задает значение <see cref="T:System.Boolean" />, которое определяет, получает ли приложение исключения, которые возникают при отправке прослушивателем <see cref="T:System.Net.HttpListener" /> ответа клиенту.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-297">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-298">Значение <see langword="true" />, если этот прослушиватель <see cref="T:System.Net.HttpListener" /> не должен возвращать исключения, возникающие при отправке ответа клиенту; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-298">
              <see langword="true" /> if this <see cref="T:System.Net.HttpListener" /> should not return exceptions that occur when sending the response to the client; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="61faf-299">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-299">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-300">Присвойте этому свойству значение `true` приложения не требуется, чтобы каждый клиент успешно отправляется ответ.</span><span class="sxs-lookup"><span data-stu-id="61faf-300">Set this property to `true` if your application does not require that a response is successfully sent to each client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-301">В следующем примере кода показано задание этого свойства.</span><span class="sxs-lookup"><span data-stu-id="61faf-301">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-302">Объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-302">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsListening" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsListening { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsListening : bool" Usage="System.Net.HttpListener.IsListening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-303">Возвращает значение, показывающее, был ли запущен прослушиватель <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-303">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-304">Значение <see langword="true" />, если прослушиватель <see cref="T:System.Net.HttpListener" /> был запущен; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-304">
              <see langword="true" /> if the <see cref="T:System.Net.HttpListener" /> was started; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-305">Чтобы запустить <xref:System.Net.HttpListener>, вызовите <xref:System.Net.HttpListener.Start%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-305">To start an <xref:System.Net.HttpListener>, call the <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-306">В следующем примере кода демонстрируется использование этого свойства для определения состояние прослушивания экземпляра.</span><span class="sxs-lookup"><span data-stu-id="61faf-306">The following code example demonstrates using this property to determine the listening state of an instance.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Net.HttpListener.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-307">Возвращает значение, которое указывает, можно ли использовать прослушиватель <see cref="T:System.Net.HttpListener" /> в текущей операционной системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-307">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-308">Значение <see langword="true" />, если <see cref="T:System.Net.HttpListener" /> поддерживается; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-308">
              <see langword="true" /> if <see cref="T:System.Net.HttpListener" /> is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-309">Этот класс доступен только на компьютерах под управлением операционных систем Windows XP SP2 или Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="61faf-309">This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-310">В следующем примере кода демонстрируется использование <xref:System.Net.HttpListener.IsSupported%2A> свойство для обнаружения ли <xref:System.Net.HttpListener> объект может использоваться с текущей операционной системы.</span><span class="sxs-lookup"><span data-stu-id="61faf-310">The following code example demonstrates the use of the <xref:System.Net.HttpListener.IsSupported%2A> property to detect whether an <xref:System.Net.HttpListener> object can be used with the current operating system.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefixes">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerPrefixCollection Prefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerPrefixCollection Prefixes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Prefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefixes As HttpListenerPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerPrefixCollection ^ Prefixes { System::Net::HttpListenerPrefixCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefixes : System.Net.HttpListenerPrefixCollection" Usage="System.Net.HttpListener.Prefixes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-311">Возвращает префиксы URI, обрабатываемые этим объектом <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-311">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-312">Коллекция <see cref="T:System.Net.HttpListenerPrefixCollection" />, содержащая префиксы URI, которые может обрабатывать этот объект <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-312">An <see cref="T:System.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes that this <see cref="T:System.Net.HttpListener" /> object is configured to handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-313">Префиксы указаны в канонической форме.</span><span class="sxs-lookup"><span data-stu-id="61faf-313">The prefixes are in canonical form.</span></span> <span data-ttu-id="61faf-314">Подробное описание префиксов, см. в разделе <xref:System.Net.HttpListener> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="61faf-314">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-315">В следующем примере кода показано использование <xref:System.Net.HttpListener.Prefixes%2A> свойство для получения и печать префиксы URI, которые обрабатываются.</span><span class="sxs-lookup"><span data-stu-id="61faf-315">The following code example demonstrates using the <xref:System.Net.HttpListener.Prefixes%2A> property to obtain and print the URI prefixes that are handled.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-316">Объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-316">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.Net.HttpListener.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-317">Возвращает или задает область или раздел ресурса, связанные с этим объектом <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-317">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-318">Значение <see cref="T:System.String" />, которое содержит имя области, связанной с этим объектом <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-318">A <see cref="T:System.String" /> value that contains the name of the realm associated with the <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-319">Серверы используют области для разделения защищенных ресурсов; Каждая секция может иметь свою собственную схему и базу данных проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="61faf-319">Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</span></span> <span data-ttu-id="61faf-320">Области используются только для обычной проверки подлинности и дайджест-проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="61faf-320">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="61faf-321">После успешного прохождения клиентом проверки подлинности ее результаты действительны для всех ресурсов в данной области.</span><span class="sxs-lookup"><span data-stu-id="61faf-321">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="61faf-322">Подробное описание областей, см. в разделе RFC 2617 по [ https://www.ietf.org/ ](https://www.ietf.org/).</span><span class="sxs-lookup"><span data-stu-id="61faf-322">For a detailed description of realms, see RFC 2617 at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="61faf-323">Экземпляр <xref:System.Net.HttpListener> имеет только один связанный сферы.</span><span class="sxs-lookup"><span data-stu-id="61faf-323">An instance of <xref:System.Net.HttpListener> has only one associated realm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-324">В следующем примере кода демонстрируется параметр <xref:System.Net.HttpListener.Realm%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="61faf-324">The following code example demonstrates setting the <xref:System.Net.HttpListener.Realm%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-325">Объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-325">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="httpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61faf-326">Позволяет этому экземпляру получать входящие запросы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-326">Allows this instance to receive incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-327">Этот метод должен вызываться перед вызовом метода <xref:System.Net.HttpListener.GetContext%2A> или <xref:System.Net.HttpListener.BeginGetContext%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="61faf-327">This method must be called before you call the <xref:System.Net.HttpListener.GetContext%2A> or <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
 <span data-ttu-id="61faf-328">После запуска <xref:System.Net.HttpListener> объекта, можно использовать <xref:System.Net.HttpListener.Stop%2A> метод для ее остановки.</span><span class="sxs-lookup"><span data-stu-id="61faf-328">After you have started an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Stop%2A> method to stop it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61faf-329">Если этот экземпляр прослушивателя использует протокол https, необходимо установить и выбрать сертификат сервера.</span><span class="sxs-lookup"><span data-stu-id="61faf-329">If this listener instance uses https, you must install and select a Server Certificate.</span></span> <span data-ttu-id="61faf-330">В противном случае <xref:System.Net.HttpWebRequest> подзапрос этого <xref:System.Net.HttpListener> завершится с неожиданный запрос закрытия соединения.</span><span class="sxs-lookup"><span data-stu-id="61faf-330">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span> <span data-ttu-id="61faf-331">Сертификаты сервера и другие параметры прослушивателя можно настроить с помощью HttpCfg.exe.</span><span class="sxs-lookup"><span data-stu-id="61faf-331">You can configure Server Certificates and other listener options by using HttpCfg.exe.</span></span> <span data-ttu-id="61faf-332">См. в разделе [ http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) для получения дополнительных сведений.</span><span class="sxs-lookup"><span data-stu-id="61faf-332">See [http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) for more details.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-333">В следующем примере кода показано использование <xref:System.Net.HttpListener.Start%2A> метод, чтобы начать обработку входящих запросов.</span><span class="sxs-lookup"><span data-stu-id="61faf-333">The following code example demonstrates using the <xref:System.Net.HttpListener.Start%2A> method to begin processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="61faf-334">Вызов функции Win32 завершился с ошибкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-334">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="61faf-335">Проверьте свойство исключения <see cref="P:System.Net.HttpListenerException.ErrorCode" />, чтобы определить причину исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-335">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-336">Данный объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-336">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="61faf-337">
            <para>Данный член генерирует сведения трассировки, при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-337">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="httpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61faf-338">Заставляет этот экземпляр прекратить получать входящие запросы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-338">Causes this instance to stop receiving incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-339">Если этот экземпляр уже остановлена, вызов этого метода не оказывает влияния.</span><span class="sxs-lookup"><span data-stu-id="61faf-339">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 <span data-ttu-id="61faf-340">После остановки <xref:System.Net.HttpListener> объекта, можно использовать <xref:System.Net.HttpListener.Start%2A> метод перезапустить ее.</span><span class="sxs-lookup"><span data-stu-id="61faf-340">After you have stopped an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Start%2A> method to restart it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-341">В следующем примере кода показано использование <xref:System.Net.HttpListener.Stop%2A> метод для остановки обработки входящих запросов.</span><span class="sxs-lookup"><span data-stu-id="61faf-341">The following code example demonstrates using the <xref:System.Net.HttpListener.Stop%2A> method to stop processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-342">Объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-342">This object has been closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="61faf-343">
            <para>Данный член генерирует сведения трассировки, при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [сетевая трассировка в .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-343">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61faf-344">Освобождает ресурсы, удерживаемые этим объектом <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-344">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-345">Приложения должны использовать <xref:System.Net.HttpListener.Close%2A> метод вместо вызова данного метода.</span><span class="sxs-lookup"><span data-stu-id="61faf-345">Applications should use the <xref:System.Net.HttpListener.Close%2A> method instead of calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutManager">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerTimeoutManager TimeoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerTimeoutManager TimeoutManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.TimeoutManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutManager As HttpListenerTimeoutManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerTimeoutManager ^ TimeoutManager { System::Net::HttpListenerTimeoutManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutManager : System.Net.HttpListenerTimeoutManager" Usage="System.Net.HttpListener.TimeoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerTimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-346">Диспетчер времени ожидания для этого экземпляра <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-346">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-347">Возвращает <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-347">Returns <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          </span>
          <span data-ttu-id="61faf-348">Диспетчер времени ожидания для этого экземпляра <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-348">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-349">Диспетчер времени ожидания определяет ограничения времени ожидания соединения для данного <xref:System.Net.HttpListener> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="61faf-349">The timeout manager defines the connection timeout limits for this <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnsafeConnectionNtlmAuthentication : bool with get, set" Usage="System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Support for NTLM needs some loving.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61faf-350">Возвращает или задает значение <see cref="T:System.Boolean" />, которое определяет, должны ли дополнительные запросы, использующие то же TCP-подключение, проходить аутентификацию при использовании протокола NTLM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-350">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61faf-351">Значение <see langword="true" />, если сведения об идентификации <see cref="T:System.Security.Principal.IIdentity" /> первого запроса будут использоваться для последующих запросов на том же подключении, в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-351">
              <see langword="true" /> if the <see cref="T:System.Security.Principal.IIdentity" /> of the first request will be used for subsequent requests on the same connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="61faf-352">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-352">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61faf-353">Если присвоить этому свойству `true` и первый запрос через определенное подключение TCP проходит проверку подлинности с помощью NTLM, последующие запросы через одно и то же подключение TCP обрабатываются с использованием сведения для проверки подлинности (<xref:System.Security.Principal.IIdentity>) начального запрос.</span><span class="sxs-lookup"><span data-stu-id="61faf-353">When this property is set to `true` and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<xref:System.Security.Principal.IIdentity>) of the initial request.</span></span>  
  
 <span data-ttu-id="61faf-354">Это свойство не имеет значения, если NTLM не является протоколом проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="61faf-354">This property has no effect when NTLM is not the authentication protocol.</span></span> <span data-ttu-id="61faf-355">При указании в качестве протокола проверки подлинности Negotiate, это свойство действует только в том случае, если является фактически применяемый протокол, используемый для проверки подлинности NTLM.</span><span class="sxs-lookup"><span data-stu-id="61faf-355">When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61faf-356">Значение этого свойства `true` повышается производительность, поскольку <xref:System.Net.HttpListener> не не отправлять дополнительные проверки подлинности NTLM, есть риск безопасности не требовать от всех запросов, чтобы предоставить сведения для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="61faf-356">While setting this property to `true` increases performance because the <xref:System.Net.HttpListener> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="61faf-357">Необходимо определить, стоит ли снижать безопасность с целью увеличения производительности.</span><span class="sxs-lookup"><span data-stu-id="61faf-357">You must determine whether the increase in performance is worth this risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61faf-358">В следующем примере кода показано задание этого свойства.</span><span class="sxs-lookup"><span data-stu-id="61faf-358">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61faf-359">Объект закрыт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61faf-359">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>