<Type Name="ICredentialPolicy" FullName="System.Net.ICredentialPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f791352f284d998118a147ed5e4389c4f140d30" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30465158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.ICredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет политику учетных данных, используемую для запросов, создаваемых с помощью <see cref="T:System.Net.WebRequest" /> и соответствующих производных классов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Политика учетных данных определяет, следует ли отправлять учетные данные при отправке <xref:System.Net.WebRequest> сетевой ресурс, например содержимого веб-страницы. Если учетные данные отправляются, серверы, требующие проверки подлинности клиента можно попытаться проверить подлинность клиента при получении запроса вместо отправки ответа, указывающего, что учетные данные клиента являются обязательными. Несмотря на отсутствие кругового пути к серверу, это увеличение производительности должно быть сопоставлено с риском безопасности, связанным с отправкой учетных данных по сети. Если сервер назначения не требует проверки подлинности клиента, лучше не отправлять учетные данные.  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy> политики вызываются только в том случае, если <xref:System.Net.WebRequest> или <xref:System.Net.WebProxy> связанный с запросом имеет учетные данные, которые не являются `null`. Установка этой политики не оказывает влияния на запросы, которые задают учетные данные.  
  
 Используйте <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> задаваемого свойства <xref:System.Net.ICredentialPolicy> политики. <xref:System.Net.IAuthenticationModule> , Проверку подлинности маркеров для запроса будет вызывать <xref:System.Net.ICredentialPolicy.ShouldSendCredential%2A> метод перед выполнением проверки подлинности. Если метод возвращает `false`, проверка подлинности не выполняется.  
  
 <xref:System.Net.ICredentialPolicy> Политики влияет на все экземпляры <xref:System.Net.WebRequest> с ненулевыми учетными данными в текущем домене приложения. Политики нельзя переопределить на отдельных запросов.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого интерфейса, который позволяет отправлять только для запросов, предназначенных для конкретных узлов учетные данные.  
  
 [!code-cpp[NclCredPolicy#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#3)]
 [!code-csharp[NclCredPolicy#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authenticationModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri">Адрес <see cref="T:System.Uri" />, который получит этот запрос.</param>
        <param name="request">Запрос <see cref="T:System.Net.WebRequest" />, представляющий запрашиваемый ресурс.</param>
        <param name="credential">Учетные данные <see cref="T:System.Net.NetworkCredential" />, которые будут отправлены с запросом, если этот метод возвращает значение <see langword="true" />.</param>
        <param name="authenticationModule">Модуль <see cref="T:System.Net.IAuthenticationModule" />, который будет выполнять проверку подлинности, если проверка подлинности является необходимой.</param>
        <summary>Возвращает объект <see cref="T:System.Boolean" />, который указывает, отправляются ли учетные данные клиента вместе с запросом ресурса, сделанного с помощью экземпляра класса <see cref="T:System.Net.WebRequest" />.</summary>
        <returns>
          Если учетные данные отправлены с запросом, значение <see langword="true" />, если нет — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После <xref:System.Net.ICredentialPolicy> , задав была указана политика <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> свойства <xref:System.Net.IAuthenticationModule> , проверку подлинности маркеров для <xref:System.Net.WebRequest> вызывает <xref:System.Net.ICredentialPolicy.ShouldSendCredential%2A> метод перед выполнением проверки подлинности. Если этот метод возвращает `false`, проверка подлинности не выполняется.  
  
 Если первоначальный запрос был перенаправлен или требуется проверка подлинности прокси-сервера, ресурсу, определяемому `challengeUri` может отличаться от запрошенного ресурса, указанного в <xref:System.Net.WebRequest.RequestUri%2A?displayProperty=nameWithType>. В случае перенаправления `challengeUri` содержит фактическое место назначения <xref:System.Uri>. Если требуется проверка подлинности прокси-сервера, `challengeUri` содержит адрес прокси-сервера, который требует проверки подлинности клиента.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>