<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SocketAddress.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59450cb79ab5f58542387491b72545105e08e82b0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9450cb79ab5f58542387491b72545105e08e82b0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.SocketAddress">
          <source>Stores serialized information from <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> derived classes.</source>
          <target state="translated">Сохраняет сведения о сериализации для производных классов <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>The first 2 bytes of the underlying buffer are reserved for the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> enumerated value.</source>
          <target state="translated">Первые 2 байта базовый буфер, зарезервированы для <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> значения перечисления.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>When the <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> is used to store a serialized <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>, the third and fourth bytes are used to store port number information.</source>
          <target state="translated">Когда <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> используется для хранения сериализованного <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>, третий и четвертый байты используются для хранения сведения о номере порта.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>The next bytes are used to store the IP address.</source>
          <target state="translated">Следующий байт используются для хранения IP-адрес.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>You can access any information within this underlying byte buffer by referring to its index position; the byte buffer uses zero-based indexing.</source>
          <target state="translated">Доступ к любым данным в этот базовый буфер байтов с помощью ссылки на его положение индекса. буфер байтов использует индексацию с нуля.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Net.SocketAddress.Family%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.SocketAddress.Size%2A&gt;</ph> properties to get the <ph id="ph3">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> value and the buffer size, respectively.</source>
          <target state="translated">Можно также использовать <ph id="ph1">&lt;xref:System.Net.SocketAddress.Family%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Net.SocketAddress.Size%2A&gt;</ph> свойства для получения <ph id="ph3">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> значение размера буфера, соответственно.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>To view any of this information as a string, use the <ph id="ph1">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Чтобы просмотреть эти сведения в виде строки, используйте <ph id="ph1">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>The following example demonstrates how to use <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> to serialize an instance of the <ph id="ph2">&lt;xref:System.Net.EndPoint&gt;</ph> class.</source>
          <target state="translated">В следующем примере демонстрируется использование <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> для сериализации экземпляра <ph id="ph2">&lt;xref:System.Net.EndPoint&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketAddress">
          <source>After serialization, the underlying byte buffer of the <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> contains all of the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> state information.</source>
          <target state="translated">После сериализации соответствующий байтовый буфер <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> содержит все <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> информация о состоянии.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Net.SocketAddress">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph> class.</source>
          <target state="translated">Создает новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> enumerated value.</source>
          <target state="translated">Перечислимое значение <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph> class for the given address family.</source>
          <target state="translated">Создает новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph> для указанного семейства адресов.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
          <source>This overload sets the underlying buffer size to 32 bytes.</source>
          <target state="translated">Эта перегрузка устанавливает размер соответствующего буфера равным 32 байтам.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> enumerated value.</source>
          <target state="translated">Перечислимое значение <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source>The number of bytes to allocate for the underlying buffer.</source>
          <target state="translated">Количество байтов, выделяемое для соответствующего буфера.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph> class using the specified address family and buffer size.</source>
          <target state="translated">Создает новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>, используя указанные семейство адресов и размер буфера.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source>Use this overload to create a new instance of the <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> class with a particular underlying buffer size.</source>
          <target state="translated">Используйте этот перегруженный метод для создания нового экземпляра <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> класса с определенным размером соответствующего буфера.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is less than 2.</source>
          <target state="translated">Значение параметра <ph id="ph1">&lt;paramref name="size" /&gt;</ph> меньше 2.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
          <source>These 2 bytes are needed to store <ph id="ph1">&lt;paramref name="family" /&gt;</ph>.</source>
          <target state="translated">Эти 2 байта необходимы для хранения <ph id="ph1">&lt;paramref name="family" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see langword="Object" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, с которым сравнивается текущий объект <ph id="ph2">&lt;see langword="Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see langword="Object" /&gt;</ph> is equal to the current <ph id="ph2">&lt;see langword="Object" /&gt;</ph>.</source>
          <target state="translated">Определяет, равен ли указанный объект <ph id="ph1">&lt;see langword="Object" /&gt;</ph> текущему объекту <ph id="ph2">&lt;see langword="Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see langword="Object" /&gt;</ph> is equal to the current <ph id="ph3">&lt;see langword="Object" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если указанный объект <ph id="ph2">&lt;see langword="Object" /&gt;</ph> равен текущему объекту <ph id="ph3">&lt;see langword="Object" /&gt;</ph>; в противном случае — <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Net.SocketAddress.Family">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> enumerated value of the current <ph id="ph2">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</source>
          <target state="translated">Возвращает значение перечисления <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> текущего <ph id="ph2">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Family">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> enumerated values.</source>
          <target state="translated">Одно из значений перечисления <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Family">
          <source>This method gets the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> enumerated value that represents the addressing scheme of the current <ph id="ph2">&lt;xref:System.Net.SocketAddress&gt;</ph>.</source>
          <target state="translated">Этот метод возвращает <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> перечислимое значение, представляющее схему адресации текущего <ph id="ph2">&lt;xref:System.Net.SocketAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Family">
          <source>If you want to view the corresponding string representation of <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Если вы хотите просмотреть соответствующий строковое представление <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph>, используйте <ph id="ph2">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.GetHashCode">
          <source>Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</source>
          <target state="translated">Служит в качестве хэш-функции для конкретного типа и может использоваться в алгоритмах хэширования и структурах данных, подобных хэш-таблице.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Хэш-код для текущего объекта <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>The array index element of the desired information.</source>
          <target state="translated">Элемент индекса массива нужных данных.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>Gets or sets the specified index element in the underlying buffer.</source>
          <target state="translated">Возвращает или устанавливает элемент с указанным индексом в соответствующем буфере.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>The value of the specified index element in the underlying buffer.</source>
          <target state="translated">Значение элемента с указанным индексом в соответствующем буфере.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>This property gets or sets the specified byte position in the underlying buffer.</source>
          <target state="translated">Это свойство Возвращает или задает позицию указанного байтового в базовый буфер.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>Be sure to call <ph id="ph1">&lt;xref:System.Net.SocketAddress.Size%2A&gt;</ph> before referring to elements in the underlying buffer.</source>
          <target state="translated">Необходимо вызвать <ph id="ph1">&lt;xref:System.Net.SocketAddress.Size%2A&gt;</ph> перед ссылаются на элементы в соответствующем буфере.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>Referring to an index that does not exist will cause the <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> to throw an <ph id="ph2">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</source>
          <target state="translated">Ссылка на несуществующий индекс, который не существует приведет к <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> создаст <ph id="ph2">&lt;xref:System.IndexOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Net.SocketAddress.Item(System.Int32)">
          <source>The specified index does not exist in the buffer.</source>
          <target state="translated">Указанный индекс не существует в буфере.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Net.SocketAddress.Size">
          <source>Gets the underlying buffer size of the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</source>
          <target state="translated">Возвращает размер соответствующего буфера <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Size">
          <source>The underlying buffer size of the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</source>
          <target state="translated">Размер соответствующего буфера <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketAddress.Size">
          <source>This property gets the underlying buffer size of the <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> in bytes.</source>
          <target state="translated">Это свойство получает размер соответствующего буфера <ph id="ph1">&lt;xref:System.Net.SocketAddress&gt;</ph> в байтах.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.ToString">
          <source>Returns information about the socket address.</source>
          <target state="translated">Возвращает сведения об адресе сокета.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.SocketAddress.ToString">
          <source>A string that contains information about the <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</source>
          <target state="translated">Строка, содержащая сведения о <ph id="ph1">&lt;see cref="T:System.Net.SocketAddress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketAddress.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> method returns a string that contains the <ph id="ph2">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> enumerated value, the size of the underlying buffer of the <ph id="ph3">&lt;xref:System.Net.SocketAddress&gt;</ph> structure, and the remaining contents of the buffer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.SocketAddress.ToString%2A&gt;</ph> Метод возвращает строку, содержащую <ph id="ph2">&lt;xref:System.Net.Sockets.AddressFamily&gt;</ph> перечисляемое значение, размер соответствующего буфера <ph id="ph3">&lt;xref:System.Net.SocketAddress&gt;</ph> структуры и оставшееся содержимое буфера.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>