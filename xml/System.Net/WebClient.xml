<Type Name="WebClient" FullName="System.Net.WebClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d9bf193936aa85432a3f59e3c7656c5bf610654" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452467" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebClient : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebClient extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebClient" />
  <TypeSignature Language="VB.NET" Value="Public Class WebClient&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClient : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет общие методы обмена данными с ресурсом, заданным URI.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient> Класс предоставляет общие методы для отправки данных и получение данных из любого локального, интрасеть или Интернет-ресурса с заданным URI.  
  
 <xref:System.Net.WebClient> Класс использует <xref:System.Net.WebRequest> для предоставления доступа к ресурсам. <xref:System.Net.WebClient> экземпляры могут обращаться к данным с любого <xref:System.Net.WebRequest> зарегистрирована потомка <xref:System.Net.WebRequest.RegisterPrefix%2A?displayProperty=nameWithType> метод.  
  
> [!NOTE]
>  По умолчанию платформа .NET Framework поддерживает URI, которые начинаются с `http:`, `https:`, ftp:, и `file:` схему идентификаторов.  
  
 В следующей таблице описаны <xref:System.Net.WebClient> метода передачи данных на ресурс.  
  
|Метод|Описание:|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenWrite%2A>|Извлекает <xref:System.IO.Stream> используется для отправки данных в ресурс.|  
|<xref:System.Net.WebClient.OpenWriteAsync%2A>|Извлекает <xref:System.IO.Stream> используется для отправки данных для ресурсов, без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.UploadData%2A>|Передает массив байтов ресурсу и возвращает <xref:System.Byte> массив, содержащий любой ответ.|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|Отправляет <xref:System.Byte> массива для ресурса, без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.UploadFile%2A>|Передает локальный файл ресурсу и возвращает <xref:System.Byte> массив, содержащий любой ответ.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Отправляет локальный файл ресурсов, без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.UploadValues%2A>|Отправляет <xref:System.Collections.Specialized.NameValueCollection> ресурсов и возвращает <xref:System.Byte> массив, содержащий любой ответ.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Отправляет <xref:System.Collections.Specialized.NameValueCollection> ресурсов и возвращает <xref:System.Byte> массив, содержащий любой ответ, без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.UploadString%2A>|Отправляет <xref:System.String> к ресурсу, без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.UploadStringAsync%2A>|Отправляет <xref:System.String> к ресурсу, без блокировки вызывающего потока.|  
  
 В следующей таблице описаны <xref:System.Net.WebClient> метода для загрузки данных из ресурса.  
  
|Метод|Описание:|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenRead%2A>|Возвращает данные из ресурса в качестве <xref:System.IO.Stream>.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Возвращает данные из ресурса, без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.DownloadData%2A>|Загружает данные из ресурса и возвращает <xref:System.Byte> массива.|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Загружает данные из ресурса и возвращает <xref:System.Byte> массива без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.DownloadFile%2A>|Загружает данные из ресурса в локальный файл.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Загружает данные из ресурса в локальный файл без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.DownloadString%2A>|Загружает <xref:System.String> из ресурса и возвращает <xref:System.String>.|  
|<xref:System.Net.WebClient.DownloadStringAsync%2A>|Загружает <xref:System.String> из ресурса, без блокировки вызывающего потока.|  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Объект <xref:System.Net.WebClient> экземпляра не отправляет необязательные заголовки HTTP по умолчанию. Если запрос требует необязательный заголовок, необходимо добавить заголовок, чтобы <xref:System.Net.WebClient.Headers%2A> коллекции. Например чтобы сохранить запросы в ответе, необходимо добавить заголовок user-agent. Кроме того серверы могут возвращать 500 (Внутренняя ошибка сервера), если отсутствует заголовок user-agent.  
  
 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> имеет значение `true` в <xref:System.Net.WebClient> экземпляров.  
  
   
  
## Examples  
 В следующем примере кода используется URI ресурса, он извлекает и отображает ответ.  
  
 [!code-cpp[NCLWebClientUserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientUserAgent/CPP/useragent.cpp#1)]
 [!code-csharp[NCLWebClientUserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientUserAgent/CS/useragent.cs#1)]
 [!code-vb[NCLWebClientUserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientUserAgent/VB/useragent.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Для доступа к запрашиваемому URL-АДРЕСУ или любой URI, на который перенаправляется запрос. Связанное перечисление: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <block subset="none" type="overrides">
      <para>Производные классы должны вызывать реализацию базового класса <see cref="T:System.Net.WebClient" /> для обеспечения производного класса, работают нормально.</para>
    </block>
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <altmember cref="T:System.Net.HttpWebResponse" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.WebClient" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструктор по умолчанию создает новый экземпляр <xref:System.Net.WebClient> класса. Метод HTTP по умолчанию — GET. Метод FTP по умолчанию — RETR. Значением по умолчанию <xref:System.Net.WebClient.Encoding%2A> является <xref:System.Text.Encoding.Default%2A>. Значением свойства <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> по умолчанию является `true`.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Net.WebClient> экземпляра и использует его загрузка данных с сервера и их отображения на системную консоль, чтобы загрузить данные с сервера и записать их в файл для загрузки значения формы на сервер и получения ответа.  
  
 [!code-cpp[WebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient/CPP/webclient.cpp#1)]
 [!code-csharp[WebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient/CS/webclient.cs#1)]
 [!code-vb[WebClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient/VB/webclient.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowReadStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowReadStreamBuffering { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, которое указывает, будет ли выполняться буферизация данных, считываемых с интернет-ресурса для экземпляра <see cref="T:System.Net.WebClient" />.</summary>
        <value>Возвращает <see cref="T:System.Boolean" />.  
  
 Значение <see langword="true" /> устанавливается для включения буферизации данных, получаемых от интернет-ресурса; значение <see langword="false" /> — для выключения буферизации. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При <xref:System.Net.WebClient.AllowReadStreamBuffering%2A> свойство `true`, поэтому он готов для считывания приложением в буфере данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowWriteStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWriteStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, которое указывает, будет ли выполняться буферизация данных, записываемых в интернет-ресурс для экземпляра <see cref="T:System.Net.WebClient" />.</summary>
        <value>Возвращает <see cref="T:System.Boolean" />.  
  
 Значение <see langword="true" /> устанавливается для включения буферизации данных, записываемых в интернет-ресурс; значение <see langword="false" /> — для выключения буферизации. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При <xref:System.Net.WebClient.AllowWriteStreamBuffering%2A> свойство `true`, поэтому он может иметь более эффективно Интернет-ресурс большими частями в буфере данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public string BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает базовый URI для запросов, выполняемых экземпляром <see cref="T:System.Net.WebClient" />.</summary>
        <value>Строка <see cref="T:System.String" />, содержащая базовый URI для запросов, сделанных <see cref="T:System.Net.WebClient" /> или <see cref="F:System.String.Empty" />, если базового адреса не было указано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.BaseAddress%2A> Свойство содержит базовый URI, который используется в сочетании с относительным адресом. При вызове метода, который передает или загружает данные, <xref:System.Net.WebClient> объект соединяет этот базовый URI с относительным адресом, укажите в вызове метода. Если указать абсолютный URI, <xref:System.Net.WebClient> не использует <xref:System.Net.WebClient.BaseAddress%2A> значение свойства.  
  
 Для удаления ранее заданного значения, присвойте этому свойству значение `null` или пустая строка (»»).  
  
   
  
## Examples  
 В следующем примере кода загружает данные из веб-сервером и отображает его на консоли. Предполагается, что адреса сервера (таких как http://www.contoso.com) в `hostUri` и что путь к ресурсу (например, / Default.htm) `uriSuffix`.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#1)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#1)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Базовый адрес <see cref="P:System.Net.WebClient.BaseAddress" /> указывает на неправильный URI. Внутреннее исключение может содержать сведения, которые помогут обнаружить ошибку.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает политику кэширования приложения для любых ресурсов, полученных этим экземпляром WebClient с помощью объектов <see cref="T:System.Net.WebRequest" />.</summary>
        <value>Объект <see cref="T:System.Net.Cache.RequestCachePolicy" />, представляющий требования к кэшированию в приложении.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет асинхронную операцию в очереди.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если операция ожидает выполнения, этот метод вызывает метод <xref:System.Net.WebRequest.Abort%2A> для базового <xref:System.Net.WebRequest>.  
  
 При вызове <xref:System.Net.WebClient.CancelAsync%2A>, приложение по-прежнему получает событие завершения, связанное с операцией. Например, при вызове <xref:System.Net.WebClient.CancelAsync%2A> отменить <xref:System.Net.WebClient.DownloadStringAsync%2A> операции, если указан обработчик событий для <xref:System.Net.WebClient.DownloadStringCompleted> событие, обработчик событий получает уведомления завершенной операции. Чтобы узнать, является ли операция выполнена успешно, проверьте <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> свойство в базовом классе <xref:System.Net.DownloadDataCompletedEventArgs> событий данных объекта, передаваемого в обработчик событий.  
  
 Если ни одна асинхронная операция выполняется, этот метод не выполняет никаких действий.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает учетные данные сети, которые передаются на узел и используются для проверки подлинности запроса.</summary>
        <value>Свойство <see cref="T:System.Net.ICredentials" />, содержащее учетные данные для проверки подлинности запроса. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Credentials%2A> Свойство содержит учетные данные проверки подлинности, используемые для доступа к ресурсу на узле. В большинстве скриптов на стороне клиента следует использовать <xref:System.Net.CredentialCache.DefaultCredentials%2A>, которые являются учетные данные текущего пользователя. Чтобы сделать это, задайте <xref:System.Net.WebClient.UseDefaultCredentials%2A> свойства `true` вместо задания этого свойства.  
  
 Если <xref:System.Net.WebClient> класс используется в приложении среднего уровня, таких как приложения ASP.NET <xref:System.Net.CredentialCache.DefaultCredentials%2A> принадлежать учетной записи, под управлением ASP-страницы (учетных данных на стороне сервера). Как правило этому свойству будет присвоено учетные данные клиента, от лица которого выполняется запрос.  
  
 По соображениям безопасности при автоматически после перенаправления, хранить учетные данные, которые вы хотите включить в перенаправления в <xref:System.Net.CredentialCache> и присвоить этому свойству. Это свойство будет автоматически присвоено `null` после перенаправления, если она содержит либо, кроме <xref:System.Net.CredentialCache>. Значение этого свойства автоматически присваивается значение `null` при этих условиях предотвращает учетные данные, отправляемые любой непреднамеренное назначение.
  
## Examples  
 В следующем примере кода использует учетные данные пользователя системы для проверки подлинности запроса.  
  
 [!code-cpp[WebClientAuthentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClientAuthentication/CPP/webclientauth.cpp#1)]
 [!code-csharp[WebClientAuthentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClientAuthentication/CS/webclientauth.cs#1)]
 [!code-vb[WebClientAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClientAuthentication/VB/webclientauth.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.WebRequest.Credentials" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает ресурс, как массив <see cref="T:System.Byte" /> из заданного URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI, с которого будут загружены данные.</param>
        <summary>Загружает ресурс, как массив <see cref="T:System.Byte" /> из заданного URI.</summary>
        <returns>Массив <see cref="T:System.Byte" />, содержащий загруженный ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadData%2A> Метод загружает ресурс с URI, указанный параметром `address` параметр. Этот метод блокируется при загрузке ресурса. Чтобы загрузить ресурс и продолжает выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.DownloadDataAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода запрашивает данные с сервера и отображаются полученные данные. Предполагается, что `remoteUri` содержит правильный URI для запрошенных данных.  
  
 [!code-cpp[WebClient_DownloadData#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadData/CPP/webclient_downloaddata.cpp#1)]
 [!code-csharp[WebClient_DownloadData#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadData/CS/webclient_downloaddata.cs#1)]
 [!code-vb[WebClient_DownloadData#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadData/VB/webclient_downloaddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При загрузке данных произошла ошибка.</exception>
        <exception cref="T:System.NotSupportedException">Этот метод был вызван одновременно из нескольких потоков.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As Uri) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Универсальный код ресурса (URI), представленный объектом <see cref="T:System.Uri" />, из которого следует загрузить данные.</param>
        <summary>Загружает ресурс, как массив <see cref="T:System.Byte" /> из заданного URI.</summary>
        <returns>Массив <see cref="T:System.Byte" />, содержащий загруженный ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadData%2A> Метод загружает ресурс с URI, указанный параметром `address` параметр. Этот метод блокируется при загрузке ресурса. Чтобы загрузить ресурс и продолжает выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.DownloadDataAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
 **Примечание** данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает ресурс как массив <see cref="T:System.Byte" /> из URI, указанного как асинхронная операция. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.Uri" />, в котором содержится URI загрузки.</param>
        <summary>Загружает ресурс как массив <see cref="T:System.Byte" /> из URI, указанного как асинхронная операция.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод получает указанный ресурс с помощью метода по умолчанию для протокола, связанного со схемой URI, указанный в `address`. Данные загружаются асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Этот метод не блокирует вызывающий поток при загрузке ресурса. Чтобы загрузить ресурс и блок во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.DownloadData%2A> методы. После завершения загрузки, <xref:System.Net.WebClient.DownloadDataCompleted> событие. Приложение должно обрабатывать это событие для уведомления. Загруженные данные доступна в <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> свойство.  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.Uri" />, в котором содержится URI загрузки.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Загружает ресурс как массив <see cref="T:System.Byte" /> из URI, указанного как асинхронная операция.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод получает указанный ресурс с помощью метода по умолчанию для протокола, связанного со схемой URI, указанный в `address`. Данные загружаются асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Этот метод не блокирует вызывающий поток при загрузке ресурса. Чтобы загрузить ресурс и блок во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.DownloadData%2A> методы. После завершения загрузки, <xref:System.Net.WebClient.DownloadDataCompleted> событие. Приложение должно обрабатывать это событие для уведомления. Загруженные данные доступна в <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> свойство.  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadDataCompleted As DownloadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadDataCompletedEventHandler ^ DownloadDataCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения асинхронной операции по загрузке данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает каждый раз при завершении асинхронной операции загрузки данных. Загрузка данных в асинхронном запущены путем вызова <xref:System.Net.WebClient.DownloadDataAsync%2A> методы.  
  
 <xref:System.Net.DownloadDataCompletedEventHandler> — Делегат для этого события. <xref:System.Net.DownloadDataCompletedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано задание обработчик событий для этого события.  
  
 [!code-cpp[NCLWebClientAsync#21](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#21)]
 [!code-csharp[NCLWebClientAsync#21](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#21)]
 [!code-vb[NCLWebClientAsync#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает ресурс как массив <see cref="T:System.Byte" /> из URI, указанного как асинхронная операция с помощью объекта задачи. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI загружаемого ресурса.</param>
        <summary>Загружает ресурс как массив <see cref="T:System.Byte" /> из URI, указанного как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий загруженный ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после загрузки данных ресурсов.  
  
 Этот метод получает указанный ресурс с помощью метода по умолчанию для протокола, связанного со схемой URI, указанный в `address` параметра. Данные загружаются асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 В следующем примере кода запрашивает данные с сервера и отображаются полученные данные. Предполагается, что `remoteUri` содержит правильный URI для запрошенных данных.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI загружаемого ресурса.</param>
        <summary>Загружает ресурс как массив <see cref="T:System.Byte" /> из URI, указанного как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий загруженный ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после загрузки данных ресурсов.  
  
 Этот метод получает указанный ресурс с помощью метода по умолчанию для протокола, связанного со схемой URI, указанный в `address` параметра. Данные загружаются асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
 **Примечание** данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает в локальный файл ресурс с указанным URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI, с которого будут загружены данные.</param>
        <param name="fileName">Имя локального файла, в который будут записаны данные.</param>
        <summary>Загружает в локальный файл ресурс с указанным URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadFile%2A> Метод загружает к локальному файлу данных из URI, заданного параметром `address` параметр. Этот метод блокируется при загрузке ресурса. Чтобы загрузить ресурс и продолжает выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.DownloadFileAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 При использовании этого метода в приложении среднего уровня, например страницы ASP.NET, вы получите ошибку, если учетная запись, под которой выполняется приложение не имеет разрешения на доступ к файлу.  
  
   
  
## Examples  
 В следующем примере кода файл загружается с http://www.contoso.com на локальный жесткий диск.  
  
 [!code-cpp[WebClient_DownloadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadFile/CPP/webclient_downloadfile.cpp#1)]
 [!code-csharp[WebClient_DownloadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadFile/CS/webclient_downloadfile.cs#1)]
 [!code-vb[WebClient_DownloadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadFile/VB/webclient_downloadfile.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="filename" /> имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.  -или- Файл не существует.  –или– При загрузке данных произошла ошибка.</exception>
        <exception cref="T:System.NotSupportedException">Этот метод был вызван одновременно из нескольких потоков.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">для записи файла <paramref name="fileName" />. Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI, указанный как строка <see cref="T:System.String" />, с которого будут загружены данные.</param>
        <param name="fileName">Имя локального файла, в который будут записаны данные.</param>
        <summary>Загружает в локальный файл ресурс с указанным URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadFile%2A> Метод загружает к локальному файлу данных из URI, заданного параметром `address` параметр. Этот метод блокируется при загрузке ресурса. Чтобы загрузить ресурс и продолжает выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.DownloadFileAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 При использовании этого метода в приложении среднего уровня, например страницы ASP.NET, вы получите ошибку, если учетная запись, под которой выполняется приложение не имеет разрешения на доступ к файлу.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="filename" /> имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.  -или- Файл не существует.  -или- При загрузке данных произошла ошибка.</exception>
        <exception cref="T:System.NotSupportedException">Этот метод был вызван одновременно из нескольких потоков.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">для записи файла <paramref name="fileName" />. Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает указанный ресурс в локальный файл как асинхронная операция и выполняет возврат объекта задачи. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI загружаемого ресурса.</param>
        <param name="fileName">Имя файла, который должен быть размещен на локальном компьютере.</param>
        <summary>Загружает в локальный файл ресурс с указанным URI. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод загружает ресурс по URI, указанному в `address` параметра. По завершении загрузки загруженный файл называется `fileName` на локальном компьютере. Файл загружается асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Чтобы получать уведомления, если доступен файл, добавьте обработчик событий для <xref:System.Net.WebClient.DownloadFileCompleted> события.  
  
 Этот метод не блокирует вызывающий поток при загрузке ресурса. Чтобы заблокировать во время ожидания для завершения загрузки, используйте один из <xref:System.Net.WebClient.DownloadFile%2A> методы.  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не указывает абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 При использовании этого метода на странице ASP.NET, вы получите ошибку, если учетная запись, при выполнении страницы не имеет разрешения на доступ к локальной файловой.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
        <exception cref="T:System.InvalidOperationException">Локальный файл, определенный именем <paramref name="fileName" />, используется другим потоком.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI загружаемого ресурса.</param>
        <param name="fileName">Имя файла, который должен быть размещен на локальном компьютере.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Загружает в локальный файл ресурс с указанным URI. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод загружает ресурс по URI, указанному в `address` параметра. По завершении загрузки загруженный файл называется `fileName` на локальном компьютере. Файл загружается асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Чтобы получать уведомления, если доступен файл, добавьте обработчик событий для <xref:System.Net.WebClient.DownloadFileCompleted> события.  
  
 Этот метод не блокирует вызывающий поток при загрузке ресурса. Чтобы заблокировать во время ожидания для завершения загрузки, используйте один из <xref:System.Net.WebClient.DownloadFile%2A> методы.  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не указывает абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 При использовании этого метода на странице ASP.NET, вы получите ошибку, если учетная запись, при выполнении страницы не имеет разрешения на доступ к локальной файловой.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
        <exception cref="T:System.InvalidOperationException">Локальный файл, определенный именем <paramref name="fileName" />, используется другим потоком.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ DownloadFileCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения асинхронной операции по загрузке файла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает каждый раз при завершении асинхронной операции загрузки файла. Асинхронный файловый загрузки запущены путем вызова <xref:System.Net.WebClient.DownloadFileAsync%2A> методы.  
  
 <xref:System.ComponentModel.AsyncCompletedEventHandler> — Делегат для этого события. <xref:System.ComponentModel.AsyncCompletedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано задание обработчик событий для этого события.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает указанный ресурс в локальный файл как асинхронная операция с помощью объекта задачи. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As String, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI загружаемого ресурса.</param>
        <param name="fileName">Имя файла, который должен быть размещен на локальном компьютере.</param>
        <summary>Загружает указанный ресурс в локальный файл как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task" />.  Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task> объекта будет выполнена после загрузки данных ресурсов.  
  
 Этот метод загружает ресурс по URI, указанному в `address` параметра. По завершении загрузки загруженный файл называется `fileName` на локальном компьютере. Файл загружается асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не указывает абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 При использовании этого метода на странице ASP.NET, вы получите ошибку, если учетная запись, при выполнении страницы не имеет разрешения на доступ к локальной файловой.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
        <exception cref="T:System.InvalidOperationException">Локальный файл, определенный именем <paramref name="fileName" />, используется другим потоком.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As Uri, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI загружаемого ресурса.</param>
        <param name="fileName">Имя файла, который должен быть размещен на локальном компьютере.</param>
        <summary>Загружает указанный ресурс в локальный файл как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task" />.  Объект задачи, представляющий асинхронную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task> объекта будет выполнена после загрузки данных ресурсов.  
  
 Этот метод загружает ресурс по URI, указанному в `address` параметра. По завершении загрузки загруженный файл называется `fileName` на локальном компьютере. Файл загружается асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не указывает абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 При использовании этого метода на странице ASP.NET, вы получите ошибку, если учетная запись, при выполнении страницы не имеет разрешения на доступ к локальной файловой.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
        <exception cref="T:System.InvalidOperationException">Локальный файл, определенный именем <paramref name="fileName" />, используется другим потоком.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadProgressChanged As DownloadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadProgressChangedEventHandler ^ DownloadProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при успешной передаче всех данных или их части посредством асинхронной операции загрузки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает каждый раз, продвижении хода выполнения асинхронной операции загрузки. Это событие возникает при начале загрузок с помощью любого из следующих методов.  
  
|Метод|Описание:|  
|------------|-----------------|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Загружает данные из ресурса и возвращает <xref:System.Byte> массива без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Загружает данные из ресурса в локальный файл без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Возвращает данные из ресурса, без блокировки вызывающего потока.|  
  
 <xref:System.Net.DownloadProgressChangedEventHandler> — Делегат для этого события. <xref:System.Net.DownloadProgressChangedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
> [!NOTE]
>  Пассивный FTP-ПОРТ передача файла всегда будет отображаться процент выполнения равна нулю, так как сервер не передает размер файла. Для отображения хода выполнения, можно изменить FTP-соединения в активный режим, переопределив <xref:System.Net.WebClient.GetWebRequest%2A> виртуальный метод:  
  
```csharp  
internal class MyWebClient : WebClient
{  
    protected override WebRequest GetWebRequest(Uri address)
    {  
        FtpWebRequest req = (FtpWebRequest)base.GetWebRequest(address);  
        req.UsePassive = false;  
        return req;  
    }  
}  
```  
  
   
  
## Examples  
 В следующем примере кода показано задание обработчик событий для этого события.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 В следующем примере кода показана реализация обработчика этого события.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает требуемый ресурс как строку <see cref="T:System.String" />. Ресурс, который требуется загрузить, может быть указан как строка <see cref="T:System.String" />, содержащая URI, или как <see cref="T:System.Uri" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.String" />, в котором содержится URI загрузки.</param>
        <summary>Загружает требуемый ресурс как строку <see cref="T:System.String" />. Ресурс, который требуется загрузить, указан как строка <see cref="T:System.String" />, содержащая URI.</summary>
        <returns>Строка <see cref="T:System.String" />, содержащая требуемый ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод получает указанный ресурс. После загрузки ресурсов, метод использует кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство для преобразования ресурса <xref:System.String>. Этот метод блокируется при загрузке ресурса. Чтобы загрузить ресурс и продолжает выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.DownloadStringAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого метода.  
  
 [!code-cpp[NCLWebClientAsync#25](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#25)]
 [!code-csharp[NCLWebClientAsync#25](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#25)]
 [!code-vb[NCLWebClientAsync#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
        <exception cref="T:System.NotSupportedException">Этот метод был вызван одновременно из нескольких потоков.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Объект <see cref="T:System.Uri" />, содержащий URI загрузки.</param>
        <summary>Загружает требуемый ресурс как строку <see cref="T:System.String" />. Загружаемый ресурс указан как <see cref="T:System.Uri" />.</summary>
        <returns>Строка <see cref="T:System.String" />, содержащая требуемый ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод получает указанный ресурс. После загрузки ресурсов, метод использует кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство для преобразования ресурса <xref:System.String>. Этот метод блокируется при загрузке ресурса. Чтобы загрузить ресурс и продолжает выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.DownloadStringAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
        <exception cref="T:System.NotSupportedException">Этот метод был вызван одновременно из нескольких потоков.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает указанный ресурс в качестве строки <see cref="T:System.String" /> или <see cref="T:System.Uri" />. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.Uri" />, в котором содержится URI загрузки.</param>
        <summary>Загружает ресурс, указанный как <see cref="T:System.Uri" />. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ресурс загружается асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 После загрузки ресурса, этот метод использует кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство для преобразования ресурса <xref:System.String>. Этот метод не блокирует вызывающий поток при загрузке ресурса. Чтобы загрузить ресурс и блок во время ожидания ответа сервера, используйте <xref:System.Net.WebClient.DownloadString%2A> метод. После завершения загрузки, <xref:System.Net.WebClient.DownloadStringCompleted> событие. Приложение должно обрабатывать это событие для уведомления. В загруженной строки <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> свойство.  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.Uri" />, в котором содержится URI загрузки.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Загружает указанную строку в указанный ресурс. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ресурс загружается асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 После загрузки ресурса, этот метод использует кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство для преобразования ресурса <xref:System.String>. Этот метод не блокирует вызывающий поток при загрузке ресурса. Чтобы загрузить ресурс и блок во время ожидания ответа сервера, используйте <xref:System.Net.WebClient.DownloadString%2A> метод. После завершения загрузки, <xref:System.Net.WebClient.DownloadStringCompleted> событие. Приложение должно обрабатывать это событие для уведомления. В загруженной строки <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> свойство.  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadStringCompleted As DownloadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadStringCompletedEventHandler ^ DownloadStringCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения асинхронной операции по загрузке ресурса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает каждый раз при завершении асинхронной операции загрузки ресурса в виде строки. Эти операции запускаются путем вызова <xref:System.Net.WebClient.DownloadStringAsync%2A> методы.  
  
 <xref:System.Net.DownloadStringCompletedEventHandler> — Делегат для этого события. <xref:System.Net.DownloadStringCompletedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано задание обработчик событий для этого события.  
  
 [!code-cpp[NCLWebClientAsync#28](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#28)]
 [!code-csharp[NCLWebClientAsync#28](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#28)]
 [!code-vb[NCLWebClientAsync#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает ресурс как <see cref="T:System.String" /> из URI, указанного как асинхронная операция с помощью объекта задачи.  Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI загружаемого ресурса.</param>
        <summary>Загружает ресурс как <see cref="T:System.String" /> из URI, указанного как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий загруженный ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после загрузки данных ресурсов.  Ресурс загружается асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 После загрузки ресурса, этот метод использует кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство для преобразования ресурса <xref:System.String>. Этот метод не блокирует вызывающий поток при загрузке ресурса.  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
 Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI загружаемого ресурса.</param>
        <summary>Загружает ресурс как <see cref="T:System.String" /> из URI, указанного как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий загруженный ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после загрузки данных ресурсов. Ресурс загружается асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 После загрузки ресурса, этот метод использует кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство для преобразования ресурса <xref:System.String>. Этот метод не блокирует вызывающий поток при загрузке ресурса.  
  
 Можно использовать <xref:System.Net.WebClient.CancelAsync%2A> метода для отмены асинхронных операций, которые не были завершены.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
 Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает и задает <see cref="T:System.Text.Encoding" />, используемые для выгрузки и загрузки строк.</summary>
        <value>Кодировка <see cref="T:System.Text.Encoding" />, которая используется для кодирования строк. Значение этого свойства по умолчанию — это кодировка, возвращенная <see cref="P:System.Text.Encoding.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadString%2A> И <xref:System.Net.WebClient.UploadStringAsync%2A> методы это свойство используется для преобразования заданной строки в <xref:System.Byte> массива перед отправкой строки. Дополнительные сведения см. в разделе <xref:System.Text.Encoding.GetBytes%2A> метод.  
  
 Если строка загружается с помощью <xref:System.Net.WebClient.DownloadString%2A> или <xref:System.Net.WebClient.DownloadStringAsync%2A> методы, <xref:System.Net.WebClient> использует <xref:System.Text.Encoding> возвращенных преобразование загруженного <xref:System.Byte> массива в строку. Дополнительные сведения см. в разделе <xref:System.Text.Encoding.GetString%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода показано задание значения данного свойства.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebRequest(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebRequest (address As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.Uri" />, который идентифицирует запрашиваемый ресурс.</param>
        <summary>Возвращает объект <see cref="T:System.Net.WebRequest" /> для заданного ресурса.</summary>
        <returns>Новый объект <see cref="T:System.Net.WebRequest" /> для заданного ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод копирует существующий <xref:System.Net.WebClient.Headers%2A>, <xref:System.Net.WebClient.Credentials%2A>и только что созданный метод <xref:System.Net.WebRequest> объекта.  
  
 Этот метод может вызываться только классы, производные от <xref:System.Net.WebClient>. Он предоставляется для предоставления наследующим объектам доступа к базовому объекту <xref:System.Net.WebRequest> объекта. Производные классы должны вызывать реализацию базового класса <xref:System.Net.WebClient.GetWebRequest%2A> для обеспечения метод работает, как ожидалось.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#1)]
 [!code-csharp[NCLCustomWebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Net.WebResponse" /> для указанного объекта <see cref="T:System.Net.WebRequest" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">Объект <see cref="T:System.Net.WebRequest" />, который использовался для получения ответа.</param>
        <summary>Возвращает объект <see cref="T:System.Net.WebResponse" /> для указанного объекта <see cref="T:System.Net.WebRequest" />.</summary>
        <returns>Ответ <see cref="T:System.Net.WebResponse" />, содержащий значение заданного запроса <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект, возвращаемый этим методом, полученного путем вызова <xref:System.Net.WebRequest.GetResponse%2A> метод в указанном <xref:System.Net.WebRequest> объекта.  
  
 Этот метод может вызываться только классы, производные от <xref:System.Net.WebClient>. Он предоставляется для предоставления наследующим объектам доступа к базовому объекту <xref:System.Net.WebResponse> объекта.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#2)]
 [!code-csharp[NCLCustomWebClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">Объект <see cref="T:System.Net.WebRequest" />, который использовался для получения ответа.</param>
        <param name="result">Объект <see cref="T:System.IAsyncResult" />, полученный из предыдущего вызова <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</param>
        <summary>Возвращает ответ <see cref="T:System.Net.WebResponse" /> для указанного запроса <see cref="T:System.Net.WebRequest" />, используя указанный <see cref="T:System.IAsyncResult" />.</summary>
        <returns>Ответ <see cref="T:System.Net.WebResponse" />, содержащий значение заданного запроса <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект, возвращаемый этим методом, полученного путем вызова <xref:System.Net.WebRequest.EndGetResponse%2A> метод в указанном <xref:System.Net.WebRequest> объекта.  
  
 Этот метод может вызываться только классы, производные от <xref:System.Net.WebClient>. Он предоставляется для предоставления наследующим объектам доступа к базовому объекту <xref:System.Net.WebResponse> объекта.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#3)]
 [!code-csharp[NCLCustomWebClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает коллекцию пар "имя-значение" заголовков, связанных с запросом.</summary>
        <value>
          <see cref="T:System.Net.WebHeaderCollection" />, содержащее пары "имя-значение" заголовков, связанные с запросом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Headers%2A> Свойство содержит <xref:System.Net.WebHeaderCollection> экземпляр, содержащий заголовки протокола, <xref:System.Net.WebClient> отправляет с запросом.  
  
 Некоторые общие заголовки считаются ограничен и защищаются системой и не может задать или изменить в <xref:System.Net.WebHeaderCollection> объекта. Любая попытка установить один из этих ограниченных заголовков в <xref:System.Net.WebHeaderCollection> объекта, связанного с <xref:System.Net.WebClient> объекта будет вызвано исключение позже, при попытке отправить <xref:System.Net.WebClient> запроса.  
  
 Ограниченные заголовки, защищенные системой включают, но не ограничиваются следующими:  
  
-   Дата  
  
-   Ведущее приложение  
  
 Кроме того, некоторые заголовки также ограничены при использовании <xref:System.Net.WebClient> объекта. Эти ограниченные заголовки включают, но не ограничиваются следующими:  
  
-   Принять  
  
-   Подключение  
  
-   Content-Length  
  
-   Ожидается, что (когда значение равно «100-продолжить»  
  
-   If-Modified-Since  
  
-   Диапазон  
  
-   Transfer-Encoding  
  
 <xref:System.Net.HttpWebRequest> Класс имеет свойства для установки некоторых заголовков выше. Если это важно для приложения для установки этих заголовков, то <xref:System.Net.HttpWebRequest> класса следует использовать вместо <xref:System.Net.WebRequest> класса.  
  
 Не следует предполагать, что значения заголовка не изменится, так как веб-серверы и кэши могут изменять и добавлять заголовки для веб-запроса.  
  
   
  
## Examples  
 Следующий пример кода использует <xref:System.Net.WebClient.Headers%2A> коллекции для задания HTTP `Content-Type` заголовка `application/x-www-form-urlencoded,` известить подключен сервер, данные формы, для запроса post.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.Headers" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, выполняется ли веб-запрос.</summary>
        <value>Значение <see langword="true" />, если веб-запрос все еще выполняется; в противном случае — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadDataCompleted (System.Net.DownloadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadDataCompleted(class System.Net.DownloadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadDataCompleted (e As DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadDataCompleted(System::Net::DownloadDataCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.DownloadDataCompletedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.DownloadDataCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.DownloadDataCompleted> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md)  
  
 Метод <xref:System.Net.WebClient.OnDownloadDataCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#4)]
 [!code-csharp[NCLCustomWebClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadFileCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadFileCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.DownloadFileCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.DownloadFileCompleted> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.WebClient.OnDownloadFileCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#5)]
 [!code-csharp[NCLCustomWebClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadProgressChanged (System.Net.DownloadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadProgressChanged(class System.Net.DownloadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadProgressChanged (e As DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadProgressChanged(System::Net::DownloadProgressChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.DownloadProgressChangedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.DownloadProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.DownloadProgressChanged> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.WebClient.OnDownloadProgressChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#12)]
 [!code-csharp[NCLCustomWebClient#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadStringCompleted (System.Net.DownloadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadStringCompleted(class System.Net.DownloadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadStringCompleted (e As DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadStringCompleted(System::Net::DownloadStringCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.DownloadStringCompletedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.DownloadStringCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.DownloadStringCompleted> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.WebClient.OnDownloadStringCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#6)]
 [!code-csharp[NCLCustomWebClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenReadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenReadCompleted (System.Net.OpenReadCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenReadCompleted(class System.Net.OpenReadCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenReadCompleted (e As OpenReadCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenReadCompleted(System::Net::OpenReadCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.OpenReadCompletedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.OpenReadCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.OpenReadCompleted> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.WebClient.OnOpenReadCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#7)]
 [!code-csharp[NCLCustomWebClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenWriteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenWriteCompleted (System.Net.OpenWriteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenWriteCompleted(class System.Net.OpenWriteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenWriteCompleted (e As OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenWriteCompleted(System::Net::OpenWriteCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.OpenWriteCompletedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.OpenWriteCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.OpenWriteCompleted> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.WebClient.OnOpenWriteCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#8)]
 [!code-csharp[NCLCustomWebClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadDataCompleted (System.Net.UploadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadDataCompleted(class System.Net.UploadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadDataCompleted (e As UploadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadDataCompleted(System::Net::UploadDataCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.UploadDataCompletedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.UploadDataCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.UploadDataCompleted> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.WebClient.OnUploadDataCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#9)]
 [!code-csharp[NCLCustomWebClient#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadFileCompleted (System.Net.UploadFileCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadFileCompleted(class System.Net.UploadFileCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadFileCompleted (e As UploadFileCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadFileCompleted(System::Net::UploadFileCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.UploadFileCompletedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.UploadFileCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.UploadFileCompleted> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.WebClient.OnUploadFileCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#10)]
 [!code-csharp[NCLCustomWebClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadProgressChanged (System.Net.UploadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadProgressChanged(class System.Net.UploadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadProgressChanged (e As UploadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadProgressChanged(System::Net::UploadProgressChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.UploadProgressChangedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.UploadProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.UploadProgressChanged> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.WebClient.OnUploadProgressChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#13)]
 [!code-csharp[NCLCustomWebClient#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#13)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadStringCompleted (System.Net.UploadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadStringCompleted(class System.Net.UploadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadStringCompleted (e As UploadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadStringCompleted(System::Net::UploadStringCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.UploadStringCompletedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.UploadStringCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.UploadStringCompleted> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.WebClient.OnUploadStringCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#11)]
 [!code-csharp[NCLCustomWebClient#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadValuesCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadValuesCompleted (System.Net.UploadValuesCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadValuesCompleted(class System.Net.UploadValuesCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadValuesCompleted (e As UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadValuesCompleted(System::Net::UploadValuesCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.UploadValuesCompletedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.UploadValuesCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от этого класса можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.WebClient.UploadValuesCompleted> событием.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Net.WebClient.OnUploadValuesCompleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показана реализация этого метода, который можно настроить с помощью класса, производного от <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#14)]
 [!code-csharp[NCLCustomWebClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStreamClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStreamClosed (System.Net.WriteStreamClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStreamClosed(class System.Net.WriteStreamClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteStreamClosed (e As WriteStreamClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteStreamClosed(System::Net::WriteStreamClosedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.WriteStreamClosedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Net.WebClient.WriteStreamClosed" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRead">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Открывает читаемый поток для данных, загруженных из ресурса с указанным URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI, указанный как строка <see cref="T:System.String" />, с которого будут загружены данные.</param>
        <summary>Открывает читаемый поток для данных, загруженных с ресурса, URI которого был указан как <see cref="T:System.String" />.</summary>
        <returns>
          <see cref="T:System.IO.Stream" />, используемый для чтения данных из ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenRead%2A> Метод создает <xref:System.IO.Stream> экземпляр, используемый для считывания содержимого ресурса, указанного в `address` параметра. Этот метод блокируется при открытии потока. Чтобы продолжить выполнение при ожидании потока, используйте один из <xref:System.Net.WebClient.OpenReadAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не `null`, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Необходимо вызвать <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> после завершения работы с <xref:System.IO.Stream> для предотвращения нехватки системных ресурсов.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода открывается ресурсу, определяемому `uriString` и отображает результаты на системной консоли. Обратите внимание, что <xref:System.IO.Stream> возвращенных <xref:System.Net.WebClient.OpenRead%2A> закрывается, когда данные уже считаны.  
  
 [!code-cpp[WebClient_OpenRead#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenRead/CPP/webclient_openread.cpp#1)]
 [!code-csharp[WebClient_OpenRead#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenRead/CS/webclient_openread.cs#1)]
 [!code-vb[WebClient_OpenRead#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenRead/VB/webclient_openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При загрузке данных произошла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI, указанный как строка <see cref="T:System.Uri" />, с которого будут загружены данные.</param>
        <summary>Открывает читаемый поток для данных, загруженных с ресурса, URI которого был указан как <see cref="T:System.Uri" />.</summary>
        <returns>
          <see cref="T:System.IO.Stream" />, используемый для чтения данных из ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenRead%2A> Метод создает <xref:System.IO.Stream> экземпляр, используемый для считывания содержимого ресурса, указанного в `address` параметра. Этот метод блокируется при открытии потока. Чтобы продолжить выполнение при ожидании потока, используйте один из <xref:System.Net.WebClient.OpenReadAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не `null`, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Необходимо вызвать <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> после завершения работы с <xref:System.IO.Stream> для предотвращения нехватки системных ресурсов.  
  
 **Примечание** данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При загрузке данных произошла ошибка.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Открывает поток, доступный для чтения и содержащий указанный ресурс. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI получаемого ресурса.</param>
        <summary>Открывает поток, доступный для чтения и содержащий указанный ресурс. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод получает <xref:System.IO.Stream> экземпляр, используемый для доступа к ресурсу, указанному `address` параметра. Поток получается с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Чтобы получать уведомления, когда поток доступен, добавьте обработчик событий для <xref:System.Net.WebClient.OpenReadCompleted> события.  
  
> [!NOTE]
>  Необходимо вызвать <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> по окончании с <xref:System.IO.Stream> для предотвращения нехватки системных ресурсов.  
  
 Этот метод блокирует вызывающий поток при открытии потока. На время ожидания для потока, используйте <xref:System.Net.WebClient.OpenReadAsync%2A> метод.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не указывает абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный универсальный код Ресурса запрашиваемого ресурса. Если <xref:System.Net.WebClient.QueryString%2A> свойство не `null`, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и адреса, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.  -или- При открытии потока произошла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI получаемого ресурса.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Открывает поток, доступный для чтения и содержащий указанный ресурс. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод получает <xref:System.IO.Stream> экземпляр, используемый для доступа к ресурсу, указанному `address` параметра. Поток получается с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Чтобы получать уведомления, когда поток доступен, добавьте обработчик событий для <xref:System.Net.WebClient.OpenReadCompleted> события.  
  
> [!NOTE]
>  Необходимо вызвать <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> по окончании с <xref:System.IO.Stream> для предотвращения нехватки системных ресурсов.  
  
 Этот метод блокирует вызывающий поток при открытии потока. На время ожидания для потока, используйте <xref:System.Net.WebClient.OpenRead%2A> метод.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не указывает абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный универсальный код Ресурса запрашиваемого ресурса. Если <xref:System.Net.WebClient.QueryString%2A> свойство не `null`, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и адреса, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.  -или- При открытии потока произошла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenReadCompletedEventHandler OpenReadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenReadCompletedEventHandler OpenReadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenReadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenReadCompleted As OpenReadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenReadCompletedEventHandler ^ OpenReadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenReadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения асинхронной операции по открытию строки, содержащей ресурс.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает при каждом завершении асинхронной операции по открытию строки, содержащей ресурс. Эти операции запускаются путем вызова <xref:System.Net.WebClient.OpenReadAsync%2A> методы.  
  
 <xref:System.Net.OpenReadCompletedEventHandler> — Делегат для этого события. <xref:System.Net.OpenReadCompletedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано задание обработчик событий для этого события.  
  
 [!code-cpp[NCLWebClientAsync#30](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#30)]
 [!code-csharp[NCLWebClientAsync#30](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#30)]
 [!code-vb[NCLWebClientAsync#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Открывает считываемый поток, содержащий указанный ресурс как асинхронная операция с помощью объекта задачи. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI получаемого ресурса.</param>
        <summary>Открывает считываемый поток, содержащий указанный ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.IO.Stream" />, используемый для считывания данных с ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после читаемый поток для ресурса данных был открыт. Этот метод блокирует вызывающий поток при открытии потока.  
  
 Этот метод получает <xref:System.IO.Stream> экземпляр, используемый для доступа к ресурсу, указанному `address` параметра. Поток получается с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
> [!NOTE]
>  Необходимо вызвать <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> по окончании с <xref:System.IO.Stream> для предотвращения нехватки системных ресурсов.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не указывает абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный универсальный код Ресурса запрашиваемого ресурса. Если <xref:System.Net.WebClient.QueryString%2A> свойство не `null`, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и адреса, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.  -или- При открытии потока произошла ошибка.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI получаемого ресурса.</param>
        <summary>Открывает считываемый поток, содержащий указанный ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.IO.Stream" />, используемый для считывания данных с ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после читаемый поток для ресурса данных был открыт. Этот метод блокирует вызывающий поток при открытии потока.  
  
 Этот метод получает <xref:System.IO.Stream> экземпляр, используемый для доступа к ресурсу, указанному `address` параметра. Поток получается с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
> [!NOTE]
>  Необходимо вызвать <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> по окончании с <xref:System.IO.Stream> для предотвращения нехватки системных ресурсов.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не указывает абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный универсальный код Ресурса запрашиваемого ресурса. Если <xref:System.Net.WebClient.QueryString%2A> свойство не `null`, оно добавляется к `address`.  
  
 Этот метод использует команду RETR для загрузки FTP-ресурса. Метод GET используется для HTTP-ресурса.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и адреса, является недопустимым.  -или- Произошла ошибка при загрузке ресурса.  -или- При открытии потока произошла ошибка.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWrite">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Открывает поток для записи данных в ресурс с заданным URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <summary>Открывает поток для записи данных в указанный ресурс.</summary>
        <returns>
          <see cref="T:System.IO.Stream" />, используемый для записи данных в ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Метод возвращает поток для записи, используемый для отправки данных ресурсу. Этот метод блокируется при открытии потока. Чтобы продолжить выполнение при ожидании потока, используйте один из <xref:System.Net.WebClient.OpenWriteAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода считывает данные из командной строки и использует <xref:System.Net.WebClient.OpenWrite%2A> получить поток для записи данных. Обратите внимание, что <xref:System.IO.Stream> возвращенных <xref:System.Net.WebClient.OpenWrite%2A> закрывается после отправки данных.  
  
 [!code-cpp[WebClient_OpenWrite2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite2/CPP/webclient_openwrite2.cpp#1)]
 [!code-csharp[WebClient_OpenWrite2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite2/CS/webclient_openwrite2.cs#1)]
 [!code-vb[WebClient_OpenWrite2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite2/VB/webclient_openwrite2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <summary>Открывает поток для записи данных в указанный ресурс.</summary>
        <returns>
          <see cref="T:System.IO.Stream" />, используемый для записи данных в ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Метод возвращает поток для записи, используемый для отправки данных ресурсу. Этот метод блокируется при открытии потока. Чтобы продолжить выполнение при ожидании потока, используйте один из <xref:System.Net.WebClient.OpenWriteAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address, System::String ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <summary>Открывает поток для записи данных в указанный ресурс с помощью указанного метода.</summary>
        <returns>
          <see cref="T:System.IO.Stream" />, используемый для записи данных в ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Метод возвращает поток для записи, используемый для отправки данных ресурсу. Соответствующий запрос выполнен с помощью метода, указанного в `method` параметра. Данные отправляются на сервер при закрытии потока. Этот метод блокируется при открытии потока. Чтобы продолжить выполнение при ожидании потока, используйте один из <xref:System.Net.WebClient.OpenWriteAsync%2A> методы.  
  
 Если `method` указывает метод, который не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не указывает абсолютный адрес, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода считывает данные из командной строки и использует <xref:System.Net.WebClient.OpenWrite%2A> получить поток, используемый для записи данных. Обратите внимание, что <xref:System.IO.Stream> возвращенных <xref:System.Net.WebClient.OpenWrite%2A> должны быть закрыты для отправки данных.  
  
 [!code-cpp[WebClient_OpenWrite#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite/CPP/webclient_openwrite.cpp#1)]
 [!code-csharp[WebClient_OpenWrite#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite/CS/webclient_openwrite.cs#1)]
 [!code-vb[WebClient_OpenWrite#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite/VB/webclient_openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address, System::String ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <summary>Открывает поток для записи данных в указанный ресурс с помощью указанного метода.</summary>
        <returns>
          <see cref="T:System.IO.Stream" />, используемый для записи данных в ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Метод возвращает поток для записи, используемый для отправки данных ресурсу. Этот метод блокируется при открытии потока. Чтобы продолжить выполнение при ожидании потока, используйте один из <xref:System.Net.WebClient.OpenWriteAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Открывает поток для записи данных в указанный ресурс. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <summary>Открывает поток для записи данных в указанный ресурс. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает поток для записи, используемый для отправки данных ресурсу. Поток возвращается с использованием ресурсов потока, которые автоматически выдаются из пула потоков. Чтобы получать уведомления, когда поток доступен, добавьте обработчик событий для <xref:System.Net.WebClient.OpenWriteCompleted> события. При закрытии потока, поток блокируется вплоть до отправки запроса к `address` и получения ответа.  
  
 Этот метод не блокирует вызывающий поток, пока поток открыт. На время ожидания для потока, используйте один из <xref:System.Net.WebClient.OpenWrite%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <summary>Открывает поток для записи данных в указанный ресурс. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает поток для записи, используемый для отправки данных ресурсу. Поток возвращается с использованием ресурсов потока, которые автоматически выдаются из пула потоков. Чтобы получать уведомления, когда поток доступен, добавьте обработчик событий для <xref:System.Net.WebClient.OpenWriteCompleted> события. При закрытии потока, поток блокируется вплоть до отправки запроса к `address` и получения ответа.  
  
 Этот метод не блокирует вызывающий поток, пока поток открыт. На время ожидания для потока, используйте один из <xref:System.Net.WebClient.OpenWrite%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Открывает поток для записи данных в указанный ресурс с помощью указанного метода. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает поток для записи, используемый для отправки данных ресурсу. Поток возвращается асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Чтобы получать уведомления, когда поток доступен, добавьте обработчик событий для <xref:System.Net.WebClient.OpenWriteCompleted> события. Содержимое потока отправляются на сервер при закрытии потока.  
  
 Если `method` указывает метод, который не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Этот метод не блокирует вызывающий поток, пока поток открыт. На время ожидания для потока, используйте один из <xref:System.Net.WebClient.OpenWrite%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenWriteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenWriteCompleted As OpenWriteCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenWriteCompletedEventHandler ^ OpenWriteCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenWriteCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения асинхронной операции по записи данных в ресурс.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает каждый раз, когда завершения асинхронной операции, чтобы открыть поток, который используется для отправки данных на ресурс. Эти операции запускаются путем вызова <xref:System.Net.WebClient.OpenWriteAsync%2A> методы.  
  
 <xref:System.Net.OpenWriteCompletedEventHandler> — Делегат для этого события. <xref:System.Net.OpenWriteCompletedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано задание обработчик событий для этого события.  
  
 [!code-cpp[NCLWebClientAsync#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#14)]
 [!code-csharp[NCLWebClientAsync#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#14)]
 [!code-vb[NCLWebClientAsync#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Открывает поток для записи данных в указанный ресурс как асинхронная операция с помощью объекта задачи. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <summary>Открывает поток для записи данных в указанный ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.IO.Stream" />, используемый для записи данных в ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после поток для записи данных ресурс был открыт. Этот метод блокирует вызывающий поток при открытии потока.  
  
 Этот метод получает <xref:System.IO.Stream> экземпляр, используемый для записи данных в ресурс, указанный параметром `address` параметр. Поток получается с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
> [!NOTE]
>  Необходимо вызвать <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> по окончании с <xref:System.IO.Stream> для предотвращения нехватки системных ресурсов.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
 Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <summary>Открывает поток для записи данных в указанный ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.IO.Stream" />, используемый для записи данных в ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после поток для записи данных ресурс был открыт. Этот метод блокирует вызывающий поток при открытии потока.  
  
 Этот метод получает <xref:System.IO.Stream> экземпляр, используемый для записи данных в ресурс, указанный параметром `address` параметр. Поток получается с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
> [!NOTE]
>  Необходимо вызвать <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> по окончании с <xref:System.IO.Stream> для предотвращения нехватки системных ресурсов.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
 Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address, System::String ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <summary>Открывает поток для записи данных в указанный ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.IO.Stream" />, используемый для записи данных в ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после поток для записи данных ресурс был открыт. Этот метод блокирует вызывающий поток при открытии потока.  
  
 Этот метод получает <xref:System.IO.Stream> экземпляр, используемый для записи данных в ресурс, указанный параметром `address` параметр. Поток получается с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
> [!NOTE]
>  Необходимо вызвать <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> по окончании с <xref:System.IO.Stream> для предотвращения нехватки системных ресурсов.  
  
 Если `method` указывает метод, который не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
 Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address, System::String ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <summary>Открывает поток для записи данных в указанный ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.IO.Stream" />, используемый для записи данных в ресурс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после поток для записи данных ресурс был открыт. Этот метод блокирует вызывающий поток при открытии потока.  
  
 Этот метод получает <xref:System.IO.Stream> экземпляр, используемый для записи данных в ресурс, указанный параметром `address` параметр. Поток получается с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
> [!NOTE]
>  Необходимо вызвать <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> по окончании с <xref:System.IO.Stream> для предотвращения нехватки системных ресурсов.  
  
 Если `method` указывает метод, который не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
 Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает прокси-сервер, используемый этим объектом <see cref="T:System.Net.WebClient" />.</summary>
        <value>Экземпляр <see cref="T:System.Net.IWebProxy" />, который используется для отправки запросов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Proxy%2A> Свойство, обозначающее <xref:System.Net.IWebProxy> экземпляр, который обменивается данными с удаленными серверами от имени этого <xref:System.Net.WebClient> объекта. Прокси-сервер задается системой с помощью файлов конфигурации и параметров локальной сети Internet Explorer. Чтобы указать, что должна использоваться без прокси-сервера, задайте <xref:System.Net.WebClient.Proxy%2A> свойства `null`.  
  
 Сведения о прокси автоматического обнаружения см. в разделе [автоматического обнаружения прокси-сервера](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <see cref="P:System.Net.WebClient.Proxy" /> задается значение <see langword="null" />.</exception>
        <permission cref="T:System.Net.WebPermission">не ограничено. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Net.HttpWebResponse" />
        <altmember cref="T:System.Net.FtpWebRequest" />
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
        <altmember cref="T:System.Net.WebProxy" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); void set(System::Collections::Specialized::NameValueCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает коллекцию пар "имя-значение" запросов, связанных с запросом.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.NameValueCollection" />, содержащее пары "имя-значение" запросов, связанные с запросом. Если с запросом не связаны какие-либо пары, значением будет являться пустая коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.QueryString%2A> Содержит свойство <xref:System.Collections.Specialized.NameValueCollection> экземпляра, содержащего пары имя/значение, которые добавляются в URI в виде строки запроса. Содержимое <xref:System.Net.WebClient.QueryString%2A> свойство ставится знак вопроса (?) и пары имя/значение разделяются друг от друга знаком амперсанда (&).  
  
   
  
## Examples  
 В следующем примере входные данные пользователя из командной строки и создает <xref:System.Collections.Specialized.NameValueCollection> , которые назначены <xref:System.Net.WebClient.QueryString%2A> свойство. Затем он загружает ответ с сервера в локальный файл.  
  
 [!code-cpp[WebClient_QueryString#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_QueryString/CPP/webclient_querystring.cpp#1)]
 [!code-csharp[WebClient_QueryString#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_QueryString/CS/webclient_querystring.cs#1)]
 [!code-vb[WebClient_QueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_QueryString/VB/webclient_querystring.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaders">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection ResponseHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection ResponseHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.ResponseHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResponseHeaders As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ ResponseHeaders { System::Net::WebHeaderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию пар "имя-значение" заголовков, связанных с запросом.</summary>
        <value>Коллекция <see cref="T:System.Net.WebHeaderCollection" />, содержащая пары "имя-значение", связанные с ответом, или значение <see langword="null" />, если ответ получен не был.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.ResponseHeaders%2A> Свойство содержит <xref:System.Net.WebHeaderCollection> экземпляра, содержащего данные заголовка <xref:System.Net.WebClient> получает с ответом.  
  
   
  
## Examples  
 В следующем примере кода загружает и отображает <xref:System.Net.WebClient.ResponseHeaders%2A> возвращенные сервером.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#2)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#2)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Передает буфер данных ресурсу с заданным URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <summary>Передает буфер данных ресурсу, заданному с помощью URI.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A> Метод отправляет буфер данных для ресурса.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST. Если соответствующий запрос не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 <xref:System.Net.WebClient.UploadData%2A> Метод отправляет содержимое `data` на сервер без кодировки. Этот метод блокируется во время передачи данных. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadDataAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода преобразует строку, введенную из консоли для <xref:System.Byte> массива и посылается на сервер, указанный с помощью <xref:System.Net.WebClient.UploadData%2A>. Любой ответ сервера отображается в консоли.  
  
 [!code-cpp[WebClient_UpLoadData2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData2/CPP/webclient_uploaddata2.cpp#1)]
 [!code-csharp[WebClient_UpLoadData2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData2/CS/webclient_uploaddata2.cs#1)]
 [!code-vb[WebClient_UpLoadData2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData2/VB/webclient_uploaddata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="data" /> имеет значение <see langword="null" />.  -или- При отправке данных произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <summary>Передает буфер данных ресурсу, заданному с помощью URI.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A> Метод отправляет буфер данных для ресурса.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST. Если соответствующий запрос не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 <xref:System.Net.WebClient.UploadData%2A> Метод отправляет содержимое `data` на сервер без кодировки. Этот метод блокируется во время передачи данных. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadDataAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="data" /> имеет значение <see langword="null" />.  -или- При отправке данных произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод HTTP, используемый для передачи данных ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <summary>Выгружает буфер данных на указанный ресурс с помощью указанного метода.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A> Метод передает буфер данных ресурсу с помощью метода HTTP, указанного в `method` параметра и возвращает любой ответ от сервера. Этот метод блокируется во время передачи данных. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadDataAsync%2A> методы.  
  
 <xref:System.Net.WebClient.UploadData%2A> Метод отправляет содержимое `data` на сервер без кодировки.  
  
 Если `method` параметр задает команду, которая не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода преобразует строку, введенную из консоли в массив байтов и посылается на сервер, указанный с помощью <xref:System.Net.WebClient.UploadData%2A>. Любой ответ сервера отображается в консоли.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="data" /> имеет значение <see langword="null" />.  -или- При передаче данных произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод HTTP, используемый для передачи данных ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <summary>Выгружает буфер данных на указанный ресурс с помощью указанного метода.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A> Метод передает буфер данных ресурсу с помощью метода HTTP, указанного в `method` параметра и возвращает любой ответ от сервера. Этот метод блокируется во время передачи данных. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadDataAsync%2A> методы.  
  
 <xref:System.Net.WebClient.UploadData%2A> Метод отправляет содержимое `data` на сервер без кодировки.  
  
 Если `method` параметр задает команду, которая не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="data" /> имеет значение <see langword="null" />.  -или- При передаче данных произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Передает буфер данных ресурсу, заданному с помощью URI. Этот метод не блокирует вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <summary>Выгружает буфер данных в ресурс, указанный с помощью URI, используя метод POST. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод передает буфер данных ресурсу. Буфер данных отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Данные не закодированы. Для уведомления о завершении отправки данных, добавьте обработчик событий для <xref:System.Net.WebClient.UploadDataCompleted> события.  
  
 Этот метод не блокирует вызывающий поток при передаче данных. Для отправки данных и блок во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadData%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если <see langword="null" />, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <summary>Выгружает буфер данных в ресурс, указанный с помощью URI, используя указанный метод. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод передает буфер данных ресурсу. Буфер данных отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Данные не закодированы. Для уведомления о завершении отправки данных, добавьте обработчик событий для <xref:System.Net.WebClient.UploadDataCompleted> события.  
  
 Этот метод не блокирует вызывающий поток при передаче данных. Для отправки данных и блок во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadData%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если <see langword="null" />, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Передает буфер данных в ресурс, определенный с помощью URI, используя при этом указанный метод и маркер идентификации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод передает буфер данных ресурсу. Буфер данных отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Данные не закодированы. Для уведомления о завершении отправки данных, добавьте обработчик событий для <xref:System.Net.WebClient.UploadDataCompleted> события.  
  
 Этот метод не блокирует вызывающий поток при передаче данных. Для отправки данных и блок во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadData%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadDataCompletedEventHandler UploadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadDataCompletedEventHandler UploadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadDataCompleted As UploadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadDataCompletedEventHandler ^ UploadDataCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения асинхронной операции по выгрузке данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает каждый раз при завершении асинхронной операции выгрузки данных. Асинхронные данные выгрузок путем вызова <xref:System.Net.WebClient.UploadDataAsync%2A> методы.  
  
 <xref:System.Net.UploadDataCompletedEventHandler> — Делегат для этого события. <xref:System.Net.UploadDataCompletedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано задание обработчик событий для этого события.  
  
 [!code-cpp[NCLWebClientAsync#36](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#36)]
 [!code-csharp[NCLWebClientAsync#36](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#36)]
 [!code-vb[NCLWebClientAsync#36](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет буфер данных, содержащий массив <see cref="T:System.Byte" /> на URI, указанного как асинхронная операция с помощью объекта задачи.  Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <summary>Отправляет буфер данных, содержащий массив <see cref="T:System.Byte" /> на URI, указанного как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий тело ответа, полученного из ресурса, когда буфер данных был отправлен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после загрузки буфер данных для ресурса.  
  
 Этот метод передает буфер данных ресурсу. Буфер данных отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Данные не закодированы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <summary>Отправляет буфер данных, содержащий массив <see cref="T:System.Byte" /> на URI, указанного как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий тело ответа, полученного из ресурса, когда буфер данных был отправлен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после загрузки буфер данных для ресурса.  
  
 Этот метод передает буфер данных ресурсу. Буфер данных отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Данные не закодированы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если <see langword="null" />, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <summary>Отправляет буфер данных, содержащий массив <see cref="T:System.Byte" /> на URI, указанного как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий тело ответа, полученного из ресурса, когда буфер данных был отправлен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после загрузки буфер данных для ресурса.  
  
 Этот метод передает буфер данных ресурсу. Буфер данных отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Данные не закодированы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передаются данные.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если <see langword="null" />, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Буфер данных, передаваемый ресурсу.</param>
        <summary>Отправляет буфер данных, содержащий массив <see cref="T:System.Byte" /> на URI, указанного как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий тело ответа, полученного из ресурса, когда буфер данных был отправлен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после загрузки буфер данных для ресурса.  
  
 Этот метод передает буфер данных ресурсу. Буфер данных отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Данные не закодированы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Передает локальный файл ресурсу с заданным URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл. Например, ftp://localhost/samplefile.txt.</param>
        <param name="fileName">Файл, передаваемый ресурсу. Например, "samplefile.txt".</param>
        <summary>Передает заданный локальный файл ресурсу с заданным URI.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadFile%2A> Метод передает локальный файл ресурсу. Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
 Этот метод блокируется при загрузке файла. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadFileAsync%2A> методы.  
  
 `POST` Метод определяется HTTP. Если соответствующий запрос не использует протокол HTTP и `POST` не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода загружает указанный файл в указанный URI с помощью <xref:System.Net.WebClient.UploadFile%2A>. Любой ответ, возвращенный сервером, отображается на консоли.  
  
 [!code-cpp[WebClient_UpLoadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile/CPP/webclient_uploadfile.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile/CS/webclient_uploadfile.cs#1)]
 [!code-vb[WebClient_UpLoadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile/VB/webclient_uploadfile.vb#1)]  
  
 В следующем примере кода показано страницей ASP.NET, который может принимать учтено файлы и подходит для использования с <xref:System.Net.WebClient.UploadFile%2A> метод. Страница должна находиться на веб-сервере. Его адрес предоставляет значение для `address` параметр <xref:System.Net.WebClient.UploadFile%2A> метода.  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> равно <see langword="null" />, равно <see cref="F:System.String.Empty" />, содержит недопустимые символы или не существует.  -или- При передаче файла произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">для доступа к локальному файлу. Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл. Например, ftp://localhost/samplefile.txt.</param>
        <param name="fileName">Файл, передаваемый ресурсу. Например, "samplefile.txt".</param>
        <summary>Передает заданный локальный файл ресурсу с заданным URI.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadFile%2A> Метод передает локальный файл ресурсу. Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
 Этот метод блокируется при загрузке файла. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadFileAsync%2A> методы.  
  
 `POST` Метод определяется HTTP. Если соответствующий запрос не использует протокол HTTP и `POST` не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> равно <see langword="null" />, равно <see cref="F:System.String.Empty" />, содержит недопустимые символы или не существует.  -или- При передаче файла произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">для доступа к локальному файлу. Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл.</param>
        <param name="method">Метод, используемый для передачи файла ресурсу. Если <see langword="null" />, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="fileName">Файл, передаваемый ресурсу.</param>
        <summary>Выгружает указанный локальный файл на указанный ресурс с помощью указанного метода.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если адрес задает HTTP-ресурса, <xref:System.Net.WebClient.UploadFile%2A> метод передает локальный файл ресурсу с помощью метода HTTP, указанного в `method` параметр и возвращает любой ответ от сервера. Этот метод блокируется при загрузке файла. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadFileAsync%2A> методы.  
  
 Если `method` параметр задает команду, которая не понят сервером или `address` ресурсов, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода загружает указанный файл в указанный URI с помощью <xref:System.Net.WebClient.UploadFile%2A>. Любой ответ, возвращенный сервером, отображается на консоли.  
  
 [!code-cpp[WebClient_UpLoadFile2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CPP/webclient_uploadfile2.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CS/webclient_uploadfile2.cs#1)]
 [!code-vb[WebClient_UpLoadFile2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile2/VB/webclient_uploadfile2.vb#1)]  
  
 В следующем примере кода показано страницей ASP.NET, который может принимать учтено файлы и подходит для использования с <xref:System.Net.WebClient.UploadFile%2A> метод. Страница должна находиться на веб-сервере. Его адрес предоставляет значение для `address` параметр <xref:System.Net.WebClient.UploadFile%2A> метода.  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> равно <see langword="null" />, равно <see cref="F:System.String.Empty" />, содержит недопустимые символы или не существует.  -или- При передаче файла произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">для доступа к локальному файлу. Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл.</param>
        <param name="method">Метод, используемый для передачи файла ресурсу. Если <see langword="null" />, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="fileName">Файл, передаваемый ресурсу.</param>
        <summary>Выгружает указанный локальный файл на указанный ресурс с помощью указанного метода.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если адрес задает HTTP-ресурса, <xref:System.Net.WebClient.UploadFile%2A> метод передает локальный файл ресурсу с помощью метода HTTP, указанного в `method` параметр и возвращает любой ответ от сервера. Этот метод блокируется при загрузке файла. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadFileAsync%2A> методы.  
  
 Если `method` параметр задает команду, которая не понят сервером или `address` ресурсов, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> равно <see langword="null" />, равно <see cref="F:System.String.Empty" />, содержит недопустимые символы или не существует.  -или- При передаче файла произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">для доступа к локальному файлу. Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выгружает указанный локальный файл на указанный ресурс. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="fileName">Файл, передаваемый ресурсу.</param>
        <summary>Выгружает указанный локальный файл на указанный ресурс с помощью метода POST. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Файл отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Для уведомления о завершении передачи файла, добавьте обработчик событий для <xref:System.Net.WebClient.UploadFileCompleted> события.  
  
 Этот метод не блокирует вызывающий поток при передаче файла. Для отправки файлов и блоков во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadFile%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> имеет значение <see langword="null" />, <see cref="F:System.String.Empty" /> или содержит недопустимый символ, или указанный путь к файлу не существует.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">для доступа к локальному файлу. Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если <see langword="null" />, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="fileName">Файл, передаваемый ресурсу.</param>
        <summary>Выгружает указанный локальный файл на указанный ресурс с помощью метода POST. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Файл отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Для уведомления о завершении передачи файла, добавьте обработчик событий для <xref:System.Net.WebClient.UploadFileCompleted> события.  
  
 Этот метод не блокирует вызывающий поток при передаче файла. Для отправки файлов и блоков во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadFile%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> имеет значение <see langword="null" />, <see cref="F:System.String.Empty" /> или содержит недопустимый символ, или указанный путь к файлу не существует.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">для доступа к локальному файлу. Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если <see langword="null" />, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="fileName">Файл, передаваемый ресурсу.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Выгружает указанный локальный файл на указанный ресурс с помощью метода POST. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Файл отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Для уведомления о завершении передачи файла, добавьте обработчик событий для <xref:System.Net.WebClient.UploadFileCompleted> события.  
  
 Этот метод не блокирует вызывающий поток при передаче файла. Для отправки файлов и блоков во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadFile%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> имеет значение <see langword="null" />, <see cref="F:System.String.Empty" /> или содержит недопустимый символ, или указанный путь к файлу не существует.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">для доступа к локальному файлу. Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadFileCompletedEventHandler UploadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadFileCompletedEventHandler UploadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadFileCompleted As UploadFileCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadFileCompletedEventHandler ^ UploadFileCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadFileCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения асинхронной операции по выгрузке файла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает каждый раз при завершении асинхронной операции выгрузки файла. Асинхронный файловый выгрузок путем вызова <xref:System.Net.WebClient.UploadFileAsync%2A> методы.  
  
 <xref:System.Net.UploadFileCompletedEventHandler> — Делегат для этого события. <xref:System.Net.UploadFileCompletedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано задание обработчик событий для этого события.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет указанный локальный файл в ресурс как асинхронная операция с помощью объекта задачи. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="fileName">Локальный Файл, передаваемый ресурсу.</param>
        <summary>Отправляет указанный локальный файл в ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий тело ответа, полученного из ресурса, когда файл был отправлен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи файла в ресурс. Файл отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> имеет значение <see langword="null" />, <see cref="F:System.String.Empty" /> или содержит недопустимый символ, или указанный путь к файлу не существует.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="fileName">Локальный Файл, передаваемый ресурсу.</param>
        <summary>Отправляет указанный локальный файл в ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий тело ответа, полученного из ресурса, когда файл был отправлен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи файла в ресурс. Файл отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> имеет значение <see langword="null" />, <see cref="F:System.String.Empty" /> или содержит недопустимый символ, или указанный путь к файлу не существует.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если <see langword="null" />, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="fileName">Локальный Файл, передаваемый ресурсу.</param>
        <summary>Отправляет указанный локальный файл в ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий тело ответа, полученного из ресурса, когда файл был отправлен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи файла в ресурс. Файл отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 ПО умолчанию этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> имеет значение <see langword="null" />, <see cref="F:System.String.Empty" /> или содержит недопустимый символ, или указанный путь к файлу не существует.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается файл. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="method">Метод, используемый для передачи данных ресурсу. Если <see langword="null" />, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="fileName">Локальный Файл, передаваемый ресурсу.</param>
        <summary>Отправляет указанный локальный файл в ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий тело ответа, полученного из ресурса, когда файл был отправлен.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи файла в ресурс. Файл отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 ПО умолчанию этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="fileName" /> имеет значение <see langword="null" />, <see cref="F:System.String.Empty" /> или содержит недопустимый символ, или указанный путь к файлу не существует.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Заголовок <see langword="Content-type" /> начинается с <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.UploadProgressChangedEventHandler UploadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadProgressChangedEventHandler UploadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadProgressChanged As UploadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadProgressChangedEventHandler ^ UploadProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при успешной передаче всех данных или их части посредством асинхронной операции выгрузки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает каждый раз, продвижении хода выполнения асинхронной операции выгрузки. Это событие возникает при запуске передачи с помощью любого из следующих методов.  
  
|Метод|Описание:|  
|------------|-----------------|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|Отправляет <xref:System.Byte> массива для ресурса, без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Отправляет локальный файл ресурсов, без блокировки вызывающего потока.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Отправляет <xref:System.Collections.Specialized.NameValueCollection> ресурсов и возвращает <xref:System.Byte> массив, содержащий любой ответ, без блокировки вызывающего потока.|  
  
 <xref:System.Net.UploadProgressChangedEventHandler> — Делегат для этого события. <xref:System.Net.UploadProgressChangedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано задание обработчик событий для этого события.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 В следующем примере кода показана реализация обработчика этого события.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выгружает указанную строку в указанный ресурс.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="data">Выгружаемая строка.</param>
        <summary>Выгружает указанную строку на указанный ресурс с помощью метода POST.</summary>
        <returns>Строка <see cref="T:System.String" />, содержащая ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Этот метод блокируется во время передачи строки. Чтобы отправить строку и продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadStringAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого метода.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="data">Выгружаемая строка.</param>
        <summary>Выгружает указанную строку на указанный ресурс с помощью метода POST.</summary>
        <returns>Строка <see cref="T:System.String" />, содержащая ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Этот метод блокируется во время передачи строки. Чтобы отправить строку и продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadStringAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("»), и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода <c>method</c>.</param>
        <param name="method">Метод HTTP, используемый для передачи строки ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Выгружаемая строка.</param>
        <summary>Выгружает указанную строку на указанный ресурс с помощью указанного метода.</summary>
        <returns>Строка <see cref="T:System.String" />, содержащая ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Этот метод блокируется во время передачи строки. Чтобы отправить строку и продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadStringAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вызов этого метода.  
  
 [!code-cpp[NCLWebClientAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#2)]
 [!code-csharp[NCLWebClientAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#2)]
 [!code-vb[NCLWebClientAsync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Метод <paramref name="method" /> не может использоваться для отправки содержимого.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода <c>method</c>.</param>
        <param name="method">Метод HTTP, используемый для передачи строки ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Выгружаемая строка.</param>
        <summary>Выгружает указанную строку на указанный ресурс с помощью указанного метода.</summary>
        <returns>Строка <see cref="T:System.String" />, содержащая ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Этот метод блокируется во время передачи строки. Чтобы отправить строку и продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadStringAsync%2A> методы.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Метод <paramref name="method" /> не может использоваться для отправки содержимого.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выгружает указанную строку в указанный ресурс. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="data">Выгружаемая строка.</param>
        <summary>Выгружает указанную строку в указанный ресурс. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод отправляет строку ресурса. Строка отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Для уведомления о завершении отправки строки, можно добавить обработчик событий к <xref:System.Net.WebClient.UploadStringCompleted> событий.  
  
 Этот метод не блокирует вызывающий поток при передаче строки. Чтобы отправить строки и блока во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadString%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="method">Метод HTTP, используемый для передачи файла ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Выгружаемая строка.</param>
        <summary>Выгружает указанную строку в указанный ресурс. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод отправляет строку ресурса. Строка отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Для уведомления о завершении отправки строки, можно добавить обработчик событий к <xref:System.Net.WebClient.UploadStringCompleted> событий.  
  
 Этот метод не блокирует вызывающий поток при передаче строки. Чтобы отправить строки и блока во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadString%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Метод <paramref name="method" /> не может использоваться для отправки содержимого.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="method">Метод HTTP, используемый для передачи файла ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Выгружаемая строка.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Выгружает указанную строку в указанный ресурс. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод отправляет строку ресурса. Строка отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Для уведомления о завершении отправки строки, можно добавить обработчик событий к <xref:System.Net.WebClient.UploadStringCompleted> событий.  
  
 Этот метод не блокирует вызывающий поток при передаче строки. Чтобы отправить строки и блока во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadString%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Метод <paramref name="method" /> не может использоваться для отправки содержимого.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadStringCompletedEventHandler UploadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadStringCompletedEventHandler UploadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadStringCompleted As UploadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadStringCompletedEventHandler ^ UploadStringCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения асинхронной операции по выгрузке строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает каждый раз при завершении асинхронной операции выгрузки строки. Асинхронные строка выгрузок путем вызова <xref:System.Net.WebClient.UploadStringAsync%2A> методы.  
  
 <xref:System.Net.UploadStringCompletedEventHandler> — Делегат для этого события. <xref:System.Net.UploadStringCompletedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано задание обработчик событий для этого события.  
  
 [!code-cpp[NCLWebClientAsync#38](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#38)]
 [!code-csharp[NCLWebClientAsync#38](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#38)]
 [!code-vb[NCLWebClientAsync#38](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выгружает указанную строку в заданный ресурс как асинхронная операция с помощью объекта задачи. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="data">Выгружаемая строка.</param>
        <summary>Выгружает указанную строку в заданный ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.String" />, содержащий ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи строки к ресурсу. Строка отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Этот метод блокируется во время передачи строки.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="data">Выгружаемая строка.</param>
        <summary>Выгружает указанную строку в заданный ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.String" />, содержащий ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи строки к ресурсу. Строка отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Этот метод блокируется во время передачи строки.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="method">Метод HTTP, используемый для передачи файла ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Выгружаемая строка.</param>
        <summary>Выгружает указанную строку в заданный ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.String" />, содержащий ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи строки к ресурсу. Строка отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Этот метод блокируется во время передачи строки.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Метод <paramref name="method" /> не может использоваться для отправки содержимого.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается строка. Для HTTP-ресурсов этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода POST, например скрипт или страницу ASP.</param>
        <param name="method">Метод HTTP, используемый для передачи файла ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Выгружаемая строка.</param>
        <summary>Выгружает указанную строку в заданный ресурс как асинхронная операция с помощью объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает <see cref="T:System.String" />, содержащий ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи строки к ресурсу. Строка отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Этот метод блокируется во время передачи строки.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Метод <paramref name="method" /> не может использоваться для отправки содержимого.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValues">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Передает коллекцию "имя-значение" ресурсу с заданным URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <summary>Передает указанную коллекцию "имя-значение" указанному ресурсу, указанному с помощью URI.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A> Метод отправляет <xref:System.Collections.Specialized.NameValueCollection> на сервере. Этот метод блокируется во время передачи данных. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadValuesAsync%2A> методы.  
  
 Если соответствующий запрос не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если заголовок Content-type `null`, <xref:System.Net.WebClient.UploadValues%2A> метод задает ему значение «application/x-www-формы-urlencoded».  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода собирает информацию от пользователя (имя, возраст и адрес) и отправляет на сервер с помощью значения <xref:System.Net.WebClient.UploadValues%2A>. Любой ответ от сервера отображается в консоли.  
  
 [!code-cpp[WebClient_UploadValues#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues/CPP/webclient_uploadvalues.cpp#1)]
 [!code-csharp[WebClient_UploadValues#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues/CS/webclient_uploadvalues.cs#1)]
 [!code-vb[WebClient_UploadValues#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues/VB/webclient_uploadvalues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="data" /> имеет значение <see langword="null" />.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- При открытии потока произошла ошибка.  -или- Заголовок <see langword="Content-type" /> не равен ни <see langword="null" />, ни "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <summary>Передает указанную коллекцию "имя-значение" указанному ресурсу, указанному с помощью URI.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A> Метод отправляет <xref:System.Collections.Specialized.NameValueCollection> на сервере. Этот метод блокируется во время передачи данных. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadValuesAsync%2A> методы.  
  
 Если соответствующий запрос не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если заголовок Content-type `null`, <xref:System.Net.WebClient.UploadValues%2A> метод задает ему значение «application/x-www-формы-urlencoded».  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="data" /> имеет значение <see langword="null" />.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- При открытии потока произошла ошибка.  -или- Заголовок <see langword="Content-type" /> не равен ни <see langword="null" />, ни "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция.</param>
        <param name="method">Метод HTTP, используемый для передачи файла ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <summary>Передает указанную коллекцию "имя-значение" указанному ресурсу, указанному с помощью URI, используя указанный метод.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A> Метод отправляет <xref:System.Collections.Specialized.NameValueCollection> ресурсу с помощью метода, указанного в `method` параметр и возвращает любой ответ от сервера. Этот метод блокируется во время передачи данных. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadValuesAsync%2A> методы.  
  
 Если `Content-type` заголовок `null`, <xref:System.Net.WebClient.UploadValues%2A> задает метод для `application/x-www-form-urlencoded`.  
  
 Если `method` параметр задает команду, которая не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 В следующем примере кода собирает информацию от пользователя (имя, возраст и адрес) и отправляет на сервер с помощью значения <xref:System.Net.WebClient.UploadValues%2A>. Любой ответ от сервера отображается в консоли.  
  
 [!code-cpp[WebClient_UploadValues2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues2/CPP/webclient_uploadvalues2.cpp#1)]
 [!code-csharp[WebClient_UploadValues2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues2/CS/webclient_uploadvalues2.cs#1)]
 [!code-vb[WebClient_UploadValues2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues2/VB/webclient_uploadvalues2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="data" /> имеет значение <see langword="null" />.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Значение заголовка <see langword="Content-type" /> не равно <see langword="null" /> или <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция.</param>
        <param name="method">Метод HTTP, используемый для передачи файла ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <summary>Передает указанную коллекцию "имя-значение" указанному ресурсу, указанному с помощью URI, используя указанный метод.</summary>
        <returns>Массив значений типа <see cref="T:System.Byte" />, содержащий основной текст ответа ресурса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A> Метод отправляет <xref:System.Collections.Specialized.NameValueCollection> ресурсу с помощью метода, указанного в `method` параметр и возвращает любой ответ от сервера. Этот метод блокируется во время передачи данных. Чтобы продолжить выполнение во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadValuesAsync%2A> методы.  
  
 Если `Content-type` заголовок `null`, <xref:System.Net.WebClient.UploadValues%2A> задает метод для `application/x-www-form-urlencoded`.  
  
 Если `method` параметр задает команду, которая не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- <paramref name="data" /> имеет значение <see langword="null" />.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Значение заголовка <see langword="Content-type" /> не равно <see langword="null" /> или <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Передает указанную коллекцию "имя-значение" указанному ресурсу, указанному с помощью URI. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция. Этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода по умолчанию.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <summary>Выгружает дату в указанной коллекции "имя-значение" в указанный ресурс, определенному с помощью URI. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод отправляет строку ресурса. Строка отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Перед отправкой строки, этот метод преобразует его в <xref:System.Byte> массива, используя кодировку, заданную в <xref:System.Net.WebClient.Encoding%2A> свойство. Для уведомления о завершении отправки строки, можно добавить обработчик событий к <xref:System.Net.WebClient.UploadStringCompleted> событий.  
  
 Этот метод не блокирует вызывающий поток при передаче строки. Чтобы отправить строки и блока во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadString%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция. Этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода <c>method</c>.</param>
        <param name="method">Метод, используемый для передачи строки ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <summary>Выгружает дату в указанной коллекции "имя-значение" в указанный ресурс, определенный с помощью URI, используя указанный метод. Этот метод не блокирует вызывающий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод отправляет данные, содержащиеся в <xref:System.Collections.Specialized.NameValueCollection> для `address` ресурсов. Используйте этот метод для отправки данных формы на URI для обработки. Данные отправляются с помощью тип мультимедиа формы urlencoded. значение заголовка Content-Type должно быть присвоено «application/x-www-формы-urlencoded». Заголовок имеет правильное значение по умолчанию. <xref:System.Net.WebClient.UploadValuesAsync%2A> Методы создают исключение <xref:System.Net.WebException> при вызове этого метода с разными наборами значение заголовка Content-Type в <xref:System.Net.WebClient.Headers%2A> коллекции.  
  
 Если `method` метода не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 <xref:System.Collections.Specialized.NameValueCollection> Отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Чтобы получать уведомления, после завершения операции отправки, добавьте обработчик событий для <xref:System.Net.WebClient.UploadValuesCompleted> события.  
  
 Этот метод не блокирует вызывающий поток при передаче строки. Чтобы отправить строки и блока во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadValues%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустым, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Метод <paramref name="method" /> не может использоваться для отправки содержимого.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data, System::Object ^ userToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция. Этот URI должен указывать ресурс, который может принять запрос, отправленный с помощью метода <c>method</c>.</param>
        <param name="method">Метод HTTP, используемый для передачи строки ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <param name="userToken">Пользовательский объект, передаваемый методу, вызываемому по завершении асинхронной операции.</param>
        <summary>Выгружает дату в указанной коллекции "имя-значение" в указанный ресурс, определенный с помощью URI, используя указанный метод. Этот метод не блокирует вызывающий поток и позволяет вызывающей стороне передать объект в метод, вызванный после завершения операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод отправляет данные, содержащиеся в <xref:System.Collections.Specialized.NameValueCollection> для `address` ресурсов. Используйте этот метод для отправки данных формы на URI для обработки. Данные отправляются с помощью тип мультимедиа формы urlencoded. значение заголовка Content-Type должно быть присвоено «application/x-www-формы-urlencoded». Заголовок имеет правильное значение по умолчанию. <xref:System.Net.WebClient.UploadValuesAsync%2A> Методы создают исключение <xref:System.Net.WebException> при вызове этого метода с разными наборами значение заголовка Content-Type в <xref:System.Net.WebClient.Headers%2A> коллекции.  
  
 Если `method` метода не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 <xref:System.Collections.Specialized.NameValueCollection> Отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков. Чтобы получать уведомления, после завершения операции отправки, добавьте обработчик событий для <xref:System.Net.WebClient.UploadValuesCompleted> события.  
  
 Этот метод не блокирует вызывающий поток при передаче строки. Чтобы отправить строки и блока во время ожидания ответа сервера, используйте один из <xref:System.Net.WebClient.UploadValues%2A> методы.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустым, оно добавляется к `address`.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Метод <paramref name="method" /> не может использоваться для отправки содержимого.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadValuesCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadValuesCompleted As UploadValuesCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadValuesCompletedEventHandler ^ UploadValuesCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadValuesCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после завершения асинхронной операции по выгрузке коллекции "имя-значение".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает при каждом запуске асинхронной передачи <xref:System.Collections.Specialized.NameValueCollection> завершения объекта данных. Этих выгрузок путем вызова <xref:System.Net.WebClient.UploadValuesAsync%2A> методы.  
  
 <xref:System.Net.UploadValuesCompletedEventHandler> — Делегат для этого события. <xref:System.Net.UploadValuesCompletedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выгружает указанную коллекцию "имя-значение" в указанный ресурс, определенный с помощью URI, как асинхронная операция с использованием объекта задачи. Эти методы не блокируют вызывающий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <summary>Выгружает указанную коллекцию "имя-значение" в указанный ресурс, определенный с помощью URI, как асинхронная операция с использованием объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи коллекцию имя/значение для ресурса. Коллекция имен и значений отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если соответствующий запрос не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если заголовок Content-type `null`, этот метод задается значение «application/x-www-формы-urlencoded».  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- При открытии потока произошла ошибка.  -или- Заголовок <see langword="Content-type" /> не равен ни <see langword="null" />, ни "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <summary>Выгружает указанную коллекцию "имя-значение" в указанный ресурс, определенный с помощью URI, как асинхронная операция с использованием объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи коллекцию имя/значение для ресурса. Коллекция имен и значений отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если соответствующий запрос не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если заголовок Content-type `null`, этот метод задается значение «application/x-www-формы-urlencoded».  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- При открытии потока произошла ошибка.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- Значение заголовка <see langword="Content-type" /> не равно <see langword="null" /> или <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция.</param>
        <param name="method">Метод HTTP, используемый для передачи коллекции ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <summary>Выгружает указанную коллекцию "имя-значение" в указанный ресурс, определенный с помощью URI, как асинхронная операция с использованием объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи коллекцию имя/значение для ресурса. Коллекция имен и значений отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если соответствующий запрос не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если заголовок Content-type `null`, этот метод задается значение «application/x-www-формы-urlencoded».  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Метод <paramref name="method" /> не может использоваться для отправки содержимого.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- При открытии потока произошла ошибка.  -или- Заголовок <see langword="Content-type" /> не равен ни <see langword="null" />, ни "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">URI ресурса, которому передается коллекция.</param>
        <param name="method">Метод HTTP, используемый для передачи коллекции ресурсу. Если значение пустое, для HTTP по умолчанию используется метод POST, а для FTP — STOR.</param>
        <param name="data">Коллекция <see cref="T:System.Collections.Specialized.NameValueCollection" />, передаваемая ресурсу.</param>
        <summary>Выгружает указанную коллекцию "имя-значение" в указанный ресурс, определенный с помощью URI, как асинхронная операция с использованием объекта задачи.</summary>
        <returns>Возвращает <see cref="T:System.Threading.Tasks.Task`1" />.  Объект задачи, представляющий асинхронную операцию. Свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> в объекте задачи возвращает массив <see cref="T:System.Byte" />, содержащий ответ, отправленный сервером.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601> объекта будет выполнена после передачи коллекцию имя/значение для ресурса. Коллекция имен и значений отправляется асинхронно с помощью ресурсов потока, которые автоматически выдаются из пула потоков.  
  
 Асинхронные операции, которые не были выполнены можно отменить с помощью <xref:System.Net.WebClient.CancelAsync%2A> метод.  
  
 Если соответствующий запрос не понят сервером, базовые классы протокола определяют, что произошло. Как правило <xref:System.Net.WebException> со <xref:System.Net.WebException.Status%2A> свойство задано, чтобы указать на ошибку.  
  
 Если заголовок Content-type `null`, этот метод задается значение «application/x-www-формы-urlencoded».  
  
 Если <xref:System.Net.WebClient.BaseAddress%2A> свойство не является пустой строкой ("») и `address` не содержит абсолютный URI, `address` должен быть относительным URI, который используется в сочетании с <xref:System.Net.WebClient.BaseAddress%2A> для формирования абсолютный URI запрошенных данных. Если <xref:System.Net.WebClient.QueryString%2A> свойство не является пустой строкой, оно добавляется к `address`.  
  
 Этот метод использует команду STOR для отправки FTP-ресурса. Для HTTP-ресурса используется метод POST.  
  
> [!NOTE]
>  Данный член генерирует сведения трассировки, если в приложении включена трассировка сети. Дополнительные сведения см. в разделе [Трассировка сети в .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="address" /> имеет значение <see langword="null" />.  -или- Параметр <paramref name="data" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">URI, образованный объединением <see cref="P:System.Net.WebClient.BaseAddress" /> и <paramref name="address" />, является недопустимым.  -или- Метод <paramref name="method" /> не может использоваться для отправки содержимого.  -или- Сервер, на котором расположен ресурс, не отвечает.  -или- При открытии потока произошла ошибка.  -или- Заголовок <see langword="Content-type" /> не равен ни <see langword="null" />, ни "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <see cref="T:System.Boolean" />, которое управляет отправкой учетных данных <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> вместе с запросами.</summary>
        <value>Значение <see langword="true" />, если используются учетные данные по умолчанию; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Присвойте этому свойству значение `true` при запросов, выполненных этим <xref:System.Net.WebClient> объекта по запросу сервера проверки подлинности с помощью учетных данных по умолчанию для пользователя, выполнившего вход. Для клиентских приложений это приемлемо в большинстве сценариев. Для приложений среднего уровня, таких как приложения ASP.NET, вместо того чтобы использовать это свойство обычно устанавливается <xref:System.Net.WebClient.Credentials%2A> свойства учетные данные клиента, от лица которого выполняется запрос.  
  
   
  
## Examples  
 В следующем примере кода показано задание этого свойства.  
  
 [!code-cpp[NCLWebClientAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#3)]
 [!code-csharp[NCLWebClientAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#3)]
 [!code-vb[NCLWebClientAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStreamClosed">
      <MemberSignature Language="C#" Value="public event System.Net.WriteStreamClosedEventHandler WriteStreamClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.WriteStreamClosedEventHandler WriteStreamClosed" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.WriteStreamClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WriteStreamClosed As WriteStreamClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::WriteStreamClosedEventHandler ^ WriteStreamClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WriteStreamClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после закрытия асинхронной операции по записи данных в ресурс с использованием потока записи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает каждый раз, когда асинхронная операция используется для записи данных ресурсу с помощью потока записи закрыт. Эти операции в результате вызовы <xref:System.Net.WebClient.OpenWriteTaskAsync%2A> методов.  
  
 <xref:System.Net.WriteStreamClosedEventHandler> — Делегат для этого события. <xref:System.Net.WriteStreamClosedEventArgs> Класс предоставляет обработчик событий с данными о событии.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>