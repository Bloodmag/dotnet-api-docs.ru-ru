<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="91c8d-101">Предоставляет методы для кодирования и декодирования URL-адресов при обработке веб-запросов.</span><span class="sxs-lookup"><span data-stu-id="91c8d-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c8d-102"><xref:System.Web.HttpUtility> Класс содержит кодирования и декодирования служебные методы для использования со строками HTML-кодирования.</span><span class="sxs-lookup"><span data-stu-id="91c8d-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="91c8d-103"><xref:System.Uri?displayProperty=nameWithType> Класс также содержит методы и свойства, которые могут использоваться для других целей.</span><span class="sxs-lookup"><span data-stu-id="91c8d-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91c8d-104">Преобразует строку, преобразованную в кодировку HTML для передачи по протоколу HTTP, в декодированную строку.</span><span class="sxs-lookup"><span data-stu-id="91c8d-104">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91c8d-105">Декодируемая строка.</span><span class="sxs-lookup"><span data-stu-id="91c8d-105">The string to decode.</span></span></param>
        <summary><span data-ttu-id="91c8d-106">Преобразует строку, преобразованную в кодировку HTML для передачи по протоколу HTTP, в декодированную строку.</span><span class="sxs-lookup"><span data-stu-id="91c8d-106">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="91c8d-107">Декодированная строка.</span><span class="sxs-lookup"><span data-stu-id="91c8d-107">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c8d-108">Если такие символы, как пробелы и знаки препинания передаются в поток HTTP, они могут быть неправильно на принимающей стороне.</span><span class="sxs-lookup"><span data-stu-id="91c8d-108">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="91c8d-109">Кодировка HTML преобразует символы, которые не разрешены в формате HTML в эквивалентные сущности знаков. Декодирование HTML изменяет соответствующую кодировку.</span><span class="sxs-lookup"><span data-stu-id="91c8d-109">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="91c8d-110">Например, при его внедрении в блок текста, символы \< и > кодируются как &lt; и &gt; для передачи по протоколу HTTP.</span><span class="sxs-lookup"><span data-stu-id="91c8d-110">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="91c8d-111">Если `value` параметр `null`, то возвращаемая декодированная строка является `null`.</span><span class="sxs-lookup"><span data-stu-id="91c8d-111">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="91c8d-112">Если `value` представляет собой пустую строку, то возвращаемая декодированная строка является пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="91c8d-112">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91c8d-113">Декодируемая строка.</span><span class="sxs-lookup"><span data-stu-id="91c8d-113">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="91c8d-114">Поток выходных данных <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-114">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="91c8d-115">Преобразует строку в формате HTML в декодированную строку и отправляет декодированную строку в выходной поток <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-115">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c8d-116">Если такие символы, как пробелы и знаки препинания передаются в поток HTTP, они могут быть неправильно на принимающей стороне.</span><span class="sxs-lookup"><span data-stu-id="91c8d-116">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="91c8d-117">Кодировка HTML преобразует символы, которые не разрешены в формате HTML в эквивалентные сущности знаков. Декодирование HTML изменяет соответствующую кодировку.</span><span class="sxs-lookup"><span data-stu-id="91c8d-117">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="91c8d-118">Например, при его внедрении в блок текста, символы \< и > кодируются как &lt; и &gt; для передачи по протоколу HTTP.</span><span class="sxs-lookup"><span data-stu-id="91c8d-118">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91c8d-119">Параметр <paramref name="output" /> не может быть равен <see langword="null" />, если параметр <paramref name="value" /> не равен <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-119">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="91c8d-120">Преобразует строку в строку в кодировке HTML.</span><span class="sxs-lookup"><span data-stu-id="91c8d-120">Converts a string to an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91c8d-121">Кодируемая строка.</span><span class="sxs-lookup"><span data-stu-id="91c8d-121">The string to encode.</span></span></param>
        <summary><span data-ttu-id="91c8d-122">Преобразует строку в строку в кодировке HTML.</span><span class="sxs-lookup"><span data-stu-id="91c8d-122">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="91c8d-123">Закодированная строка.</span><span class="sxs-lookup"><span data-stu-id="91c8d-123">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c8d-124">Если такие символы, как пробелы и знаки препинания передаются в поток HTTP, они могут быть неправильно на принимающей стороне.</span><span class="sxs-lookup"><span data-stu-id="91c8d-124">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="91c8d-125">Кодировка HTML преобразует символы, которые не разрешены в формате HTML в эквивалентные сущности знаков. Декодирование HTML изменяет соответствующую кодировку.</span><span class="sxs-lookup"><span data-stu-id="91c8d-125">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="91c8d-126">Например, при его внедрении в блок текста, символы \< и > кодируются как &lt; и &gt; для передачи по протоколу HTTP.</span><span class="sxs-lookup"><span data-stu-id="91c8d-126">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="91c8d-127">Если `value` параметр `null`, то возвращаемая кодированная строка является `null`.</span><span class="sxs-lookup"><span data-stu-id="91c8d-127">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="91c8d-128">Если `value` представляет собой пустую строку, то возвращаемая кодированная строка является пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="91c8d-128">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91c8d-129">Кодируемая строка.</span><span class="sxs-lookup"><span data-stu-id="91c8d-129">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="91c8d-130">Выходной поток <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-130">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="91c8d-131">Преобразует строку в строку в кодировке HTML и возвращает выходные данные в виде потока выходных данных <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-131">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c8d-132">Если такие символы, как пробелы и знаки препинания передаются в поток HTTP, они могут быть неправильно на принимающей стороне.</span><span class="sxs-lookup"><span data-stu-id="91c8d-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="91c8d-133">Кодировка HTML преобразует символы, которые не разрешены в формате HTML в эквивалентные сущности знаков. Декодирование HTML изменяет соответствующую кодировку.</span><span class="sxs-lookup"><span data-stu-id="91c8d-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="91c8d-134">Например, при его внедрении в блок текста, символы \< и >, кодируются как &lt; и &gt; для передачи по протоколу HTTP.</span><span class="sxs-lookup"><span data-stu-id="91c8d-134">For example, when embedded in a block of text, the characters \< and >, are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="91c8d-135">Параметр <paramref name="output" /> не может быть равен <see langword="null" />, если параметр <paramref name="value" /> не равен <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-135">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="91c8d-136">Строка в URL-кодировке, которую требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="91c8d-136">A URL-encoded string to decode.</span></span></param>
        <summary><span data-ttu-id="91c8d-137">Преобразует строку, закодированную для передачи в URL-адресе, в декодированную строку.</span><span class="sxs-lookup"><span data-stu-id="91c8d-137">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="91c8d-138">Возвращает <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-138">Returns <see cref="T:System.String" />.</span></span>  
  
 <span data-ttu-id="91c8d-139">Декодированная строка.</span><span class="sxs-lookup"><span data-stu-id="91c8d-139">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c8d-140">Если такие символы, как пробелы и знаки препинания передаются в поток HTTP, они могут быть неправильно на принимающей стороне.</span><span class="sxs-lookup"><span data-stu-id="91c8d-140">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="91c8d-141">Кодировка URL преобразует символы, которые не разрешены в URL-АДРЕСЕ в эквивалентные шестнадцатеричные escape-последовательности.</span><span class="sxs-lookup"><span data-stu-id="91c8d-141">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="91c8d-142"><xref:System.Net.WebUtility.UrlEncode%2A> Метод создает строку URL-адреса.</span><span class="sxs-lookup"><span data-stu-id="91c8d-142">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="91c8d-143">Шестнадцатеричные escape-последовательности декодирование URL заменяет соответствующие эквиваленты ASCII-символов.</span><span class="sxs-lookup"><span data-stu-id="91c8d-143">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="91c8d-144">Например, при его внедрении в блок текста в кодировке URL, escape-последовательность `%3c` и `%3e` декодировать в символы `<` и `>`.</span><span class="sxs-lookup"><span data-stu-id="91c8d-144">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="91c8d-145">Закодированный как URL-адрес массив <see cref="T:System.Byte" />, который требуется декодировать.</span><span class="sxs-lookup"><span data-stu-id="91c8d-145">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="91c8d-146">Смещение в байтах от начала декодируемого массива <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-146">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="count"><span data-ttu-id="91c8d-147">Число в байтах для декодирования из массива <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-147">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="91c8d-148">Преобразует закодированный массив байтов для передачи в URL-адресе в декодированный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="91c8d-148">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span></span></summary>
        <returns><span data-ttu-id="91c8d-149">Возвращает <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-149">Returns <see cref="T:System.Byte" />.</span></span>  
  
 <span data-ttu-id="91c8d-150">Декодированный массив <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-150">A decoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c8d-151">Если такие символы, как пробелы и знаки препинания передаются в поток HTTP, они могут быть неправильно на принимающей стороне.</span><span class="sxs-lookup"><span data-stu-id="91c8d-151">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="91c8d-152">Кодировка URL преобразует символы, которые не разрешены в URL-АДРЕСЕ в эквивалентные шестнадцатеричные escape-последовательности.</span><span class="sxs-lookup"><span data-stu-id="91c8d-152">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="91c8d-153"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A> Метод создает массив байтов в кодировке URL-адрес.</span><span class="sxs-lookup"><span data-stu-id="91c8d-153">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="91c8d-154">Шестнадцатеричные escape-последовательности декодирование URL заменяет соответствующие эквиваленты ASCII-символов.</span><span class="sxs-lookup"><span data-stu-id="91c8d-154">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="91c8d-155">Например, при его внедрении в блок текста в кодировке URL, escape-последовательность `%3c` и `%3e` декодировать в символы `<` и `>`.</span><span class="sxs-lookup"><span data-stu-id="91c8d-155">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91c8d-156">Текст для преобразования в кодировку URL.</span><span class="sxs-lookup"><span data-stu-id="91c8d-156">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="91c8d-157">Преобразует текстовую строку в строку в URL-кодировке.</span><span class="sxs-lookup"><span data-stu-id="91c8d-157">Converts a text string into a URL-encoded string.</span></span></summary>
        <returns><span data-ttu-id="91c8d-158">Возвращает <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-158">Returns <see cref="T:System.String" />.</span></span>  
  
 <span data-ttu-id="91c8d-159">Строка в URL-кодировке.</span><span class="sxs-lookup"><span data-stu-id="91c8d-159">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c8d-160">Если такие символы, как пробелы и знаки препинания передаются в поток HTTP, они могут быть неправильно на принимающей стороне.</span><span class="sxs-lookup"><span data-stu-id="91c8d-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="91c8d-161">Кодировка URL заменяет символы, которые не разрешены в URL-АДРЕСЕ с эквивалентные сущности знаков, состоящий из шестнадцатеричные escape-последовательности.</span><span class="sxs-lookup"><span data-stu-id="91c8d-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="91c8d-162">Преобразованная строка должен соответствовать формату UTF-8.</span><span class="sxs-lookup"><span data-stu-id="91c8d-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="91c8d-163">Кодировка URL заменяет все коды символов, за исключением буквы, цифры и следующие знаки пунктуации:</span><span class="sxs-lookup"><span data-stu-id="91c8d-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="91c8d-164">`-` (знак «минус»)</span><span class="sxs-lookup"><span data-stu-id="91c8d-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="91c8d-165">`_` (символ подчеркивания)</span><span class="sxs-lookup"><span data-stu-id="91c8d-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="91c8d-166">`.` (точка)</span><span class="sxs-lookup"><span data-stu-id="91c8d-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="91c8d-167">`!` (восклицательный знак)</span><span class="sxs-lookup"><span data-stu-id="91c8d-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="91c8d-168">\* (звездочка)</span><span class="sxs-lookup"><span data-stu-id="91c8d-168">\* (asterisk)</span></span>  
  
-   <span data-ttu-id="91c8d-169">`(` и `)` (открывающую и закрывающую скобки)</span><span class="sxs-lookup"><span data-stu-id="91c8d-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="91c8d-170">Например, при его внедрении в блок текста, передаваемого в URL-АДРЕСЕ, символы `<` и `>` кодируются как `%3c` и `%3e`.</span><span class="sxs-lookup"><span data-stu-id="91c8d-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="91c8d-171"><xref:System.Net.WebUtility.UrlDecode%2A> Метод изменяет соответствующую кодировку.</span><span class="sxs-lookup"><span data-stu-id="91c8d-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="91c8d-172">Массив <see cref="T:System.Byte" /> для преобразования в URL-кодировку.</span><span class="sxs-lookup"><span data-stu-id="91c8d-172">The <see cref="T:System.Byte" /> array to URL-encode.</span></span></param>
        <param name="offset"><span data-ttu-id="91c8d-173">Смещение в байтах от начала массива <see cref="T:System.Byte" /> для кодирования.</span><span class="sxs-lookup"><span data-stu-id="91c8d-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span></span></param>
        <param name="count"><span data-ttu-id="91c8d-174">Число в байтах для кодирования из массива <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="91c8d-175">Преобразует массив байтов в массив байтов в URL-кодировке.</span><span class="sxs-lookup"><span data-stu-id="91c8d-175">Converts a byte array into a URL-encoded byte array.</span></span></summary>
        <returns><span data-ttu-id="91c8d-176">Возвращает <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-176">Returns <see cref="T:System.Byte" />.</span></span>  
  
 <span data-ttu-id="91c8d-177">Закодированный массив <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="91c8d-177">An encoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91c8d-178">Если такие символы, как пробелы и знаки препинания передаются в поток HTTP, они могут быть неправильно на принимающей стороне.</span><span class="sxs-lookup"><span data-stu-id="91c8d-178">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="91c8d-179">Кодировка URL заменяет символы, которые не разрешены в URL-АДРЕСЕ с эквивалентные сущности знаков, состоящий из шестнадцатеричные escape-последовательности.</span><span class="sxs-lookup"><span data-stu-id="91c8d-179">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="91c8d-180">Преобразованная строка должен соответствовать формату UTF-8.</span><span class="sxs-lookup"><span data-stu-id="91c8d-180">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="91c8d-181">Кодировка URL заменяет все коды символов, за исключением буквы, цифры и следующие знаки пунктуации:</span><span class="sxs-lookup"><span data-stu-id="91c8d-181">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="91c8d-182">`-` (знак «минус»)</span><span class="sxs-lookup"><span data-stu-id="91c8d-182">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="91c8d-183">`_` (символ подчеркивания)</span><span class="sxs-lookup"><span data-stu-id="91c8d-183">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="91c8d-184">`.` (точка)</span><span class="sxs-lookup"><span data-stu-id="91c8d-184">`.` (period)</span></span>  
  
-   <span data-ttu-id="91c8d-185">`!` (восклицательный знак)</span><span class="sxs-lookup"><span data-stu-id="91c8d-185">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="91c8d-186">"\*" (звездочка)</span><span class="sxs-lookup"><span data-stu-id="91c8d-186">'\*' (asterisk)</span></span>  
  
-   <span data-ttu-id="91c8d-187">`'` (одинарная кавычка)</span><span class="sxs-lookup"><span data-stu-id="91c8d-187">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="91c8d-188">`(` и `)` (открывающую и закрывающую скобки)</span><span class="sxs-lookup"><span data-stu-id="91c8d-188">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="91c8d-189">Например, при его внедрении в блок текста, передаваемого в URL-АДРЕСЕ, символы `<` и `>` кодируются как `%3c` и `%3e`.</span><span class="sxs-lookup"><span data-stu-id="91c8d-189">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="91c8d-190"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A> Метод изменяет соответствующую кодировку.</span><span class="sxs-lookup"><span data-stu-id="91c8d-190">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>