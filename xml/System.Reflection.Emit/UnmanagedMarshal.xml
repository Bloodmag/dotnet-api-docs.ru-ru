<Type Name="UnmanagedMarshal" FullName="System.Reflection.Emit.UnmanagedMarshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0cc65dc705ad772006fc1ad150ace04e6adfb8e1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36547176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UnmanagedMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.UnmanagedMarshal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnmanagedMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMarshal sealed" />
  <TypeSignature Language="F#" Value="type UnmanagedMarshal = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f21df-101">Представляет класс, описывающий способ маршалинга поля из управляемого в неуправляемый код.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f21df-101">Represents the class that describes how to marshal a field from managed to unmanaged code.</span>
      </span>
      <span data-ttu-id="f21df-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f21df-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f21df-103">В примере кода показан обходной путь для этого устаревшего типа.</span><span class="sxs-lookup"><span data-stu-id="f21df-103">The code example shows the workaround for this obsolete type.</span></span>  
  
 <span data-ttu-id="f21df-104">Маршалинг — это процесс упаковки и распаковки параметров, поэтому может возникнуть удаленных вызовов процедур.</span><span class="sxs-lookup"><span data-stu-id="f21df-104">Marshaling is the process of packaging and unpackaging parameters so remote procedure calls can occur.</span></span> <span data-ttu-id="f21df-105">Во время маршалинга поле может претерпеть преобразование формата, когда формат управляемого типа отличается от формата соответствующего неуправляемого типа.</span><span class="sxs-lookup"><span data-stu-id="f21df-105">During marshaling, a field might undergo a format conversion when the format of the managed type is different from the format of the corresponding unmanaged type.</span></span> <span data-ttu-id="f21df-106">Например, может потребоваться маршалировать `String` тип как неуправляемый тип BSTR.</span><span class="sxs-lookup"><span data-stu-id="f21df-106">For example, you might want to marshal a `String` type as an unmanaged BSTR.</span></span> <span data-ttu-id="f21df-107">Некоторые преобразования формата, автоматически обрабатываются средой выполнения.</span><span class="sxs-lookup"><span data-stu-id="f21df-107">Some format conversions are handled automatically by the runtime.</span></span> <span data-ttu-id="f21df-108">Чтобы переопределить поведение по умолчанию, необходимо использовать `UnmanagedMarshal` класса, чтобы определить преобразование формата.</span><span class="sxs-lookup"><span data-stu-id="f21df-108">To override the default behavior, you must use the `UnmanagedMarshal` class to define the format conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f21df-109">В следующем примере кода показан код замены для устаревших <xref:System.Reflection.Emit.UnmanagedMarshal> типа.</span><span class="sxs-lookup"><span data-stu-id="f21df-109">The following code example shows replacement code for the obsolete <xref:System.Reflection.Emit.UnmanagedMarshal> type.</span></span> <span data-ttu-id="f21df-110">В этом примере выпускается одного модуля сборки, с именем `EmitMarshalAs.dll`, содержащая тип с именем `Sample`.</span><span class="sxs-lookup"><span data-stu-id="f21df-110">The example emits a single-module assembly named `EmitMarshalAs.dll`, containing a type named `Sample`.</span></span> <span data-ttu-id="f21df-111">Тип имеет метод с именем `Test`, с одним параметром типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="f21df-111">The type has a method named `Test`, with one parameter of type <xref:System.String>.</span></span> <span data-ttu-id="f21df-112">В примере кода показано применение <xref:System.Runtime.InteropServices.MarshalAsAttribute> с <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> параметру.</span><span class="sxs-lookup"><span data-stu-id="f21df-112">The code example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> with <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> to the parameter.</span></span>  
  
 <span data-ttu-id="f21df-113">Можно использовать [Ildasm.exe (дизассемблер IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) для изучения выпущенную сборку и обратите внимание, что параметр помечен `marshal(bstr)`.</span><span class="sxs-lookup"><span data-stu-id="f21df-113">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the emitted assembly and observe that the parameter is marked `marshal(bstr)`.</span></span>  
  
 [!code-cpp[UnmanagedMarshalObsolete#1](~/samples/snippets/cpp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cpp/source.cpp#1)]
 [!code-csharp[UnmanagedMarshalObsolete#1](~/samples/snippets/csharp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cs/source.cs#1)]
 [!code-vb[UnmanagedMarshalObsolete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UnmanagedMarshalObsolete/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
    <altmember cref="T:System.Guid" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType BaseType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f21df-114">Получает неуправляемый базовый тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-114">Gets an unmanaged base type.</span>
          </span>
          <span data-ttu-id="f21df-115">Это свойство доступно только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-115">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f21df-116">Объект <see langword="UnmanagedType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-116">An <see langword="UnmanagedType" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f21df-117">Неуправляемый тип — не <see langword="LPArray" /> или <see langword="SafeArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-117">The unmanaged type is not an <see langword="LPArray" /> or a <see langword="SafeArray" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValArray(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValArray (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValArray(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValArray : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValArray elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">
          <span data-ttu-id="f21df-118">Число элементов в массиве заданной длины.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-118">The number of elements in the fixed-length array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f21df-119">Задает массив (ByValArray) заданной длины для маршалинга в неуправляемый код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-119">Specifies a fixed-length array (ByValArray) to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f21df-120">Объект <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-120">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f21df-121">`DefineByValArray` Метод не является собственной простой упаковкой.</span><span class="sxs-lookup"><span data-stu-id="f21df-121">The `DefineByValArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="f21df-122">Только конструкции неуправляемого маршалинга могут быть созданы с использованием этих статических конструкторов.</span><span class="sxs-lookup"><span data-stu-id="f21df-122">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="f21df-123">Маршалинг массива является более сложным процессом, чем маршалинг целочисленного параметра.</span><span class="sxs-lookup"><span data-stu-id="f21df-123">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="f21df-124">Элементы массива копируются в определенном порядке, чтобы другая сторона может в точности восстановить массив.</span><span class="sxs-lookup"><span data-stu-id="f21df-124">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f21df-125">Аргумент не принадлежит к простому присущему данному объекту типу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-125">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValTStr">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValTStr(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValTStr (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValTStr(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValTStr : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">
          <span data-ttu-id="f21df-126">Число элементов в фиксированном буфере массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-126">The number of elements in the fixed array buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f21df-127">Задает строку в фиксированном буфере массива (ByValTStr) для маршалинга в неуправляемый код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-127">Specifies a string in a fixed array buffer (ByValTStr) to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f21df-128">Объект <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-128">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f21df-129">`DefineByValStr` Метод не является собственной простой упаковкой.</span><span class="sxs-lookup"><span data-stu-id="f21df-129">The `DefineByValStr` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="f21df-130">Только конструкции неуправляемого маршалинга могут быть созданы с использованием этих статических конструкторов.</span><span class="sxs-lookup"><span data-stu-id="f21df-130">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="f21df-131">Маршалинг массива является более сложным процессом, чем маршалинг целочисленного параметра.</span><span class="sxs-lookup"><span data-stu-id="f21df-131">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="f21df-132">Элементы массива копируются в определенном порядке, чтобы другая сторона может в точности восстановить массив.</span><span class="sxs-lookup"><span data-stu-id="f21df-132">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f21df-133">Аргумент не принадлежит к простому присущему данному объекту типу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-133">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineLPArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineLPArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineLPArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineLPArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineLPArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineLPArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">
          <span data-ttu-id="f21df-134">Неуправляемый тип для маршалинга массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-134">The unmanaged type to which to marshal the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f21df-135">Задает <see langword="LPArray" /> для маршалинга в неуправляемый код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-135">Specifies an <see langword="LPArray" /> to marshal to unmanaged code.</span>
          </span>
          <span data-ttu-id="f21df-136">Длина <see langword="LPArray" /> определяется во время выполнения в зависимости от размера реального массива, маршалинг которого выполняется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-136">The length of an <see langword="LPArray" /> is determined at runtime by the size of the actual marshaled array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f21df-137">Объект <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-137">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f21df-138">`DefineLPArray` Метод не является собственной простой упаковкой.</span><span class="sxs-lookup"><span data-stu-id="f21df-138">The `DefineLPArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="f21df-139">Только конструкции неуправляемого маршалинга могут быть созданы с использованием этих статических конструкторов.</span><span class="sxs-lookup"><span data-stu-id="f21df-139">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="f21df-140">Маршалинг массива является более сложным процессом, чем маршалинг целочисленного параметра.</span><span class="sxs-lookup"><span data-stu-id="f21df-140">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="f21df-141">Элементы массива копируются в определенном порядке, чтобы другая сторона может в точности восстановить массив.</span><span class="sxs-lookup"><span data-stu-id="f21df-141">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f21df-142">Аргумент не принадлежит к простому присущему данному объекту типу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-142">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineSafeArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineSafeArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineSafeArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineSafeArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineSafeArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">
          <span data-ttu-id="f21df-143">Базовый тип или <see langword="UnmanagedType" /> каждого элемента массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-143">The base type or the <see langword="UnmanagedType" /> of each element of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f21df-144">Задает <see langword="SafeArray" /> для маршалинга в неуправляемый код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-144">Specifies a <see langword="SafeArray" /> to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f21df-145">Объект <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-145">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f21df-146">`DefineSafeArray` Метод не является собственной простой упаковкой.</span><span class="sxs-lookup"><span data-stu-id="f21df-146">The `DefineSafeArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="f21df-147">Только конструкции неуправляемого маршалинга могут быть созданы с использованием этих статических конструкторов.</span><span class="sxs-lookup"><span data-stu-id="f21df-147">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="f21df-148">Маршалинг массива является более сложным процессом, чем маршалинг целочисленного параметра.</span><span class="sxs-lookup"><span data-stu-id="f21df-148">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="f21df-149">Элементы массива копируются в определенном порядке, чтобы другая сторона может в точности восстановить массив.</span><span class="sxs-lookup"><span data-stu-id="f21df-149">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f21df-150">Аргумент не принадлежит к простому присущему данному объекту типу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-150">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedMarshal">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal(valuetype System.Runtime.InteropServices.UnmanagedType unmanagedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineUnmanagedMarshal(System::Runtime::InteropServices::UnmanagedType unmanagedType);" />
      <MemberSignature Language="F#" Value="static member DefineUnmanagedMarshal : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal unmanagedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="unmanagedType">
          <span data-ttu-id="f21df-151">Неуправляемый тип, в который следует упаковать и передать данный тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-151">The unmanaged type to which the type is to be marshaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f21df-152">Указывает заданный тип, для которого необходимо упаковать и передать в неуправляемый код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-152">Specifies a given type that is to be marshaled to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f21df-153">Объект <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-153">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f21df-154"><xref:System.Runtime.InteropServices.UnmanagedType> Переданной в этот метод должен быть собственный простой тип.</span><span class="sxs-lookup"><span data-stu-id="f21df-154">The <xref:System.Runtime.InteropServices.UnmanagedType> passed to this method must be a simple native type.</span></span> <span data-ttu-id="f21df-155">Может использоваться ни один из следующих значений: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, или <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f21df-155">None of the following values may be used: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f21df-156">Только конструкции неуправляемого маршалинга могут быть созданы с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="f21df-156">Only unmanaged marshal constructs can be made using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f21df-157">Аргумент не принадлежит к простому присущему данному объекту типу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-157">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public int ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementCount" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementCount : int" Usage="System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f21df-158">Получает номер элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-158">Gets a number element.</span>
          </span>
          <span data-ttu-id="f21df-159">Это свойство доступно только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-159">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f21df-160">Целое число, показывающее счетчик элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-160">An integer indicating the element count.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f21df-161">Отсутствует `ElementCount` только при наличии `NativeTypeFixedArray`.</span><span class="sxs-lookup"><span data-stu-id="f21df-161">There is an `ElementCount` only if there is a `NativeTypeFixedArray`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f21df-162">Аргумент не является неуправляемым счетчиком элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-162">The argument is not an unmanaged element count.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType GetUnmanagedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetUnmanagedType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType GetUnmanagedType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.GetUnmanagedType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f21df-163">Указывает неуправляемый тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-163">Indicates an unmanaged type.</span>
          </span>
          <span data-ttu-id="f21df-164">Это свойство доступно только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-164">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f21df-165">Объект <see cref="T:System.Runtime.InteropServices.UnmanagedType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-165">An <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f21df-166">`GetUnmanagedType` Свойство является функцией доступа собственный тип.</span><span class="sxs-lookup"><span data-stu-id="f21df-166">The `GetUnmanagedType` property is an accessor function for the native type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="IIDGuid">
      <MemberSignature Language="C#" Value="public Guid IIDGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid IIDGuid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IIDGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid IIDGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.IIDGuid : Guid" Usage="System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f21df-167">Получает идентификатор GUID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-167">Gets a GUID.</span>
          </span>
          <span data-ttu-id="f21df-168">Это свойство доступно только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-168">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f21df-169">Объект <see cref="T:System.Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-169">A <see cref="T:System.Guid" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f21df-170">Это свойство всегда возвращает значение Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="f21df-170">This property always returns Guid.Empty.</span></span> <span data-ttu-id="f21df-171">Это свойство может быть удалена в будущих выпусках.</span><span class="sxs-lookup"><span data-stu-id="f21df-171">This property might be removed in a future release.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f21df-172">Аргумент не является пользовательским кодом маршалинга.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f21df-172">The argument is not a custom marshaler.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
  </Members>
</Type>