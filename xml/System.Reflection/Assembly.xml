<Type Name="Assembly" FullName="System.Reflection.Assembly">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a4840a33068a66acda3c696b46a96a0e7458cfc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37641811" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Assembly : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._Assembly, System.Runtime.Serialization.ISerializable, System.Security.IEvidenceFactory" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit Assembly extends System.Object implements class System.Reflection.ICustomAttributeProvider, class System.Runtime.InteropServices._Assembly, class System.Runtime.Serialization.ISerializable, class System.Security.IEvidenceFactory" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Assembly" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Assembly&#xA;Implements _Assembly, ICustomAttributeProvider, IEvidenceFactory, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Assembly abstract : System::Reflection::ICustomAttributeProvider, System::Runtime::InteropServices::_Assembly, System::Runtime::Serialization::ISerializable, System::Security::IEvidenceFactory" />
  <TypeSignature Language="F#" Value="type Assembly = class&#xA;    interface ICustomAttributeProvider&#xA;    interface _Assembly&#xA;    interface IEvidenceFactory&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.ICustomAttributeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Assembly</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IEvidenceFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Assembly))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="328af-101">Представляет сборку, которая является модулем с возможностью многократного использования, поддержкой версий и встроенным механизмом описания общеязыковой исполняющей среды.</span>
      <span class="sxs-lookup">
        <span data-stu-id="328af-101">Represents an assembly, which is a reusable, versionable, and self-describing building block of a common language runtime application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-102">Используйте <xref:System.Reflection.Assembly> класс для загрузки сборок, для просмотра метаданных и составные части сборки, для обнаружения типов, содержащихся в сборках и для создания экземпляров этих типов.</span><span class="sxs-lookup"><span data-stu-id="328af-102">Use the <xref:System.Reflection.Assembly> class to load assemblies, to explore the metadata and constituent parts of assemblies, to discover the types contained in assemblies, and to create instances of those types.</span></span>  
  
 <span data-ttu-id="328af-103">Чтобы получить массив <xref:System.Reflection.Assembly> объектов, представляющих сборки, в настоящее время загружены в домен приложения (например, домене приложения по умолчанию простого проекта), используйте <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-103">To get an array of <xref:System.Reflection.Assembly> objects representing the assemblies currently loaded into an application domain (for example, the default application domain of a simple project), use the <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="328af-104">Для загрузки сборок динамически, <xref:System.Reflection.Assembly> класс предоставляет следующие статические методы (`Shared` методы в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="328af-104">To load assemblies dynamically, the <xref:System.Reflection.Assembly> class provides the following static methods (`Shared` methods in Visual Basic).</span></span> <span data-ttu-id="328af-105">Сборки загружаются в домен приложения, где выполняется операция загрузки.</span><span class="sxs-lookup"><span data-stu-id="328af-105">Assemblies are loaded into the application domain where the load operation occurs.</span></span>  
  
-   <span data-ttu-id="328af-106">Для загрузки сборок рекомендуется использовать <xref:System.AppDomain.Load%2A> метод, который идентифицирует сборку, который будет загружен по его отображаемому имени (например, «System.Windows.Forms, Version = 2.0.0.0, язык и региональные параметры = neutral, PublicKeyToken = b77a5c561934e089»).</span><span class="sxs-lookup"><span data-stu-id="328af-106">The recommended way to load assemblies is to use the <xref:System.AppDomain.Load%2A> method, which identifies the assembly to be loaded by its display name (for example, "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089").</span></span> <span data-ttu-id="328af-107">Поиск сборки следует правилам, описанные в [Обнаружение сборок в среде выполнения](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span><span class="sxs-lookup"><span data-stu-id="328af-107">The search for the assembly follows the rules described in [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span>  
  
-   <span data-ttu-id="328af-108"><xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> И <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> методы позволяют загрузить сборку для отражения, но не для выполнения.</span><span class="sxs-lookup"><span data-stu-id="328af-108">The <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods enable you to load an assembly for reflection, but not for execution.</span></span> <span data-ttu-id="328af-109">Например сборки, предназначенный для 64-разрядной платформы можно просмотреть код, выполняемый на 32-разрядной платформе.</span><span class="sxs-lookup"><span data-stu-id="328af-109">For example, an assembly that targets a 64-bit platform can be examined by code that is running on a 32-bit platform.</span></span>  
  
-   <span data-ttu-id="328af-110"><xref:System.Reflection.Assembly.LoadFile%2A> И <xref:System.Reflection.Assembly.LoadFrom%2A> предоставляются методы для редких сценариев, в которых сборки должен быть идентифицирован по пути.</span><span class="sxs-lookup"><span data-stu-id="328af-110">The <xref:System.Reflection.Assembly.LoadFile%2A> and <xref:System.Reflection.Assembly.LoadFrom%2A> methods are provided for rare scenarios in which an assembly must be identified by path.</span></span>  
  
 <span data-ttu-id="328af-111">Чтобы получить <xref:System.Reflection.Assembly> объект для текущей выполняемой сборке, используйте <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-111">To get an <xref:System.Reflection.Assembly> object for the currently executing assembly, use the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method.</span></span>  
  
 <span data-ttu-id="328af-112">Многие члены <xref:System.Reflection.Assembly> предоставляют сведения о сборке.</span><span class="sxs-lookup"><span data-stu-id="328af-112">Many members of the <xref:System.Reflection.Assembly> class provide information about an assembly.</span></span> <span data-ttu-id="328af-113">Пример:</span><span class="sxs-lookup"><span data-stu-id="328af-113">For example:</span></span>  
  
-   <span data-ttu-id="328af-114"><xref:System.Reflection.Assembly.GetName%2A> Возвращает метод <xref:System.Reflection.AssemblyName> объект, предоставляющий доступ к его частям отображаемое имя сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-114">The <xref:System.Reflection.Assembly.GetName%2A> method returns an <xref:System.Reflection.AssemblyName> object that provides access to the parts of the assembly display name.</span></span>  
  
-   <span data-ttu-id="328af-115"><xref:System.Reflection.Assembly.GetCustomAttributes%2A> Метод перечислены атрибуты, примененные к сборке.</span><span class="sxs-lookup"><span data-stu-id="328af-115">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method lists the attributes applied to the assembly.</span></span>  
  
-   <span data-ttu-id="328af-116"><xref:System.Reflection.Assembly.GetFiles%2A> Метод обеспечивает доступ к файлам в манифесте сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-116">The <xref:System.Reflection.Assembly.GetFiles%2A> method provides access to the files in the assembly manifest.</span></span>  
  
-   <span data-ttu-id="328af-117"><xref:System.Reflection.Assembly.GetManifestResourceNames%2A> Метод предоставляет имена ресурсов в манифесте сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-117">The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method provides the names of the resources in the assembly manifest.</span></span>  
  
 <span data-ttu-id="328af-118"><xref:System.Reflection.Assembly.GetTypes%2A> Метод перечисляет все типы в сборке.</span><span class="sxs-lookup"><span data-stu-id="328af-118">The <xref:System.Reflection.Assembly.GetTypes%2A> method lists all the types in the assembly.</span></span> <span data-ttu-id="328af-119"><xref:System.Reflection.Assembly.GetExportedTypes%2A> Метод перечислены типы, которые видны вызывающим объектам за пределами сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-119">The <xref:System.Reflection.Assembly.GetExportedTypes%2A> method lists the types that are visible to callers outside the assembly.</span></span> <span data-ttu-id="328af-120"><xref:System.Reflection.Assembly.GetType%2A> Метод может использоваться для поиска для определенного типа в сборке.</span><span class="sxs-lookup"><span data-stu-id="328af-120">The <xref:System.Reflection.Assembly.GetType%2A> method can be used to search for a particular type in the assembly.</span></span> <span data-ttu-id="328af-121"><xref:System.Reflection.Assembly.CreateInstance%2A> Метод может использоваться для поиска и создания экземпляров типов в сборке.</span><span class="sxs-lookup"><span data-stu-id="328af-121">The <xref:System.Reflection.Assembly.CreateInstance%2A> method can be used to search for and create instances of types in the assembly.</span></span>  
  
 <span data-ttu-id="328af-122">Дополнительные сведения о сборках см. в разделе «Домены и сборки приложения» в [домены приложений](~/docs/framework/app-domains/application-domains.md) раздела.</span><span class="sxs-lookup"><span data-stu-id="328af-122">For more information on assemblies, see the "Application Domains and Assemblies" section in the [Application Domains](~/docs/framework/app-domains/application-domains.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-123">В следующем примере кода показано, как получение текущей выполняемой сборке, создание экземпляра типа, содержащегося в этой сборке и вызвать один из методов типа с поздним связыванием.</span><span class="sxs-lookup"><span data-stu-id="328af-123">The following code example shows how to obtain the currently executing assembly, create an instance of a type contained in that assembly, and invoke one of the type's methods with late binding.</span></span> <span data-ttu-id="328af-124">Для этой цели в примере кода определяется класс с именем `Example`, включающий метод `SampleMethod`.</span><span class="sxs-lookup"><span data-stu-id="328af-124">For this purpose, the code example defines a class named `Example`, with a method named `SampleMethod`.</span></span> <span data-ttu-id="328af-125">Конструктор класса принимает целое число, который используется для вычисления возвращаемое значение метода.</span><span class="sxs-lookup"><span data-stu-id="328af-125">The constructor of the class accepts an integer, which is used to compute the return value of the method.</span></span>  
  
 <span data-ttu-id="328af-126">В примере также показано использование <xref:System.Reflection.Assembly.GetName%2A> метод, чтобы получить <xref:System.Reflection.AssemblyName> объект, который может использоваться для синтаксического анализа полное имя сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-126">The code example also demonstrates the use of the <xref:System.Reflection.Assembly.GetName%2A> method to obtain an <xref:System.Reflection.AssemblyName> object that can be used to parse the full name of the assembly.</span></span> <span data-ttu-id="328af-127">В примере отображается номер версии сборки, <xref:System.Reflection.Assembly.CodeBase%2A> свойство и <xref:System.Reflection.Assembly.EntryPoint%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="328af-127">The example displays the version number of the assembly, the <xref:System.Reflection.Assembly.CodeBase%2A> property, and the <xref:System.Reflection.Assembly.EntryPoint%2A> property.</span></span>  
  
 [!code-cpp[AssemblyClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyClass/cpp/source.cpp#1)]
 [!code-csharp[AssemblyClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyClass/cs/source.cs#1)]
 [!code-vb[AssemblyClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyClass/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="328af-128">для полного доверия для разработчиков производных классов.</span>
      <span class="sxs-lookup">
        <span data-stu-id="328af-128">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="328af-129">Этот класс не может наследоваться кодом с частичным доверием.</span>
      <span class="sxs-lookup">
        <span data-stu-id="328af-129">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="328af-130">Данный тип потокобезопасен.</span>
      <span class="sxs-lookup">
        <span data-stu-id="328af-130">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Reflection.AssemblyName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Assembly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Assembly();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-131">Инициализирует новый экземпляр класса <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-131">Initializes a new instance of the <see cref="T:System.Reflection.Assembly" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-132">Этот конструктор вызывается производными классами во время создания <xref:System.Reflection.Assembly> объектов.</span><span class="sxs-lookup"><span data-stu-id="328af-132">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.Assembly> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public virtual string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string" Usage="System.Reflection.Assembly.CodeBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.CodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-133">Получает первоначально заданное расположение сборки, например в объекте <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-133">Gets the location of the assembly as specified originally, for example, in an <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-134">Первоначально заданное расположение сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-134">The location of the assembly as specified originally.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-135">Чтобы получить абсолютный путь к загруженного файла, содержащего манифест, используйте <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> свойство вместо этого.</span><span class="sxs-lookup"><span data-stu-id="328af-135">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 <span data-ttu-id="328af-136">Если сборка была загружена как массив байтов, используя перегрузку <xref:System.Reflection.Assembly.Load%2A> метод, который принимает массив байтов, это свойство возвращает расположение объекта, вызывающего метод, а не расположение загруженной сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-136">If the assembly was loaded as a byte array, using an overload of the <xref:System.Reflection.Assembly.Load%2A> method that takes an array of bytes, this property returns the location of the caller of the method, not the location of the loaded assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-137">В следующем примере используется <xref:System.Reflection.Assembly.CodeBase%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="328af-137">The following example uses the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/codebase1.cpp#1)]
 [!code-csharp[System.Reflection.Assembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/codebase1.cs#1)]
 [!code-vb[System.Reflection.Assembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/codebase1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-138">для доступа к пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-138">for access to the path.</span>
          </span>
          <span data-ttu-id="328af-139">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-140">Находит тип в этой сборке и создает его экземпляр, используя абстрактный метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-140">Locates a type from this assembly and creates an instance of it using the system activator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string -&gt; obj&#xA;override this.CreateInstance : string -&gt; obj" Usage="assembly.CreateInstance typeName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="328af-141">
            <see cref="P:System.Type.FullName" /> искомого типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-141">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-142">С помощью поиска с учетом регистра находит заданный тип в этой сборке и создает его экземпляр, используя абстрактный метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-142">Locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-143">Экземпляр указанного типа, созданный с использованием конструктора по умолчанию; или <see langword="null" />, если <paramref name="typeName" /> не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-143">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="328af-144">Тип разрешается с использованием связывателя по умолчанию, не задавая языка и региональных параметров, а также атрибутов активации, при этом для объекта <see cref="T:System.Reflection.BindingFlags" /> задано значение <see langword="Public" /> или <see langword="Instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-144">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-145">Если среда CLR не удалось найти `typeName` в <xref:System.Reflection.Assembly> экземпляра, она возвращает `null` вместо выдачи исключения.</span><span class="sxs-lookup"><span data-stu-id="328af-145">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="328af-146">Это может произойти, когда:</span><span class="sxs-lookup"><span data-stu-id="328af-146">This might happen because:</span></span>  
  
-   <span data-ttu-id="328af-147">Вы не указали полное имя типа.</span><span class="sxs-lookup"><span data-stu-id="328af-147">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="328af-148">Вы указали полностью уточненное имя типа, но его вариант не совпадает по регистру типа <xref:System.Type.FullName%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="328af-148">You've specified the fully qualified type name, but its case doesn’t match the case of the type's <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="328af-149">Сравнение без учета регистра `typeName` с полным именем типа, вызовите <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> перегрузки и укажите `true` для `ignoreCase` аргумент.</span><span class="sxs-lookup"><span data-stu-id="328af-149">For a case-insensitive comparison of `typeName` with the type's full name, call the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specify `true` for the `ignoreCase` argument.</span></span>  
  
-   <span data-ttu-id="328af-150">Тип не существует в текущем <xref:System.Reflection.Assembly> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="328af-150">The type doesn’t exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-151">В следующем примере определяется `Person` класс и вызывает метод <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> метод для создания его экземпляра.</span><span class="sxs-lookup"><span data-stu-id="328af-151">The following example defines a `Person` class and calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance1.cs#1)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-152">Значение <paramref name="typeName" /> является пустой строкой ("") или строкой, начинающейся с нуль-символа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-152">
              <paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span>
          </span>
          <span data-ttu-id="328af-153">-или-  Текущая сборка была загружена в контекст только для отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-153">-or-  The current assembly was loaded into the reflection-only context.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-154">Свойство <paramref name="typeName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-154">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="328af-155">Соответствующий конструктор не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-155">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-156">Для <paramref name="typeName" /> требуется зависимая сборка, которую не удалось найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-156">
              <paramref name="typeName" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-157">Для <paramref name="typeName" /> требуется зависимая сборка, которая была найдена, но ее не удалось загрузить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-157">
              <paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-158">-или-  Текущая сборка была загружена в контекст только для отражения, а для <paramref name="typeName" /> требуется зависимая сборка, которая не была предварительно загружена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-158">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-159">Для <paramref name="typeName" /> требуется зависимая сборка, однако файл не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-159">
              <paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-160">-или-  Для <paramref name="typeName" /> требуется зависимая сборка, которая была скомпилирована для версии среды выполнения более поздней, чем текущая загруженная версия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-160">-or-  <paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="328af-161">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-161">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="328af-162">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-162">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool -&gt; obj&#xA;override this.CreateInstance : string * bool -&gt; obj" Usage="assembly.CreateInstance (typeName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="328af-163">
            <see cref="P:System.Type.FullName" /> искомого типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-163">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="328af-164">Значение <see langword="true" />, чтобы игнорировать регистр имени типа, в обратном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-164">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-165">При помощи необязательного поиска с учетом регистра находит заданный тип в этой сборке и создает его экземпляр, используя абстрактный метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-165">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-166">Экземпляр указанного типа, созданный с использованием конструктора по умолчанию; или <see langword="null" />, если <paramref name="typeName" /> не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-166">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="328af-167">Тип разрешается с использованием связывателя по умолчанию, не задавая языка и региональных параметров, а также атрибутов активации, при этом для объекта <see cref="T:System.Reflection.BindingFlags" /> задано значение <see langword="Public" /> или <see langword="Instance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-167">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-168">Если среда CLR не удалось найти `typeName` в <xref:System.Reflection.Assembly> экземпляра, она возвращает `null` вместо выдачи исключения.</span><span class="sxs-lookup"><span data-stu-id="328af-168">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="328af-169">Это может произойти, когда:</span><span class="sxs-lookup"><span data-stu-id="328af-169">This might happen because:</span></span>  
  
-   <span data-ttu-id="328af-170">Вы не указали полное имя типа.</span><span class="sxs-lookup"><span data-stu-id="328af-170">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="328af-171">Тип не существует в текущем <xref:System.Reflection.Assembly> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="328af-171">The type doesn’t exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-172">В следующем примере определяется `Person` класса.</span><span class="sxs-lookup"><span data-stu-id="328af-172">The following example defines a `Person` class.</span></span> <span data-ttu-id="328af-173">Затем он вызывает <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> метод для создания экземпляра, но поскольку регистр `typeName` аргумента не соответствует типу <xref:System.Type.FullName%2A> свойство, метод возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="328af-173">It then calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it, but because the casing of the `typeName` argument doesn’t match that of the type's <xref:System.Type.FullName%2A> property, the method returns `null`.</span></span> <span data-ttu-id="328af-174">Если в примере передается ту же строку, чтобы <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> перегрузки и указывает, что сравнение без учета регистра, `Person` класс найден и `Person` успешно создать экземпляр объекта.</span><span class="sxs-lookup"><span data-stu-id="328af-174">When the example passes the same string to the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specifies that the comparison should be case-insensitive, the `Person` class is found, and a `Person` object is successfully instantiated.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance2.cs#2)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-175">Значение <paramref name="typeName" /> является пустой строкой ("") или строкой, начинающейся с нуль-символа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-175">
              <paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span>
          </span>
          <span data-ttu-id="328af-176">-или-  Текущая сборка была загружена в контекст только для отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-176">-or-  The current assembly was loaded into the reflection-only context.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="328af-177">Соответствующий конструктор не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-177">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-178">Свойство <paramref name="typeName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-178">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-179">Для <paramref name="typeName" /> требуется зависимая сборка, которую не удается найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-179">
              <paramref name="typeName" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-180">Для <paramref name="typeName" /> требуется зависимая сборка, которая была найдена, но ее не удалось загрузить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-180">
              <paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-181">-или-  Текущая сборка была загружена в контекст только для отражения, а для <paramref name="typeName" /> требуется зависимая сборка, которая не была предварительно загружена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-181">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-182">Для <paramref name="typeName" /> требуется зависимая сборка, однако файл не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-182">
              <paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-183">-или-  Для <paramref name="typeName" /> требуется зависимая сборка, которая была скомпилирована для версии среды выполнения более поздней, чем текущая загруженная версия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-183">-or-  <paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="328af-184">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-184">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="328af-185">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-185">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj&#xA;override this.CreateInstance : string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="assembly.CreateInstance (typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="328af-186">
            <see cref="P:System.Type.FullName" /> искомого типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-186">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="328af-187">Значение <see langword="true" />, чтобы игнорировать регистр имени типа, в обратном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-187">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="328af-188">Битовая маска, влияющая на способ выполнения поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-188">A bitmask that affects the way in which the search is conducted.</span>
          </span>
          <span data-ttu-id="328af-189">Значение является сочетанием одноразрядных флагов из <see cref="T:System.Reflection.BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-189">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="328af-190">Объект, позволяющий осуществлять привязку, приведение типов аргументов, вызов элементов, а также поиск объектов <see langword="MemberInfo" /> с помощью отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-190">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span>
          </span>
          <span data-ttu-id="328af-191">Если указан <c>модуль привязки</c><see langword="null" />, используется модуль привязки по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-191">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="328af-192">Массив, содержащий аргументы, передаваемые конструктору.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-192">An array that contains the arguments to be passed to the constructor.</span>
          </span>
          <span data-ttu-id="328af-193">Этот массив аргументов должен по числу, порядку и типу аргументов соответствовать параметрам вызываемого конструктора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-193">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span>
          </span>
          <span data-ttu-id="328af-194">Если нужен конструктор по умолчанию, <c>args</c> должен быть пустым массивом или <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-194">If the default constructor is desired, <c>args</c> must be an empty array or <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="328af-195">Экземпляр объекта <see langword="CultureInfo" />, используемого для управления приведением типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-195">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="328af-196">Если значение этого объекта — <see langword="null" />, для текущего потока используется <see langword="CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-196">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="328af-197">(Например, необходимо преобразовывать объект <see langword="String" />, представляющий 1000, в значение <see langword="Double" />, поскольку при разных языках и региональных параметрах 1000 представляется по-разному.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-197">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="328af-198">Массив, состоящий из одного или нескольких атрибутов, которые могут участвовать в активации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-198">An array of one or more attributes that can participate in activation.</span>
          </span>
          <span data-ttu-id="328af-199">Обычно это массив, содержащий один объект <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />, определяющий URL-адрес, необходимый для активации удаленного объекта.  </span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-199">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span>
          </span>
          <span data-ttu-id="328af-200">Этот параметр связан с объектами, активируемыми клиентом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-200">This parameter is related to client-activated objects.</span>
          </span>
          <span data-ttu-id="328af-201">Активация клиентом — это устаревшая технология, которая сохраняется с целью обеспечения обратной совместимости; ее не рекомендуется использовать для разработки новых приложений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-201">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span>
          </span>
          <span data-ttu-id="328af-202">Сейчас в распределенных приложениях следует использовать Windows Communication Foundation. </span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-202">Distributed applications should instead use Windows Communication Foundation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-203">Находит в сборке указанный тип и создает его экземпляр с использованием системного активатора при помощи необязательного поиска с учетом регистра и с заданными аргументами, культурой, а также атрибутами привязки и активации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-203">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-204">Экземпляр указанного типа или <see langword="null" />, если <paramref name="typeName" /> не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-204">An instance of the specified type, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
          <span data-ttu-id="328af-205">Предоставленные аргументы используются для разрешения типа и привязки конструктора, который используется для создания экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-205">The supplied arguments are used to resolve the type, and to bind the constructor that is used to create the instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-206">Значение <paramref name="typeName" /> является пустой строкой ("") или строкой, начинающейся с нуль-символа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-206">
              <paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span>
          </span>
          <span data-ttu-id="328af-207">-или-  Текущая сборка была загружена в контекст только для отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-207">-or-  The current assembly was loaded into the reflection-only context.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-208">Свойство <paramref name="typeName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-208">
              <paramref name="typeName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="328af-209">Соответствующий конструктор не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-209">No matching constructor was found.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="328af-210">Непустой массив атрибутов активации передан в тип, который не является производным от <see cref="T:System.MarshalByRefObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-210">A non-empty activation attributes array is passed to a type that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-211">Для <paramref name="typeName" /> требуется зависимая сборка, которую не удалось найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-211">
              <paramref name="typeName" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-212">Для <paramref name="typeName" /> требуется зависимая сборка, которая была найдена, но ее не удалось загрузить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-212">
              <paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-213">-или-  Текущая сборка была загружена в контекст только для отражения, а для <paramref name="typeName" /> требуется зависимая сборка, которая не была предварительно загружена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-213">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-214">Для <paramref name="typeName" /> требуется зависимая сборка, однако файл не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-214">
              <paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-215">-или-  Для <paramref name="typeName" /> требуется зависимая сборка, которая была скомпилирована для версии среды выполнения более поздней, чем текущая загруженная версия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-215">-or-  <paramref name="typeName" /> requires a dependent assembly which that was compiled for a version of the runtime that is later than the currently loaded version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="328af-216">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-216">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="328af-217">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-217">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-218">для создания экземпляра делегата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-218">to create an instance of a delegate.</span>
          </span>
          <span data-ttu-id="328af-219">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-219">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateQualifiedName">
      <MemberSignature Language="C#" Value="public static string CreateQualifiedName (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateQualifiedName(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateQualifiedName (assemblyName As String, typeName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateQualifiedName(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateQualifiedName : string * string -&gt; string" Usage="System.Reflection.Assembly.CreateQualifiedName (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="328af-220">Отображаемое имя сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-220">The display name of an assembly.</span>
          </span>
        </param>
        <param name="typeName">
          <span data-ttu-id="328af-221">Полное имя типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-221">The full name of a type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-222">Создает имя типа, который определяется отображаемым именем его сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-222">Creates the name of a type qualified by the display name of its assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-223">Полное имя типа, дополненное отображаемым именем сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-223">The full name of the type qualified by the display name of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-224">Приведен формат возвращаемой строки.</span><span class="sxs-lookup"><span data-stu-id="328af-224">The format of the returned string is:</span></span>  
  
 <span data-ttu-id="328af-225">\<FullTypeName >, \<AssemblyDisplayName ></span><span class="sxs-lookup"><span data-stu-id="328af-225">\<FullTypeName>, \<AssemblyDisplayName></span></span>  
  
 <span data-ttu-id="328af-226">См. в разделе <xref:System.Reflection.AssemblyName> описание формата отображаемого имени сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-226">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 <span data-ttu-id="328af-227">В соответствии с изменениями в версиях среда CLR, используйте этот метод вместо создания полного имени самостоятельно.</span><span class="sxs-lookup"><span data-stu-id="328af-227">To accommodate changes in versions of the common language runtime, use this method rather than constructing the qualified name yourself.</span></span>  <span data-ttu-id="328af-228">Сведения о полных имен сборок, см. в разделе <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="328af-228">For information about qualified assembly names, see <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.CustomAttributeData&gt; CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ CustomAttributes { System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomAttributes : seq&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.Assembly.CustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-229">Получает коллекцию, содержащую пользовательские атрибуты этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-229">Gets a collection that contains this assembly's custom attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-230">Коллекция, содержащая пользовательские атрибуты этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-230">A collection that contains this assembly's custom attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinedTypes : seq&lt;System.Reflection.TypeInfo&gt;" Usage="System.Reflection.Assembly.DefinedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-231">Получает коллекцию типов, определенных в этой сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-231">Gets a collection of the types defined in this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-232">Коллекция типов, определенных в этой сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-232">A collection of the types defined in this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-233"><xref:System.Reflection.Assembly.DefinedTypes%2A> Свойства можно сравнить с <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> метода, за исключением случаев, <xref:System.Reflection.Assembly.DefinedTypes%2A> свойство возвращает коллекцию <xref:System.Reflection.TypeInfo> объектов и <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> метод возвращает массив <xref:System.Type> объектов.</span><span class="sxs-lookup"><span data-stu-id="328af-233">The <xref:System.Reflection.Assembly.DefinedTypes%2A> property is comparable to the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method, except that the <xref:System.Reflection.Assembly.DefinedTypes%2A> property returns a collection of <xref:System.Reflection.TypeInfo> objects, and the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method returns an array of <xref:System.Type> objects.</span></span>  
  
 <span data-ttu-id="328af-234">Возвращаемый массив содержит вложенные типы.</span><span class="sxs-lookup"><span data-stu-id="328af-234">The returned array includes nested types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetTypes" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPoint : System.Reflection.MethodInfo" Usage="System.Reflection.Assembly.EntryPoint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EntryPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-235">Получает точку входа для этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-235">Gets the entry point of this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-236">Объект, представляющий точку входа этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-236">An object that represents the entry point of this assembly.</span>
          </span>
          <span data-ttu-id="328af-237">Если точка входа не найдена (например, сборка является DLL-библиотекой), возвращается значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-237">If no entry point is found (for example, the assembly is a DLL), <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="assembly.Equals o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="328af-238">Объект, сравниваемый с данным экземпляром.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-238">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-239">Определяет равенство сборки и заданного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-239">Determines whether this assembly and the specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-240">Значение <see langword="true" />, если значение параметра <paramref name="o" /> равно данному экземпляру; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-240">
              <see langword="true" /> if <paramref name="o" /> is equal to this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-241"><xref:System.Reflection.Assembly.Equals%2A> Метод выполняет проверку на равенство ссылок для определения ли текущий экземпляр и `o` равны.</span><span class="sxs-lookup"><span data-stu-id="328af-241">The <xref:System.Reflection.Assembly.Equals%2A> method performs a test for reference equality to determine whether the current instance and `o` are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public virtual string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapedCodeBase : string" Usage="System.Reflection.Assembly.EscapedCodeBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EscapedCodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-242">Получает универсальный код доступа (URI), предоставляющий базовый код, включая escape-символы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-242">Gets the URI, including escape characters, that represents the codebase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-243">Универсальный код доступа (URI) с escape-символами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-243">A URI with escape characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-244">для доступа к пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-244">for access to the path.</span>
          </span>
          <span data-ttu-id="328af-245">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-245">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System.Reflection.Assembly.Evidence" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Evidence</InterfaceMember>
        <InterfaceMember>P:System.Security.IEvidenceFactory.Evidence</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-246">Получает свидетельство для этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-246">Gets the evidence for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-247">Свидетельство для этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-247">The evidence for this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-248">Свидетельство — это набор сведений, используемых для принятия решений политики безопасности, например, сведений о разрешениях, которые могут быть предоставлены коду.</span><span class="sxs-lookup"><span data-stu-id="328af-248">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-249">на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-249">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-250">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-250">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="ExportedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; ExportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; ExportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ ExportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExportedTypes : seq&lt;Type&gt;" Usage="System.Reflection.Assembly.ExportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-251">Получает коллекцию открытых типов, определенных в этой сборке и видимых за ее пределами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-251">Gets a collection of the public types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-252">Коллекция открытых типов, определенных в этой сборке и видимых за ее пределами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-252">A collection of the public types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public virtual string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.Assembly.FullName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.FullName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-253">Получает отображаемое имя сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-253">Gets the display name of the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-254">Отображаемое имя сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-254">The display name of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-255">См. в разделе <xref:System.Reflection.AssemblyName> описание формата отображаемого имени сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-255">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-256">Написать собственный код для синтаксического анализа отображаемые имена не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="328af-256">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="328af-257">Вместо этого передайте имя, отображаемое <xref:System.Reflection.AssemblyName.%23ctor%2A> конструктор, который анализирует его и заполняет соответствующие поля нового <xref:System.Reflection.AssemblyName>.</span><span class="sxs-lookup"><span data-stu-id="328af-257">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="328af-258">В .NET Framework версии 2.0 архитектура процессора добавляется удостоверения сборки и может быть указан как часть строки имени сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-258">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="328af-259">Тем не менее, он не включен в строку, возвращаемую <xref:System.Reflection.Assembly.FullName%2A> свойство, по соображениям совместимости.</span><span class="sxs-lookup"><span data-stu-id="328af-259">However, it is not included in the string returned by the <xref:System.Reflection.Assembly.FullName%2A> property, for compatibility reasons.</span></span> <span data-ttu-id="328af-260">См. раздел <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="328af-260">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-261">В следующем примере извлекается отображаемое имя текущей выполняемой сборке и отображаемое имя сборки, содержащей <xref:System.Int32> тип (`int` в C# `Integer` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="328af-261">The following example retrieves the display name of the currently executing assembly, and the display name of the assembly that contains the <xref:System.Int32> type (`int` in C#, `Integer` in Visual Basic).</span></span>  
  
 [!code-cpp[Assembly.FullName#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.FullName/CPP/Example.cpp#1)]
 [!code-csharp[Assembly.FullName#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.FullName/CS/Example.cs#1)]
 [!code-vb[Assembly.FullName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.FullName/VB/Example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetAssembly (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetAssembly(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetAssembly(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetAssembly(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetAssembly : Type -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetAssembly type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="328af-262">Объект, представляющий тип в сборке, которая будет возвращена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-262">An object representing a type in the assembly that will be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-263">Возвращает текущую загруженную сборку, в которой определен указанный тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-263">Gets the currently loaded assembly in which the specified type is defined.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-264">Сборка, в которой определен указанный тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-264">The assembly in which the specified type is defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-265">Вызов этого метода эквивалентен получение значения <xref:System.Type.Assembly?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="328af-265">Calling this method is equivalent to retrieving the value of the  <xref:System.Type.Assembly?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="328af-266">Тем не менее <xref:System.Type.Assembly?displayProperty=nameWithType> свойства, как правило, обеспечивает более высокую производительность.</span><span class="sxs-lookup"><span data-stu-id="328af-266">However, the <xref:System.Type.Assembly?displayProperty=nameWithType> property typically offers superior performance.</span></span>  
  
 <span data-ttu-id="328af-267">Чтобы вызвать этот метод, необходимо иметь <xref:System.Type> объект, который означает, что сборка, в котором определен класс уже должна быть загружена.</span><span class="sxs-lookup"><span data-stu-id="328af-267">In order to call this method, you must have a <xref:System.Type> object, which means that the assembly in which the class is defined must already be loaded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-268">В следующем примере извлекается сборки, содержащей <xref:System.Int32> введите и отображает его имя и местоположение файлов.</span><span class="sxs-lookup"><span data-stu-id="328af-268">The following example retrieves the assembly that contains the <xref:System.Int32> type and displays its name and file location.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/GetAssembly1.cpp#12)]
 [!code-csharp[System.Reflection.Assembly#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/GetAssembly1.cs#12)]
 [!code-vb[System.Reflection.Assembly#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/GetAssembly1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-269">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-269">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="328af-270">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-270">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="328af-271">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-271">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCallingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetCallingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetCallingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCallingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCallingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetCallingAssembly();" />
      <MemberSignature Language="F#" Value="static member GetCallingAssembly : unit -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetCallingAssembly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-272">Возвращает объект <see cref="T:System.Reflection.Assembly" /> метода, вызвавшего текущий выполняемый метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-272">Returns the <see cref="T:System.Reflection.Assembly" /> of the method that invoked the currently executing method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-273">Объект <see langword="Assembly" /> метода, вызвавшего выполняющийся в текущий момент метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-273">The <see langword="Assembly" /> object of the method that invoked the currently executing method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-274">Если на метод, который вызывает <xref:System.Reflection.Assembly.GetCallingAssembly%2A> метод является развернуты для подстановки компилятор just-in-time (JIT), или если вызывающий раскрываются внутри, сборка возвращаемые <xref:System.Reflection.Assembly.GetCallingAssembly%2A> неожиданно могут отличаться.</span><span class="sxs-lookup"><span data-stu-id="328af-274">If the method that calls the <xref:System.Reflection.Assembly.GetCallingAssembly%2A> method is expanded inline by the just-in-time (JIT) compiler, or if its caller is expanded inline, the assembly that is returned by <xref:System.Reflection.Assembly.GetCallingAssembly%2A> may differ unexpectedly.</span></span> <span data-ttu-id="328af-275">Например рассмотрим следующие методы и сборки:</span><span class="sxs-lookup"><span data-stu-id="328af-275">For example, consider the following methods and assemblies:</span></span>  
  
-   <span data-ttu-id="328af-276">Метод `M1` в сборке `A1` вызовы <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-276">Method `M1` in assembly `A1` calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
-   <span data-ttu-id="328af-277">Метод `M2` в сборке `A2` вызовы `M1`.</span><span class="sxs-lookup"><span data-stu-id="328af-277">Method `M2` in assembly `A2` calls `M1`.</span></span>  
  
-   <span data-ttu-id="328af-278">Метод `M3` в сборке `A3` вызовы `M2`.</span><span class="sxs-lookup"><span data-stu-id="328af-278">Method `M3` in assembly `A3` calls `M2`.</span></span>  
  
 <span data-ttu-id="328af-279">Когда `M1` не является встроенной, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> возвращает `A2`.</span><span class="sxs-lookup"><span data-stu-id="328af-279">When `M1` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="328af-280">Когда `M1` встроена, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> возвращает `A3`.</span><span class="sxs-lookup"><span data-stu-id="328af-280">When `M1` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span> <span data-ttu-id="328af-281">Аналогичным образом, когда `M2` не является встроенной, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> возвращает `A2`.</span><span class="sxs-lookup"><span data-stu-id="328af-281">Similarly, when `M2` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="328af-282">Когда `M2` встроена, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> возвращает `A3`.</span><span class="sxs-lookup"><span data-stu-id="328af-282">When `M2` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span>  
  
 <span data-ttu-id="328af-283">Этот эффект также происходит при `M1` выполняется вызов с префиксом tail из `M2`, или когда `M2` выполняется вызов с префиксом tail из `M3`.</span><span class="sxs-lookup"><span data-stu-id="328af-283">This effect also occurs when `M1` executes as a tail call from `M2`, or when `M2` executes as a tail call from `M3`.</span></span> <span data-ttu-id="328af-284">Отказаться от JIT-компилятора из встраивания метод, который вызывает <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, путем применения <xref:System.Runtime.CompilerServices.MethodImplAttribute> атрибут с <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> флаг, но аналогичный механизм для предотвращения вызовов с префиксом tail.</span><span class="sxs-lookup"><span data-stu-id="328af-284">You can prevent the JIT compiler from inlining the method that calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, by applying the <xref:System.Runtime.CompilerServices.MethodImplAttribute> attribute with the <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> flag, but there is no similar mechanism for preventing tail calls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-285">В следующем примере возвращается вызывающей сборки текущего метода.</span><span class="sxs-lookup"><span data-stu-id="328af-285">The following example gets the calling assembly of the current method.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/getcallingassembly1.cpp#4)]
 [!code-csharp[System.Reflection.Assembly#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/getcallingassembly1.cs#4)]
 [!code-vb[System.Reflection.Assembly#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/getcallingassembly1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-286">Получает настраиваемые атрибуты для этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-286">Gets the custom attributes for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]&#xA;override this.GetCustomAttributes : bool -&gt; obj[]" Usage="assembly.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="328af-287">Данный аргумент не учитывается для объектов типа <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-287">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-288">Получает все настраиваемые атрибуты для этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-288">Gets all the custom attributes for this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-289">Массив, содержащий настраиваемые атрибуты для этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-289">An array that contains the custom attributes for this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-290">Этот метод реализует соответствующий <xref:System.Reflection.ICustomAttributeProvider> метод интерфейса.</span><span class="sxs-lookup"><span data-stu-id="328af-290">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="328af-291">Таким образом `inherit` параметр должен быть указан, несмотря на то, что он учитывается.</span><span class="sxs-lookup"><span data-stu-id="328af-291">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="328af-292">Псевдо-атрибут задает биты основных метаданных, которые должны быть установлены при наличии этого атрибута.</span><span class="sxs-lookup"><span data-stu-id="328af-292">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="328af-293">В отличие от пользовательского атрибута, который расширяет метаданные для типа и сохраняется вместе с типом, псевдо-атрибут изменяет метаданные для типа, а затем удаляются.</span><span class="sxs-lookup"><span data-stu-id="328af-293">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="328af-294">Некоторые из получившиеся биты, нельзя получить с помощью существующих API отражения.</span><span class="sxs-lookup"><span data-stu-id="328af-294">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="328af-295">В следующей таблице перечислены различные псевдо-атрибуты и методы доступа для битов, доступных при отражении.</span><span class="sxs-lookup"><span data-stu-id="328af-295">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="328af-296">Псевдо-атрибут</span><span class="sxs-lookup"><span data-stu-id="328af-296">Pseudo-Attribute</span></span>|<span data-ttu-id="328af-297">Биты метаданных</span><span class="sxs-lookup"><span data-stu-id="328af-297">Metadata Bits</span></span>|<span data-ttu-id="328af-298">Метод доступа к отражению</span><span class="sxs-lookup"><span data-stu-id="328af-298">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="328af-299">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-299">DllImportAttribute</span></span>|<span data-ttu-id="328af-300">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="328af-300">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="328af-301">Имя библиотеки DLL</span><span class="sxs-lookup"><span data-stu-id="328af-301">DLL name</span></span>|<span data-ttu-id="328af-302">Нет метода доступа для PInvokeMap для атрибутов обычного метода/глобального метода.</span><span class="sxs-lookup"><span data-stu-id="328af-302">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="328af-303">Нет метода доступа для имени библиотеки DLL.</span><span class="sxs-lookup"><span data-stu-id="328af-303">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="328af-304">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-304">GuidAttribute</span></span>|<span data-ttu-id="328af-305">Хранятся в виде фактических пользовательских атрибутов.</span><span class="sxs-lookup"><span data-stu-id="328af-305">Stored as a real custom attribute.</span></span>|<span data-ttu-id="328af-306">Доступен как реальный пользовательский атрибут.</span><span class="sxs-lookup"><span data-stu-id="328af-306">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="328af-307">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-307">ComImportAttribute</span></span>|<span data-ttu-id="328af-308">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="328af-308">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="328af-309">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="328af-309">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="328af-310">SerializableAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-310">SerializableAttribute</span></span>|<span data-ttu-id="328af-311">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="328af-311">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="328af-312">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="328af-312">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="328af-313">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-313">NonSerializedAttribute</span></span>|<span data-ttu-id="328af-314">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="328af-314">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="328af-315">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="328af-315">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="328af-316">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-316">MethodImplAttribute</span></span>|<span data-ttu-id="328af-317">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="328af-317">CorMethodImpl</span></span>|<span data-ttu-id="328af-318">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="328af-318">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="328af-319">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="328af-319">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="328af-320">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-320">MarshalAsAttribute</span></span>|<span data-ttu-id="328af-321">Различные элементы.</span><span class="sxs-lookup"><span data-stu-id="328af-321">Various bits.</span></span>|<span data-ttu-id="328af-322">Нет метода доступа.</span><span class="sxs-lookup"><span data-stu-id="328af-322">No accessor.</span></span>|  
|<span data-ttu-id="328af-323">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-323">PreserveSigAttribute</span></span>|<span data-ttu-id="328af-324">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="328af-324">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="328af-325">MethodInfo.GetMethodImplementationFlags(). OLE</span><span class="sxs-lookup"><span data-stu-id="328af-325">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="328af-326">ConstructorInfo.GetMethodImplementationFlags(). OLE</span><span class="sxs-lookup"><span data-stu-id="328af-326">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="328af-327">InAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-327">InAttribute</span></span>|<span data-ttu-id="328af-328">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="328af-328">CorParamAttr.pdIn</span></span>|<span data-ttu-id="328af-329">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="328af-329">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="328af-330">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-330">OutAttribute</span></span>|<span data-ttu-id="328af-331">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="328af-331">CorParamAttr.pdOut</span></span>|<span data-ttu-id="328af-332">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="328af-332">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="328af-333">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-333">StructLayoutAttribute</span></span>|<span data-ttu-id="328af-334">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="328af-334">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="328af-335">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="328af-335">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="328af-336">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="328af-336">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="328af-337">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="328af-337">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="328af-338">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="328af-338">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="328af-339">Упаковка классов.</span><span class="sxs-lookup"><span data-stu-id="328af-339">Class packing.</span></span>|<span data-ttu-id="328af-340">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="328af-340">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="328af-341">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="328af-341">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="328af-342">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="328af-342">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="328af-343">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="328af-343">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="328af-344">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="328af-344">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="328af-345">Нет метода доступа.</span><span class="sxs-lookup"><span data-stu-id="328af-345">No accessor.</span></span>|  
|<span data-ttu-id="328af-346">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-346">FieldOffsetAttribute</span></span>|<span data-ttu-id="328af-347">Смещение поля.</span><span class="sxs-lookup"><span data-stu-id="328af-347">Field offset.</span></span>|<span data-ttu-id="328af-348">Нет метода доступа.</span><span class="sxs-lookup"><span data-stu-id="328af-348">No accessor.</span></span>|  
|<span data-ttu-id="328af-349">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-349">AssemblyLoadAttribute</span></span>|<span data-ttu-id="328af-350">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="328af-350">CorAssemblyFlags</span></span>|<span data-ttu-id="328af-351">Нет доступа или перечислителя.</span><span class="sxs-lookup"><span data-stu-id="328af-351">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="328af-352">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-352">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="328af-353">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-353">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]&#xA;override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="assembly.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="328af-354">Тип, для которого должны быть возвращены настраиваемые атрибуты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-354">The type for which the custom attributes are to be returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="328af-355">Данный аргумент не учитывается для объектов типа <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-355">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-356">Получает настраиваемые атрибуты для этой сборки как заданные по типу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-356">Gets the custom attributes for this assembly as specified by type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-357">Массив, содержащий настраиваемые атрибуты для этой сборки, заданные параметром <paramref name="attributeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-357">An array that contains the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-358">Этот метод реализует соответствующий <xref:System.Reflection.ICustomAttributeProvider> метод интерфейса.</span><span class="sxs-lookup"><span data-stu-id="328af-358">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="328af-359">Таким образом `inherit` параметр должен быть указан, несмотря на то, что он учитывается.</span><span class="sxs-lookup"><span data-stu-id="328af-359">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="328af-360">Псевдо-атрибут задает биты основных метаданных, которые должны быть установлены при наличии этого атрибута.</span><span class="sxs-lookup"><span data-stu-id="328af-360">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="328af-361">В отличие от пользовательского атрибута, который расширяет метаданные для типа и сохраняется вместе с типом, псевдо-атрибут изменяет метаданные для типа, а затем удаляются.</span><span class="sxs-lookup"><span data-stu-id="328af-361">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="328af-362">Некоторые из получившиеся биты, нельзя получить с помощью существующих API отражения.</span><span class="sxs-lookup"><span data-stu-id="328af-362">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="328af-363">В следующей таблице перечислены различные псевдо-атрибуты и методы доступа для битов, доступных при отражении.</span><span class="sxs-lookup"><span data-stu-id="328af-363">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="328af-364">Псевдо-атрибут</span><span class="sxs-lookup"><span data-stu-id="328af-364">Pseudo-Attribute</span></span>|<span data-ttu-id="328af-365">Биты метаданных</span><span class="sxs-lookup"><span data-stu-id="328af-365">Metadata Bits</span></span>|<span data-ttu-id="328af-366">Метод доступа к отражению</span><span class="sxs-lookup"><span data-stu-id="328af-366">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="328af-367">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-367">DllImportAttribute</span></span>|<span data-ttu-id="328af-368">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="328af-368">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="328af-369">Имя библиотеки DLL</span><span class="sxs-lookup"><span data-stu-id="328af-369">DLL name</span></span>|<span data-ttu-id="328af-370">Нет метода доступа для PInvokeMap для атрибутов обычного метода/глобального метода.</span><span class="sxs-lookup"><span data-stu-id="328af-370">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="328af-371">Нет метода доступа для имени библиотеки DLL.</span><span class="sxs-lookup"><span data-stu-id="328af-371">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="328af-372">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-372">GuidAttribute</span></span>|<span data-ttu-id="328af-373">Хранятся в виде фактических пользовательских атрибутов.</span><span class="sxs-lookup"><span data-stu-id="328af-373">Stored as a real custom attribute.</span></span>|<span data-ttu-id="328af-374">Доступен как реальный пользовательский атрибут.</span><span class="sxs-lookup"><span data-stu-id="328af-374">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="328af-375">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-375">ComImportAttribute</span></span>|<span data-ttu-id="328af-376">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="328af-376">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="328af-377">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="328af-377">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="328af-378">SerializableAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-378">SerializableAttribute</span></span>|<span data-ttu-id="328af-379">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="328af-379">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="328af-380">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="328af-380">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="328af-381">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-381">NonSerializedAttribute</span></span>|<span data-ttu-id="328af-382">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="328af-382">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="328af-383">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="328af-383">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="328af-384">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-384">MethodImplAttribute</span></span>|<span data-ttu-id="328af-385">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="328af-385">CorMethodImpl</span></span>|<span data-ttu-id="328af-386">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="328af-386">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="328af-387">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="328af-387">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="328af-388">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-388">MarshalAsAttribute</span></span>|<span data-ttu-id="328af-389">Различные элементы.</span><span class="sxs-lookup"><span data-stu-id="328af-389">Various bits.</span></span>|<span data-ttu-id="328af-390">Нет метода доступа.</span><span class="sxs-lookup"><span data-stu-id="328af-390">No accessor.</span></span>|  
|<span data-ttu-id="328af-391">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-391">PreserveSigAttribute</span></span>|<span data-ttu-id="328af-392">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="328af-392">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="328af-393">MethodInfo.GetMethodImplementationFlags(). OLE</span><span class="sxs-lookup"><span data-stu-id="328af-393">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="328af-394">ConstructorInfo.GetMethodImplementationFlags(). OLE</span><span class="sxs-lookup"><span data-stu-id="328af-394">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="328af-395">InAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-395">InAttribute</span></span>|<span data-ttu-id="328af-396">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="328af-396">CorParamAttr.pdIn</span></span>|<span data-ttu-id="328af-397">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="328af-397">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="328af-398">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-398">OutAttribute</span></span>|<span data-ttu-id="328af-399">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="328af-399">CorParamAttr.pdOut</span></span>|<span data-ttu-id="328af-400">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="328af-400">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="328af-401">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-401">StructLayoutAttribute</span></span>|<span data-ttu-id="328af-402">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="328af-402">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="328af-403">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="328af-403">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="328af-404">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="328af-404">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="328af-405">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="328af-405">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="328af-406">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="328af-406">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="328af-407">Упаковка классов.</span><span class="sxs-lookup"><span data-stu-id="328af-407">Class packing.</span></span>|<span data-ttu-id="328af-408">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="328af-408">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="328af-409">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="328af-409">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="328af-410">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="328af-410">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="328af-411">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="328af-411">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="328af-412">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="328af-412">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="328af-413">Нет метода доступа.</span><span class="sxs-lookup"><span data-stu-id="328af-413">No accessor.</span></span>|  
|<span data-ttu-id="328af-414">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-414">FieldOffsetAttribute</span></span>|<span data-ttu-id="328af-415">Смещение поля.</span><span class="sxs-lookup"><span data-stu-id="328af-415">Field offset.</span></span>|<span data-ttu-id="328af-416">Нет метода доступа.</span><span class="sxs-lookup"><span data-stu-id="328af-416">No accessor.</span></span>|  
|<span data-ttu-id="328af-417">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="328af-417">AssemblyLoadAttribute</span></span>|<span data-ttu-id="328af-418">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="328af-418">CorAssemblyFlags</span></span>|<span data-ttu-id="328af-419">Нет доступа или перечислителя.</span><span class="sxs-lookup"><span data-stu-id="328af-419">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-420">Свойство <paramref name="attributeType" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-420">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-421">
            <paramref name="attributeType" /> не является типом среды выполнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-421">
              <paramref name="attributeType" /> is not a runtime type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="328af-422">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-422">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="328af-423">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-423">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;&#xA;override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="assembly.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-424">Возвращает сведения об атрибутах, примененных к текущему объекту <see cref="T:System.Reflection.Assembly" />; сведения представляют собой объекты <see cref="T:System.Reflection.CustomAttributeData" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-424">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Assembly" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-425">Универсальный список объектов <see cref="T:System.Reflection.CustomAttributeData" />, представляющих данные об атрибутах, которые были применены к текущей сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-425">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-426">Этот метод позволяет просмотреть пользовательские атрибуты кода в контексте только для отражения в случаях, когда сами настраиваемые атрибуты определены в коде, который загружается в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="328af-426">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="328af-427">Методы, такие как <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> и <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> не может использоваться в таких случаях, так как они создают экземпляры атрибутов.</span><span class="sxs-lookup"><span data-stu-id="328af-427">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="328af-428">Не удается выполнить код в контексте только для отражения.</span><span class="sxs-lookup"><span data-stu-id="328af-428">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="328af-429">Дополнительные сведения и пример кода, см. в разделе <xref:System.Reflection.CustomAttributeData> класса.</span><span class="sxs-lookup"><span data-stu-id="328af-429">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntryAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetEntryAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetEntryAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetEntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEntryAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetEntryAssembly();" />
      <MemberSignature Language="F#" Value="static member GetEntryAssembly : unit -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetEntryAssembly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-430">Получает процесс, исполняемый в домене приложения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-430">Gets the process executable in the default application domain.</span>
          </span>
          <span data-ttu-id="328af-431">В других доменах приложений это первый исполняемый процесс, который был выполнен методом <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-431">In other application domains, this is the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-432">Сборка, представляющая собой исполняемый файл процесса в домене приложения по умолчанию или первый исполняемый файл, выполненный методом <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-432">The assembly that is the process executable in the default application domain, or the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span>
          </span>
          <span data-ttu-id="328af-433">Может возвратить значение <see langword="null" /> при вызове из неуправляемого кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-433">Can return <see langword="null" /> when called from unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-434"><xref:System.Reflection.Assembly.GetEntryAssembly%2A> Метод может возвращать `null` когда управляемая сборка была загружена из неуправляемого приложения.</span><span class="sxs-lookup"><span data-stu-id="328af-434">The <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method can return `null` when a managed assembly has been loaded from an unmanaged application.</span></span> <span data-ttu-id="328af-435">Например, если неуправляемое приложение создает экземпляр COM-компонента на языке C#, вызов <xref:System.Reflection.Assembly.GetEntryAssembly%2A> метода из компонента на C# возвращает значение null, так как точка входа для процесса неуправляемого кода, а не является управляемой сборкой.</span><span class="sxs-lookup"><span data-stu-id="328af-435">For example, if an unmanaged application creates an instance of a COM component written in C#, a call to the <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method from the C# component returns null, because the entry point for the process was unmanaged code rather than a managed assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExecutingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetExecutingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetExecutingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExecutingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExecutingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetExecutingAssembly();" />
      <MemberSignature Language="F#" Value="static member GetExecutingAssembly : unit -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.GetExecutingAssembly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-436">Получает сборку, которая содержит выполняемый в текущий момент код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-436">Gets the assembly that contains the code that is currently executing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-437">Сборка, содержащая выполняемый в текущий момент код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-437">The assembly that contains the code that is currently executing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-438">Для повышения производительности этот метод следует вызывать только в том случае, если вы не знаете во время разработки сборку в данный момент.</span><span class="sxs-lookup"><span data-stu-id="328af-438">For performance reasons, you should call this method only when you do not know at design time what assembly is currently executing.</span></span> <span data-ttu-id="328af-439">Рекомендуемый способ получения <xref:System.Reflection.Assembly> , представляющий текущая сборка является использование <xref:System.Type.Assembly%2A?displayProperty=nameWithType> свойство типа, найденные в сборке, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="328af-439">The recommended way to retrieve an <xref:System.Reflection.Assembly> object that represents the current assembly is to use the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property of a type found in the assembly, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/assembly1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="328af-440">Чтобы получить сборку, содержащую метод, который вызывается текущим исполняемым кодом, используйте <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-440">To get the assembly that contains the method that called the currently executing code, use <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-441">В следующем примере используется <xref:System.Type.Assembly%2A?displayProperty=nameWithType> свойство для получения текущей выполняемой сборке на основе типа, содержащегося в этой сборке.</span><span class="sxs-lookup"><span data-stu-id="328af-441">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to get the currently executing assembly based on a type contained in that assembly.</span></span> <span data-ttu-id="328af-442">Он также вызовет <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> метод, чтобы показать, что он возвращает <xref:System.Reflection.Assembly> объект, который представляет ту же сборку.</span><span class="sxs-lookup"><span data-stu-id="328af-442">It also calls the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method to show that it returns an <xref:System.Reflection.Assembly> object that represents the same assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cpp/getexecutingassembly1.cpp#5)]
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/getexecutingassembly1.cs#5)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/getexecutingassembly1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetExportedTypes : unit -&gt; Type[]&#xA;override this.GetExportedTypes : unit -&gt; Type[]" Usage="assembly.GetExportedTypes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetExportedTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-443">Получает открытые типы, определенные в этой сборке и видимые за ее пределами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-443">Gets the public types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-444">Массив, представляющий типы, определенные в сборке и видимые за ее пределами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-444">An array that represents the types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-445">Только типы, видимый за пределами сборки, открытые типы и открытые типы, вложенные в другие открытые типы.</span><span class="sxs-lookup"><span data-stu-id="328af-445">The only types visible outside an assembly are public types and public types nested within other public types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-446">В следующем образце кода определяет несколько классов с помощью различных уровней доступа и вызовы <xref:System.Reflection.Assembly.GetExportedTypes%2A> для отображения те, которые видим за пределами сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-446">The following code sample defines a number of classes with various access levels, and calls <xref:System.Reflection.Assembly.GetExportedTypes%2A> to display the ones that are visible from outside the assembly.</span></span>  
  
 [!code-cpp[Assembly.GetExportedTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.GetExportedTypes/CPP/source.cpp#1)]
 [!code-csharp[Assembly.GetExportedTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.GetExportedTypes/CS/source.cs#1)]
 [!code-vb[Assembly.GetExportedTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.GetExportedTypes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="328af-447">Сборка является динамической.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-447">The assembly is a dynamic assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-448">Не удается загрузить зависимую сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-448">Unable to load a dependent assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.IO.FileStream&#xA;override this.GetFile : string -&gt; System.IO.FileStream" Usage="assembly.GetFile name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFile(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="328af-449">Имя указанного файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-449">The name of the specified file.</span>
          </span>
          <span data-ttu-id="328af-450">Не должно содержать путь к файлу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-450">Do not include the path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-451">Возвращает объект <see cref="T:System.IO.FileStream" /> для указанного файла из таблицы файлов манифеста данной сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-451">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-452">Поток, содержащий указанный файл или <see langword="null" />, если файл не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-452">A stream that contains the specified file, or <see langword="null" /> if the file is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-453">Этот метод работает на обоих файлов открытого и закрытого ресурса.</span><span class="sxs-lookup"><span data-stu-id="328af-453">This method works on both public and private resource files.</span></span>  
  
 <span data-ttu-id="328af-454">`name` Не должно содержать путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="328af-454">The `name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-455">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-455">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-456">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-456">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-457">Параметр <paramref name="name" /> представляет собой пустую строку ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-457">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-458">Не удалось найти <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-458">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-459">
            <paramref name="name" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-459">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-460">для доступа к пути и для чтения указанного файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-460">for access to the path and for reading the specified file.</span>
          </span>
          <span data-ttu-id="328af-461">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> и <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-461">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-462">Получает файлы в таблице файлов манифеста сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-462">Gets the files in the file table of an assembly manifest.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles () As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : unit -&gt; System.IO.FileStream[]&#xA;override this.GetFiles : unit -&gt; System.IO.FileStream[]" Usage="assembly.GetFiles " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-463">Получает файлы в таблице файлов манифеста сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-463">Gets the files in the file table of an assembly manifest.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-464">Массив потоков, содержащий файлы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-464">An array of streams that contain the files.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-465">Этот метод работает с файлами ресурсов общедоступных и частных.</span><span class="sxs-lookup"><span data-stu-id="328af-465">This method works on public and private resource files.</span></span>  
  
 <span data-ttu-id="328af-466">Эта перегрузка эквивалентно вызову <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> перегрузки и указав `false`.</span><span class="sxs-lookup"><span data-stu-id="328af-466">This overload is equivalent to calling the <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> overload and specifying `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-467">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-467">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-468">Файл не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-468">A file was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-469">Файл не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-469">A file was not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : bool -&gt; System.IO.FileStream[]&#xA;override this.GetFiles : bool -&gt; System.IO.FileStream[]" Usage="assembly.GetFiles getResourceModules" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="328af-470">Значение <see langword="true" />, если необходимо включать модули ресурсов; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-470">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-471">Получает файлы из таблицы манифеста сборки с указанием включать или не включать модули ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-471">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-472">Массив потоков, содержащий файлы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-472">An array of streams that contain the files.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-473">Этот метод работает с файлами ресурсов общедоступных и частных.</span><span class="sxs-lookup"><span data-stu-id="328af-473">This method works on public and private resource files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-474">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-474">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-475">Файл не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-475">A file was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-476">Файл не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-476">A file was not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetForwardedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetForwardedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetForwardedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetForwardedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetForwardedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetForwardedTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetForwardedTypes : unit -&gt; Type[]&#xA;override this.GetForwardedTypes : unit -&gt; Type[]" Usage="assembly.GetForwardedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="assembly.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-477">Возвращает хэш-код данного экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-477">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-478">Хэш-код в виде 32-разрядного целого числа со знаком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-478">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLoadedModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-479">Получает все загруженные модули, являющиеся частью этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-479">Gets all the loaded modules that are part of this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules();" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : unit -&gt; System.Reflection.Module[]&#xA;override this.GetLoadedModules : unit -&gt; System.Reflection.Module[]" Usage="assembly.GetLoadedModules " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-480">Получает все загруженные модули, являющиеся частью этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-480">Gets all the loaded modules that are part of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-481">Массив модулей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-481">An array of modules.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : bool -&gt; System.Reflection.Module[]&#xA;override this.GetLoadedModules : bool -&gt; System.Reflection.Module[]" Usage="assembly.GetLoadedModules getResourceModules" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="328af-482">Значение <see langword="true" />, если необходимо включать модули ресурсов; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-482">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-483">Получает все загруженные модули, входящие в эту сборку, с заданием возможности включения модулей ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-483">Gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-484">Массив модулей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-484">An array of modules.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo&#xA;override this.GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo" Usage="assembly.GetManifestResourceInfo resourceName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="328af-485">Имя ресурса, зависящее от регистра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-485">The case-sensitive name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-486">Возвращает сведения о сохранении заданного ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-486">Returns information about how the given resource has been persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-487">Объект со сведениями о топологии ресурса или <see langword="null" />, если ресурс не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-487">An object that is populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-488">Сведения о ресурсах, возвращается только в том случае, если ресурс является видимым для вызывающего объекта, или вызывающий оператор имеет <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="328af-488">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-489">Свойство <paramref name="resourceName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-489">
              <paramref name="resourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-490">Параметр <paramref name="resourceName" /> представляет собой пустую строку ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-490">The <paramref name="resourceName" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="328af-491">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-491">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="328af-492">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-492">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public virtual string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceNames : unit -&gt; string[]&#xA;override this.GetManifestResourceNames : unit -&gt; string[]" Usage="assembly.GetManifestResourceNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-493">Возвращает имена всех ресурсов в этой сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-493">Returns the names of all the resources in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-494">Массив, который содержит имена всех ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-494">An array that contains the names of all the resources.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-495">Имена всех ресурсов, можно использовать в массиве, возвращенное этим методом, следующим образом:</span><span class="sxs-lookup"><span data-stu-id="328af-495">You can use each resource name in the array returned by this method as follows:</span></span>  
  
-   <span data-ttu-id="328af-496">Можно передать имя ресурса, чтобы <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> метод для получения дополнительных сведений о ресурсе.</span><span class="sxs-lookup"><span data-stu-id="328af-496">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method to get additional information about the resource.</span></span>  
  
-   <span data-ttu-id="328af-497">Если имя обозначает двоичный RESOURCES-файл, можно удалить его расширение RESOURCES-файла и передать его в <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> конструктора для создания диспетчера ресурсов.</span><span class="sxs-lookup"><span data-stu-id="328af-497">If the name identifies a binary .resources file, you can remove its .resources file extension and pass it to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> constructor to instantiate the resource manager.</span></span>  
  
-   <span data-ttu-id="328af-498">Можно передать имя ресурса, чтобы <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> метод для извлечения <xref:System.IO.Stream> объект, который затем можно передать <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> конструктор.</span><span class="sxs-lookup"><span data-stu-id="328af-498">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
-   <span data-ttu-id="328af-499">Можно передать имя ресурса, чтобы <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> метод для извлечения <xref:System.IO.Stream> объект, который затем можно передать <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> конструктор.</span><span class="sxs-lookup"><span data-stu-id="328af-499">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
 <span data-ttu-id="328af-500">Сведения о ресурсах, возвращается только в том случае, если ресурс является видимым для вызывающего объекта, или вызывающий оператор имеет <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="328af-500">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="328af-501">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-501">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="328af-502">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-502">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-503">Загружает указанный ресурс манифеста из сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-503">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : string -&gt; System.IO.Stream&#xA;override this.GetManifestResourceStream : string -&gt; System.IO.Stream" Usage="assembly.GetManifestResourceStream name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="328af-504">Имя запрашиваемого ресурса манифеста, зависящее от регистра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-504">The case-sensitive name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-505">Загружает указанный ресурс манифеста из сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-505">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-506">Ресурс манифеста; или значение <see langword="null" />, если при компиляции не были заданы ресурсы или ресурс не является видимым для вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-506">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-507">Ресурс манифеста является ресурсом (например, файл изображения), который внедряется в сборку во время компиляции.</span><span class="sxs-lookup"><span data-stu-id="328af-507">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="328af-508">Дополнительные сведения о ресурсах манифеста см. в разделе [основы ресурсов Microsoft .NET Framework](http://go.microsoft.com/fwlink/?LinkId=204554) в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="328af-508">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="328af-509">Сведения о ресурсах, возвращается только в том случае, если ресурс является видимым для вызывающего объекта, или вызывающий оператор имеет <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="328af-509">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-510">Этот метод возвращает `null` при доступе к закрытому ресурсу в другой сборке, и вызывающий объект не имеет <xref:System.Security.Permissions.ReflectionPermission> с <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="328af-510">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="328af-511">Если файл ресурсов в манифесте сборки <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> возвращает <xref:System.IO.Stream> объекта, даже если не удается найти файл ресурсов на диске во время.</span><span class="sxs-lookup"><span data-stu-id="328af-511">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="328af-512">Если файл ресурсов не найден, передав итоговый <xref:System.IO.Stream> объект <xref:System.Resources.ResourceReader> вызывает конструктор <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="328af-512">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-513">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-513">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-514">Параметр <paramref name="name" /> представляет собой пустую строку ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-514">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-515">
            <block subset="none" type="note">
              <para>В [.NET для приложений Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) или [переносимой библиотеке классов](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) вместо этого перехватите исключение базового класса <see cref="T:System.IO.IOException" />.  </para>
            </block>  Не удалось загрузить найденный файл.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-515">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>  A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-516">Не удалось найти <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-516">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-517">
            <paramref name="name" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-517">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="328af-518">Длина ресурса больше <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-518">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="328af-519">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-519">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="328af-520">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-520">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : Type * string -&gt; System.IO.Stream&#xA;override this.GetManifestResourceStream : Type * string -&gt; System.IO.Stream" Usage="assembly.GetManifestResourceStream (type, name)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="328af-521">Тип, пространством имен которого ограничена область действия имени ресурса манифеста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-521">The type whose namespace is used to scope the manifest resource name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="328af-522">Имя запрашиваемого ресурса манифеста, зависящее от регистра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-522">The case-sensitive name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-523">Загружает из сборки указанный ресурс манифеста с учетом ограничения области действия пространства имен по типу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-523">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-524">Ресурс манифеста; или значение <see langword="null" />, если при компиляции не были заданы ресурсы или ресурс не является видимым для вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-524">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-525">Например, если полное имя, указанное для `type` является «MyNameSpace.MyClasses» и `name` является «Net», этот метод перегрузки ищет ресурс с именем «MyNameSpace.Net».</span><span class="sxs-lookup"><span data-stu-id="328af-525">For example, if the full name specified for `type` is "MyNameSpace.MyClasses" and `name` is "Net", this method overload searches for a resource named "MyNameSpace.Net".</span></span>  
  
 <span data-ttu-id="328af-526">Ресурс манифеста является ресурсом (например, файл изображения), который внедряется в сборку во время компиляции.</span><span class="sxs-lookup"><span data-stu-id="328af-526">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="328af-527">Дополнительные сведения о ресурсах манифеста см. в разделе [основы ресурсов Microsoft .NET Framework](http://go.microsoft.com/fwlink/?LinkId=204554) в библиотеке MSDN.</span><span class="sxs-lookup"><span data-stu-id="328af-527">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="328af-528">Сведения о ресурсах, возвращается только в том случае, если ресурс является видимым для вызывающего объекта, или вызывающий оператор имеет <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="328af-528">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-529">Этот метод возвращает `null` при доступе к закрытому ресурсу в другой сборке, и вызывающий объект не имеет <xref:System.Security.Permissions.ReflectionPermission> с <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="328af-529">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="328af-530">Если файл ресурсов в манифесте сборки <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> возвращает <xref:System.IO.Stream> объекта, даже если не удается найти файл ресурсов на диске во время.</span><span class="sxs-lookup"><span data-stu-id="328af-530">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="328af-531">Если файл ресурсов не найден, передав итоговый <xref:System.IO.Stream> объект <xref:System.Resources.ResourceReader> вызывает конструктор <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="328af-531">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-532">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-532">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-533">Параметр <paramref name="name" /> представляет собой пустую строку ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-533">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-534">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-534">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-535">Не удалось найти <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-535">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-536">
            <paramref name="name" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-536">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="328af-537">Длина ресурса больше <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-537">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="328af-538">При вызове с поздним связыванием через механизмы например <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-538">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="328af-539">Связанное перечисление: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-539">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetModule : string -&gt; System.Reflection.Module&#xA;override this.GetModule : string -&gt; System.Reflection.Module" Usage="assembly.GetModule name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModule(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="328af-540">Имя запрашиваемого модуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-540">The name of the module being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-541">Получает указанный модуль этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-541">Gets the specified module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-542">Запрашиваемый модуль или значение <see langword="null" />, если модуль не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-542">The module being requested, or <see langword="null" /> if the module is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-543">Этот метод работает с именами файлов.</span><span class="sxs-lookup"><span data-stu-id="328af-543">This method works on file names.</span></span>  
  
 <span data-ttu-id="328af-544">Классы в `Reflection.Emit` пространства имен порождают имя области для динамического модуля.</span><span class="sxs-lookup"><span data-stu-id="328af-544">Classes in the `Reflection.Emit` namespace emit the scope name for a dynamic module.</span></span> <span data-ttu-id="328af-545">Имя области можно определить с помощью <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="328af-545">The scope name can be determined by the <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="328af-546">Тип модуля, чтобы передать `Assembly.GetModule`.</span><span class="sxs-lookup"><span data-stu-id="328af-546">Pass the kind of module you want to `Assembly.GetModule`.</span></span> <span data-ttu-id="328af-547">Например, если требуется модуля, содержащего манифест сборки, передать имя области модуля `GetModule`.</span><span class="sxs-lookup"><span data-stu-id="328af-547">For example, if you want the module that contains the assembly manifest, pass the scope name of the module to `GetModule`.</span></span> <span data-ttu-id="328af-548">В противном случае передайте имя файла модуля.</span><span class="sxs-lookup"><span data-stu-id="328af-548">Otherwise, pass the file name of the module.</span></span> <span data-ttu-id="328af-549">Сборки, загруженные в один из `Load` методы, которые имеют параметр byte [] содержат только один модуль, и модуль манифеста.</span><span class="sxs-lookup"><span data-stu-id="328af-549">Assemblies loaded by one of the `Load` methods that have a byte[] parameter have only one module, and that is the manifest module.</span></span> <span data-ttu-id="328af-550">Всегда следует выполнять поиск этих модулей, используя имя области.</span><span class="sxs-lookup"><span data-stu-id="328af-550">Always seek these modules using the scope name.</span></span>  
  
 <span data-ttu-id="328af-551">Тип может быть извлечен из конкретного модуля с помощью <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="328af-551">A type can be retrieved from a specific module using <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="328af-552">Вызов `Module.GetType` модуля, содержащего манифест, не приведет к поиску для всей сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-552">Calling `Module.GetType` on the module containing the manifest will not initiate a search of the entire assembly.</span></span> <span data-ttu-id="328af-553">Чтобы получить тип из сборки, независимо от того, какой модуль он находится, необходимо вызвать <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="328af-553">To retrieve a type from an assembly, regardless of which module it is in, you must call <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-554">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-554">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-555">Параметр <paramref name="name" /> представляет собой пустую строку ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-555">The <paramref name="name" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-556">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-556">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-557">Не удалось найти <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-557">
              <paramref name="name" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-558">
            <paramref name="name" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-558">
              <paramref name="name" /> is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-559">Получает все модули, являющиеся частью этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-559">Gets all the modules that are part of this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules();" />
      <MemberSignature Language="F#" Value="abstract member GetModules : unit -&gt; System.Reflection.Module[]&#xA;override this.GetModules : unit -&gt; System.Reflection.Module[]" Usage="assembly.GetModules " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-560">Получает все модули, являющиеся частью этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-560">Gets all the modules that are part of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-561">Массив модулей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-561">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-562">Этот метод работает с файлами ресурсов общедоступных и частных.</span><span class="sxs-lookup"><span data-stu-id="328af-562">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-563">Модули должны включаться с расширениями имен файлов.</span><span class="sxs-lookup"><span data-stu-id="328af-563">Modules must be emitted with file name extensions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-564">Следующий пример отображает имя модуля в возвращаемый массив, содержащий манифест сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-564">The following example displays the name of the module in the returned array that contains the assembly manifest.</span></span>  
  
 [!code-cpp[Classic Assembly.GetModules Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Assembly.GetModules Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CS/source.cs#1)]
 [!code-vb[Classic Assembly.GetModules Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-565">В загружаемом модуле не указано расширение имени файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-565">The module to be loaded does not specify a file name extension.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetModules : bool -&gt; System.Reflection.Module[]&#xA;override this.GetModules : bool -&gt; System.Reflection.Module[]" Usage="assembly.GetModules getResourceModules" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="328af-566">Значение <see langword="true" />, если необходимо включать модули ресурсов; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-566">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-567">Получает все загруженные модули, входящие в эту сборку, с указанием возможности включения модулей ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-567">Gets all the modules that are part of this assembly, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-568">Массив модулей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-568">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-569">Этот метод работает с файлами ресурсов общедоступных и частных.</span><span class="sxs-lookup"><span data-stu-id="328af-569">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-570">Модули должны включаться с расширениями имен файлов.</span><span class="sxs-lookup"><span data-stu-id="328af-570">Modules must be emitted with file name extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetName">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-571">Получает имя <see cref="T:System.Reflection.AssemblyName" /> для этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-571">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName () As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName();" />
      <MemberSignature Language="F#" Value="abstract member GetName : unit -&gt; System.Reflection.AssemblyName&#xA;override this.GetName : unit -&gt; System.Reflection.AssemblyName" Usage="assembly.GetName " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-572">Получает имя <see cref="T:System.Reflection.AssemblyName" /> для этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-572">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-573">Объект, содержащий полностью проанализированное отображаемое имя для этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-573">An object that contains the fully parsed display name for this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-574">для доступа к пути сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-574">for access to the path of the assembly.</span>
          </span>
          <span data-ttu-id="328af-575">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-575">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberSignature Language="F#" Value="abstract member GetName : bool -&gt; System.Reflection.AssemblyName&#xA;override this.GetName : bool -&gt; System.Reflection.AssemblyName" Usage="assembly.GetName copiedName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="328af-576">Значение <see langword="true" />, чтобы значение свойства <see cref="P:System.Reflection.Assembly.CodeBase" /> указывало на расположение сборки после создания ее теневой копии; значение <see langword="false" />, если значение свойства <see cref="P:System.Reflection.Assembly.CodeBase" /> должно указывать на первоначальное расположение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-576">
              <see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-577">Возвращает значение <see cref="T:System.Reflection.AssemblyName" /> для этой сборки, база кода устанавливается в соответствии с параметром <paramref name="copiedName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-577">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly, setting the codebase as specified by <paramref name="copiedName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-578">Объект, содержащий полностью проанализированное отображаемое имя для этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-578">An object that contains the fully parsed display name for this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-579">для доступа к пути сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-579">for access to the path of the assembly.</span>
          </span>
          <span data-ttu-id="328af-580">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-580">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="assembly.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="328af-581">Объект, для которого будут заполнены сведения о сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-581">The object to be populated with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="328af-582">Контекст назначения сериализации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-582">The destination context of the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-583">Получает сведения сериализации со всеми данными, необходимыми для повторного создания экземпляра этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-583">Gets serialization information with all of the data needed to reinstantiate this assembly.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-584">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-584">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="328af-585">Требует полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-585">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="328af-586">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-586">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]&#xA;override this.GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]" Usage="assembly.GetReferencedAssemblies " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-587">Возвращает объекты <see cref="T:System.Reflection.AssemblyName" /> для всех сборок, на которые ссылается данная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-587">Gets the <see cref="T:System.Reflection.AssemblyName" /> objects for all the assemblies referenced by this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-588">Массив, содержащий полностью проанализированные отображаемые имена всех сборок, на которые ссылается данная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-588">An array that contains the fully parsed display names of all the assemblies referenced by this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="328af-589">Начиная с [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> свойство <xref:System.Reflection.AssemblyName> объект, который возвращается этим методом является <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> при хэш-алгоритм по связанной сборке, или в том случае, если хэш-алгоритм сборки, на которую указывает ссылка, не является определяется <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> перечисления.</span><span class="sxs-lookup"><span data-stu-id="328af-589">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by this method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="328af-590">В предыдущих версиях .NET Framework <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> свойство, возвращенное <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> в этой ситуации.</span><span class="sxs-lookup"><span data-stu-id="328af-590">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-591">В следующем примере кода показан вызов <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-591">The following code example demonstrates calling the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method.</span></span> <span data-ttu-id="328af-592">Данный пример кода является частью большего примера для <xref:System.Reflection.Assembly> класса.</span><span class="sxs-lookup"><span data-stu-id="328af-592">This code example is part of a larger example provided for the <xref:System.Reflection.Assembly> class.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-593">Получает вспомогательную сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-593">Gets the satellite assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly&#xA;override this.GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly" Usage="assembly.GetSatelliteAssembly culture" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="328af-594">Заданные язык и региональные параметры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-594">The specified culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-595">Получает сопутствующую сборку для указанной культуры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-595">Gets the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-596">Указанная вспомогательная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-596">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-597">Вспомогательные сборки содержат локализованные ресурсы, в отличие от основного приложения сборки, содержащие не локализуемый исполняемый код и ресурсы для одного языка и региональных параметров, которые служат по умолчанию или нейтрального языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="328af-597">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="328af-598">Вызовите этот метод, чтобы использовать текущую версию сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-598">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-599">Свойство <paramref name="culture" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-599">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-600">Не удается найти сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-600">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-601">Вспомогательная сборка с соответствующим именем файла была найдена, но параметр <see langword="CultureInfo" /> не соответствует указанному.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-601">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-602">Вспомогательная сборка не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-602">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly&#xA;override this.GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly" Usage="assembly.GetSatelliteAssembly (culture, version)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="328af-603">Заданные язык и региональные параметры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-603">The specified culture.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="328af-604">Версия вспомогательной сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-604">The version of the satellite assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-605">Получает указанную версию вспомогательной сборки для указанной культуры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-605">Gets the specified version of the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-606">Указанная вспомогательная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-606">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-607">Вспомогательные сборки содержат локализованные ресурсы, в отличие от основного приложения сборки, содержащие не локализуемый исполняемый код и ресурсы для одного языка и региональных параметров, которые служат по умолчанию или нейтрального языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="328af-607">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="328af-608">Вызовите <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> перегрузки, чтобы использовать текущую версию сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-608">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 <span data-ttu-id="328af-609">Если `version` является `null`, используется текущая версия сборки используется в том случае, если подписываются как ресурс, так и основные сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-609">If `version` is `null`, the current assembly version is used if both the resource and main assemblies are signed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-610">Свойство <paramref name="culture" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-610">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-611">Вспомогательная сборка с соответствующим именем файла была найдена, но <see langword="CultureInfo" /> или версия не соответствуют указанным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-611">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-612">Не удается найти сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-612">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-613">Вспомогательная сборка не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-613">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-614">Получает объект <see cref="T:System.Type" />, представляющий указанный тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-614">Gets the <see cref="T:System.Type" /> object that represents the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="assembly.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="assembly.GetType name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="328af-615">Полное имя типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-615">The full name of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-616">Возвращает объект <see cref="T:System.Type" /> с указанным именем в экземпляре сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-616">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-617">Объект, представляющий указанный класс, или <see langword="null" />, если класс не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-617">An object that represents the specified class, or <see langword="null" /> if the class is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-618">Этот метод осуществляет только текущего экземпляра сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-618">This method only searches the current assembly instance.</span></span> <span data-ttu-id="328af-619">`name` Параметр включает в себя пространство имен, но не сборку.</span><span class="sxs-lookup"><span data-stu-id="328af-619">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="328af-620">Чтобы выполнить поиск других сборок для типа, используйте <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> перегрузку метода, которая может включать отображаемое имя сборки как часть имени типа.</span><span class="sxs-lookup"><span data-stu-id="328af-620">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-621">Если тип был перемещен в другую сборку, он по-прежнему возвращается этим методом.</span><span class="sxs-lookup"><span data-stu-id="328af-621">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="328af-622">Сведения о перенаправлении типов см. в разделе [Переадресация типа в системе Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="328af-622">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-623">В следующем примере определяется абстрактный `MeansOfTransportation` в класс `Transportation` пространства имен.</span><span class="sxs-lookup"><span data-stu-id="328af-623">The following example defines an abstract `MeansOfTransportation` class in the `Transportation` namespace.</span></span> <span data-ttu-id="328af-624">Он вызывает <xref:System.Reflection.Assembly.GetType%28System.String%29> метод для извлечения его <xref:System.Type> объекта, вызывает <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> метод для получения массива <xref:System.Reflection.PropertyInfo> объекты, представляющие свойства типа и затем отображает информацию на типа абстрактного свойства.</span><span class="sxs-lookup"><span data-stu-id="328af-624">It calls the <xref:System.Reflection.Assembly.GetType%28System.String%29> method to retrieve its <xref:System.Type> object, calls the <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.PropertyInfo> objects that represent the type's properties, and then displays information on the type's abstract properties.</span></span> <span data-ttu-id="328af-625">Обратите внимание, что вызов <xref:System.Reflection.Assembly.GetType%28System.String%29> метод использует полное имя типа (то есть, его пространство имен вместе с именем типа).</span><span class="sxs-lookup"><span data-stu-id="328af-625">Note that the call to the <xref:System.Reflection.Assembly.GetType%28System.String%29> method uses the type's fully qualified name (that is, its namespace along with its type name).</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.gettype/cs/gettype1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.gettype/vb/gettype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-626">
            <paramref name="name" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-626">
              <paramref name="name" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-627">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-627">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-628">Для <paramref name="name" /> требуется зависимая сборка, которую не удается найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-628">
              <paramref name="name" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-629">
            <block subset="none" type="note">
              <para>В [.NET для приложений Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) или [переносимой библиотеке классов](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) вместо этого перехватите исключение базового класса <see cref="T:System.IO.IOException" />.</para>
            </block>
            <paramref name="name" /> требует зависимую сборку, которую удалось найти, но не удалось загрузить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-629">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>
              <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-630">-или-  Текущая сборка была загружена в контекст только для отражения, а для <paramref name="name" /> требуется зависимая сборка, которая не была предварительно загружена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-630">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-631">Для <paramref name="name" /> требуется зависимая сборка, однако файл не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-631">
              <paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-632">-или-  Для <paramref name="name" /> требуется зависимая сборка, которая была скомпилирована для версии среды выполнения более поздней, чем текущая загруженная версия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-632">-or-  <paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool -&gt; Type" Usage="assembly.GetType (name, throwOnError)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="328af-633">Полное имя типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-633">The full name of the type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="328af-634">Значение <see langword="true" /> для создания исключения, если тип не найден, в обратном случае — значение <see langword="false" />, в результате чего будет возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-634">
              <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-635">Возвращает объект <see cref="T:System.Type" /> с заданным именем в экземпляре сборки и может вызывать исключение, если тип не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-635">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-636">Объект, представляющий указанный класс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-636">An object that represents the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-637">Этот метод осуществляет только текущего экземпляра сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-637">This method only searches the current assembly instance.</span></span> <span data-ttu-id="328af-638">`name` Параметр включает в себя пространство имен, но не сборку.</span><span class="sxs-lookup"><span data-stu-id="328af-638">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="328af-639">Чтобы выполнить поиск других сборок для типа, используйте <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> перегрузку метода, которая может включать отображаемое имя сборки как часть имени типа.</span><span class="sxs-lookup"><span data-stu-id="328af-639">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-640">Если тип был перемещен в другую сборку, он по-прежнему возвращается этим методом.</span><span class="sxs-lookup"><span data-stu-id="328af-640">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="328af-641">Сведения о перенаправлении типов см. в разделе [Переадресация типа в системе Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="328af-641">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="328af-642">`throwOnError` Параметр влияет только на что произойдет, если тип не найден.</span><span class="sxs-lookup"><span data-stu-id="328af-642">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="328af-643">Он не влияет на другие исключения, которые могут быть вызваны.</span><span class="sxs-lookup"><span data-stu-id="328af-643">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="328af-644">В частности, если найден тип, но не может быть загружен <xref:System.TypeLoadException> может быть создано даже в том случае, если `throwOnError` является `false`.</span><span class="sxs-lookup"><span data-stu-id="328af-644">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-645">
            <paramref name="name" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-645">
              <paramref name="name" /> is invalid.</span>
          </span>
          <span data-ttu-id="328af-646">-или-  Длина <paramref name="name" /> превышает 1024 символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-646">-or-  The length of <paramref name="name" /> exceeds 1024 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-647">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-647">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="328af-648">
            <paramref name="throwOnError" /> является <see langword="true" />, не удается найти тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-648">
              <paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-649">Для <paramref name="name" /> требуется зависимая сборка, которую не удается найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-649">
              <paramref name="name" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-650">Для <paramref name="name" /> требуется зависимая сборка, которая была найдена, но ее не удалось загрузить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-650">
              <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-651">-или-  Текущая сборка была загружена в контекст только для отражения, а для <paramref name="name" /> требуется зависимая сборка, которая не была предварительно загружена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-651">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-652">Для <paramref name="name" /> требуется зависимая сборка, однако файл не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-652">
              <paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-653">-или-  Для <paramref name="name" /> требуется зависимая сборка, которая была скомпилирована для версии среды выполнения более поздней, чем текущая загруженная версия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-653">-or-  <paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool * bool -&gt; Type" Usage="assembly.GetType (name, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="328af-654">Полное имя типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-654">The full name of the type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="328af-655">Значение <see langword="true" /> для создания исключения, если тип не найден, в обратном случае — значение <see langword="false" />, в результате чего будет возвращено значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-655">
              <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="328af-656">Значение <see langword="true" />, чтобы игнорировать регистр имени типа, в обратном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-656">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-657">Возвращает объект <see cref="T:System.Type" /> с заданным именем в экземпляре сборки, с возможностями игнорировать регистр и вызвать исключение, если тип не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-657">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-658">Объект, представляющий указанный класс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-658">An object that represents the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-659">Этот метод осуществляет только текущего экземпляра сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-659">This method only searches the current assembly instance.</span></span> <span data-ttu-id="328af-660">`name` Параметр включает в себя пространство имен, но не сборку.</span><span class="sxs-lookup"><span data-stu-id="328af-660">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="328af-661">Чтобы выполнить поиск других сборок для типа, используйте <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> перегрузку метода, которая может включать отображаемое имя сборки как часть имени типа.</span><span class="sxs-lookup"><span data-stu-id="328af-661">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-662">Если тип был перемещен в другую сборку, он по-прежнему возвращается этим методом.</span><span class="sxs-lookup"><span data-stu-id="328af-662">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="328af-663">Сведения о перенаправлении типов см. в разделе [Переадресация типа в системе Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="328af-663">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="328af-664">`throwOnError` Параметр влияет только на что произойдет, если тип не найден.</span><span class="sxs-lookup"><span data-stu-id="328af-664">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="328af-665">Он не влияет на другие исключения, которые могут быть вызваны.</span><span class="sxs-lookup"><span data-stu-id="328af-665">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="328af-666">В частности, если найден тип, но не может быть загружен <xref:System.TypeLoadException> может быть создано даже в том случае, если `throwOnError` является `false`.</span><span class="sxs-lookup"><span data-stu-id="328af-666">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-667">
            <paramref name="name" /> недопустим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-667">
              <paramref name="name" /> is invalid.</span>
          </span>
          <span data-ttu-id="328af-668">-или-  Длина <paramref name="name" /> превышает 1024 символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-668">-or-  The length of <paramref name="name" /> exceeds 1024 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-669">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-669">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="328af-670">
            <paramref name="throwOnError" /> является <see langword="true" />, не удается найти тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-670">
              <paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-671">Для <paramref name="name" /> требуется зависимая сборка, которую не удается найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-671">
              <paramref name="name" /> requires a dependent assembly that could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-672">Для <paramref name="name" /> требуется зависимая сборка, которая была найдена, но ее не удалось загрузить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-672">
              <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-673">-или-  Текущая сборка была загружена в контекст только для отражения, а для <paramref name="name" /> требуется зависимая сборка, которая не была предварительно загружена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-673">-or-  The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-674">Для <paramref name="name" /> требуется зависимая сборка, однако файл не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-674">
              <paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-675">-или-  Для <paramref name="name" /> требуется зависимая сборка, которая была скомпилирована для версии среды выполнения более поздней, чем текущая загруженная версия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-675">-or-  <paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetTypes : unit -&gt; Type[]&#xA;override this.GetTypes : unit -&gt; Type[]" Usage="assembly.GetTypes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-676">Получает типы, определенные в этой сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-676">Gets the types defined in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-677">Массив, содержащий все типы, определенные в этой сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-677">An array that contains all the types that are defined in this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-678">Возвращаемый массив содержит вложенные типы.</span><span class="sxs-lookup"><span data-stu-id="328af-678">The returned array includes nested types.</span></span>  
  
 <span data-ttu-id="328af-679">Если <xref:System.Reflection.Assembly.GetTypes%2A> метод вызывается для сборки и тип, в том, что сборка зависит от типа в сборке, которая не была загружена (например, если он является производным от типа в сборке второй), <xref:System.Reflection.ReflectionTypeLoadException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="328af-679">If the <xref:System.Reflection.Assembly.GetTypes%2A> method is called on an assembly and a type in that assembly is dependent on a type in an assembly that has not been loaded (for example, if it derives from a type in the second assembly), a <xref:System.Reflection.ReflectionTypeLoadException> is thrown.</span></span> <span data-ttu-id="328af-680">Например, это может произойти, если первая сборка была загружена с <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> или <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> методов, а вторая сборка не загружена.</span><span class="sxs-lookup"><span data-stu-id="328af-680">For example, this can happen if the first assembly was loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> or <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods, and the second assembly was not loaded.</span></span> <span data-ttu-id="328af-681">Это также может произойти с сборки, загруженные с помощью <xref:System.Reflection.Assembly.Load%2A> и <xref:System.Reflection.Assembly.LoadFile%2A> методов, если вторую сборку не удается найти, когда <xref:System.Reflection.Assembly.GetTypes%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="328af-681">It can also happen with assemblies loaded using the <xref:System.Reflection.Assembly.Load%2A> and <xref:System.Reflection.Assembly.LoadFile%2A> methods if the second assembly cannot be located when the <xref:System.Reflection.Assembly.GetTypes%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-682">Если тип был перемещен в другую сборку, он не включен в возвращаемый массив.</span><span class="sxs-lookup"><span data-stu-id="328af-682">If a type has been forwarded to another assembly, it is not included in the returned array.</span></span> <span data-ttu-id="328af-683">Сведения о перенаправлении типов см. в разделе [Переадресация типа в системе Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="328af-683">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="328af-684">Чтобы получить коллекцию <xref:System.Reflection.TypeInfo> объектов вместо массива <xref:System.Type> объекты, используют <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="328af-684">To retrieve a collection of <xref:System.Reflection.TypeInfo> objects instead of an array of <xref:System.Type> objects, use the <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-685">Следующий пример отображает параметры одного метода для типа в заданной сборке.</span><span class="sxs-lookup"><span data-stu-id="328af-685">The following example displays parameters of one method on a type in the specified assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException">
          <span data-ttu-id="328af-686">Сборка содержит один или несколько типов, которые не удается загрузить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-686">The assembly contains one or more types that cannot be loaded.</span>
          </span>
          <span data-ttu-id="328af-687">Массив, возвращаемый свойством <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> этого исключения, содержит объект <see cref="T:System.Type" /> для каждого типа, который был загружен, и объект <see langword="null" /> для каждого типа, который не удалось загрузить, тогда как свойство <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> содержит исключение для каждого типа, который не удалось загрузить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-687">The array returned by the <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> property of this exception contains a <see cref="T:System.Type" /> object for each type that was loaded and <see langword="null" /> for each type that could not be loaded, while the <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> property contains an exception for each type that could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public virtual bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAssemblyCache : bool" Usage="System.Reflection.Assembly.GlobalAssemblyCache" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-688">Получает значение, указывающее, была ли сборка загружена из глобального кэша сборок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-688">Gets a value indicating whether the assembly was loaded from the global assembly cache.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-689">Значение <see langword="true" />, если сборка была загружена из глобального кэша сборок, в обратном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-689">
              <see langword="true" /> if the assembly was loaded from the global assembly cache; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public virtual long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberSignature Language="F#" Value="member this.HostContext : int64" Usage="System.Reflection.Assembly.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-690">Получает контекст хост-сайта, с которым была загружена сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-690">Gets the host context with which the assembly was loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-691">Значение <see cref="T:System.Int64" />, которое указывает контекст узла, с которым была загружена сборка, при его наличии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-691">An <see cref="T:System.Int64" /> value that indicates the host context with which the assembly was loaded, if any.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public virtual string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRuntimeVersion : string" Usage="System.Reflection.Assembly.ImageRuntimeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-692">Получает строку, представляющую версию общеязыковой среды выполнения (CLR), сохраненной в файле, содержащем манифест.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-692">Gets a string representing the version of the common language runtime (CLR) saved in the file containing the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-693">Имя папки версии среды CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-693">The CLR version folder name.</span>
          </span>
          <span data-ttu-id="328af-694">Указанный путь не является полным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-694">This is not a full path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-695">Например значение для платформы .NET Framework версии 1.1 будет v1.1.4322.</span><span class="sxs-lookup"><span data-stu-id="328af-695">For example, the value for the .NET Framework version 1.1 would be v1.1.4322.</span></span> <span data-ttu-id="328af-696">Двоичные файлы для этой версии будет находиться в пути % windir%\Microsoft.NET\Framework\v1.1.4322.</span><span class="sxs-lookup"><span data-stu-id="328af-696">The binary files for that version would be located in the path %windir%\Microsoft.NET\Framework\v1.1.4322.</span></span>  
  
 <span data-ttu-id="328af-697">По умолчанию <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> задана версия среды CLR, используемый для построения сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-697">By default, <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> is set to the version of the CLR used to build the assembly.</span></span> <span data-ttu-id="328af-698">Тем не менее он может было присвоено другое значение во время компиляции.</span><span class="sxs-lookup"><span data-stu-id="328af-698">However, it might have been set to another value at compile time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public virtual bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool&#xA;override this.IsDefined : Type * bool -&gt; bool" Usage="assembly.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="328af-699">Тип атрибута, который нужно проверить для данной сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-699">The type of the attribute to be checked for this assembly.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="328af-700">Данный аргумент не учитывается для объектов этого типа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-700">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-701">Указывает, применен ли конкретный атрибут к сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-701">Indicates whether or not a specified attribute has been applied to the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-702">Значение <see langword="true" />, если атрибут был применен к сборке; в обратном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-702">
              <see langword="true" /> if the attribute has been applied to the assembly; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="328af-703">В следующем примере кода применяется <xref:System.Reflection.AssemblyTitleAttribute> атрибут сборки, и затем использует <xref:System.Reflection.Assembly.IsDefined%2A> для указания того, была ли применена.</span><span class="sxs-lookup"><span data-stu-id="328af-703">The following code example applies the <xref:System.Reflection.AssemblyTitleAttribute> attribute to an assembly and then uses <xref:System.Reflection.Assembly.IsDefined%2A> to indicate whether it was applied.</span></span> <span data-ttu-id="328af-704">Она также проверяет, который не был применен атрибут.</span><span class="sxs-lookup"><span data-stu-id="328af-704">It also tests an attribute that was not applied.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/CS/isdefined.cs#1)]
 [!code-vb[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/VB/isdefined.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-705">Свойство <paramref name="attributeType" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-705">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-706">
            <paramref name="attributeType" /> использует недопустимый тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-706">
              <paramref name="attributeType" /> uses an invalid type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public virtual bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDynamic : bool" Usage="System.Reflection.Assembly.IsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-707">Получает значение, определяющее, была ли текущая сборка создана динамически в текущем процессе с помощью отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-707">Gets a value that indicates whether the current assembly was generated dynamically in the current process by using reflection emit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-708">Значение <see langword="true" />, если текущая сборка была создана динамически в текущем процессе; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-708">
              <see langword="true" /> if the current assembly was generated dynamically in the current process; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-709">Динамические сборки, представляются производного класса <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="328af-709">Dynamic assemblies are represented by the derived class <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span>  
  
 <span data-ttu-id="328af-710">При сохранении динамическую сборку на диск, сохраненную сборку не является динамическим.</span><span class="sxs-lookup"><span data-stu-id="328af-710">When a dynamic assembly is saved to disk, the saved assembly is not dynamic.</span></span> <span data-ttu-id="328af-711">Если сохраненный сборка загружается в другой домен приложения или процесса, <xref:System.Reflection.Assembly.IsDynamic%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="328af-711">If the saved assembly is loaded into another application domain or process, the <xref:System.Reflection.Assembly.IsDynamic%2A> property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullyTrusted">
      <MemberSignature Language="C#" Value="public bool IsFullyTrusted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullyTrusted" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsFullyTrusted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFullyTrusted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFullyTrusted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFullyTrusted : bool" Usage="System.Reflection.Assembly.IsFullyTrusted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-712">Получает значение, указывающее, загружена ли текущая сборка с полным доверием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-712">Gets a value that indicates whether the current assembly is loaded with full trust.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-713">Значение <see langword="true" />, если текущая сборка загружена с полным доверием; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-713">
              <see langword="true" /> if the current assembly is loaded with full trust; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-714">Загружает сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-714">Loads an assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load rawAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="328af-715">Массив байтов, который является образом в формате COFF, содержащим созданную сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-715">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-716">Загружает сборку с образом в формате COFF, содержащим порожденную сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-716">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly.</span>
          </span>
          <span data-ttu-id="328af-717">Сборка загружается в домен приложения вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-717">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-718">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-718">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-719">Уровень доверия сборки, которая загружена с помощью этого метода является таким же, как уровень доверия вызывающей сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-719">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="328af-720">Чтобы загрузить сборку из массива байтов с уровнем доверия домена приложения, используйте <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="328af-720">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="328af-721">Дополнительные сведения об использовании доказательств с перегрузками <xref:System.Reflection.Assembly.Load%2A> метод, использующий байтовых массивов, см. в разделе <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="328af-721">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="328af-722">Отражение исполняемых файлов C++ может вызывать <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="328af-722">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="328af-723">Это наиболее вероятно, из-за компилятор C++ чередует адреса переадресации или `.reloc` разделе исполняемого файла.</span><span class="sxs-lookup"><span data-stu-id="328af-723">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="328af-724">Чтобы сохранить `.reloc` адрес для исполняемого файла C++, укажите `/fixed:no` при компоновке.</span><span class="sxs-lookup"><span data-stu-id="328af-724">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="328af-725">Обратите внимание, что эта перегрузка метода всегда создает новый <xref:System.Reflection.Assembly> объекта с собственным сопоставлением.</span><span class="sxs-lookup"><span data-stu-id="328af-725">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-726">Свойство <paramref name="rawAssembly" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-726">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-727">
            <paramref name="rawAssembly" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-727">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-728">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="rawAssembly" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-728">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef);" />
      <MemberSignature Language="F#" Value="static member Load : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load assemblyRef" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyRef">
          <span data-ttu-id="328af-729">Объект, описывающий загружаемую сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-729">The object that describes the assembly to be loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-730">Загружает сборку с заданным именем <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-730">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-731">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-731">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-732"><xref:System.IO.FileLoadException> возникает, если `assemblyRef` указывает полное имя сборки и первой сборки, которая соответствует простое имя имеет другой версии, языка и региональных параметров или маркер открытого ключа.</span><span class="sxs-lookup"><span data-stu-id="328af-732"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="328af-733">Загрузчик не производит поиск других сборок, которые соответствуют простым именем.</span><span class="sxs-lookup"><span data-stu-id="328af-733">The loader does not continue probing for other assemblies that match the simple name.</span></span> <span data-ttu-id="328af-734">Начиная с .NET Framework 4, так как выполнение кода в удаленных сборок отключен по умолчанию <xref:System.IO.FileLoadException> возникает также в том случае, если `assemblyRef` указывает удаленную сборку.</span><span class="sxs-lookup"><span data-stu-id="328af-734">Starting with .NET Framework 4, because execution of code in remote assemblies is disabled by default, a <xref:System.IO.FileLoadException> is also thrown if `assemblyRef` specifies a remote assembly.</span></span> <span data-ttu-id="328af-735">Чтобы включить выполнение кода, загруженного из удаленных расположений, можно использовать [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="328af-735">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>     
  
> [!NOTE]
>  <span data-ttu-id="328af-736">Не используйте <xref:System.Reflection.AssemblyName> только с <xref:System.Reflection.AssemblyName.CodeBase%2A> набор свойств.</span><span class="sxs-lookup"><span data-stu-id="328af-736">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="328af-737"><xref:System.Reflection.AssemblyName.CodeBase%2A> Свойство не поддерживает какие-либо элементы удостоверения сборки (например, имя или версию), поэтому загрузка не происходит в соответствии с правилами load, удостоверения, как и следовало ожидать из <xref:System.Reflection.Assembly.Load%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-737">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="328af-738">Вместо этого сборка загружается с помощью загрузить из правил.</span><span class="sxs-lookup"><span data-stu-id="328af-738">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="328af-739">Сведения о недостатках использования контекст загрузки с см. в разделе <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> перегрузку метода или [советы и рекомендации для загрузки сборок](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="328af-739">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="328af-740">От свидетельства зависит, предоставляются ли сборке определенные разрешения.</span><span class="sxs-lookup"><span data-stu-id="328af-740">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="328af-741">Далее приведены правила для сборки и слияние свидетельством безопасности.</span><span class="sxs-lookup"><span data-stu-id="328af-741">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="328af-742">При использовании <xref:System.Reflection.Assembly.Load%2A> метод, не имеющий <xref:System.Security.Policy.Evidence> параметр, сборка загружается со свидетельством, предоставленным загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-742">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="328af-743">При использовании <xref:System.Reflection.Assembly.Load%2A> метод с <xref:System.Security.Policy.Evidence> параметра, части свидетельства объединяются.</span><span class="sxs-lookup"><span data-stu-id="328af-743">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="328af-744">Части свидетельство, предоставляемое в качестве аргумента <xref:System.Reflection.Assembly.Load%2A> метод замещают фрагменты свидетельства, предоставленные загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-744">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="328af-745">При использовании <xref:System.Reflection.Assembly.Load%2A> перегрузку метода с `Byte[]` параметр для загрузки общего объекта файла формате COFF образа, свидетельство наследуется от вызывающей сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-745">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="328af-746">Это относится к .NET Framework версии 1.1 пакета обновления 1 (SP1) и последующих выпусков.</span><span class="sxs-lookup"><span data-stu-id="328af-746">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="328af-747">В .NET Framework версии 1.0 и в версии 1.1 без SP1, при использовании <xref:System.Reflection.Assembly.Load%2A> перегрузку метода с `Byte[]` параметр, чтобы загрузить образ COFF свидетельство объединяется.</span><span class="sxs-lookup"><span data-stu-id="328af-747">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="328af-748">`Zone`, `Url` и `Site` наследуются от вызывающей сборки и `Hash` и `StrongName` берутся из сборки COFF.</span><span class="sxs-lookup"><span data-stu-id="328af-748">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="328af-749">При использовании <xref:System.Reflection.Assembly.Load%2A> метод с `Byte[]` параметр и <xref:System.Security.Policy.Evidence> для загрузки образа в формате COFF, используется только предоставленное свидетельство.</span><span class="sxs-lookup"><span data-stu-id="328af-749">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="328af-750">Свидетельство вызывающей сборки и свидетельство образа в формате COFF учитывается.</span><span class="sxs-lookup"><span data-stu-id="328af-750">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="328af-751">Отражение исполняемых файлов C++ может вызывать <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="328af-751">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="328af-752">Это наиболее вероятно, из-за компилятор C++ чередует адреса переадресации или `.reloc` разделе исполняемого файла.</span><span class="sxs-lookup"><span data-stu-id="328af-752">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="328af-753">Чтобы сохранить `.reloc` адрес для исполняемого файла C++, укажите `/fixed:no` при компоновке.</span><span class="sxs-lookup"><span data-stu-id="328af-753">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-754">Если оба <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> свойство и <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> имеет значение, первая попытка загрузить сборку использует отображаемое имя (включая версии, языка и региональных параметров и т. д., возвращенная <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> свойство).</span><span class="sxs-lookup"><span data-stu-id="328af-754">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="328af-755">Если файл не найден, <xref:System.Reflection.AssemblyName.CodeBase%2A> используется для поиска сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-755">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="328af-756">Если сборка найдена с помощью <xref:System.Reflection.AssemblyName.CodeBase%2A>, противопоставляется отображаемое имя сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-756">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="328af-757">Если сопоставление завершается ошибкой, <xref:System.IO.FileLoadException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="328af-757">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-758">В следующем примере создается <xref:System.Reflection.AssemblyName> и использует его для загрузки `sysglobal.dll` сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-758">The following example instantiates an <xref:System.Reflection.AssemblyName> object and uses it to load the `sysglobal.dll` assembly.</span></span> <span data-ttu-id="328af-759">Затем выводится полное имя сборки, открытые типы.</span><span class="sxs-lookup"><span data-stu-id="328af-759">The example then displays the full name of the assembly's public types.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/Load2.cs#2)]
 [!code-vb[System.Reflection.Assembly.Load#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/Load2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-760">Свойство <paramref name="assemblyRef" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-760">
              <paramref name="assemblyRef" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-761">
            <paramref name="assemblyRef" /> не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-761">
              <paramref name="assemblyRef" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-762">
            <block subset="none" type="note">
              <para>В [.NET для приложений Windows Store](http://go.microsoft.com/fwlink/?LinkID=247912) или [переносимой библиотеке классов](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) вместо этого перехватите исключение базового класса <see cref="T:System.IO.IOException" />.  </para>
            </block>  Не удалось загрузить найденный файл.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-762">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>  A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-763">- или - <paramref name="assemblyRef" /> указывает на удаленную сборку, но возможность выполнять код в удаленных сборках отключена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-763">-or-  <paramref name="assemblyRef" /> specifies a remote assembly, but the ability to execute code in remote assemblies is disabled.</span>
          </span>
          <span data-ttu-id="328af-764">См. элемент <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-764">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-765">
            <paramref name="assemblyRef" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-765">
              <paramref name="assemblyRef" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-766">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="assemblyRef" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-766">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-767">для доступа на чтение из файла или каталога, а также для доступа к сведениям, включенным в путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-767">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="328af-768">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-768">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="328af-769">для чтения URI, который не начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-769">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-770">на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-770">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-771">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-771">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load assemblyString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="328af-772">Длинная форма имени сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-772">The long form of the assembly name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-773">Загружает сборку, заданную длинной формой ее имени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-773">Loads an assembly given the long form of its name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-774">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-774">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-775">Длинная форма имени сборки состоит из его простое имя (например, «система» для сборки System.dll) вместе с его версия, язык и региональные параметры, токен открытого ключа и при необходимости архитектурой процессора.</span><span class="sxs-lookup"><span data-stu-id="328af-775">The long form of an assembly name consists of its simple name (such as "System" for the System.dll assembly) along with its version, culture, public key token, and optionally its processor architecture.</span></span> <span data-ttu-id="328af-776">Он соответствует сборки <xref:System.Reflection.Assembly.FullName%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="328af-776">It corresponds to the assembly's <xref:System.Reflection.Assembly.FullName%2A> property.</span></span> <span data-ttu-id="328af-777">Следующий пример иллюстрирует использование длинное имя для загрузки сборки System.dll для .NET Framework 4.</span><span class="sxs-lookup"><span data-stu-id="328af-777">The following example illustrates the use of a long name to load the System.dll assembly for the .NET Framework 4.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/load1.cs#1)]
 [!code-vb[System.Reflection.Assembly.Load#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/load1.vb#1)]  
  
 <span data-ttu-id="328af-778"><xref:System.IO.FileLoadException> возникает, если `assemblyString` указывает полное имя сборки и первой сборки, которая соответствует простое имя имеет другой версии, языка и региональных параметров или маркер открытого ключа.</span><span class="sxs-lookup"><span data-stu-id="328af-778"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="328af-779">Загрузчик не производит поиск других сборок, которые соответствуют простым именем.</span><span class="sxs-lookup"><span data-stu-id="328af-779">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="328af-780">От свидетельства зависит, предоставляются ли сборке определенные разрешения.</span><span class="sxs-lookup"><span data-stu-id="328af-780">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="328af-781">Далее приведены правила для сборки и слияние свидетельством безопасности.</span><span class="sxs-lookup"><span data-stu-id="328af-781">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="328af-782">При использовании <xref:System.Reflection.Assembly.Load%2A> метод, не имеющий <xref:System.Security.Policy.Evidence> параметр, сборка загружается со свидетельством, предоставленным загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-782">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="328af-783">При использовании <xref:System.Reflection.Assembly.Load%2A> метод с <xref:System.Security.Policy.Evidence> параметра, части свидетельства объединяются.</span><span class="sxs-lookup"><span data-stu-id="328af-783">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="328af-784">Части свидетельство, предоставляемое в качестве аргумента <xref:System.Reflection.Assembly.Load%2A> метод замещают фрагменты свидетельства, предоставленные загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-784">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="328af-785">При использовании <xref:System.Reflection.Assembly.Load%2A> перегрузку метода с `Byte[]` параметр для загрузки общего объекта файла формате COFF образа, свидетельство наследуется от вызывающей сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-785">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="328af-786">Это относится к .NET Framework версии 1.1 пакета обновления 1 (SP1) и последующих выпусков.</span><span class="sxs-lookup"><span data-stu-id="328af-786">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="328af-787">В .NET Framework версии 1.0 и в версии 1.1 без SP1, при использовании <xref:System.Reflection.Assembly.Load%2A> перегрузку метода с `Byte[]` параметр, чтобы загрузить образ COFF свидетельство объединяется.</span><span class="sxs-lookup"><span data-stu-id="328af-787">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="328af-788">`Zone`, `Url` и `Site` наследуются от вызывающей сборки и `Hash` и `StrongName` берутся из сборки COFF.</span><span class="sxs-lookup"><span data-stu-id="328af-788">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="328af-789">При использовании <xref:System.Reflection.Assembly.Load%2A> метод с `Byte[]` параметр и <xref:System.Security.Policy.Evidence> для загрузки образа в формате COFF, используется только предоставленное свидетельство.</span><span class="sxs-lookup"><span data-stu-id="328af-789">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="328af-790">Свидетельство вызывающей сборки и свидетельство образа в формате COFF учитывается.</span><span class="sxs-lookup"><span data-stu-id="328af-790">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="328af-791">Отражение исполняемых файлов C++ может вызывать <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="328af-791">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="328af-792">Это наиболее вероятно, из-за компилятор C++ чередует адреса переадресации или `.reloc` разделе исполняемого файла.</span><span class="sxs-lookup"><span data-stu-id="328af-792">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="328af-793">Чтобы сохранить `.reloc` адрес для исполняемого файла C++, укажите `/fixed:no` при компоновке.</span><span class="sxs-lookup"><span data-stu-id="328af-793">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="328af-794">В .NET Framework версии 2.0 архитектура процессора добавляется удостоверения сборки и может быть указан как часть строки имени сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-794">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="328af-795">Например «ProcessorArchitecture = msil».</span><span class="sxs-lookup"><span data-stu-id="328af-795">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="328af-796">Тем не менее, чтобы указать имя сборки рекомендуется создать <xref:System.Reflection.AssemblyName> и передать его в соответствующую перегрузку <xref:System.Reflection.Assembly.Load%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-796">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="328af-797">См. раздел <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="328af-797">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-798">В следующем примере загружает сборку с заданным его полное имя и перечисляются все типы, содержащиеся в указанной сборке.</span><span class="sxs-lookup"><span data-stu-id="328af-798">The following example loads an assembly given its fully qualified name, and lists all the types contained in the specified assembly.</span></span> <span data-ttu-id="328af-799">Для этого примера кода для запуска необходимо указать полное имя сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-799">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="328af-800">Сведения о том, как получить полное имя сборки, см. в разделе [имена сборок](~/docs/framework/app-domains/assembly-names.md).</span><span class="sxs-lookup"><span data-stu-id="328af-800">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[assembly.load1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.Load1/CPP/load1.cpp#1)]
 [!code-csharp[assembly.load1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.Load1/CS/load1.cs#1)]
 [!code-vb[assembly.load1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.Load1/VB/load1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-801">Свойство <paramref name="assemblyString" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-801">
              <paramref name="assemblyString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-802">
            <paramref name="assemblyString" /> представляет собой строку нулевой длины.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-802">
              <paramref name="assemblyString" /> is a zero-length string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-803">
            <paramref name="assemblyString" /> не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-803">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-804">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-804">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-805">
            <paramref name="assemblyString" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-805">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-806">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="assemblyString" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-806">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-807">на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-807">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-808">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-808">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] * byte[] -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (rawAssembly, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="328af-809">Массив байтов, который является образом в формате COFF, содержащим созданную сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-809">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="328af-810">Массив байтов, содержащий необработанные байты, которые представляют символы для сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-810">A byte array that contains the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-811">Загружает сборку с образом в формате COFF, содержащим выпущенную сборку и (дополнительно) символы для сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-811">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols for the assembly.</span>
          </span>
          <span data-ttu-id="328af-812">Сборка загружается в домен приложения вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-812">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-813">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-813">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-814">Уровень доверия сборки, которая загружена с помощью этого метода является таким же, как уровень доверия вызывающей сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-814">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="328af-815">Чтобы загрузить сборку из массива байтов с уровнем доверия домена приложения, используйте <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="328af-815">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="328af-816">Дополнительные сведения об использовании доказательств с перегрузками <xref:System.Reflection.Assembly.Load%2A> метод, использующий байтовых массивов, см. в разделе <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="328af-816">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="328af-817">Отражение исполняемых файлов C++ может вызывать <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="328af-817">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="328af-818">Это наиболее вероятно, из-за компилятор C++ чередует адреса переадресации или `.reloc` разделе исполняемого файла.</span><span class="sxs-lookup"><span data-stu-id="328af-818">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="328af-819">Чтобы сохранить `.reloc` адрес для исполняемого файла C++, укажите `/fixed:no` при компоновке.</span><span class="sxs-lookup"><span data-stu-id="328af-819">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="328af-820">Обратите внимание, что эта перегрузка метода всегда создает новый <xref:System.Reflection.Assembly> объекта с собственным сопоставлением.</span><span class="sxs-lookup"><span data-stu-id="328af-820">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-821">Свойство <paramref name="rawAssembly" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-821">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-822">
            <paramref name="rawAssembly" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-822">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-823">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="rawAssembly" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-823">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="static member Load : System.Reflection.AssemblyName * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (assemblyRef, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyRef">
          <span data-ttu-id="328af-824">Объект, описывающий загружаемую сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-824">The object that describes the assembly to be loaded.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="328af-825">Свидетельство для загрузки сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-825">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-826">Загружает сборку с заданным именем <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-826">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span>
          </span>
          <span data-ttu-id="328af-827">Сборка загружена в домен вызывающего объекта с использованием переданного свидетельства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-827">The assembly is loaded into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-828">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-828">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-829"><xref:System.IO.FileLoadException> возникает, если `assemblyRef` указывает полное имя сборки и первой сборки, которая соответствует простое имя имеет другой версии, языка и региональных параметров или маркер открытого ключа.</span><span class="sxs-lookup"><span data-stu-id="328af-829"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="328af-830">Загрузчик не производит поиск других сборок, которые соответствуют простым именем.</span><span class="sxs-lookup"><span data-stu-id="328af-830">The loader does not continue probing for other assemblies that match the simple name.</span></span>  <span data-ttu-id="328af-831">Начиная с .NET Framework 4, так как выполнение кода в удаленных сборок отключен по умолчанию <xref:System.IO.FileLoadException> возникает также в том случае, если `assemblyRef` указывает удаленную сборку.</span><span class="sxs-lookup"><span data-stu-id="328af-831">Starting with .NET Framework 4, because execution of code in remote assemblies is disabled by default, a <xref:System.IO.FileLoadException> is also thrown if `assemblyRef` specifies a remote assembly.</span></span> <span data-ttu-id="328af-832">Чтобы включить выполнение кода, загруженного из удаленных расположений, можно использовать [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="328af-832">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>   
  
> [!NOTE]
>  <span data-ttu-id="328af-833">Не используйте <xref:System.Reflection.AssemblyName> только с <xref:System.Reflection.AssemblyName.CodeBase%2A> набор свойств.</span><span class="sxs-lookup"><span data-stu-id="328af-833">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="328af-834"><xref:System.Reflection.AssemblyName.CodeBase%2A> Свойство не поддерживает какие-либо элементы удостоверения сборки (например, имя или версию), поэтому загрузка не происходит в соответствии с правилами load, удостоверения, как и следовало ожидать из <xref:System.Reflection.Assembly.Load%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-834">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="328af-835">Вместо этого сборка загружается с помощью загрузить из правил.</span><span class="sxs-lookup"><span data-stu-id="328af-835">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="328af-836">Сведения о недостатках использования контекст загрузки с см. в разделе <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> перегрузку метода или [советы и рекомендации для загрузки сборок](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="328af-836">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="328af-837">От свидетельства зависит, предоставляются ли сборке определенные разрешения.</span><span class="sxs-lookup"><span data-stu-id="328af-837">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="328af-838">Далее приведены правила для сборки и слияние свидетельством безопасности.</span><span class="sxs-lookup"><span data-stu-id="328af-838">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="328af-839">При использовании <xref:System.Reflection.Assembly.Load%2A> метод, не имеющий <xref:System.Security.Policy.Evidence> параметр, сборка загружается со свидетельством, предоставленным загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-839">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="328af-840">При использовании <xref:System.Reflection.Assembly.Load%2A> метод с <xref:System.Security.Policy.Evidence> параметра, части свидетельства объединяются.</span><span class="sxs-lookup"><span data-stu-id="328af-840">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="328af-841">Части свидетельство, предоставляемое в качестве аргумента <xref:System.Reflection.Assembly.Load%2A> метод замещают фрагменты свидетельства, предоставленные загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-841">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="328af-842">При использовании <xref:System.Reflection.Assembly.Load%2A> перегрузку метода с `Byte[]` параметр для загрузки общего объекта файла формате COFF образа, свидетельство наследуется от вызывающей сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-842">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="328af-843">Это относится к .NET Framework версии 1.1 пакета обновления 1 (SP1) и последующих выпусков.</span><span class="sxs-lookup"><span data-stu-id="328af-843">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="328af-844">В .NET Framework версии 1.0 и в версии 1.1 без SP1, при использовании <xref:System.Reflection.Assembly.Load%2A> перегрузку метода с `Byte[]` параметр, чтобы загрузить образ COFF свидетельство объединяется.</span><span class="sxs-lookup"><span data-stu-id="328af-844">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="328af-845">`Zone`, `Url` и `Site` наследуются от вызывающей сборки и `Hash` и `StrongName` берутся из сборки COFF.</span><span class="sxs-lookup"><span data-stu-id="328af-845">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="328af-846">При использовании <xref:System.Reflection.Assembly.Load%2A> метод с `Byte[]` параметр и <xref:System.Security.Policy.Evidence> для загрузки образа в формате COFF, используется только предоставленное свидетельство.</span><span class="sxs-lookup"><span data-stu-id="328af-846">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="328af-847">Свидетельство вызывающей сборки и свидетельство образа в формате COFF учитывается.</span><span class="sxs-lookup"><span data-stu-id="328af-847">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="328af-848">Отражение исполняемых файлов C++ может вызывать <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="328af-848">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="328af-849">Это наиболее вероятно, из-за компилятор C++ чередует адреса переадресации или `.reloc` разделе исполняемого файла.</span><span class="sxs-lookup"><span data-stu-id="328af-849">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="328af-850">Чтобы сохранить `.reloc` адрес для исполняемого файла C++, укажите `/fixed:no` при компоновке.</span><span class="sxs-lookup"><span data-stu-id="328af-850">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-851">Если оба <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> свойство и <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> имеет значение, первая попытка загрузить сборку использует отображаемое имя (включая версии, языка и региональных параметров и т. д., возвращенная <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> свойство).</span><span class="sxs-lookup"><span data-stu-id="328af-851">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="328af-852">Если файл не найден, <xref:System.Reflection.AssemblyName.CodeBase%2A> используется для поиска сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-852">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="328af-853">Если сборка найдена с помощью <xref:System.Reflection.AssemblyName.CodeBase%2A>, противопоставляется отображаемое имя сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-853">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="328af-854">Если сопоставление завершается ошибкой, <xref:System.IO.FileLoadException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="328af-854">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="328af-855">При вызове метода <xref:System.Reflection.Assembly.Load%2A> более чем один раз для одной сборки, но с разными свидетельствами, среда CLR не вызывает метод <xref:System.IO.FileLoadException> из-за невозможности проверки на равенство и целостность различных спецификаций свидетельства определить.</span><span class="sxs-lookup"><span data-stu-id="328af-855">If you call the <xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="328af-856">Свидетельство сначала выполняется успешно, это свидетельство, который используется.</span><span class="sxs-lookup"><span data-stu-id="328af-856">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-857">Свойство <paramref name="assemblyRef" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-857">
              <paramref name="assemblyRef" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-858">
            <paramref name="assemblyRef" /> не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-858">
              <paramref name="assemblyRef" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-859">
            <paramref name="assemblyRef" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-859">
              <paramref name="assemblyRef" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-860">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="assemblyRef" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-860">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-861">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-861">An assembly or module was loaded twice with two different evidences.</span>
          </span>
          <span data-ttu-id="328af-862">- или - <paramref name="assemblyRef" /> указывает на удаленную сборку, но возможность выполнять код в удаленных сборках отключена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-862">-or-  <paramref name="assemblyRef" /> specifies a remote assembly, but the ability to execute code in remote assemblies is disabled.</span>
          </span>
          <span data-ttu-id="328af-863">См. элемент <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-863">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-864">для доступа на чтение из файла или каталога, а также для доступа к сведениям, включенным в путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-864">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="328af-865">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-865">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="328af-866">для чтения URI, который не начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-866">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-867">на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-867">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-868">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-868">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberSignature Language="F#" Value="static member Load : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (assemblyString, assemblySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="328af-869">Отображаемое имя сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-869">The display name of the assembly.</span>
          </span>
        </param>
        <param name="assemblySecurity">
          <span data-ttu-id="328af-870">Свидетельство для загрузки сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-870">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-871">Загружает сборку с заданным отображаемым именем. Сборка загружается в домен вызывающего объекта с использованием переданного основания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-871">Loads an assembly given its display name, loading the assembly into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-872">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-872">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-873"><xref:System.IO.FileLoadException> возникает, если `assemblyString` указывает полное имя сборки и первой сборки, которая соответствует простое имя имеет другой версии, языка и региональных параметров или маркер открытого ключа.</span><span class="sxs-lookup"><span data-stu-id="328af-873"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="328af-874">Загрузчик не производит поиск других сборок, которые соответствуют простым именем.</span><span class="sxs-lookup"><span data-stu-id="328af-874">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="328af-875">От свидетельства зависит, предоставляются ли сборке определенные разрешения.</span><span class="sxs-lookup"><span data-stu-id="328af-875">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="328af-876">Далее приведены правила для сборки и слияние свидетельством безопасности.</span><span class="sxs-lookup"><span data-stu-id="328af-876">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="328af-877">При использовании <xref:System.Reflection.Assembly.Load%2A> метод, не имеющий <xref:System.Security.Policy.Evidence> параметр, сборка загружается со свидетельством, предоставленным загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-877">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="328af-878">При использовании <xref:System.Reflection.Assembly.Load%2A> метод с <xref:System.Security.Policy.Evidence> параметра, части свидетельства объединяются.</span><span class="sxs-lookup"><span data-stu-id="328af-878">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="328af-879">Части свидетельство, предоставляемое в качестве аргумента <xref:System.Reflection.Assembly.Load%2A> метод замещают фрагменты свидетельства, предоставленные загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-879">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="328af-880">При использовании <xref:System.Reflection.Assembly.Load%2A> перегрузку метода с `Byte[]` параметр для загрузки общего объекта файла формате COFF образа, свидетельство наследуется от вызывающей сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-880">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="328af-881">Это относится к .NET Framework версии 1.1 пакета обновления 1 (SP1) и последующих выпусков.</span><span class="sxs-lookup"><span data-stu-id="328af-881">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="328af-882">В .NET Framework версии 1.0 и в версии 1.1 без SP1, при использовании <xref:System.Reflection.Assembly.Load%2A> перегрузку метода с `Byte[]` параметр, чтобы загрузить образ COFF свидетельство объединяется.</span><span class="sxs-lookup"><span data-stu-id="328af-882">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="328af-883">`Zone`, `Url` и `Site` наследуются от вызывающей сборки и `Hash` и `StrongName` берутся из сборки COFF.</span><span class="sxs-lookup"><span data-stu-id="328af-883">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="328af-884">При использовании <xref:System.Reflection.Assembly.Load%2A> метод с `Byte[]` параметр и <xref:System.Security.Policy.Evidence> для загрузки образа в формате COFF, используется только предоставленное свидетельство.</span><span class="sxs-lookup"><span data-stu-id="328af-884">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="328af-885">Свидетельство вызывающей сборки и свидетельство образа в формате COFF учитывается.</span><span class="sxs-lookup"><span data-stu-id="328af-885">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="328af-886">Отражение исполняемых файлов C++ может вызывать <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="328af-886">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="328af-887">Это наиболее вероятно, из-за компилятор C++ чередует адреса переадресации или `.reloc` разделе исполняемого файла.</span><span class="sxs-lookup"><span data-stu-id="328af-887">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="328af-888">Чтобы сохранить `.reloc` адрес для исполняемого файла C++, укажите `/fixed:no` при компоновке.</span><span class="sxs-lookup"><span data-stu-id="328af-888">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="328af-889">Если этот метод вызывается несколько раз к той же сборке, но с разными свидетельствами, среда CLR не создает исключение <xref:System.IO.FileLoadException> , так как невозможно определить равенство и целостность различных спецификаций свидетельства.</span><span class="sxs-lookup"><span data-stu-id="328af-889">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="328af-890">Свидетельство сначала выполняется успешно, это свидетельство, который используется.</span><span class="sxs-lookup"><span data-stu-id="328af-890">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="328af-891">В .NET Framework версии 2.0 архитектура процессора добавляется удостоверения сборки и может быть указан как часть строки имени сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-891">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="328af-892">Например «ProcessorArchitecture = msil».</span><span class="sxs-lookup"><span data-stu-id="328af-892">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="328af-893">Тем не менее, чтобы указать имя сборки рекомендуется создать <xref:System.Reflection.AssemblyName> и передать его в соответствующую перегрузку <xref:System.Reflection.Assembly.Load%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-893">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="328af-894">См. раздел <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="328af-894">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-895">Свойство <paramref name="assemblyString" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-895">
              <paramref name="assemblyString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-896">
            <paramref name="assemblyString" /> не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-896">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-897">
            <paramref name="assemblyString" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-897">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-898">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="assemblyString" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-898">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-899">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-899">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-900">-или-  Сборка или модуль были загружены дважды с двумя разными свидетельствами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-900">-or-  An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-901">на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-901">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-902">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-902">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte(), securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] * byte[] * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (rawAssembly, rawSymbolStore, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="328af-903">Массив байтов, который является образом в формате COFF, содержащим созданную сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-903">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="328af-904">Массив байтов, содержащий необработанные байты, которые представляют символы для сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-904">A byte array that contains the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="328af-905">Свидетельство для загрузки сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-905">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-906">Загружает сборку с образом в формате COFF, содержащим выпущенную сборку и (необязательно) символы и свидетельство для сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-906">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and evidence for the assembly.</span>
          </span>
          <span data-ttu-id="328af-907">Сборка загружается в домен приложения вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-907">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-908">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-908">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-909">Сборка загружена в домен вызывающего объекта с использованием переданного свидетельства.</span><span class="sxs-lookup"><span data-stu-id="328af-909">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span> <span data-ttu-id="328af-910">Также загружаются необработанные байты, представляющие собой символы для сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-910">The raw bytes representing the symbols for the assembly are also loaded.</span></span>  
  
 <span data-ttu-id="328af-911">От свидетельства зависит, предоставляются ли сборке определенные разрешения.</span><span class="sxs-lookup"><span data-stu-id="328af-911">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="328af-912">Далее приведены правила для сборки и слияние свидетельством безопасности.</span><span class="sxs-lookup"><span data-stu-id="328af-912">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="328af-913">При использовании <xref:System.Reflection.Assembly.Load%2A> метод, не имеющий <xref:System.Security.Policy.Evidence> параметр, сборка загружается со свидетельством, предоставленным загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-913">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="328af-914">При использовании <xref:System.Reflection.Assembly.Load%2A> метод с <xref:System.Security.Policy.Evidence> параметра, части свидетельства объединяются.</span><span class="sxs-lookup"><span data-stu-id="328af-914">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="328af-915">Части свидетельство, предоставляемое в качестве аргумента <xref:System.Reflection.Assembly.Load%2A> метод замещают фрагменты свидетельства, предоставленные загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-915">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="328af-916">При использовании <xref:System.Reflection.Assembly.Load%2A> перегрузку метода с `Byte[]` параметр, чтобы загрузить образ COFF свидетельство наследуется от вызывающей сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-916">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="328af-917">Это относится к .NET Framework версии 1.1 пакета обновления 1 (SP1) и последующих выпусков.</span><span class="sxs-lookup"><span data-stu-id="328af-917">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="328af-918">В .NET Framework версии 1.0 и в версии 1.1 без SP1, при использовании <xref:System.Reflection.Assembly.Load%2A> перегрузку метода с `Byte[]` параметр, чтобы загрузить образ COFF свидетельство объединяется.</span><span class="sxs-lookup"><span data-stu-id="328af-918">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="328af-919">`Zone`, `Url` и `Site` наследуются от вызывающей сборки и `Hash` и `StrongName` берутся из сборки COFF.</span><span class="sxs-lookup"><span data-stu-id="328af-919">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="328af-920">При использовании <xref:System.Reflection.Assembly.Load%2A> метод с `Byte[]` параметр и <xref:System.Security.Policy.Evidence> для загрузки образа в формате COFF, используется только предоставленное свидетельство.</span><span class="sxs-lookup"><span data-stu-id="328af-920">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="328af-921">Свидетельство вызывающей сборки и свидетельство образа в формате COFF, игнорируются.</span><span class="sxs-lookup"><span data-stu-id="328af-921">Evidence of the calling assembly and evidence of the COFF image are ignored.</span></span>  
  
 <span data-ttu-id="328af-922">Отражение исполняемых файлов C++ может вызывать <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="328af-922">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="328af-923">Это наиболее вероятно, из-за компилятор C++ чередует адреса переадресации или `.reloc` разделе исполняемого файла.</span><span class="sxs-lookup"><span data-stu-id="328af-923">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="328af-924">Чтобы сохранить `.reloc` адрес для исполняемого файла C++, укажите `/fixed:no` при компоновке.</span><span class="sxs-lookup"><span data-stu-id="328af-924">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="328af-925">При вызове метода [\], байтов\<xref:System.Reflection.Assembly.Load%2A > более чем один раз для одной сборки, но с разными свидетельствами, среда CLR не вызывает метод <xref:System.IO.FileLoadException> поскольку не удается определить равенство и целостность различных спецификаций свидетельства.</span><span class="sxs-lookup"><span data-stu-id="328af-925">If you call the [\], Byte\<xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="328af-926">Свидетельство сначала выполняется успешно, это свидетельство, который используется.</span><span class="sxs-lookup"><span data-stu-id="328af-926">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="328af-927">Обратите внимание, что эта перегрузка метода всегда создает новый <xref:System.Reflection.Assembly> объекта с собственным сопоставлением.</span><span class="sxs-lookup"><span data-stu-id="328af-927">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-928">Свойство <paramref name="rawAssembly" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-928">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-929">
            <paramref name="rawAssembly" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-929">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-930">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="rawAssembly" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-930">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-931">Сборка или модуль был загружен дважды с двумя разными свидетельствами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-931">An assembly or module was loaded twice with two different evidences.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="328af-932">
            <paramref name="securityEvidence" /> не является <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-932">
              <paramref name="securityEvidence" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="328af-933">По умолчанию устаревшая политика CAS не включена в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Если она не включена, параметр <paramref name="securityEvidence" /> должен иметь значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-933">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-934">возможность передать свидетельство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-934">for the ability to supply evidence.</span>
          </span>
          <span data-ttu-id="328af-935">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-935">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
          <span data-ttu-id="328af-936">Если не удается найти <see cref="F:System.Security.Permissions.SecurityAction.Demand" />, он проходит по иерархии класса, пока не найдет типом-примитивом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-936">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.SecurityContextSource securityContextSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, valuetype System.Security.SecurityContextSource securityContextSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::SecurityContextSource securityContextSource);" />
      <MemberSignature Language="F#" Value="static member Load : byte[] * byte[] * System.Security.SecurityContextSource -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.Load (rawAssembly, rawSymbolStore, securityContextSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityContextSource" Type="System.Security.SecurityContextSource" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="328af-937">Массив байтов, который является образом в формате COFF, содержащим созданную сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-937">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="328af-938">Массив байтов, содержащий необработанные байты, которые представляют символы для сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-938">A byte array that contains the raw bytes representing the symbols for the assembly.</span>
          </span>
        </param>
        <param name="securityContextSource">
          <span data-ttu-id="328af-939">Источник контекста безопасности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-939">The source of the security context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-940">Загружает сборку с образом в формате COFF, содержащим выпущенную сборку и необязательно содержащим символы и задающим источник для контекста безопасности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-940">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and specifying the source for the security context.</span>
          </span>
          <span data-ttu-id="328af-941">Сборка загружается в домен приложения вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-941">The assembly is loaded into the application domain of the caller.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-942">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-942">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-943">Сборка загружается в домен приложения вызывающего объекта, используя указанный источник для контекста безопасности.</span><span class="sxs-lookup"><span data-stu-id="328af-943">The assembly is loaded into the application domain of the caller using the specified source for the security context.</span></span> <span data-ttu-id="328af-944">Если `rawSymbolStore` был указан, также загружаются необработанные байты, которые представляют символы для сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-944">If `rawSymbolStore` was specified, the raw bytes that represent the symbols for the assembly are also loaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-945">Свойство <paramref name="rawAssembly" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-945">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-946">
            <paramref name="rawAssembly" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-946">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-947">-или-  Сборка <paramref name="rawAssembly" /> была скомпилирована в более поздней версии среды CLR, чем версия, загруженная в текущий момент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-947">-or-  <paramref name="rawAssembly" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="328af-948">Значение <paramref name="securityContextSource" /> не является одним из значений перечисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-948">The value of <paramref name="securityContextSource" /> is not one of the enumeration values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-949">Загружает содержимое файла сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-949">Loads the contents of an assembly file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member LoadFile : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="328af-950">Полный путь к загружаемому файлу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-950">The fully qualified path of the file to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-951">Загружает содержимое файла сборки, находящегося по указанному пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-951">Loads the contents of an assembly file on the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-952">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-952">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-953">Используйте <xref:System.Reflection.Assembly.LoadFile%2A> метод для загрузки и анализа сборок, которые имеют одинаковое удостоверение, но расположены в разных путей.</span><span class="sxs-lookup"><span data-stu-id="328af-953">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.</span></span> <span data-ttu-id="328af-954"><xref:System.Reflection.Assembly.LoadFile%2A> не загружает файлы в контекст загрузки с, а не разрешать зависимости, используя в качестве пути загрузки, <xref:System.Reflection.Assembly.LoadFrom%2A> делает метод.</span><span class="sxs-lookup"><span data-stu-id="328af-954"><xref:System.Reflection.Assembly.LoadFile%2A> does not load files into the load-from  context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="328af-955"><xref:System.Reflection.Assembly.LoadFile%2A> полезно в этом сценарии ограниченной поскольку <xref:System.Reflection.Assembly.LoadFrom%2A> не может использоваться для загрузки сборок, имеющих одинаковые идентификаторы, но разные пути; он будет загружаться только первые такой сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-955"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  

<span data-ttu-id="328af-956">Начиная с .NET Framework 4, если `path` указывает на сборку в удаленных расположениях, загрузка сборки отключено по умолчанию и `LoadFile` вызывает метод <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="328af-956">Starting with .NET Framework 4, if `path` specifies an assembly in a remote location, assembly loading is disabled by default, and the `LoadFile` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="328af-957">Чтобы включить выполнение кода, загруженного из удаленных расположений, можно использовать [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="328af-957">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-958">Аргумент <paramref name="path" /> не является абсолютным путем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-958">The <paramref name="path" /> argument is not an absolute path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-959">Параметр <paramref name="path" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-959">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-960">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-960">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-961">- или - Отключена возможность выполнять код в удаленных сборках.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-961">-or-  The ability to execute code in remote assemblies is disabled.</span>
          </span>
          <span data-ttu-id="328af-962">См. элемент <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-962">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-963">Параметр <paramref name="path" /> представляет собой пустую строку ("") или не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-963">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-964">
            <paramref name="path" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-964">
              <paramref name="path" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-965">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="path" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-965">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-966">для доступа на чтение из файла или каталога, а также для доступа к сведениям, включенным в путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-966">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="328af-967">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-967">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-968">на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-968">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-969">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-969">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member LoadFile : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFile (path, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="328af-970">Полный путь к файлу сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-970">The fully qualified path of the assembly file.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="328af-971">Свидетельство для загрузки сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-971">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-972">Загружает сборку с заданным путем в домен вызывающего объекта с использованием переданного свидетельства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-972">Loads an assembly given its path, loading the assembly into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-973">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-973">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-974">Используйте <xref:System.Reflection.Assembly.LoadFile%2A> метод для загрузки и анализа сборок, которые имеют одинаковое удостоверение, но расположены в разных путей.</span><span class="sxs-lookup"><span data-stu-id="328af-974">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.</span></span> <span data-ttu-id="328af-975"><xref:System.Reflection.Assembly.LoadFile%2A> не загружает файлы в <xref:System.Reflection.Assembly.LoadFrom%2A> контекста и не разрешает зависимости, используя в качестве пути загрузки <xref:System.Reflection.Assembly.LoadFrom%2A> делает метод.</span><span class="sxs-lookup"><span data-stu-id="328af-975"><xref:System.Reflection.Assembly.LoadFile%2A> does not load files into the <xref:System.Reflection.Assembly.LoadFrom%2A> context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="328af-976"><xref:System.Reflection.Assembly.LoadFile%2A> полезно в этом сценарии ограниченной поскольку <xref:System.Reflection.Assembly.LoadFrom%2A> не может использоваться для загрузки сборок, имеющих одинаковые идентификаторы, но разные пути; он будет загружаться только первые такой сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-976"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  

<span data-ttu-id="328af-977">Начиная с .NET Framework 4, если `path` указывает на сборку в удаленных расположениях, загрузка сборки отключено по умолчанию и `LoadFile` вызывает метод <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="328af-977">Starting with .NET Framework 4, if `path` specifies an assembly in a remote location, assembly loading is disabled by default, and the `LoadFile` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="328af-978">Чтобы включить выполнение кода, загруженного из удаленных расположений, можно использовать [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="328af-978">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-979">Аргумент <paramref name="path" /> не является абсолютным путем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-979">The <paramref name="path" /> argument is not an absolute path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-980">Параметр <paramref name="path" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-980">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-981">Параметр <paramref name="path" /> представляет собой пустую строку ("") или не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-981">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-982">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-982">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-983">- или - Отключена возможность выполнять код в удаленных сборках.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-983">-or-  The ability to execute code in remote assemblies is disabled.</span>
          </span>
          <span data-ttu-id="328af-984">См. элемент <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-984">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-985">
            <paramref name="path" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-985">
              <paramref name="path" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-986">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="path" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-986">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="328af-987">
            <paramref name="securityEvidence" /> не является <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-987">
              <paramref name="securityEvidence" /> is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="328af-988">По умолчанию устаревшая политика CAS не включена в [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]. Если она не включена, параметр <paramref name="securityEvidence" /> должен иметь значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-988">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-989">для доступа на чтение из файла или каталога, а также для доступа к сведениям, включенным в путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-989">for access to read from a file or directory, and for access to the information in the path itself.</span>
          </span>
          <span data-ttu-id="328af-990">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-990">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-991">на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-991">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-992">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-992">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-993">Загружает сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-993">Loads an assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
             
## Remarks

<span data-ttu-id="328af-994">Начиная с .NET Framework 4, по умолчанию, а вызов отключена возможность выполнения кода в сборки, загруженные из удаленных расположений `LoadFrom` вызывает метод <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="328af-994">Starting with .NET Framework 4, the ability to execute code in assemblies loaded from remote locations is disabled by default, and the call to the `LoadFrom` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="328af-995">Для загрузки сборки и выполнения его кода, необходимо:</span><span class="sxs-lookup"><span data-stu-id="328af-995">To load the assembly and execute its code, you must either:</span></span>

- <span data-ttu-id="328af-996">Явным образом создайте "песочницу" для сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-996">Explicitly create a sandbox for the assembly.</span></span> <span data-ttu-id="328af-997">(См. в разделе [как: запуска частично доверенного кода в изолированной среде](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).)</span><span class="sxs-lookup"><span data-stu-id="328af-997">(See [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).)</span></span>

- <span data-ttu-id="328af-998">Выполнять код сборки в режиме полного доверия, присвоив `enabled` атрибут [ `<loadFromRemoteSources>` элемента конфигурации](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) для `true`.</span><span class="sxs-lookup"><span data-stu-id="328af-998">Run the assembly's code in full trust by setting the `enabled` attribute of the [`<loadFromRemoteSources>` configuration element](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) to `true`.</span></span> <span data-ttu-id="328af-999">Дополнительные сведения см. в разделе [ `<loadFromRemoteSources>` элемента конфигурации](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) статьи.</span><span class="sxs-lookup"><span data-stu-id="328af-999">For more information, see the [`<loadFromRemoteSources>` configuration element](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) article.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="328af-1000">Имя файла, содержащего манифест сборки, либо путь к нему.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1000">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1001">Загружает сборку с заданным именем или путем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1001">Loads an assembly given its file name or path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1002">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1002">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1003">`assemblyFile` Параметр должен ссылаться на URI без escape-символы.</span><span class="sxs-lookup"><span data-stu-id="328af-1003">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="328af-1004">Этот метод предоставляет escape-символы для всех недопустимых символов в URI.</span><span class="sxs-lookup"><span data-stu-id="328af-1004">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-1005">Протокол передачи файлов (FTP) не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="328af-1005">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="328af-1006">Если указан URI для `assemblyFile` является адресом FTP, сборка не загружается.</span><span class="sxs-lookup"><span data-stu-id="328af-1006">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="328af-1007">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="328af-1007">No exception is thrown.</span></span>  
  
 <span data-ttu-id="328af-1008">`assemblyFile` может быть абсолютным или относительным для текущего каталога, и сборка загружается в домен вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="328af-1008">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="328af-1009">Сборки могут загружаться в одном из трех контекстов или могут быть загружены без контекста:</span><span class="sxs-lookup"><span data-stu-id="328af-1009">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="328af-1010">Контекст загрузки содержит сборки, обнаруженные в результате поиска: в глобальном кэше СБОРОК, в хранилище сборки хранить Если размещается среда выполнения или в <xref:System.AppDomainSetup.ApplicationBase%2A> и <xref:System.AppDomainSetup.PrivateBinPath%2A> домена приложения.</span><span class="sxs-lookup"><span data-stu-id="328af-1010">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="328af-1011">В большинстве перегруженных версий метода <xref:System.Reflection.Assembly.Load%2A> сборки загружаются именно в этот контекст.</span><span class="sxs-lookup"><span data-stu-id="328af-1011">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="328af-1012">Контекст загрузки с содержит сборки, для которых пользователь указал путь не включен в каталоги поиска проверки.</span><span class="sxs-lookup"><span data-stu-id="328af-1012">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="328af-1013">К примерам методов, которые выполняют загрузку по указанному пути, относятся методы <xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> и <xref:System.AppDomain.ExecuteAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-1013"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span> 

    <span data-ttu-id="328af-1014">Начиная с .NET Framework 4, если URI `assemblyFile` указывает удаленного расположения, загрузка сборки отключен по умолчанию и `LoadFrom` вызывает метод <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="328af-1014">Starting with .NET Framework 4, if the URI of `assemblyFile` specifies a remote location, assembly loading is disabled by default, and the `LoadFrom` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="328af-1015">Чтобы включить выполнение кода, загруженного из удаленных расположений, можно использовать [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="328af-1015">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    
  
-   <span data-ttu-id="328af-1016">Контекст только для отражения содержит сборки, загруженные с <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> и <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> методов; код в этих контекстах, не может быть выполнена.</span><span class="sxs-lookup"><span data-stu-id="328af-1016">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="328af-1017">Если пользователь создается или найти сборку, это не в любом контексте.</span><span class="sxs-lookup"><span data-stu-id="328af-1017">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="328af-1018">Это относится к сборкам, загруженным с помощью перегрузки <xref:System.Reflection.Assembly.Load%2A> метод, который указывается массив байтов, содержащий сборку, а чтобы временные динамические сборки, созданные с помощью отражения для создания и не сохраняются на диске.</span><span class="sxs-lookup"><span data-stu-id="328af-1018">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="328af-1019">Контекст загрузки с сборку необходимо загрузить из пути, не включается в область поиска и еще позволяет зависимости по этому пути, чтобы найти и загрузить, так как сведения о пути хранятся в контексте.</span><span class="sxs-lookup"><span data-stu-id="328af-1019">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="328af-1020"><xref:System.Reflection.Assembly.LoadFrom%2A> Метод имеет следующие недостатки.</span><span class="sxs-lookup"><span data-stu-id="328af-1020">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="328af-1021">Вместо этого рекомендуется использовать <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-1021">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="328af-1022">Если сборка с тем же идентификатором уже загружена, метод <xref:System.Reflection.Assembly.LoadFrom%2A> возвращает загруженную сборку даже в том случае, если был задан другой путь.</span><span class="sxs-lookup"><span data-stu-id="328af-1022">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="328af-1023">Если сборка загружается с <xref:System.Reflection.Assembly.LoadFrom%2A>и последующие попытки загрузить ту же сборку по отображаемому имени сборки в контекст загрузки, попытка загрузки завершится неудачей.</span><span class="sxs-lookup"><span data-stu-id="328af-1023">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="328af-1024">Это может произойти при десериализации сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-1024">This can occur when an assembly is de-serialized.</span></span>  
  
-   <span data-ttu-id="328af-1025">Если сборка загружается с <xref:System.Reflection.Assembly.LoadFrom%2A>, и путь поиска сборок включает сборку с тем же идентификатором, но другое расположение, <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, или другие непредсказуемые последствия.</span><span class="sxs-lookup"><span data-stu-id="328af-1025">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="328af-1026">Метод <xref:System.Reflection.Assembly.LoadFrom%2A> требует наличия флагов <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> или <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> либо наличия объекта <xref:System.Net.WebPermission> для заданного пути.</span><span class="sxs-lookup"><span data-stu-id="328af-1026"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="328af-1027">Если образ в машинном коде для `assemblyFile`, он не используется.</span><span class="sxs-lookup"><span data-stu-id="328af-1027">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="328af-1028">Сборка не может быть загружена как нейтральная к домену.</span><span class="sxs-lookup"><span data-stu-id="328af-1028">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="328af-1029">В .NET Framework версий 1.0 и 1.1 политика не применяется.</span><span class="sxs-lookup"><span data-stu-id="328af-1029">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-1030">В следующем примере загружается сборка, заданная его имя файла или путь.</span><span class="sxs-lookup"><span data-stu-id="328af-1030">The following example loads an assembly given its file name or path.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1031">Свойство <paramref name="assemblyFile" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1031">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-1032">Файл <paramref name="assemblyFile" /> не найден, или модуль, который вы пытаетесь загрузить, не указывает расширение имени файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1032">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1033">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1033">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-1034">- или - Отключена возможность выполнять код в удаленных сборках.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1034">-or-  The ability to execute code in remote assemblies is disabled.</span>
          </span>
          <span data-ttu-id="328af-1035">См. элемент <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1035">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1036">
            <paramref name="assemblyFile" /> не является допустимой сборкой. Например, это 32-разрядная сборка в 64-разрядном процессе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1036">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="328af-1037">Дополнительные сведения см. в разделе исключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1037">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="328af-1038">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="assemblyFile" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1038">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="328af-1039">База кода, которая не начинается с "file://", была указана без требуемого разрешения <see cref="T:System.Net.WebPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1039">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-1040">Параметр <paramref name="assemblyFile" /> представляет собой пустую строку ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1040">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="328af-1041">Длина имени сборки превышает максимальную длину, определенную в системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1041">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-1042">для чтения URI, который начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1042">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="328af-1043">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1043">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="328af-1044">для чтения URI, который не начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1044">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom (assemblyFile, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="328af-1045">Имя файла, содержащего манифест сборки, либо путь к нему.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1045">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="328af-1046">Свидетельство для загрузки сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1046">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1047">Загружает сборку, заданную именем файла или путем к этому файлу и предоставленным свидетельством безопасности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1047">Loads an assembly given its file name or path and supplying security evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1048">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1048">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1049">`assemblyFile` Параметр должен ссылаться на URI без escape-символы.</span><span class="sxs-lookup"><span data-stu-id="328af-1049">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="328af-1050">Этот метод предоставляет escape-символы для всех недопустимых символов в URI.</span><span class="sxs-lookup"><span data-stu-id="328af-1050">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-1051">Протокол передачи файлов (FTP) не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="328af-1051">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="328af-1052">Если указан URI для `assemblyFile` является адресом FTP, сборка не загружается.</span><span class="sxs-lookup"><span data-stu-id="328af-1052">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="328af-1053">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="328af-1053">No exception is thrown.</span></span>  
  
 <span data-ttu-id="328af-1054">`assemblyFile` может быть абсолютным или относительным для текущего каталога, и сборка загружается в домен вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="328af-1054">`assemblyFile` may be absolute or  relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="328af-1055">Сборки могут загружаться в одном из трех контекстов или могут быть загружены без контекста:</span><span class="sxs-lookup"><span data-stu-id="328af-1055">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="328af-1056">Контекст загрузки содержит сборки, обнаруженные в результате поиска: в глобальном кэше СБОРОК, в хранилище сборки хранить Если размещается среда выполнения или в <xref:System.AppDomainSetup.ApplicationBase%2A> и <xref:System.AppDomainSetup.PrivateBinPath%2A> домена приложения.</span><span class="sxs-lookup"><span data-stu-id="328af-1056">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="328af-1057">В большинстве перегруженных версий метода <xref:System.Reflection.Assembly.Load%2A> сборки загружаются именно в этот контекст.</span><span class="sxs-lookup"><span data-stu-id="328af-1057">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="328af-1058">Контекст загрузки с содержит сборки, для которых пользователь указал путь не включен в каталоги поиска проверки.</span><span class="sxs-lookup"><span data-stu-id="328af-1058">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="328af-1059">К примерам методов, которые выполняют загрузку по указанному пути, относятся методы <xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> и <xref:System.AppDomain.ExecuteAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-1059"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>

    <span data-ttu-id="328af-1060">Начиная с .NET Framework 4, если URI `assemblyFile` указывает удаленного расположения, загрузка сборки отключен по умолчанию и `LoadFrom` вызывает метод <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="328af-1060">Starting with .NET Framework 4, if the URI of `assemblyFile` specifies a remote location, assembly loading is disabled by default, and the `LoadFrom` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="328af-1061">Чтобы включить выполнение кода, загруженного из удаленных расположений, можно использовать [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="328af-1061">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    
  
-   <span data-ttu-id="328af-1062">Контекст только для отражения содержит сборки, загруженные с <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> и <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> методов; код в этих контекстах, не может быть выполнена.</span><span class="sxs-lookup"><span data-stu-id="328af-1062">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="328af-1063">Если пользователь создается или найти сборку, это не в любом контексте.</span><span class="sxs-lookup"><span data-stu-id="328af-1063">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="328af-1064">Это относится к сборкам, загруженным с помощью перегрузки <xref:System.Reflection.Assembly.Load%2A> метод, который указывается массив байтов, содержащий сборку, а чтобы временные динамические сборки, созданные с помощью отражения для создания и не сохраняются на диске.</span><span class="sxs-lookup"><span data-stu-id="328af-1064">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="328af-1065">Контекст загрузки с сборку необходимо загрузить из пути, не включается в область поиска и еще позволяет зависимости по этому пути, чтобы найти и загрузить, так как сведения о пути хранятся в контексте.</span><span class="sxs-lookup"><span data-stu-id="328af-1065">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="328af-1066"><xref:System.Reflection.Assembly.LoadFrom%2A> Метод имеет следующие недостатки.</span><span class="sxs-lookup"><span data-stu-id="328af-1066">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="328af-1067">Вместо этого рекомендуется использовать <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-1067">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="328af-1068">Если сборка с тем же идентификатором уже загружена, метод <xref:System.Reflection.Assembly.LoadFrom%2A> возвращает загруженную сборку даже в том случае, если был задан другой путь.</span><span class="sxs-lookup"><span data-stu-id="328af-1068">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="328af-1069">Если сборка загружается с <xref:System.Reflection.Assembly.LoadFrom%2A>и последующие попытки загрузить ту же сборку по отображаемому имени сборки в контекст загрузки, попытка загрузки завершится неудачей.</span><span class="sxs-lookup"><span data-stu-id="328af-1069">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="328af-1070">Это может произойти при десериализации сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-1070">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="328af-1071">Если сборка загружается с <xref:System.Reflection.Assembly.LoadFrom%2A>, и путь поиска сборок включает сборку с тем же идентификатором, но другое расположение, <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, или другие непредсказуемые последствия.</span><span class="sxs-lookup"><span data-stu-id="328af-1071">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="328af-1072">Метод <xref:System.Reflection.Assembly.LoadFrom%2A> требует наличия флагов <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> или <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> либо наличия объекта <xref:System.Net.WebPermission> для заданного пути.</span><span class="sxs-lookup"><span data-stu-id="328af-1072"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="328af-1073">Если образ в машинном коде для `assemblyFile`, он не используется.</span><span class="sxs-lookup"><span data-stu-id="328af-1073">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="328af-1074">Сборка не может быть загружена как нейтральная к домену.</span><span class="sxs-lookup"><span data-stu-id="328af-1074">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="328af-1075">В .NET Framework версий 1.0 и 1.1 политика не применяется.</span><span class="sxs-lookup"><span data-stu-id="328af-1075">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="328af-1076">От свидетельства зависит, предоставляются ли сборке определенные разрешения.</span><span class="sxs-lookup"><span data-stu-id="328af-1076">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="328af-1077">Далее приведены правила для сборки и слияние свидетельством безопасности.</span><span class="sxs-lookup"><span data-stu-id="328af-1077">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="328af-1078">При использовании <xref:System.Reflection.Assembly.LoadFrom%2A> метод, не имеющий <xref:System.Security.Policy.Evidence> параметр, сборка загружается со свидетельством, предоставленным загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-1078">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="328af-1079">При использовании <xref:System.Reflection.Assembly.LoadFrom%2A> метод с <xref:System.Security.Policy.Evidence> параметра, части свидетельства объединяются.</span><span class="sxs-lookup"><span data-stu-id="328af-1079">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="328af-1080">Части свидетельство, предоставляемое в качестве аргумента <xref:System.Reflection.Assembly.LoadFrom%2A> метод замещают фрагменты свидетельства, предоставленные загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-1080">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="328af-1081">Если этот метод вызывается несколько раз к той же сборке, но с разными свидетельствами, среда CLR не создает исключение <xref:System.IO.FileLoadException> , так как невозможно определить равенство и целостность различных спецификаций свидетельства.</span><span class="sxs-lookup"><span data-stu-id="328af-1081">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="328af-1082">Свидетельство сначала выполняется успешно, это свидетельство, который используется.</span><span class="sxs-lookup"><span data-stu-id="328af-1082">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="328af-1083">При использовании <xref:System.Reflection.Assembly.LoadFrom%2A> метод с `Byte[]` параметр для загрузки общего объекта файла формате COFF образа, свидетельство объединяется.</span><span class="sxs-lookup"><span data-stu-id="328af-1083">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="328af-1084">`Zone`, `Url` и `Site` наследуются от вызывающей сборки и `Hash` и `StrongName` берутся из сборки COFF.</span><span class="sxs-lookup"><span data-stu-id="328af-1084">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="328af-1085">При использовании <xref:System.Reflection.Assembly.LoadFrom%2A> метод с `Byte[]` параметр и <xref:System.Security.Policy.Evidence> для загрузки образа в формате COFF, используется только предоставленное свидетельство.</span><span class="sxs-lookup"><span data-stu-id="328af-1085">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="328af-1086">Свидетельство вызывающей сборки и свидетельство образа в формате COFF учитывается.</span><span class="sxs-lookup"><span data-stu-id="328af-1086">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1087">Свойство <paramref name="assemblyFile" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1087">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-1088">Файл <paramref name="assemblyFile" /> не найден, или модуль, который вы пытаетесь загрузить, не указывает расширение имени файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1088">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1089">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1089">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-1090">-или-  Параметр <paramref name="securityEvidence" /> не является неоднозначным и определяется как недопустимый.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1090">-or-  The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span>
          </span>
          <span data-ttu-id="328af-1091">- или - Отключена возможность выполнять код в удаленных сборках.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1091">-or-  The ability to execute code in remote assemblies is disabled.</span>
          </span>
          <span data-ttu-id="328af-1092">См. элемент <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1092">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1093">
            <paramref name="assemblyFile" /> не является допустимой сборкой. Например, это 32-разрядная сборка в 64-разрядном процессе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1093">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="328af-1094">Дополнительные сведения см. в разделе исключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1094">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="328af-1095">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="assemblyFile" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1095">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="328af-1096">База кода, которая не начинается с "file://", была указана без требуемого разрешения <see cref="T:System.Net.WebPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1096">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-1097">Параметр <paramref name="assemblyFile" /> представляет собой пустую строку ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1097">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="328af-1098">Длина имени сборки превышает максимальную длину, определенную в системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1098">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-1099">на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1099">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-1100">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1100">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-1101">для чтения URI, который начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1101">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="328af-1102">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1102">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="328af-1103">для чтения URI, который не начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1103">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom (assemblyFile, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="328af-1104">Имя файла, содержащего манифест сборки, либо путь к нему.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1104">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="328af-1105">Значение вычисленного хэш-кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1105">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="328af-1106">Алгоритм хэширования, используемый для хэширования файлов и генерации строгого имени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1106">The hash algorithm used for hashing files and for generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1107">Загружает сборку с заданным именем файла сборки или путем, хэш-значением и хэш-алгоритмом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1107">Loads an assembly given its file name or path, hash value, and hash algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1108">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1108">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1109">`assemblyFile` Параметр должен ссылаться на URI без escape-символы.</span><span class="sxs-lookup"><span data-stu-id="328af-1109">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="328af-1110">Этот метод предоставляет escape-символы для всех недопустимых символов в URI.</span><span class="sxs-lookup"><span data-stu-id="328af-1110">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-1111">Протокол передачи файлов (FTP) не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="328af-1111">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="328af-1112">Если указан URI для `assemblyFile` является адресом FTP, сборка не загружается.</span><span class="sxs-lookup"><span data-stu-id="328af-1112">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="328af-1113">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="328af-1113">No exception is thrown.</span></span>  
  
 <span data-ttu-id="328af-1114">`assemblyFile` может быть абсолютным или относительным для текущего каталога, и сборка загружается в домен вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="328af-1114">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="328af-1115">Сборки могут загружаться в одном из трех контекстов или могут быть загружены без контекста:</span><span class="sxs-lookup"><span data-stu-id="328af-1115">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="328af-1116">Контекст загрузки содержит сборки, обнаруженные в результате поиска: в глобальном кэше сборок, в хранилище сборки хранить Если размещается среда выполнения или в <xref:System.AppDomainSetup.ApplicationBase%2A> и <xref:System.AppDomainSetup.PrivateBinPath%2A> домена приложения.</span><span class="sxs-lookup"><span data-stu-id="328af-1116">The load context contains assemblies found by probing: in the global assembly cache, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="328af-1117">В большинстве перегруженных версий метода <xref:System.Reflection.Assembly.Load%2A> сборки загружаются именно в этот контекст.</span><span class="sxs-lookup"><span data-stu-id="328af-1117">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="328af-1118">Контекст загрузки с содержит сборки, для которых пользователь указал путь, который не входит в область поиска.</span><span class="sxs-lookup"><span data-stu-id="328af-1118">The load-from context contains assemblies for which the user provided a path that is not included in probing.</span></span> <span data-ttu-id="328af-1119">К примерам методов, которые выполняют загрузку по указанному пути, относятся методы <xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> и <xref:System.AppDomain.ExecuteAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-1119"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  

    <span data-ttu-id="328af-1120">Начиная с .NET Framework 4, если URI `assemblyFile` указывает удаленного расположения, загрузка сборки отключен по умолчанию и `LoadFrom` вызывает метод <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="328af-1120">Starting with .NET Framework 4, if the URI of `assemblyFile` specifies a remote location, assembly loading is disabled by default, and the `LoadFrom` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="328af-1121">Чтобы включить выполнение кода, загруженного из удаленных расположений, можно использовать [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="328af-1121">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    
  
-   <span data-ttu-id="328af-1122">Контекст только для отражения содержит сборки, загруженные с <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> и <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> методов; код в этих контекстах, не может быть выполнена.</span><span class="sxs-lookup"><span data-stu-id="328af-1122">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="328af-1123">Если пользователь создается или найти сборку, это не в любом контексте.</span><span class="sxs-lookup"><span data-stu-id="328af-1123">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="328af-1124">Это относится к сборкам, загруженным с помощью перегрузки <xref:System.Reflection.Assembly.Load%2A> метод, который указывается массив байтов, содержащий сборку, а чтобы временные динамические сборки, созданные с помощью отражения для создания и не сохраняются на диске.</span><span class="sxs-lookup"><span data-stu-id="328af-1124">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="328af-1125">Контекст загрузки с позволяет сборки для загрузки, путь которой не включается в область поиска, а еще разрешает зависимости по этому пути, чтобы найти и загрузить, так как сведения о пути хранятся в контексте.</span><span class="sxs-lookup"><span data-stu-id="328af-1125">The load-from context allows an assembly to be loaded from a path that is not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="328af-1126"><xref:System.Reflection.Assembly.LoadFrom%2A> Метод имеет следующие недостатки.</span><span class="sxs-lookup"><span data-stu-id="328af-1126">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="328af-1127">Вместо этого рекомендуется использовать <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-1127">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="328af-1128">Если сборка с тем же идентификатором уже загружена, метод <xref:System.Reflection.Assembly.LoadFrom%2A> возвращает загруженную сборку даже в том случае, если был задан другой путь.</span><span class="sxs-lookup"><span data-stu-id="328af-1128">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="328af-1129">Если сборка загружается с <xref:System.Reflection.Assembly.LoadFrom%2A>и последующие попытки загрузить ту же сборку по отображаемому имени сборки в контекст загрузки, попытка загрузки завершится неудачей.</span><span class="sxs-lookup"><span data-stu-id="328af-1129">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="328af-1130">Это может произойти при десериализации сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-1130">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="328af-1131">Если сборка загружается с <xref:System.Reflection.Assembly.LoadFrom%2A>, и путь поиска сборок включает сборку с тем же идентификатором, но другое расположение, <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, или другие непредсказуемые последствия.</span><span class="sxs-lookup"><span data-stu-id="328af-1131">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="328af-1132">Метод <xref:System.Reflection.Assembly.LoadFrom%2A> требует наличия флагов <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> или <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> либо наличия объекта <xref:System.Net.WebPermission> для заданного пути.</span><span class="sxs-lookup"><span data-stu-id="328af-1132"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="328af-1133">Если образ в машинном коде для `assemblyFile`, он не используется.</span><span class="sxs-lookup"><span data-stu-id="328af-1133">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="328af-1134">Сборка не может быть загружена как доменно-нейтральная.</span><span class="sxs-lookup"><span data-stu-id="328af-1134">The assembly cannot be loaded as domain-neutral.</span></span>  
  
 <span data-ttu-id="328af-1135">Сборка загружается со свидетельством, предоставленным загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-1135">The assembly is loaded with the evidence that the loader supplies.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1136">Свойство <paramref name="assemblyFile" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1136">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-1137">Файл <paramref name="assemblyFile" /> не найден, или модуль, который вы пытаетесь загрузить, не указывает расширение имени файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1137">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1138">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1138">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-1139">- или - Отключена возможность выполнять код в удаленных сборках.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1139">-or-  The ability to execute code in remote assemblies is disabled.</span>
          </span>
          <span data-ttu-id="328af-1140">См. элемент <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1140">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1141">
            <paramref name="assemblyFile" /> не является допустимой сборкой. Например, это 32-разрядная сборка в 64-разрядном процессе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1141">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="328af-1142">Дополнительные сведения см. в разделе исключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1142">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="328af-1143">-или-  Сборка <paramref name="assemblyFile" /> была скомпилирована в более поздней версии среды CLR, чем версия, загруженная в текущий момент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1143">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="328af-1144">База кода, которая не начинается с "file://", была указана без требуемого разрешения <see cref="T:System.Net.WebPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1144">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-1145">Параметр <paramref name="assemblyFile" /> представляет собой пустую строку ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1145">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="328af-1146">Длина имени сборки превышает максимальную длину, определенную в системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1146">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-1147">на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1147">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-1148">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1148">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-1149">для чтения URI, который начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1149">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="328af-1150">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1150">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="328af-1151">для чтения URI, который не начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1151">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member LoadFrom : string * System.Security.Policy.Evidence * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadFrom (assemblyFile, securityEvidence, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="328af-1152">Имя файла, содержащего манифест сборки, либо путь к нему.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1152">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="328af-1153">Свидетельство для загрузки сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1153">Evidence for loading the assembly.</span>
          </span>
        </param>
        <param name="hashValue">
          <span data-ttu-id="328af-1154">Значение вычисленного хэш-кода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1154">The value of the computed hash code.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="328af-1155">Алгоритм хэширования, используемый для хэширования файлов и генерации строгого имени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1155">The hash algorithm used for hashing files and for generating the strong name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1156">Загружает сборку с заданным именем файла сборки или путем, свидетельством безопасности, хэш-значением и хэш-алгоритмом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1156">Loads an assembly given its file name or path, security evidence, hash value, and hash algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1157">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1157">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1158">`assemblyFile` Параметр должен ссылаться на URI без escape-символы.</span><span class="sxs-lookup"><span data-stu-id="328af-1158">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="328af-1159">Этот метод предоставляет escape-символы для всех недопустимых символов в URI.</span><span class="sxs-lookup"><span data-stu-id="328af-1159">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-1160">Протокол передачи файлов (FTP) не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="328af-1160">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="328af-1161">Если указан URI для `assemblyFile` является адресом FTP, сборка не загружается.</span><span class="sxs-lookup"><span data-stu-id="328af-1161">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="328af-1162">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="328af-1162">No exception is thrown.</span></span>  
  
 <span data-ttu-id="328af-1163">`assemblyFile` может быть абсолютным или относительным для текущего каталога, и сборка загружается в домен вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="328af-1163">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="328af-1164">Сборки могут загружаться в одном из трех контекстов или могут быть загружены без контекста:</span><span class="sxs-lookup"><span data-stu-id="328af-1164">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="328af-1165">Контекст загрузки содержит сборки, обнаруженные в результате поиска: в глобальном кэше СБОРОК, в хранилище сборки хранить Если размещается среда выполнения или в <xref:System.AppDomainSetup.ApplicationBase%2A> и <xref:System.AppDomainSetup.PrivateBinPath%2A> домена приложения.</span><span class="sxs-lookup"><span data-stu-id="328af-1165">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="328af-1166">В большинстве перегруженных версий метода <xref:System.Reflection.Assembly.Load%2A> сборки загружаются именно в этот контекст.</span><span class="sxs-lookup"><span data-stu-id="328af-1166">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="328af-1167">Контекст загрузки с содержит сборки, для которых пользователь указал путь не включен в каталоги поиска проверки.</span><span class="sxs-lookup"><span data-stu-id="328af-1167">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="328af-1168">К примерам методов, которые выполняют загрузку по указанному пути, относятся методы <xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> и <xref:System.AppDomain.ExecuteAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-1168"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  

    <span data-ttu-id="328af-1169">Начиная с .NET Framework 4, если URI `assemblyFile` указывает удаленного расположения, загрузка сборки отключен по умолчанию и `LoadFrom` вызывает метод <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="328af-1169">Starting with .NET Framework 4, if the URI of `assemblyFile` specifies a remote location, assembly loading is disabled by default, and the `LoadFrom` method throws a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="328af-1170">Чтобы включить выполнение кода, загруженного из удаленных расположений, можно использовать [ `<loadFromRemoteSources>` ](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) элемента конфигурации.</span><span class="sxs-lookup"><span data-stu-id="328af-1170">To enable execution of code loaded from remote locations, you can use the [`<loadFromRemoteSources>`](~/docs/framework/configure-apps/file-schema/runtime/loadfromremotesources-element.md) configuration element.</span></span>    
  
-   <span data-ttu-id="328af-1171">Контекст только для отражения содержит сборки, загруженные с <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> и <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> методов; код в этих контекстах, не может быть выполнена.</span><span class="sxs-lookup"><span data-stu-id="328af-1171">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="328af-1172">Если пользователь создается или найти сборку, это не в любом контексте.</span><span class="sxs-lookup"><span data-stu-id="328af-1172">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="328af-1173">Это относится к сборкам, загруженным с помощью перегрузки <xref:System.Reflection.Assembly.Load%2A> метод, который указывается массив байтов, содержащий сборку, а чтобы временные динамические сборки, созданные с помощью отражения для создания и не сохраняются на диске.</span><span class="sxs-lookup"><span data-stu-id="328af-1173">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="328af-1174">Контекст загрузки с сборку необходимо загрузить из пути, не включается в область поиска и еще позволяет зависимости по этому пути, чтобы найти и загрузить, так как сведения о пути хранятся в контексте.</span><span class="sxs-lookup"><span data-stu-id="328af-1174">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="328af-1175"><xref:System.Reflection.Assembly.LoadFrom%2A> Метод имеет следующие недостатки.</span><span class="sxs-lookup"><span data-stu-id="328af-1175">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="328af-1176">Вместо этого рекомендуется использовать <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-1176">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="328af-1177">Если сборка с тем же идентификатором уже загружена, метод <xref:System.Reflection.Assembly.LoadFrom%2A> возвращает загруженную сборку даже в том случае, если был задан другой путь.</span><span class="sxs-lookup"><span data-stu-id="328af-1177">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="328af-1178">Если сборка загружается с <xref:System.Reflection.Assembly.LoadFrom%2A>и последующие попытки загрузить ту же сборку по отображаемому имени сборки в контекст загрузки, попытка загрузки завершится неудачей.</span><span class="sxs-lookup"><span data-stu-id="328af-1178">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="328af-1179">Это может произойти при десериализации сборки.</span><span class="sxs-lookup"><span data-stu-id="328af-1179">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="328af-1180">Если сборка загружается с <xref:System.Reflection.Assembly.LoadFrom%2A>, и путь поиска сборок включает сборку с тем же идентификатором, но другое расположение, <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, или другие непредсказуемые последствия.</span><span class="sxs-lookup"><span data-stu-id="328af-1180">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="328af-1181">Метод <xref:System.Reflection.Assembly.LoadFrom%2A> требует наличия флагов <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> или <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> либо наличия объекта <xref:System.Net.WebPermission> для заданного пути.</span><span class="sxs-lookup"><span data-stu-id="328af-1181"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="328af-1182">Если образ в машинном коде для `assemblyFile`, он не используется.</span><span class="sxs-lookup"><span data-stu-id="328af-1182">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="328af-1183">Сборка не может быть загружена как нейтральная к домену.</span><span class="sxs-lookup"><span data-stu-id="328af-1183">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="328af-1184">В .NET Framework версий 1.0 и 1.1 политика не применяется.</span><span class="sxs-lookup"><span data-stu-id="328af-1184">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="328af-1185">От свидетельства зависит, предоставляются ли сборке определенные разрешения.</span><span class="sxs-lookup"><span data-stu-id="328af-1185">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="328af-1186">Далее приведены правила для сборки и слияние свидетельством безопасности.</span><span class="sxs-lookup"><span data-stu-id="328af-1186">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="328af-1187">При использовании <xref:System.Reflection.Assembly.LoadFrom%2A> метод, не имеющий <xref:System.Security.Policy.Evidence> параметр, сборка загружается со свидетельством, предоставленным загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-1187">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="328af-1188">При использовании <xref:System.Reflection.Assembly.LoadFrom%2A> метод с <xref:System.Security.Policy.Evidence> параметра, части свидетельства объединяются.</span><span class="sxs-lookup"><span data-stu-id="328af-1188">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="328af-1189">Части свидетельство, предоставляемое в качестве аргумента <xref:System.Reflection.Assembly.LoadFrom%2A> метод замещают фрагменты свидетельства, предоставленные загрузчиком.</span><span class="sxs-lookup"><span data-stu-id="328af-1189">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="328af-1190">Если этот метод вызывается несколько раз к той же сборке, но с разными свидетельствами, среда CLR не создает исключение <xref:System.IO.FileLoadException> , так как невозможно определить равенство и целостность различных спецификаций свидетельства.</span><span class="sxs-lookup"><span data-stu-id="328af-1190">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="328af-1191">Свидетельство сначала выполняется успешно, это свидетельство, который используется.</span><span class="sxs-lookup"><span data-stu-id="328af-1191">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="328af-1192">При использовании <xref:System.Reflection.Assembly.LoadFrom%2A> метод с `Byte[]` параметр для загрузки общего объекта файла формате COFF образа, свидетельство объединяется.</span><span class="sxs-lookup"><span data-stu-id="328af-1192">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="328af-1193">`Zone`, `Url` и `Site` наследуются от вызывающей сборки и `Hash` и `StrongName` берутся из сборки COFF.</span><span class="sxs-lookup"><span data-stu-id="328af-1193">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="328af-1194">При использовании <xref:System.Reflection.Assembly.LoadFrom%2A> метод с `Byte[]` параметр и <xref:System.Security.Policy.Evidence> для загрузки образа в формате COFF, используется только предоставленное свидетельство.</span><span class="sxs-lookup"><span data-stu-id="328af-1194">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="328af-1195">Свидетельство вызывающей сборки и свидетельство образа в формате COFF учитывается.</span><span class="sxs-lookup"><span data-stu-id="328af-1195">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1196">Свойство <paramref name="assemblyFile" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1196">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-1197">Файл <paramref name="assemblyFile" /> не найден, или модуль, который вы пытаетесь загрузить, не указывает расширение имени файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1197">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1198">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1198">A file that was found could not be loaded.</span>
          </span>
          <span data-ttu-id="328af-1199">-или-  Параметр <paramref name="securityEvidence" /> не является неоднозначным и определяется как недопустимый.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1199">-or-  The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span>
          </span>
          <span data-ttu-id="328af-1200">- или - Отключена возможность выполнять код в удаленных сборках.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1200">-or-  The ability to execute code in remote assemblies is disabled.</span>
          </span>
          <span data-ttu-id="328af-1201">См. элемент <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1201">See <see href="https://docs.microsoft.com/dotnet/framework/configure-apps/file-schema/runtime/loadfromremotesources-element">&lt;loadFromRemoteSources&gt;</see>.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1202">
            <paramref name="assemblyFile" /> не является допустимой сборкой. Например, это 32-разрядная сборка в 64-разрядном процессе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1202">
              <paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span>
          </span>
          <span data-ttu-id="328af-1203">Дополнительные сведения см. в разделе исключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1203">See the exception topic for more information.</span>
          </span>
          <span data-ttu-id="328af-1204">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="assemblyFile" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1204">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="328af-1205">База кода, которая не начинается с "file://", была указана без требуемого разрешения <see cref="T:System.Net.WebPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1205">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-1206">Параметр <paramref name="assemblyFile" /> представляет собой пустую строку ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1206">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="328af-1207">Длина имени сборки превышает максимальную длину, определенную в системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1207">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-1208">на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1208">to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-1209">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1209">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-1210">для чтения URI, который начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1210">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="328af-1211">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1211">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="328af-1212">для чтения URI, который не начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1212">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadModule">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-1213">Загружает внутренний модуль этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1213">Loads the module internal to this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] -&gt; System.Reflection.Module&#xA;override this.LoadModule : string * byte[] -&gt; System.Reflection.Module" Usage="assembly.LoadModule (moduleName, rawModule)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName">
          <span data-ttu-id="328af-1214">Имя модуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1214">The name of the module.</span>
          </span>
          <span data-ttu-id="328af-1215">Эта строка должна соответствовать имени файла в манифесте этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1215">This string must correspond to a file name in this assembly's manifest.</span>
          </span>
        </param>
        <param name="rawModule">
          <span data-ttu-id="328af-1216">Массив байтов, который является COFF-образом, содержащим передаваемый модуль или ресурс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1216">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1217">Загружает модуль, внутренний для этой сборки, с образом в формате COFF, содержащим включенный модуль или файл ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1217">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1218">Загруженный модуль.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1218">The loaded module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1219">Параметр <paramref name="moduleName" /> или <paramref name="rawModule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1219">
              <paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-1220">
            <paramref name="moduleName" /> не соответствует записи файла в манифесте этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1220">
              <paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1221">
            <paramref name="rawModule" /> не является допустимым модулем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1221">
              <paramref name="rawModule" /> is not a valid module.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1222">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1222">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-1223">Чтобы получить свидетельство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1223">to provide evidence.</span>
          </span>
          <span data-ttu-id="328af-1224">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1224">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadModule (moduleName As String, rawModule As Byte(), rawSymbolStore As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] * byte[] -&gt; System.Reflection.Module&#xA;override this.LoadModule : string * byte[] * byte[] -&gt; System.Reflection.Module" Usage="assembly.LoadModule (moduleName, rawModule, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName">
          <span data-ttu-id="328af-1225">Имя модуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1225">The name of the module.</span>
          </span>
          <span data-ttu-id="328af-1226">Эта строка должна соответствовать имени файла в манифесте этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1226">This string must correspond to a file name in this assembly's manifest.</span>
          </span>
        </param>
        <param name="rawModule">
          <span data-ttu-id="328af-1227">Массив байтов, который является COFF-образом, содержащим передаваемый модуль или ресурс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1227">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="328af-1228">Массив байтов, содержащий необработанные байты, представляющие собой символы для модуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1228">A byte array containing the raw bytes representing the symbols for the module.</span>
          </span>
          <span data-ttu-id="328af-1229">Для файла ресурсов должно быть задано значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1229">Must be <see langword="null" /> if this is a resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1230">Загружает модуль, внутренний для этой сборки, с образом в формате COFF, содержащим включенный модуль или файл ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1230">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span>
          </span>
          <span data-ttu-id="328af-1231">Также загружаются необработанные байты, представляющие собой символы для модуля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1231">The raw bytes representing the symbols for the module are also loaded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1232">Загруженный модуль.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1232">The loaded module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1233">Параметр <paramref name="moduleName" /> или <paramref name="rawModule" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1233">
              <paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-1234">
            <paramref name="moduleName" /> не соответствует записи файла в манифесте этой сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1234">
              <paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1235">
            <paramref name="rawModule" /> не является допустимым модулем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1235">
              <paramref name="rawModule" /> is not a valid module.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1236">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1236">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-1237">Чтобы получить свидетельство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1237">to provide evidence.</span>
          </span>
          <span data-ttu-id="328af-1238">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1238">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadWithPartialName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-1239">Загружает сборку из каталога приложения или из глобального кэша сборок с использованием частичного имени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1239">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="328af-1240">Перегрузки <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> метод устарели и были сохранены для обеспечения обратной совместимости.</span><span class="sxs-lookup"><span data-stu-id="328af-1240">The overloads of the <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> method are obsolete and have been retained for backward compatibility.</span></span> <span data-ttu-id="328af-1241">Альтернативой устаревшим функциям служит метод <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="328af-1241">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName);" />
      <MemberSignature Language="F#" Value="static member LoadWithPartialName : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadWithPartialName partialName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partialName">
          <span data-ttu-id="328af-1242">Отображаемое имя сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1242">The display name of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1243">Загружает сборку из каталога приложения или из глобального кэша сборок с использованием частичного имени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1243">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1244">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1244">The loaded assembly.</span>
          </span>
          <span data-ttu-id="328af-1245">Если значение <paramref name="partialName" /> не найдено, этот метод возвращает значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1245">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="328af-1246"><xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> Метод устарел и был сохранен для обратной совместимости.</span><span class="sxs-lookup"><span data-stu-id="328af-1246">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="328af-1247">Альтернативой устаревшим функциям служит метод <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="328af-1247">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="328af-1248">Приложения, загружающие сборки с помощью этого метода будет зависеть от обновления этих сборок.</span><span class="sxs-lookup"><span data-stu-id="328af-1248">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="328af-1249">Таким образом не используйте этот метод; Измените приложение для использования <xref:System.Reflection.Assembly.Load%28System.String%29> перегрузку метода или <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="328af-1249">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%28System.String%29> method overload or the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 <span data-ttu-id="328af-1250">Этот метод сначала вызывает <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-1250">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="328af-1251">Если сборка не найдена, этот метод возвращает сборки из глобального кэша сборок с аналогичным простым именем и номером последней версии.</span><span class="sxs-lookup"><span data-stu-id="328af-1251">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1252">Параметр <paramref name="partialName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1252">The <paramref name="partialName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1253">
            <paramref name="assemblyFile" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1253">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-1254">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="partialName" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1254">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberSignature Language="F#" Value="static member LoadWithPartialName : string * System.Security.Policy.Evidence -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.LoadWithPartialName (partialName, securityEvidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="partialName">
          <span data-ttu-id="328af-1255">Отображаемое имя сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1255">The display name of the assembly.</span>
          </span>
        </param>
        <param name="securityEvidence">
          <span data-ttu-id="328af-1256">Свидетельство для загрузки сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1256">Evidence for loading the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1257">Загружает сборку из каталога приложения или из глобального кэша сборок с использованием частичного имени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1257">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span>
          </span>
          <span data-ttu-id="328af-1258">Сборка загружена в домен вызывающего объекта с использованием переданного свидетельства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1258">The assembly is loaded into the domain of the caller using the supplied evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1259">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1259">The loaded assembly.</span>
          </span>
          <span data-ttu-id="328af-1260">Если значение <paramref name="partialName" /> не найдено, этот метод возвращает значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1260">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="328af-1261"><xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> Метод устарел и был сохранен для обратной совместимости.</span><span class="sxs-lookup"><span data-stu-id="328af-1261">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="328af-1262">Альтернативой устаревшим функциям служит метод <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="328af-1262">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="328af-1263">Свидетельство — это набор сведений, используемых для принятия решений политики безопасности, например, сведений о разрешениях, которые могут быть предоставлены коду.</span><span class="sxs-lookup"><span data-stu-id="328af-1263">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 <span data-ttu-id="328af-1264">Приложения, загружающие сборки с помощью этого метода будет зависеть от обновления этих сборок.</span><span class="sxs-lookup"><span data-stu-id="328af-1264">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="328af-1265">Таким образом не используйте этот метод; Измените приложение для использования <xref:System.Reflection.Assembly.Load%2A> метод или <xref:System.Reflection.Assembly.LoadFrom%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-1265">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%2A> method or the <xref:System.Reflection.Assembly.LoadFrom%2A> method.</span></span>  
  
 <span data-ttu-id="328af-1266">Этот метод сначала вызывает <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="328af-1266">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="328af-1267">Если сборка не найдена, этот метод возвращает сборки из глобального кэша сборок с аналогичным простым именем и номером последней версии.</span><span class="sxs-lookup"><span data-stu-id="328af-1267">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1268">Сборка или модуль был загружен дважды с двумя разными наборами свидетельств.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1268">An assembly or module was loaded twice with two different sets of evidence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1269">Параметр <paramref name="partialName" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1269">The <paramref name="partialName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1270">
            <paramref name="assemblyFile" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1270">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-1271">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="partialName" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1271">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="328af-1272">для вызова неуправляемого кода и на загрузку сборки со свидетельством.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1272">for calling unmanaged code and to load an assembly with evidence.</span>
          </span>
          <span data-ttu-id="328af-1273">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1273">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : string" Usage="System.Reflection.Assembly.Location" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Location</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-1274">Получает полный путь либо UNC для расположения загруженного файла, содержащего манифест.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1274">Gets the full path or UNC location of the loaded file that contains the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-1275">Местоположение загруженного файла, содержащего манифест.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1275">The location of the loaded file that contains the manifest.</span>
          </span>
          <span data-ttu-id="328af-1276">Если для загруженного файла был создан снимок состояния, местонахождение является местонахождением файла после теневого копирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1276">If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</span>
          </span>
          <span data-ttu-id="328af-1277">Если сборка загружается из массива байтов, например, при использовании метода перегрузки <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" />, возвращаемое значение является пустой строкой ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1277">If the assembly is loaded from a byte array, such as when using the <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> method overload, the value returned is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1278">Чтобы получить расположение, прежде чем файл был теневого копирования, используйте <xref:System.Reflection.Assembly.CodeBase%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="328af-1278">To get the location before the file has been shadow-copied, use the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="328af-1279">Следующий пример отображает расположение загруженного файла, содержащего манифест.</span><span class="sxs-lookup"><span data-stu-id="328af-1279">The following example displays the location of the loaded file that contains the manifest.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#3)]
 [!code-csharp[System.Reflection.Assembly#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#3)]
 [!code-vb[System.Reflection.Assembly#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="328af-1280">Текущая сборка является динамической сборкой, представленной объектом <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1280">The current assembly is a dynamic assembly, represented by an <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-1281">для доступа к пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1281">for access to the path.</span>
          </span>
          <span data-ttu-id="328af-1282">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1282">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManifestModule : System.Reflection.Module" Usage="System.Reflection.Assembly.ManifestModule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-1283">Возвращает модуль, содержащий манифест текущей сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1283">Gets the module that contains the manifest for the current assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-1284">Модуль, содержащий манифест текущей сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1284">The module that contains the manifest for the assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleResolve">
      <MemberSignature Language="C#" Value="public virtual event System.Reflection.ModuleResolveEventHandler ModuleResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Reflection.ModuleResolveEventHandler ModuleResolve" />
      <MemberSignature Language="DocId" Value="E:System.Reflection.Assembly.ModuleResolve" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Custom Event ModuleResolve As ModuleResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Reflection::ModuleResolveEventHandler ^ ModuleResolve;" />
      <MemberSignature Language="F#" Value="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " Usage="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Runtime.InteropServices._Assembly.ModuleResolve</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ModuleResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-1285">Возникает, если загрузчик классов общеязыковой среды выполнения не может обработать ссылку на внутренний модуль сборки, используя обычные средства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1285">Occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1286">Это событие позволяет обратного вызова, чтобы найти и загрузить сам модуль и вернуть его.</span><span class="sxs-lookup"><span data-stu-id="328af-1286">This event gives the callback a chance to find and load the module itself and return it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="328af-1287">Требует полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1287">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="328af-1288">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1288">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Modules : seq&lt;System.Reflection.Module&gt;" Usage="System.Reflection.Assembly.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-1289">Получает коллекцию, содержащую модули в этой сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1289">Gets a collection that contains the modules in this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-1290">Коллекция, содержащая модули в этой сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1290">A collection that contains the modules in this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.Assembly * System.Reflection.Assembly -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" />
        <Parameter Name="right" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="328af-1291">Сборка, сравниваемая со значением <c>right</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1291">The assembly to compare to <c>right</c>.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="328af-1292">Сборка, сравниваемая со значением <c>left</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1292">The assembly to compare to <c>left</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1293">Определение равенства двух объектов <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1293">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1294">
            <see langword="true" />, если значения параметров <paramref name="left" /> и <paramref name="right" /> равны; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1294">
              <see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.Assembly * System.Reflection.Assembly -&gt; bool" Usage="System.Reflection.Assembly.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" />
        <Parameter Name="right" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="328af-1295">Сборка, сравниваемая со значением <c>right</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1295">The assembly to compare to <c>right</c>.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="328af-1296">Сборка, сравниваемая со значением <c>left</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1296">The assembly to compare to <c>left</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1297">Определяет неравенство двух объектов <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1297">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1298">
            <see langword="true" />, если значения <paramref name="left" /> и <paramref name="right" /> не равны; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1298">
              <see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PermissionSet : System.Security.PermissionSet" Usage="System.Reflection.Assembly.PermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-1299">Получает набор разрешений текущей сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1299">Gets the grant set of the current assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-1300">Набор разрешений текущей сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1300">The grant set of the current assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1301"><xref:System.Security.PermissionSet> объекты могут содержать конфиденциальные сведения, например пути.</span><span class="sxs-lookup"><span data-stu-id="328af-1301"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="328af-1302">Таким образом для доступа к этим объектам требуется полное доверие.</span><span class="sxs-lookup"><span data-stu-id="328af-1302">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="328af-1303">Требует полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1303">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="328af-1304">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1304">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectionOnly : bool" Usage="System.Reflection.Assembly.ReflectionOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-1305">Возвращает значение <see cref="T:System.Boolean" />, которое указывает, была ли эта сборка загружена в контекст, предназначенный только для отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1305">Gets a <see cref="T:System.Boolean" /> value indicating whether this assembly was loaded into the reflection-only context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-1306">Значение <see langword="true" />, если сборка была загружена в контекст, предназначенный только для отражения вместо контекста выполнения; в обратном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1306">
              <see langword="true" /> if the assembly was loaded into the reflection-only context, rather than the execution context; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1307">Если сборка была загружена в контекст только для отражения, с помощью <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> метода, нельзя выполнять код в сборке.</span><span class="sxs-lookup"><span data-stu-id="328af-1307">If an assembly has been loaded into the reflection-only context, using the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> method, you cannot execute code in the assembly.</span></span> <span data-ttu-id="328af-1308">Для выполнения кода, сборка должна быть загружена в контекст выполнения.</span><span class="sxs-lookup"><span data-stu-id="328af-1308">To execute code, the assembly must be loaded into the execution context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReflectionOnlyLoad">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="328af-1309">Загружает сборку в контекст, предназначенный только для отражения, где она может быть проанализирована, но не может быть выполнена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1309">Loads an assembly into the reflection-only context, where it can be examined but not executed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberSignature Language="F#" Value="static member ReflectionOnlyLoad : byte[] -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.ReflectionOnlyLoad rawAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly">
          <span data-ttu-id="328af-1310">Массив байтов, который является образом в формате COFF, содержащим созданную сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1310">A byte array that is a COFF-based image containing an emitted assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1311">Загружает сборку из образа в формате COFF, содержащего порожденную сборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1311">Loads the assembly from a common object file format (COFF)-based image containing an emitted assembly.</span>
          </span>
          <span data-ttu-id="328af-1312">Сборка загружается в контекст, предназначенный только для отражения, который относится к домену приложения вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1312">The assembly is loaded into the reflection-only context of the caller's application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1313">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1313">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1314">Нельзя выполнять код из сборки, загруженной в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="328af-1314">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="328af-1315">Для выполнения кода, сборка должна быть загружена в контекст выполнения, с помощью <xref:System.Reflection.Assembly.Load%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-1315">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="328af-1316">Контекст только для отражения ничем не отличается от других контекстах.</span><span class="sxs-lookup"><span data-stu-id="328af-1316">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="328af-1317">Сборки, загруженные в контекст, могут быть выгружены путем выгрузки домена приложения.</span><span class="sxs-lookup"><span data-stu-id="328af-1317">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1318">Свойство <paramref name="rawAssembly" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1318">
              <paramref name="rawAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1319">
            <paramref name="rawAssembly" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1319">
              <paramref name="rawAssembly" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-1320">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="rawAssembly" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1320">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1321">Не удается загрузить <paramref name="rawAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1321">
              <paramref name="rawAssembly" /> cannot be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(System::String ^ assemblyString);" />
      <MemberSignature Language="F#" Value="static member ReflectionOnlyLoad : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.ReflectionOnlyLoad assemblyString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString">
          <span data-ttu-id="328af-1322">Отображаемое имя сборки, возвращаемое свойством <see cref="P:System.Reflection.AssemblyName.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1322">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1323">Загружает сборку с заданным отображаемым именем в контекст, предназначенный только для отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1323">Loads an assembly into the reflection-only context, given its display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1324">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1324">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1325">Зависимости не загружаются автоматически в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="328af-1325">Dependencies are not automatically loaded into the reflection-only context.</span></span>  
  
 <span data-ttu-id="328af-1326">Нельзя выполнять код из сборки, загруженной в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="328af-1326">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="328af-1327">Для выполнения кода, сборка должна быть загружена в контекст выполнения, с помощью <xref:System.Reflection.Assembly.Load%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-1327">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="328af-1328">От свидетельства зависит, предоставляются ли сборке определенные разрешения.</span><span class="sxs-lookup"><span data-stu-id="328af-1328">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="328af-1329">Далее приведены правила для сборки и слияние свидетельством безопасности.</span><span class="sxs-lookup"><span data-stu-id="328af-1329">The rules for assembly and security evidence merging are as follows:</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="328af-1330">Отражение на исполняемые файлы, скомпилированные в C++ может вызывать <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="328af-1330">Reflecting on executable files compiled in C++ might throw a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="328af-1331">Скорее всего, это вызвано компилятор C++ чередует адреса переадресации и раздел .reloc исполняемого файла.</span><span class="sxs-lookup"><span data-stu-id="328af-1331">This is most likely caused by the C++ compiler stripping the relocation addresses or the .reloc section from your executable file.</span></span> <span data-ttu-id="328af-1332">Чтобы сохранить адрес .reloc, укажите `/fixed:no` при компоновке.</span><span class="sxs-lookup"><span data-stu-id="328af-1332">To preserve the .reloc address, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="328af-1333">Контекст только для отражения ничем не отличается от других контекстах.</span><span class="sxs-lookup"><span data-stu-id="328af-1333">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="328af-1334">Сборки, загруженные в контекст, могут быть выгружены путем выгрузки домена приложения.</span><span class="sxs-lookup"><span data-stu-id="328af-1334">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1335">Свойство <paramref name="assemblyString" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1335">
              <paramref name="assemblyString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-1336">Параметр <paramref name="assemblyString" /> является пустой строкой ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1336">
              <paramref name="assemblyString" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-1337">
            <paramref name="assemblyString" /> не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1337">
              <paramref name="assemblyString" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1338">
            <paramref name="assemblyString" /> найден, но не может быть загружен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1338">
              <paramref name="assemblyString" /> is found, but cannot be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1339">
            <paramref name="assemblyString" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1339">
              <paramref name="assemblyString" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-1340">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="assemblyString" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1340">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoadFrom(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member ReflectionOnlyLoadFrom : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.ReflectionOnlyLoadFrom assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="328af-1341">Путь к файлу, содержащему манифест сборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1341">The path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1342">Загружает сборку с заданным путем в контекст, предназначенный только для отражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1342">Loads an assembly into the reflection-only context, given its path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1343">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1343">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1344">Зависимости не загружаются автоматически в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="328af-1344">Dependencies are not automatically loaded into the reflection-only context.</span></span> <span data-ttu-id="328af-1345">Чтобы автоматически загрузить зависимости, обрабатывать <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> событий и загрузка зависимостей в обработчике событий.</span><span class="sxs-lookup"><span data-stu-id="328af-1345">To automatically load dependencies, handle the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event and load the dependency in the event handler.</span></span>  
  
 <span data-ttu-id="328af-1346">Нельзя выполнять код из сборки, который был загружен в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="328af-1346">You cannot execute code from an assembly that has been loaded into the reflection-only context.</span></span> <span data-ttu-id="328af-1347">Для выполнения кода, загрузить сборку с <xref:System.Reflection.Assembly.LoadFile%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="328af-1347">To execute the code, load the assembly with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="328af-1348">`assemblyFile` Параметр должен ссылаться на URI без escape-символы.</span><span class="sxs-lookup"><span data-stu-id="328af-1348">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="328af-1349">Этот метод предоставляет escape-символы для всех недопустимых символов в URI.</span><span class="sxs-lookup"><span data-stu-id="328af-1349">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
 <span data-ttu-id="328af-1350">Путь, указанный для `assemblyFile` задается относительно текущего каталога.</span><span class="sxs-lookup"><span data-stu-id="328af-1350">The path specified for `assemblyFile` is relative to the current directory.</span></span> <span data-ttu-id="328af-1351">Сборка загружается в домен вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="328af-1351">The assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="328af-1352">Контекст только для отражения ничем не отличается от других контекстах.</span><span class="sxs-lookup"><span data-stu-id="328af-1352">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="328af-1353">Сборки, загруженные в контекст, могут быть выгружены путем выгрузки домена приложения.</span><span class="sxs-lookup"><span data-stu-id="328af-1353">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1354">Свойство <paramref name="assemblyFile" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1354">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-1355">Файл <paramref name="assemblyFile" /> не найден, или модуль, который вы пытаетесь загрузить, не указывает расширение имени файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1355">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1356">
            <paramref name="assemblyFile" /> найден, но не может быть загружен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1356">
              <paramref name="assemblyFile" /> is found, but could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1357">
            <paramref name="assemblyFile" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1357">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-1358">-или-  В настоящий момент загружена среда CLR версии 2.0 или более поздней версии. Сборка <paramref name="assemblyFile" /> была скомпилирована в более поздней версии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1358">-or-  Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="328af-1359">База кода, которая не начинается с "file://", была указана без требуемого разрешения <see cref="T:System.Net.WebPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1359">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="328af-1360">Длина имени сборки превышает максимальную длину, определенную в системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1360">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-1361">Параметр <paramref name="assemblyFile" /> является пустой строкой ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1361">
              <paramref name="assemblyFile" /> is an empty string ("").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="328af-1362">для чтения URI, который начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1362">for reading a URI that begins with "file://".</span>
          </span>
          <span data-ttu-id="328af-1363">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1363">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="328af-1364">для чтения URI, который не начинается с «file://».</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1364">for reading a URI that does not begin with "file://".</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRuleSet : System.Security.SecurityRuleSet" Usage="System.Reflection.Assembly.SecurityRuleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="328af-1365">Получает значение, указывающее набор правил безопасности, которые применяются средой CLR к данной сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1365">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="328af-1366">Набор правил безопасности, которые применяются средой CLR к данной сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1366">The security rule set that the CLR enforces for this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1367">По умолчанию, сборки, компиляции с параметром [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] имеют прозрачность, несмотря на то, что вы можете явно сделать их вместо этого.</span><span class="sxs-lookup"><span data-stu-id="328af-1367">By default, assemblies that you compile with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] have  transparency, although you can explicitly make them  instead.</span></span> <span data-ttu-id="328af-1368">Сборки, которые были скомпилированы с более ранними версиями платформы .NET Framework имеют прозрачность уровня 1.</span><span class="sxs-lookup"><span data-stu-id="328af-1368">Assemblies that were compiled with earlier versions of the .NET Framework have level 1 transparency.</span></span>  
  
 <span data-ttu-id="328af-1369">См. раздел [Изменения системы безопасности](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="328af-1369">See [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.IsDefined">
      <MemberSignature Language="C#" Value="bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Reflection.ICustomAttributeProvider.IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Reflection.ICustomAttributeProvider.IsDefined(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::IsDefined;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Assembly.GetType">
      <MemberSignature Language="C#" Value="Type _Assembly.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._Assembly.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _Assembly.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._Assembly.GetType() = System::Runtime::InteropServices::_Assembly::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-1370">Возвращает тип текущего экземпляра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1370">Returns the type of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1371">Объект, представляющий тип <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1371">An object that represents the <see cref="T:System.Reflection.Assembly" /> type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assembly.ToString " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="328af-1372">Возвращает полное имя сборки, также называемое отображаемым именем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1372">Returns the full name of the assembly, also known as the display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1373">Полное имя сборки или имя класса, если полное имя сборки не может быть определено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1373">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly UnsafeLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly UnsafeLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.UnsafeLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ UnsafeLoadFrom(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member UnsafeLoadFrom : string -&gt; System.Reflection.Assembly" Usage="System.Reflection.Assembly.UnsafeLoadFrom assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="328af-1374">Имя файла, содержащего манифест сборки, либо путь к нему.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1374">The name or path of the file that contains the manifest of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="328af-1375">Загружает сборку в контекст, из которого производится загрузка, обходя некоторые проверки безопасности.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1375">Loads an assembly into the load-from context, bypassing some security checks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="328af-1376">Загруженная сборка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1376">The loaded assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="328af-1377">Этот метод позволяет загрузить локальную сборку, которую операционная система пометила как загруженную из Интернета (например, временный файл, загруженный из Интернета или интрасети).</span><span class="sxs-lookup"><span data-stu-id="328af-1377">Use this method to load a local assembly that the operating system has flagged as having been loaded from the Web (for example, a temporary file that was downloaded from the Internet or intranet).</span></span> <span data-ttu-id="328af-1378">Прежде чем [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], такие сборки автоматически загружались в изолированном домене приложения.</span><span class="sxs-lookup"><span data-stu-id="328af-1378">Before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], such assemblies were automatically loaded into a sandboxed application domain.</span></span> <span data-ttu-id="328af-1379">Начиная с [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], они загружаются с полным доверием.</span><span class="sxs-lookup"><span data-stu-id="328af-1379">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], they are loaded with full trust.</span></span>  
  
 <span data-ttu-id="328af-1380">В качестве альтернативы с помощью данного метода, можно применить [ &lt;NetFx40_LegacySecurityPolicy&gt; элемент](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) в файле конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="328af-1380">As an alternative to using this method, you can apply the [&lt;NetFx40_LegacySecurityPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) in your application configuration file.</span></span> <span data-ttu-id="328af-1381">В результате среда CLR для возврата к политике безопасности [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span><span class="sxs-lookup"><span data-stu-id="328af-1381">This causes the common language runtime to revert to the security policy of the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="328af-1382">При использовании любого из этих решений, необходимо быть уверенным, что он безопасен для загрузки `assemblyFile` с полным доверием.</span><span class="sxs-lookup"><span data-stu-id="328af-1382">If you use either of these solutions, you must be certain that it is safe to load `assemblyFile` with full trust.</span></span>  
  
 <span data-ttu-id="328af-1383">Обсуждение контекстов загрузки, включая контекст загрузки с см. в разделе <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> перегрузки метода.</span><span class="sxs-lookup"><span data-stu-id="328af-1383">For a discussion of load contexts, including the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="328af-1384">Свойство <paramref name="assemblyFile" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1384">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="328af-1385">Файл <paramref name="assemblyFile" /> не найден, или модуль, который вы пытаетесь загрузить, не указывает расширение имени файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1385">
              <paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="328af-1386">Не удалось загрузить файл, который был найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1386">A file that was found could not be loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="328af-1387">
            <paramref name="assemblyFile" /> не является допустимой сборкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1387">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
          <span data-ttu-id="328af-1388">-или-  Сборка <paramref name="assemblyFile" /> была скомпилирована в более поздней версии среды CLR, чем версия, загруженная в текущий момент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1388">-or-  <paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="328af-1389">База кода, которая не начинается с "file://", была указана без требуемого разрешения <see cref="T:System.Net.WebPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1389">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="328af-1390">Параметр <paramref name="assemblyFile" /> представляет собой пустую строку ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1390">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="328af-1391">Длина имени сборки превышает максимальную длину, определенную в системе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1391">The assembly name exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="328af-1392">Требует полного доверия для непосредственного вызывающего объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1392">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="328af-1393">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="328af-1393">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>