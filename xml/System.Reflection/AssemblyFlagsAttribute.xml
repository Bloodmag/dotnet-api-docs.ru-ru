<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblyFlagsAttribute.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56415ecfda009d8765e3f91b8c7484e459ebd8356.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6415ecfda009d8765e3f91b8c7484e459ebd8356</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>Specifies a bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags for an assembly, describing just-in-time (JIT) compiler options, whether the assembly is retargetable, and whether it has a full or tokenized public key.</source>
          <target state="translated">Определяет побитовое сочетание флагов <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> для сборки, описывающих параметры JIT-компилятора, возможность переопределить целевые объекты сборки, а также вид открытого ключа сборки — полный или измененный с использованием маркера.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> enumeration describes the assembly characteristics that can be set using this attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> Перечисление описывает характеристики сборки, которые могут быть установлены с помощью этого атрибута.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>To access the flags that have been specified for an assembly, use the <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> property to obtain an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object, then use the <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> property to obtain an <ph id="ph4">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> value.</source>
          <target state="translated">Для доступа к флаги, которые были указаны для сборки, используйте <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType&gt;</ph> , чтобы получить <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> объекта, а затем использовать <ph id="ph3">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> , чтобы получить <ph id="ph4">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> значение.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>To specify <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> flags for a dynamic assembly, set the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object that you pass to the <ph id="ph4">&lt;xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Чтобы указать <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> для динамической сборки, флаги <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> свойство <ph id="ph3">&lt;xref:System.Reflection.AssemblyName&gt;</ph> объект, передаваемый <ph id="ph4">&lt;xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>The following code example shows how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to an assembly, and how to read the flags at run time.</source>
          <target state="translated">В следующем примере кода показано, как применить <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> для сборки и как прочитать флаги во время выполнения.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>The example also creates an instance of the attribute, and uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> property to display the flags.</source>
          <target state="translated">В примере также создается экземпляр атрибута и использует <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> свойство для отображения флаги.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>For an example of how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to a dynamic assembly, see the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Пример применения <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> к динамической сборке, в разделе <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyFlagsAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags, cast as an integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</source>
          <target state="translated">Побитовое сочетание флагов <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph>, приведенных к целочисленному значению, которые представляют параметры JIT-компилятора, долговременность, возможность переопределить целевые объекты сборки, а также вид ее открытого ключа — полный или измененный с использованием маркера.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> class with the specified combination of <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags, cast as an integer value.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> с указанным сочетанием флагов <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph>, приведенным к целочисленному значению.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)">
          <source>This untyped constructor is now obsolete.</source>
          <target state="translated">Этот нетипизированный конструктор устарел.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)">
          <source>Do not use.</source>
          <target state="translated">Не используется.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</source>
          <target state="translated">Побитовое сочетание флагов <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph>, представляющих параметры JIT-компилятора, долговременность, возможность переопределить целевые объекты сборки, а также вид ее открытого ключа — полный или измененный с использованием маркера.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> class with the specified combination of <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> с указанным сочетанием флагов <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
          <source>The following code example shows how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to an assembly, and how to read the flags at run time.</source>
          <target state="translated">В следующем примере кода показано, как применить <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> для сборки и как прочитать флаги во время выполнения.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
          <source>The example also creates an instance of the attribute, and uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> property to display the flags.</source>
          <target state="translated">В примере также создается экземпляр атрибута и использует <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> свойство для отображения флаги.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
          <source>For an example of how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to a dynamic assembly, see the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Пример применения <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> к динамической сборке, в разделе <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags, cast as an unsigned integer value, representing just-in-time (JIT) compiler options, longevity, whether an assembly is retargetable, and whether it has a full or tokenized public key.</source>
          <target state="translated">Побитовое сочетание флагов <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph>, приведенных к беззнаковому целочисленному значению, которые представляют параметры JIT-компилятора, долговременность, возможность переопределить целевые объекты сборки, а также вид ее открытого ключа — полный или измененный с использованием маркера.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> class with the specified combination of <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags, cast as an unsigned integer value.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyFlagsAttribute" /&gt;</ph> с указанным сочетанием флагов <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph>, приведенным к беззнаковому целочисленному значению.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)">
          <source>This untyped constructor is now obsolete.</source>
          <target state="translated">Этот нетипизированный конструктор устарел.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)">
          <source>Do not use.</source>
          <target state="translated">Не используется.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>Gets an integer value representing the combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags specified when this attribute instance was created.</source>
          <target state="translated">Возвращает целочисленное значение, представляющее сочетание флагов <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph>, определенных при создании этого экземпляра атрибута.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>An integer value representing a bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags.</source>
          <target state="translated">Целочисленное значение, представляющее битовую комбинацию флагов <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>This property returns an integer for backward compatibility.</source>
          <target state="translated">Это свойство возвращает целое число для обеспечения обратной совместимости.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>Cast the value to the <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> type before using it.</source>
          <target state="translated">Привести значение <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> типа перед его использованием.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>The following code example shows how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to an assembly, and how to read the flags at run time.</source>
          <target state="translated">В следующем примере кода показано, как применить <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> для сборки и как прочитать флаги во время выполнения.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>The example also creates an instance of the attribute, and uses the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> property to display the flags.</source>
          <target state="translated">В примере также создается экземпляр атрибута и использует <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A&gt;</ph> свойство для отображения флаги.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
          <source>For an example of how to apply the <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> to a dynamic assembly, see the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Пример применения <ph id="ph1">&lt;xref:System.Reflection.AssemblyFlagsAttribute&gt;</ph> к динамической сборке, в разделе <ph id="ph2">&lt;xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Reflection.AssemblyFlagsAttribute.Flags">
          <source>Gets an unsigned integer value representing the combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags specified when this attribute instance was created.</source>
          <target state="translated">Возвращает беззнаковое целочисленное значение, представляющее сочетание флагов <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph>, определенных при создании этого экземпляра атрибута.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.Flags">
          <source>An unsigned integer value representing a bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph> flags.</source>
          <target state="translated">Беззнаковое целочисленное значение, представляющее битовую комбинацию флагов <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.Flags">
          <source>This property returns an integer for backward compatibility.</source>
          <target state="translated">Это свойство возвращает целое число для обеспечения обратной совместимости.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblyFlagsAttribute.Flags">
          <source>Cast the value to the <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> type before using it.</source>
          <target state="translated">Привести значение <ph id="ph1">&lt;xref:System.Reflection.AssemblyNameFlags&gt;</ph> типа перед его использованием.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>