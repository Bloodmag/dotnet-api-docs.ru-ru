<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomAttributeTypedArgument.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b5d1ec529757045ee60974de7538e486877eb0ff.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5d1ec529757045ee60974de7538e486877eb0ff</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.</source>
          <target state="translated">Представляет аргумент настраиваемого атрибута в контексте только для отражения или элемент аргумента массива.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, and so on.</source>
          <target state="translated">Невозможно выполнить код, который анализируется в контексте только для отражения, поэтому не всегда можно просмотреть путем создания экземпляров их и затем проверив их свойства, с помощью таких методов, как пользовательские атрибуты <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>и так далее .</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</source>
          <target state="translated">Код для самого типа атрибута загружается в контекст только для отражения, не может быть выполнена.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure is used by the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> Структура используется <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> класса для предоставления доступа к типу и значению позиционный аргумент, указанный для экземпляра настраиваемого атрибута, выполняя конструктор атрибута.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.</source>
          <target state="translated">Он также предоставляет доступ к типу и значению именованного аргумента без выполнения кода с соответствующим свойством тип настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The types and values of all the positional and named arguments of an attribute instance are provided by <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structures.</source>
          <target state="translated">Типы и значения всех аргументов позиционные и именованного экземпляра атрибута обеспечиваются <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> структуры.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The positional attributes returned by the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType&gt;</ph> property are directly represented by <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structures, but the named arguments returned by the <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType&gt;</ph> property are represented by <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structures; to get the <ph id="ph5">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure for a named argument, use the <ph id="ph6">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Позиционные атрибутов, возвращенный методом <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType&gt;</ph> свойства представлены непосредственно <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> структур, но именованные аргументы, возвращаемые <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType&gt;</ph> представлены свойства <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> структуры; для получения <ph id="ph5">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> Структура для именованного аргумента используйте <ph id="ph6">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>If an argument is an array of values, the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> that represents the argument returns a generic <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> objects.</source>
          <target state="translated">Если аргумент представляет собой массив значений, <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> свойство <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> представляет аргумент возвращает универсальный <ph id="ph3">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> из <ph id="ph4">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Each <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> object in the collection represents the corresponding element of the array.</source>
          <target state="translated">Каждый <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> соответствующий элемент массива представляет объект в коллекции.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>To create instances of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class, use the <ph id="ph2">`static`</ph><ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> factory method.</source>
          <target state="translated">Для создания экземпляров <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> класса, используйте <ph id="ph2">`static`</ph> <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> фабричный метод.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четырьмя свойствами.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Два свойства доступны только для чтения и задаются с помощью позиционных параметров в конструкторе.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Одно позиционное свойство представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">В этих случаях используются различные конструкторы.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">При выполнении сборка загружается в контекст только для отражения и отображает пользовательские атрибуты.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Атрибут, который применяется к типу, обладает свойствами массива, позиционных и именованных аргументов.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeTypedArgument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>The value of the custom attribute argument.</source>
          <target state="translated">Значение аргумента настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> class with the specified value.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph>, используя заданное значение.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter cannot be <ph id="ph2">`null`</ph> for this constructor, because the argument type is inferred from the type of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Параметр не может быть <ph id="ph2">`null`</ph> данного конструктора, так как тип аргумента выводится из типа <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>To specify a <ph id="ph1">`null`</ph> value, use the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29&gt;</ph> constructor.</source>
          <target state="translated">Чтобы указать <ph id="ph1">`null`</ph> , используйте <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29&gt;</ph> конструктор.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>This constructor is for use by inheritors of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> class.</source>
          <target state="translated">Этот конструктор предназначен для использования наследующими <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source>It is not intended for use in application code.</source>
          <target state="translated">Он не предназначен для использования в коде приложения.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="value" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>The type of the custom attribute argument.</source>
          <target state="translated">Тип аргумента настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>The value of the custom attribute argument.</source>
          <target state="translated">Значение аргумента настраиваемого атрибута.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> class with the specified type and value.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> заданным типом и значением.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>This constructor is for use by inheritors of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> class.</source>
          <target state="translated">Этот конструктор предназначен для использования наследующими <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source>It is not intended for use in application code.</source>
          <target state="translated">Он не предназначен для использования в коде приложения.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="argumentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="argumentType" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>Gets the type of the argument or of the array argument element.</source>
          <target state="translated">Получает тип аргумента или элемента аргумента-массива.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the type of the argument or of the array element.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, представляющий тип аргумента или элемента массива.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property.</source>
          <target state="translated">Простой аргументы или элементы массива аргументов, это свойство определяет фактический тип значения, возвращенного <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>For array arguments, this property returns the array type, but the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property returns a <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.</source>
          <target state="translated">Для аргументов, массив, это свойство возвращает тип массива, но <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> возвращает <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> в Visual Basic) в котором каждый элемент коллекции представляет соответствующий элемент аргумента массива.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четырьмя свойствами.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Два свойства доступны только для чтения и задаются с помощью позиционных параметров в конструкторе.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Одно позиционное свойство представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">В этих случаях используются различные конструкторы.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">При выполнении сборка загружается в контекст только для отражения и отображает пользовательские атрибуты.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Атрибут, который применяется к типу, обладает свойствами массива, позиционных и именованных аргументов.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> property is used in the <ph id="ph2">`ShowValueOrArray`</ph> method that displays custom attribute data, to display the types of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> Свойство используется в <ph id="ph2">`ShowValueOrArray`</ph> метод, отображающий данным настраиваемых атрибутов, чтобы отобразить типы атрибутов.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)">
          <source>Another object to compare to.</source>
          <target state="translated">Другой объект, подлежащий сравнению.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)">
          <source>Indicates whether this instance and a specified object are equal.</source>
          <target state="translated">Указывает, равен ли этот экземпляр заданному объекту.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> and this instance are the same type and represent the same value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> и данный экземпляр относятся к одному типу и представляют одинаковые значения; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Возвращает хэш-код данного экземпляра.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode">
          <source>A 32-bit signed integer that is the hash code for this instance.</source>
          <target state="translated">32-разрядное целое число со знаком, являющееся хэш-кодом для данного экземпляра.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the left of the equality operator.</source>
          <target state="translated">Структура <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph>, которая находится слева от оператора равенства.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the right of the equality operator.</source>
          <target state="translated">Структура <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph>, которая находится справа от оператора равенства.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>Tests whether two <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are equivalent.</source>
          <target state="translated">Проверяет равенство двух структур <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если обе структуры <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> равны; в противном случае — <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Эквивалентный метод для этого оператора является <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the left of the inequality operator.</source>
          <target state="translated">Структура <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph>, которая находится слева от оператора неравенства.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure to the right of the inequality operator.</source>
          <target state="translated">Структура <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph>, которая находится справа от оператора неравенства.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>Tests whether two <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are different.</source>
          <target state="translated">Определяет равенство двух структур <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structures are different; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если две структуры <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> различаются; в противном случае — <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Эквивалентный метод для этого оператора является <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.ToString">
          <source>Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.</source>
          <target state="translated">Возвращает строку, состоящую из имени аргумента, знака равенства и строкового представления значения аргумента.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeTypedArgument.ToString">
          <source>A string consisting of the argument name, the equal sign, and a string representation of the argument value.</source>
          <target state="translated">Строка, состоящая из имени аргумента, знака равенства и строкового представления значения аргумента.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.</source>
          <target state="translated">Получает значение аргумента для простого аргумента или элемента аргумента-массива; получает коллекцию значений для аргумента-массива.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>An object that represents the value of the argument or element, or a generic <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> objects that represent the values of an array-type argument.</source>
          <target state="translated">Объект, представляющий значение аргумента или элемента, или универсальная коллекция <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> объектов <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph>, которая представляет значения аргумента типа массива.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>If the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> represents an array argument, this property returns a <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> in Visual Basic).</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> представляет аргумента массива, это свойство возвращает <ph id="ph2">`ReadOnlyCollection&lt;CustomAttributeTypedArgument&gt;`</ph> (<ph id="ph3">`ReadOnlyCollection(Of CustomAttributeTypedArgument)`</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Each element of the collection represents the corresponding element of the array argument.</source>
          <target state="translated">Каждый элемент коллекции представляет соответствующий элемент аргумента массива.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The type of the value can be obtained by using the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> property.</source>
          <target state="translated">Тип значения можно получить с помощью <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> gets the actual type of the value returned by the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property for simple arguments or for elements of array arguments.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> Получает фактический тип значения, возвращенного <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> свойство для простой аргументы или для элементов массива аргументов.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>It returns the array type for array arguments.</source>
          <target state="translated">Возвращает тип массива для массива аргументов.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четырьмя свойствами.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Два свойства доступны только для чтения и задаются с помощью позиционных параметров в конструкторе.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Другие свойства доступны для чтения/записи и может быть только путем использования именованных аргументов.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Одно позиционное свойство представляет собой массив строк, и одно именованное свойство представляет собой массив целых чисел.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">В этих случаях используются различные конструкторы.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">При выполнении сборка загружается в контекст только для отражения и отображает пользовательские атрибуты.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">Атрибут, который применяется к типу, обладает свойствами массива, позиционных и именованных аргументов.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> property is used in the <ph id="ph2">`ShowValueOrArray`</ph> method that displays custom attribute data, to display the values of attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.Value%2A&gt;</ph> Свойство используется в <ph id="ph2">`ShowValueOrArray`</ph> метод, отображающий данным настраиваемых атрибутов, чтобы отобразить значения атрибутов.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeTypedArgument.Value">
          <source><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> &amp;#124; <ph id="ph2">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A&gt;</ph> &amp;#124; <ph id="ph2">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>