<Type Name="IReflect" FullName="System.Reflection.IReflect">
  <TypeSignature Language="C#" Value="public interface IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.IReflect" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReflect" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReflect" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2fcf3-101">Взаимодействует с [интерфейсом IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span><span class="sxs-lookup"><span data-stu-id="2fcf3-101">Interoperates with the [IDispatch interface](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fcf3-102"><xref:System.Reflection.IReflect> Интерфейс используется для взаимодействия с [интерфейса IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span><span class="sxs-lookup"><span data-stu-id="2fcf3-102">The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span> <span data-ttu-id="2fcf3-103"><xref:System.Reflection.IReflect> определяет подмножество <xref:System.Type> методов отражения.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-103"><xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods.</span></span> <span data-ttu-id="2fcf3-104">Реализация этого интерфейса позволяет настроить поведение при доступе к объекту из COM, как тип `IDispatch` объекта.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-104">Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object.</span></span> <span data-ttu-id="2fcf3-105"><xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> Класс может использоваться для маршалинга объекта, реализующего <xref:System.Reflection.IReflect> или <xref:System.Runtime.InteropServices.Expando.IExpando> как COM `IDispatch` объекта и наоборот.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-105">The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler" />
  </Docs>
  <Members>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2fcf3-106">Имя искомого поля.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-106">The name of the field to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2fcf3-107">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-107">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="2fcf3-108">Возвращает объект <see cref="T:System.Reflection.FieldInfo" />, соответствующий заданному полю и флагу привязки.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-108">Returns the <see cref="T:System.Reflection.FieldInfo" /> object that corresponds to the specified field and binding flag.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-109">Объект <see cref="T:System.Reflection.FieldInfo" />, содержащий данные поля для именованного объекта, который удовлетворяет ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-109">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="2fcf3-110">В объекте реализовано несколько полей с одним именем.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-110">The object implements multiple fields with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2fcf3-111">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-111">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="2fcf3-112">Возвращает массив объектов <see cref="T:System.Reflection.FieldInfo" />, соответствующих всем полям текущего класса.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-112">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current class.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-113">Массив объектов <see cref="T:System.Reflection.FieldInfo" />, содержащих все данные полей этого объекта отражения, который удовлетворяет ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-113">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fcf3-114">Искомый элемент создается на основе имени.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-114">The match is based upon a name.</span></span> <span data-ttu-id="2fcf3-115">Каждое поле должно иметь уникальное имя.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-115">Each field must have a unique name.</span></span> <span data-ttu-id="2fcf3-116"><xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> Флаг указывает, что неоткрытые методы включаются в поиск.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-116">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that non-public methods are included in the search.</span></span> <span data-ttu-id="2fcf3-117"><xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> Флаг указывает, что открытые методы включаются в поиск.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-117">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public methods are included in the search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2fcf3-118">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-118">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2fcf3-119">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-119">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="2fcf3-120">Извлекает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем открытым членам или всем членам, которые удовлетворяют заданному имени.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-120">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-121">Массив объектов <see cref="T:System.Reflection.MemberInfo" />, отвечающих параметру <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-121">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the <paramref name="name" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fcf3-122"><xref:System.Reflection.IReflect.GetMember%2A> Метод извлекает массив <xref:System.Reflection.MemberInfo> объектов с помощью имени и атрибуту привязки, которые соответствуют всем открытым членам или всем членам, которые удовлетворяют заданному имени.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-122">The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="2fcf3-123">Регистр указанное имя является соблюдается или не обрабатывается в соответствии с <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-123">The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2fcf3-124">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-124">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="2fcf3-125">Извлекает массив объектов <see cref="T:System.Reflection.MemberInfo" />, соответствующих всем открытым членам или всем членам текущего класса.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-125">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond either to all public members or to all members of the current class.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-126">Массив объектов <see cref="T:System.Reflection.MemberInfo" />, содержащих все данные элементов для этого объекта отражения.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-126">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fcf3-127">Этот метод возвращает массив <xref:System.Reflection.MemberInfo> объектов с помощью привязки атрибута, соответствующего всем открытым членам или всем членам текущего класса.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-127">This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</span></span> <span data-ttu-id="2fcf3-128">Он возвращает массив всех членов, определенных для данного объекта.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-128">It returns an array of all of the members defined for this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2fcf3-129">Извлекает объект <see cref="T:System.Reflection.MethodInfo" />, соответствующий заданному методу.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-129">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2fcf3-130">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-130">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2fcf3-131">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-131">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="2fcf3-132">Извлекает объект <see cref="T:System.Reflection.MethodInfo" />, соответствующий заданному методу при заданных ограничениях поиска.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-132">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method under specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-133">Объект <see cref="T:System.Reflection.MethodInfo" />, содержащий данные метода, отвечающие имени метода и ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-133">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="2fcf3-134">В объекте реализовано несколько методов с одним именем.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-134">The object implements multiple methods with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2fcf3-135">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-135">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2fcf3-136">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-136">The binding attributes used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="2fcf3-137">Объект, реализующий <see cref="T:System.Reflection.Binder" />, содержащий свойства, связанные с этим методом.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-137">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="types"><span data-ttu-id="2fcf3-138">Массив, используемый для выбора среди перегруженных версий метода.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-138">An array used to choose among overloaded methods.</span></span></param>
        <param name="modifiers"><span data-ttu-id="2fcf3-139">Массив модификаторов параметров, используемый для работы привязки с подписями параметров, в которых были изменены типы.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-139">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="2fcf3-140">Извлекает объект <see cref="T:System.Reflection.MethodInfo" />, соответствующий заданному методу из числа перегруженных методов, при помощи массива типа <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-140">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a <see cref="T:System.Type" /> array to choose from among overloaded methods.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-141">Запрошенный метод, который соответствует всем заданным параметрам.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-141">The requested method that matches all the specified parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fcf3-142">Возвращает значение на основе имени метода, соответствие <xref:System.Reflection.BindingFlags> член перечисления, вида преобразования типов, заданные `binder` , перегрузки и <xref:System.Reflection.ParameterInfo> , описывающий сигнатуру метода.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-142">The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="2fcf3-143">В объекте реализовано несколько методов с одним именем.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-143">The object implements multiple methods with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2fcf3-144">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-144">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="2fcf3-145">Извлекает массив объектов <see cref="T:System.Reflection.MethodInfo" /> со всеми открытыми методами или всеми методами текущего класса.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-145">Retrieves an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-146">Массив объектов <see cref="T:System.Reflection.MethodInfo" />, содержащих все методы, определенные для этого объекта отражения, который удовлетворяет ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-146">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <paramref name="bindingAttr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fcf3-147">Атрибут неоткрытые `bindingAttr` устанавливается только при возвращении открытых методов.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-147">The non-public attribute of `bindingAttr` is indicated only if public methods are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="2fcf3-148">Атрибут привязки, используемый для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-148">The binding attribute used to control the search.</span></span></param>
        <summary><span data-ttu-id="2fcf3-149">Извлекает массив объектов <see cref="T:System.Reflection.PropertyInfo" />, соответствующих всем открытым свойствам или всем свойствам текущего класса.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-149">Retrieves an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-150">Массив объектов <see cref="T:System.Reflection.PropertyInfo" /> для всех свойств, определенных в объекте отражения.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-150">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2fcf3-151">Извлекает объект <see cref="T:System.Reflection.PropertyInfo" />, соответствующий заданному свойству.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-151">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2fcf3-152">Имя искомого свойства.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-152">The name of the property to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2fcf3-153">Атрибуты привязки, используемые для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-153">The binding attributes used to control the search.</span></span></param>
        <summary><span data-ttu-id="2fcf3-154">Извлекает объект <see cref="T:System.Reflection.PropertyInfo" />, соответствующий заданному свойству при заданных ограничениях поиска.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-154">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-155">Объект <see cref="T:System.Reflection.PropertyInfo" /> для найденного свойства, которое удовлетворяет ограничениям поиска, заданным в параметре <paramref name="bindingAttr" />, или значение <see langword="null" />, если свойство не было найдено.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-155">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="2fcf3-156">В объекте реализовано несколько полей с одним именем.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-156">The object implements multiple fields with the same name.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2fcf3-157">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-157">The name of the member to find.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="2fcf3-158">Атрибут привязки, используемый для управления поиском.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-158">The binding attribute used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="2fcf3-159">Объект, реализующий <see cref="T:System.Reflection.Binder" />, содержащий свойства, связанные с этим методом.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-159">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="returnType"><span data-ttu-id="2fcf3-160">Тип свойства.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-160">The type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="2fcf3-161">Массив, используемый для выбора среди перегружаемых одноименных методов.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-161">An array used to choose among overloaded methods with the same name.</span></span></param>
        <param name="modifiers"><span data-ttu-id="2fcf3-162">Массив, используемый для выбора модификаторов параметров.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-162">An array used to choose the parameter modifiers.</span></span></param>
        <summary><span data-ttu-id="2fcf3-163">Извлекает объект <see cref="T:System.Reflection.PropertyInfo" />, соответствующий заданному свойству при заданных ограничениях поиска.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-163">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object that corresponds to a specified property with specified search constraints.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-164">Объект <see cref="T:System.Reflection.PropertyInfo" /> для найденного свойства, если свойство с заданным именем было найдено в данном объекте отражения, или значение <see langword="null" />, если свойство не было найдено.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-164">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fcf3-165">Этот метод получает <xref:System.Reflection.PropertyInfo> объект, соответствующий заданному свойству при заданных ограничениях поиска.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-165">This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="2fcf3-166">Массив типов позволяет выбрать один из перегруженных методов.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-166">A type array is used to choose from among overloaded methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterModifier" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2fcf3-167">Имя искомого элемента.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-167">The name of the member to find.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="2fcf3-168">Один из атрибутов вызова <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-168">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span></span> <span data-ttu-id="2fcf3-169">Параметр <c>invokeAttr</c> может быть конструктором, методом, свойством или полем.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-169">The <c>invokeAttr</c> parameter may be a constructor, method, property, or field.</span></span> <span data-ttu-id="2fcf3-170">Необходимо указать подходящий атрибут вызова.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-170">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="2fcf3-171">Чтобы вызвать стандартный элемент класса, передайте в качестве имени элемента пустую строку ("").</span><span class="sxs-lookup"><span data-stu-id="2fcf3-171">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span></span></param>
        <param name="binder"><span data-ttu-id="2fcf3-172">Один из битовых флагов <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-172">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span></span> <span data-ttu-id="2fcf3-173">Реализует класс <see cref="T:System.Reflection.Binder" />, содержащий свойства, связанные с этим методом.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-173">Implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span></span></param>
        <param name="target"><span data-ttu-id="2fcf3-174">Объект, для которого следует вызвать указанный член.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-174">The object on which to invoke the specified member.</span></span> <span data-ttu-id="2fcf3-175">Для статических элементов этот параметр не обрабатывается.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-175">This parameter is ignored for static members.</span></span></param>
        <param name="args"><span data-ttu-id="2fcf3-176">Массив объектов, содержащих число, порядок и тип параметров вызываемого элемента.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-176">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="2fcf3-177">Если параметров нет, этот массив пуст.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-177">This is an empty array if there are no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="2fcf3-178">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-178">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span></span> <span data-ttu-id="2fcf3-179">Массив такой же длины, что и параметр <c>args</c>, предоставляющий атрибуты аргументов вызываемого члена в виде метаданных.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-179">This array has the same length as the <c>args</c> parameter, representing the invoked member's argument attributes in the metadata.</span></span> <span data-ttu-id="2fcf3-180">Параметр может иметь следующие атрибуты: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" /> и <see langword="pdHasDefault" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-180">A parameter can have the following attributes: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, and <see langword="pdHasDefault" />.</span></span> <span data-ttu-id="2fcf3-181">Эти значения представляют, соответственно, параметры [In], [Out], [retval], [optional] и стандартный параметр.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-181">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span></span> <span data-ttu-id="2fcf3-182">Эти атрибуты используются различными службами взаимодействия.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-182">These attributes are used by various interoperability services.</span></span></param>
        <param name="culture"><span data-ttu-id="2fcf3-183">Экземпляр объекта <see cref="T:System.Globalization.CultureInfo" />, используемого для управления приведением типов.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-183">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="2fcf3-184">Например, параметр <c>culture</c> преобразует строку <see langword="String" />, которая представляет число 1000, в значение типа <see langword="Double" />, поскольку в разных культурах число 1000 может быть представлено по-разному.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-184">For example, <c>culture</c> converts a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="2fcf3-185">Если этот параметр имеет значение <see langword="null" />, для текущего потока используется объект <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-185">If this parameter is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="2fcf3-186">Массив параметров типа <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-186">A <see langword="String" /> array of parameters.</span></span></param>
        <summary><span data-ttu-id="2fcf3-187">Вызывает заданный элемент.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-187">Invokes a specified member.</span></span></summary>
        <returns><span data-ttu-id="2fcf3-188">Заданный член.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-188">The specified member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fcf3-189">Вызываемый метод должен быть доступен и обеспечивать наиболее точное соответствие заданному списку аргументов с учетом ограничений заданного модуля привязки и атрибутов вызова.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-189">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span>  
  
 <span data-ttu-id="2fcf3-190">Метод вызывается, если число параметров в объявлении метода равно количеству аргументов в списке аргументов, а тип каждого аргумента может преобразовываться связывателем тип параметра.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-190">A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2fcf3-191">Массив модификаторов параметров, передаваемый <xref:System.Reflection.IReflect.InvokeMember%2A> метод должен содержать единственный модификатор параметра.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-191">The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier.</span></span> <span data-ttu-id="2fcf3-192">Первый модификатор параметра считается при определении аргумента, который должен передаваться по ссылке, если он предоставлен модели COM.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-192">Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</span></span>  
  
 <span data-ttu-id="2fcf3-193">Связыватель находит все подходящие методы, в соответствии с типом связывания (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>и так далее).</span><span class="sxs-lookup"><span data-stu-id="2fcf3-193">The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on).</span></span> <span data-ttu-id="2fcf3-194">Набор методов фильтруется по имени, количество аргументов и набор модификаторов поиска, определенных в модуле привязки.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-194">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span> <span data-ttu-id="2fcf3-195">После выбора метода он вызывается и в этот момент проверяется доступность.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-195">After the method is selected, it is invoked, and accessibility is checked at that point.</span></span> <span data-ttu-id="2fcf3-196">Средство поиска может управлять определения набора методов является поиском на основе связанного с методом атрибута доступности.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-196">The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="2fcf3-197"><xref:System.Reflection.Binder.BindToMethod%2A> Выбор вызываемого метода.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-197"><xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked.</span></span> <span data-ttu-id="2fcf3-198">Связыватель по умолчанию выбирает наиболее точное соответствие.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-198">The default binder selects the most specific match.</span></span>  
  
 <span data-ttu-id="2fcf3-199">Ограничения доступа игнорируются для полностью доверенный код.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-199">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="2fcf3-200">То есть закрытые конструкторы, методы, поля и свойства можно получить доступ к и вызываемыми средствами отражения, если полностью доверенный код.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-200">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fcf3-201">В следующем примере извлекается значение <xref:System.DateTime.Now%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-201">The following example obtains the value of the <xref:System.DateTime.Now%2A> property.</span></span>  
  
 [!code-cpp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CS/source.cs#1)]
 [!code-vb[Classic IReflect.InvokeMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2fcf3-202">Для процедуры <see langword="set" /> поля задано более одного аргумента.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-202">More than one argument is specified for a field <see langword="set" />.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="2fcf3-203">Невозможно найти поле или свойство.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-203">The field or property cannot be found.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="2fcf3-204">Не удается найти метод.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-204">The method cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2fcf3-205">Закрытый элемент вызван без необходимого разрешения <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-205">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fcf3-206">Получает базовый тип, представляющий объект <see cref="T:System.Reflection.IReflect" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-206">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></summary>
        <value><span data-ttu-id="2fcf3-207">Базовый тип, представляющий объект <see cref="T:System.Reflection.IReflect" />.</span><span class="sxs-lookup"><span data-stu-id="2fcf3-207">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>