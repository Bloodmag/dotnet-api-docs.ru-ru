<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a5d3c-101">Перечисляет ресурсы в двоичном файле ресурсов (RESOURCES) путем последовательного считывания пар "ключ-значение" ресурсов.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span></span>  
  
 <span data-ttu-id="a5d3c-102">**Примечание по безопасности**. Вызов методов в этом классе с ненадежными данными представляет угрозу безопасности.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span></span> <span data-ttu-id="a5d3c-103">Вызывайте методы в классе только с надежными данными.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-103">Call the methods in the class only with trusted data.</span></span> <span data-ttu-id="a5d3c-104">Дополнительные сведения см. в разделе [Угрозы безопасности при работе с ненадежными данными](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span><span class="sxs-lookup"><span data-stu-id="a5d3c-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d3c-105"><xref:System.Resources.ResourceReader> Класс предоставляет стандартную реализацию <xref:System.Resources.IResourceReader> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-105">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="a5d3c-106">Объект <xref:System.Resources.ResourceReader> экземпляр представляет отдельный файл .resources или RESOURCES-файл, встроенный в сборку.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-106">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="a5d3c-107">Он используется для перечисления ресурсов в RESOURCES-файла и получения его пары имя/значение.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-107">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="a5d3c-108">Она отличается от <xref:System.Resources.ResourceManager> класс, который используется для получения указанных именованных ресурсов из RESOURCES-файла, внедренного в сборку.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-108">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="a5d3c-109"><xref:System.Resources.ResourceManager> Класс используется для извлечения ресурсов, имена которых известны заранее, тогда как <xref:System.Resources.ResourceReader> класс удобно использовать для извлечения ресурсов, число или точные имена неизвестны во время компиляции.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-109">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="a5d3c-110">Например приложение может использовать файл ресурсов для хранения сведений о конфигурации, организованных в разделах и элементов в разделе, где число разделов или элементов в разделе не известен заранее.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-110">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="a5d3c-111">Ресурсы можно назвать затем универсальной (такие как `Section1`, `Section1Item1`, `Section1Item2`и так далее) и получать с помощью <xref:System.Resources.ResourceReader> объекта.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-111">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a5d3c-112">Этот тип реализует <xref:System.IDisposable> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-112">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="a5d3c-113">После завершения с помощью типа следует освободить его прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-113">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="a5d3c-114">Для удаления типа непосредственно вызвать его <xref:System.IDisposable.Dispose%2A> метод в `try` / `catch` блока.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-114">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="a5d3c-115">Чтобы удалить ее косвенно, использовать языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a5d3c-115">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="a5d3c-116">Дополнительные сведения см. в разделе «С помощью объекта, реализует интерфейс IDisposable» в <xref:System.IDisposable> разделе интерфейса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-116">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="a5d3c-117">Дополнительные сведения об использовании <xref:System.Resources.ResourceReader> класса, в следующих разделах:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-117">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="a5d3c-118">Создание экземпляра объекта ResourceReader</span><span class="sxs-lookup"><span data-stu-id="a5d3c-118">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="a5d3c-119">Перечисление ресурсов объект ResourceReader</span><span class="sxs-lookup"><span data-stu-id="a5d3c-119">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="a5d3c-120">Извлечение ресурсов с помощью свойства IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="a5d3c-120">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="a5d3c-121">Извлечение ресурсов по имени с GetResourceData</span><span class="sxs-lookup"><span data-stu-id="a5d3c-121">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="a5d3c-122">Создание экземпляра объекта ResourceReader</span><span class="sxs-lookup"><span data-stu-id="a5d3c-122">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="a5d3c-123">RESOURCES-файл является двоичным файлом, который был скомпилирован из текстового файла или XML-файл .resx, [Resgen.exe (генератор файлов ресурсов)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span><span class="sxs-lookup"><span data-stu-id="a5d3c-123">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="a5d3c-124">Объект <xref:System.Resources.ResourceReader> объект может представлять отдельный файл .resources или RESOURCES-файл, встроенный в сборку.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-124">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="a5d3c-125">Для создания экземпляра <xref:System.Resources.ResourceReader> , считывает из автономного RESOURCES-файла, используется <xref:System.Resources.ResourceReader> конструктора класса входного потока или строка, содержащая имя файла .resources.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-125">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="a5d3c-126">В следующем примере кода демонстрируются оба подхода.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-126">The following example illustrates both approaches.</span></span> <span data-ttu-id="a5d3c-127">Создает первый <xref:System.Resources.ResourceReader> , представляющий RESOURCES-файл с именем `Resources1.resources` с помощью имени файла.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-127">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="a5d3c-128">Создает второй <xref:System.Resources.ResourceReader> , представляющий RESOURCES-файл с именем `Resources2.resources` с помощью потока, созданного из файла.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-128">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="a5d3c-129">Для создания <xref:System.Resources.ResourceReader> , представляющий внедренный RESOURCES-файл, создать экземпляр <xref:System.Reflection.Assembly> объекта из сборки, внедренные RESOURCES-файл.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-129">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="a5d3c-130">Его <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> возвращает <xref:System.IO.Stream> объект, который может быть передан <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-130">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="a5d3c-131">В следующем примере создается экземпляр <xref:System.Resources.ResourceReader> , представляющий внедренный RESOURCES-файл.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-131">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="a5d3c-132">Перечисление ресурсов объект ResourceReader</span><span class="sxs-lookup"><span data-stu-id="a5d3c-132">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="a5d3c-133">Чтобы перечислить ресурсы в RESOURCES-файл, следует вызвать <xref:System.Resources.ResourceReader.GetEnumerator%2A> метод, возвращающий <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> объекта.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-133">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="a5d3c-134">Вызывается `IDictionaryEnumerator.MoveNext` способ перехода от одного ресурса к другому.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-134">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="a5d3c-135">Метод возвращает `false` при перечислены все ресурсы в RESOURCES-файл.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-135">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a5d3c-136">Несмотря на то что <xref:System.Resources.ResourceReader> класс реализует <xref:System.Collections.IEnumerable> интерфейс и <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> метода <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> метод не выполняет <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> реализации.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-136">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="a5d3c-137">Вместо этого <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> возвращает <xref:System.Collections.IDictionaryEnumerator> объект интерфейса, предоставляющий доступ к каждому ресурсу пары имя/значение.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-137">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="a5d3c-138">Можно извлечь отдельные ресурсы в коллекции двумя способами:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-138">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="a5d3c-139">Можно выполнять перебор ресурсов <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> сбора и использования <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> свойств для извлечения ресурсов имя и значение.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-139">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="a5d3c-140">Этот способ рекомендуется использовать, если все ресурсы, того же типа или знать тип данных каждого ресурса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-140">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="a5d3c-141">При итерации можно получить имя каждого ресурса <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> коллекции и вызовите <xref:System.Resources.ResourceReader.GetResourceData%2A> метод для извлечения данных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-141">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="a5d3c-142">Такой подход рекомендуется использовать, если вы не знаете тип данных каждого ресурса или если описанный подход будет вызвано исключение.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-142">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="a5d3c-143">Извлечение ресурсов с помощью свойства IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="a5d3c-143">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="a5d3c-144">Первый метод перечисление ресурсов в RESOURCES-файл включает в себя непосредственно получение пары имя значение для каждого ресурса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-144">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="a5d3c-145">После вызова метода `IDictionaryEnumerator.MoveNext` имя метода, чтобы переместить каждый ресурс в коллекции, можно извлечь ресурс из <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> свойства и данные ресурсов из <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-145">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="a5d3c-146">В следующем примере показано, как получить имя и значение каждого ресурса в RESOURCES-файл с помощью <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> и <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-146">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="a5d3c-147">Чтобы запустить пример, создайте текстовый файл с именем ApplicationResources.txt для определения строковые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-147">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="a5d3c-148">Затем можно преобразовать текстовый файл ресурсов в двоичный файл с именем ApplicationResources.resources с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-148">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="a5d3c-149">**resgen ApplicationResources.txt**</span><span class="sxs-lookup"><span data-stu-id="a5d3c-149">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="a5d3c-150">В следующем примере затем используется <xref:System.Resources.ResourceReader> класс перечислить каждый ресурс в автономный двоичный RESOURCES-файл и отобразить его имя ключа и соответствующее значение.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-150">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="a5d3c-151">Попытка получить данные ресурсов из <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойства можно вызывать следующие исключения:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-151">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="a5d3c-152">Объект <xref:System.FormatException> Если данные не в требуемом формате.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-152">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="a5d3c-153">Объект <xref:System.IO.FileNotFoundException> Если не удается найти сборку, содержащую тип, к которому относятся данные.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-153">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="a5d3c-154">Объект <xref:System.TypeLoadException> , если тип, к которому принадлежит данных не может быть не найдены.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-154">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="a5d3c-155">Как правило эти исключения возникают, если RESOURCES-файл был изменен вручную, если сборка, в которой определен тип, либо не были включены с помощью приложения или была случайно удалена, или сборка является старой версии, который предшествует тип.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-155">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="a5d3c-156">Если одно из этих исключений создается, ресурсы можно получить путем перечисления каждого ресурса и вызова <xref:System.Resources.ResourceReader.GetResourceData%2A> метода, как показано в следующем разделе.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-156">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="a5d3c-157">Такой подход предоставляет вам некоторые сведения о данных, введите <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> попыталась вернуть свойство.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-157">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="a5d3c-158">Извлечение ресурсов по имени с GetResourceData</span><span class="sxs-lookup"><span data-stu-id="a5d3c-158">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="a5d3c-159">Второй подход к перечисление ресурсов в RESOURCES-файл также включает в себя просмотр ресурсов в файле путем вызова `IDictionaryEnumerator.MoveNext` метод.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-159">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="a5d3c-160">Для каждого ресурса, получения имени ресурса из <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> свойство, которое затем передается <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> метод для извлечения данных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-160">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="a5d3c-161">Это значение возвращается в виде массива байтов в `resourceData` аргумент.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-161">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="a5d3c-162">Этот подход является более удобны, чем извлечение ресурсов имя и значение из <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> и <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойства, поскольку он возвращает фактическое количество байтов, которые образуют значение ресурса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-162">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="a5d3c-163">Тем не менее, если попытка получить ресурс вызывает исключение, <xref:System.Resources.ResourceReader.GetResourceData%2A> метод позволяет идентифицировать источник исключения, указав сведения о типе данных ресурса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-163">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="a5d3c-164">Дополнительные сведения о строке, которая указывает тип ресурса данных см. в разделе <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-164">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="a5d3c-165">В следующем примере для извлечения ресурсов и обработки исключений, создаваемых, используйте этот подход.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-165">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="a5d3c-166">Программным образом создает двоичный RESOURCES-файл, содержащий четыре строки, одно значение типа Boolean, одним целым числом, одного точечного рисунка и один произвольный `DateTimeTZI` объекта.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-166">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="a5d3c-167">Чтобы запустить пример, выполните следующие действия:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-167">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="a5d3c-168">Создать сборку с именем Library.dll, содержащий `DateTimeTZI` структуры.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-168">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="a5d3c-169">Ниже приведен исходный код для сборки.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-169">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="a5d3c-170">Компиляция исходного кода на C# с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-170">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="a5d3c-171">Или можно скомпилировать его в Visual Basic, используя следующую команду:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-171">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="a5d3c-172">Скомпилируйте и выполните следующий исходный код, который создает в RESOURCES-файл с именем ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-172">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="a5d3c-173">Файл исходного кода, называется CreateResources.cs.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-173">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="a5d3c-174">Вы можете скомпилировать в C# с помощью следующей команды.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-174">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="a5d3c-175">Или можно скомпилировать его в Visual Basic, используя следующую команду:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-175">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="a5d3c-176">Скомпилируйте и запустите следующий код, чтобы перечислить ресурсы в файле ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-176">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="a5d3c-177">После изменения исходного кода (например, выдавая намеренно <xref:System.FormatException> в конце `try` блок) или переименование Library.dll сборки, чтобы он недоступен во время выполнения, выполнить пример, чтобы увидеть как вызовы <xref:System.Resources.ResourceReader.GetResourceData%2A> позволяют извлекать или повторно создать некоторые сведения о ресурсах.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-177">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a5d3c-178">Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a5d3c-179">Используя экземпляр этого объекта с недоверенными данными представляет угрозу безопасности.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-179">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="a5d3c-180">Этот объект можно используйте только с надежными данными.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-180">Use this object only with trusted data.</span></span> <span data-ttu-id="a5d3c-181">Дополнительные сведения см. в разделе [проверки данных](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="a5d3c-181">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a5d3c-182">Входной поток для чтения ресурсов.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-182">The input stream for reading resources.</span></span></param>
        <summary><span data-ttu-id="a5d3c-183">Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceReader" /> для заданного потока.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-183">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d3c-184"><xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> Конструктор создает <xref:System.Resources.ResourceReader> объект, который извлекает ресурсы из автономного RESOURCES-файла или из .resources файл, который является встроенный в сборку.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-184">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="a5d3c-185">Для чтения из автономного RESOURCES-файл, создать экземпляр <xref:System.IO.Stream> и передать его на <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-185">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="a5d3c-186">Для чтения внедренные RESOURCES-файл, вызовите <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> метод с именем, с учетом регистра RESOURCES-файл и передайте возвращенный <xref:System.IO.Stream> объект <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-186">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a5d3c-187">Используя экземпляр этого объекта с недоверенными данными представляет угрозу безопасности.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-187">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="a5d3c-188">Этот объект можно используйте только с надежными данными.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-188">Use this object only with trusted data.</span></span> <span data-ttu-id="a5d3c-189">Дополнительные сведения см. в разделе [проверки данных](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="a5d3c-189">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5d3c-190">В примере этого раздела используется следующий txt-файл с именем `PatientForm.txt` для определения ресурсов, используемых приложением.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-190">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="a5d3c-191">Вы можете скомпилировать txt-файл в RESOURCES-файл, выполнив следующую команду.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-191">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="a5d3c-192">**PatientForm.txt Resgen**</span><span class="sxs-lookup"><span data-stu-id="a5d3c-192">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="a5d3c-193">В следующем примере предполагается, что файл ресурсов внедрен в сборку, содержащую исполняемый код приложения.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-193">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="a5d3c-194">Он извлекает файл ресурсов с именем `PatientForm.resources` из текущей выполняемой сборки и отображает имя и значение каждого из ресурсов.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-194">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="a5d3c-195">Если в примере на C# называется `Example.cs`, можно выполнить компиляцию с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-195">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="a5d3c-196">**CSC Example.cs /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="a5d3c-196">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="a5d3c-197">Если в примере Visual Basic с именем `Example.vb`, можно выполнить компиляцию с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-197">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="a5d3c-198">**Vbc Example.vb /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="a5d3c-198">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a5d3c-199">Параметр <paramref name="stream" /> недоступен для чтения.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-199">The <paramref name="stream" /> parameter is not readable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5d3c-200">Параметр <paramref name="stream" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-200">The <paramref name="stream" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="a5d3c-201">При доступе к <paramref name="stream" /> произошла ошибка ввода/вывода.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-201">An I/O error has occurred while accessing <paramref name="stream" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a5d3c-202">для предоставления служб сериализации.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-202">for providing serialization services.</span></span> <span data-ttu-id="a5d3c-203">Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="a5d3c-204">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span><span class="sxs-lookup"><span data-stu-id="a5d3c-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a5d3c-205">требуется полное доверие для непосредственно вызывающего метода.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-205">requires full trust for the immediate caller.</span></span> <span data-ttu-id="a5d3c-206">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-206">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="a5d3c-207">Путь к файлу и имя файла ресурсов для чтения.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-207">The path and name of the resource file to read.</span></span> <span data-ttu-id="a5d3c-208">В параметре <c>filename</c> регистр не учитывается.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-208"><c>filename</c> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="a5d3c-209">Инициализирует новый экземпляр класса <see cref="T:System.Resources.ResourceReader" /> для указанного именованного файла ресурсов.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-209">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d3c-210"><xref:System.Resources.ResourceReader.%23ctor%28System.String%29> Конструктор создает <xref:System.Resources.ResourceReader> объект, который извлекает ресурсы из автономного RESOURCES-файла.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-210">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="a5d3c-211">Для извлечения ресурсов из внедренные RESOURCES-файл, используйте <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-211">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a5d3c-212">Используя экземпляр этого объекта с недоверенными данными представляет угрозу безопасности.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-212">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="a5d3c-213">Этот объект можно используйте только с надежными данными.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-213">Use this object only with trusted data.</span></span> <span data-ttu-id="a5d3c-214">Дополнительные сведения см. в разделе [проверки данных](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="a5d3c-214">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5d3c-215">В примере этого раздела используется следующий txt-файл с именем `PatientForm.txt` для определения ресурсов, используемых приложением.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-215">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="a5d3c-216">Txt-файл в RESOURCES-файл можно скомпилировать с помощью следующей команды:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-216">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="a5d3c-217">**PatientForm.txt Resgen**</span><span class="sxs-lookup"><span data-stu-id="a5d3c-217">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="a5d3c-218">В следующем примере перечисляются ресурсы в `PatientForm.resources` и отображает имя и значение каждого объекта.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-218">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a5d3c-219">Параметр <paramref name="fileName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-219">The <paramref name="fileName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="a5d3c-220">Не удается найти файл.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-220">The file cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="a5d3c-221">Произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-221">An I/O error has occurred.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="a5d3c-222">Файле ресурса имеет недопустимый формат.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-222">The resource file has an invalid format.</span></span> <span data-ttu-id="a5d3c-223">Например, длина файла может быть равна нулю.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-223">For example, the length of the file may be zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5d3c-224">Освобождает все ресурсы операционной системы, связанные с этим объектом <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-224">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d3c-225"><xref:System.Resources.ResourceReader.Close%2A> может безопасно вызываться несколько раз.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-225"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5d3c-226">В следующем примере перемещения по ресурсам файла и отображает все найденные пары ключ значение.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-226">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="a5d3c-227">В этом коде используется <xref:System.Resources.ResourceReader.Close%2A> метод, чтобы завершить работу <xref:System.Resources.ResourceReader> и чтобы освободить все ресурсы, занятые им.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-227">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5d3c-228">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-228">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d3c-229">Когда вы закончите, с помощью этого экземпляра <xref:System.Resources.ResourceReader>, вызовите <xref:System.Resources.ResourceReader.Dispose%2A> освободить все ресурсы, используемые этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-229">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="a5d3c-230">Следует удалить дальнейшие ссылки на это <xref:System.Resources.ResourceReader> , чтобы сборщик мусора мог освободить память, вместо поддержания финализации.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-230">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="a5d3c-231"><xref:System.Resources.ResourceReader.Dispose%2A> вызывает закрытый метод Dispose(Boolean), который содержит код для освобождения управляемых и неуправляемых ресурсов.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-231"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="a5d3c-232">Дополнительные сведения см. в разделе [метода](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="a5d3c-232">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5d3c-233">Возвращает перечислитель для данного объекта <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-233">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="a5d3c-234">Перечислитель для этого объекта <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-234">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d3c-235">Как правило, перечислить ресурсы путем вызова <xref:System.Resources.ResourceReader.GetEnumerator%2A> метода и затем повторно вызвать <xref:System.Collections.IEnumerator.MoveNext%2A> метод в возвращенном <xref:System.Collections.IDictionaryEnumerator> объекта до возвращения методом `false`.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-235">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="a5d3c-236">Имя ресурса доступна из <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> свойство; свое значение из <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-236">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a5d3c-237">В примере показано, как перечислить ресурсы таким образом.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-237">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="a5d3c-238">Реализация <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> свойства <xref:System.Resources.ResourceReader> класса можно вызывать следующие исключения:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-238">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="a5d3c-239">Не удается найти сборку, содержащую тип, к которому относятся данные.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-239">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="a5d3c-240">Данные не в требуемом формате.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-240">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="a5d3c-241">Не удается найти тип, к которому относятся данные.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-241">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="a5d3c-242">Исключение можно обработать путем вызова <xref:System.Resources.ResourceReader.GetResourceData%2A> метод для извлечения сведений о типе данных и массив байтов, назначенные именованный ресурс.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-242">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="a5d3c-243">Дополнительные сведения см. в подразделе «Получение ресурсов по имени с GetResourceData» <xref:System.Resources.ResourceReader> разделе, посвященном классу.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-243">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a5d3c-244"><xref:System.Resources.ResourceReader> Класс содержит два метода, которые возвращают перечислителей.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-244">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="a5d3c-245"><xref:System.Resources.ResourceReader.GetEnumerator%2A> Возвращает метод <xref:System.Collections.IDictionaryEnumerator> объекта интерфейса и рекомендуемый метод, который вызывается, когда перечисление ресурсов.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-245">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5d3c-246">В примере этого раздела используется следующий txt-файл с именем `PatientForm.txt` для определения ресурсов, используемых приложением.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-246">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="a5d3c-247">Вы можете скомпилировать txt-файл в RESOURCES-файл, выполнив следующую команду.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-247">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="a5d3c-248">**PatientForm.txt Resgen**</span><span class="sxs-lookup"><span data-stu-id="a5d3c-248">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="a5d3c-249">В следующем примере перечисляются ресурсы в `PatientForm.resources` и отображает имя и значение каждого объекта.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-249">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a5d3c-250">Устройство чтения уже закрыто или удалено, поэтому доступ невозможен.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-250">The reader has been closed or disposed, and cannot be accessed.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String&amp;" RefType="out" />
        <Parameter Name="resourceData" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="a5d3c-251">Имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-251">The name of a resource.</span></span></param>
        <param name="resourceType"><span data-ttu-id="a5d3c-252">При возвращении этого метода содержит строку, представляющую имя типа извлекаемого ресурса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-252">When this method returns, contains a string that represents the type name of the retrieved resource.</span></span> <span data-ttu-id="a5d3c-253">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-253">This parameter is passed uninitialized.</span></span></param>
        <param name="resourceData"><span data-ttu-id="a5d3c-254">Когда этот метод возвращает значение, оно содержит массив байтов, являющийся двоичным представлением извлеченного типа.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-254">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span></span> <span data-ttu-id="a5d3c-255">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-255">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="a5d3c-256">Возвращает имя типа и данные именованного ресурса из открытого файла ресурсов или потока.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-256">Retrieves the type name and data of a named resource from an open resource file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d3c-257"><xref:System.Resources.ResourceReader.GetResourceData%2A> Метод извлекает значение именованного ресурса в виде массива байтов.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-257">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="a5d3c-258">Обычно используется, когда <xref:System.Collections.IDictionaryEnumerator.Value%2A> вызывает исключение при попытке получить значение ресурса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-258">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="a5d3c-259">`resourceType` является строка, представляющая тип данных ресурса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-259">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="a5d3c-260">Он может иметь любое из следующих значений.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-260">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="a5d3c-261">Строковое представление `ResourceTypeCode` член перечисления, указывающее тип данных ресурса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-261">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="a5d3c-262">`ResourceTypeCode` Закрытое перечисление, используемая. Чтобы указать, что специальные двоичный формат используется для хранения одно 19 общие типы данных.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-262">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="a5d3c-263">К ним относятся типы-примитивы .NET Framework (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), а также <xref:System.String>, <xref:System.DateTime>, и <xref:System.TimeSpan>, кроме того, `ResourceTypeCode` перечисление содержит значения, указанные в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-263">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="a5d3c-264">Значение ResourceTypeCode</span><span class="sxs-lookup"><span data-stu-id="a5d3c-264">ResourceTypeCode value</span></span>|<span data-ttu-id="a5d3c-265">Описание:</span><span class="sxs-lookup"><span data-stu-id="a5d3c-265">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="a5d3c-266">Данные представляют собой массив байтов.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-266">The data is a byte array.</span></span> <span data-ttu-id="a5d3c-267">Эти данные часто тип является результатом вызова метода <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-267">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="a5d3c-268">Данные является пустой ссылкой.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-268">The data is a null reference.</span></span> <span data-ttu-id="a5d3c-269">Эти данные часто тип является результатом вызова метода <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> метод с объект, значение которого равно `null`.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-269">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="a5d3c-270">Данные хранятся в виде потока.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-270">The data is stored in a stream.</span></span> <span data-ttu-id="a5d3c-271">Эти данные часто тип является результатом вызова метода <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> или <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-271">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="a5d3c-272">Предположим, что `resourceData` не была повреждена, ее можно обычно преобразования из массива байтов обратно в исходное значение путем вызова <xref:System.BitConverter> или <xref:System.IO.BinaryReader> метод.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-272">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="a5d3c-273">Строка, содержащая полное имя типа, назначенные которого сериализованные данные `resourceData` аргумент (например, `System.String`).</span><span class="sxs-lookup"><span data-stu-id="a5d3c-273">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="a5d3c-274">Кроме того для типов, которые не являются частью библиотеки классов .NET Framework, строка содержит имя, версию, культуру и открытый ключ сборки, содержащей тип.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-274">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="a5d3c-275">Например, следующая строка указывает, что сериализованные данные представляет экземпляр `Person` введите `Extensions` пространства имен, которое находится в версию 1.0 сборки с именем служебную программу, которая имеет открытый ключ не и без заданного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-275">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="a5d3c-276">Предположим, что `resourceData` не была повреждена и была доступна, исходный тип `resourceData` могут преобразовываться из массива байтов обратно в исходное значение можно преобразовать массив байтов для <xref:System.IO.Stream> объекта и передает поток <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>метод.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-276">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="a5d3c-277">Строка, используемая для описания типа данных в <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-277">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a5d3c-278">Свойство <paramref name="resourceName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-278"><paramref name="resourceName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a5d3c-279"><paramref name="resourceName" /> — не существует.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-279"><paramref name="resourceName" /> does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="a5d3c-280">Недопустимый тип параметра <paramref name="resourceName" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-280"><paramref name="resourceName" /> has an invalid type.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="a5d3c-281">Извлеченные данные ресурсов повреждены.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-281">The retrieved resource data is corrupt.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a5d3c-282">Текущий объект <see cref="T:System.Resources.ResourceReader" /> не инициализирован (скорее всего, потому что он закрыт).</span><span class="sxs-lookup"><span data-stu-id="a5d3c-282">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span></span></exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a5d3c-283">Возвращает перечислитель для данного объекта <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-283">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></summary>
        <returns><span data-ttu-id="a5d3c-284">Перечислитель для этого объекта <see cref="T:System.Resources.ResourceReader" />.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-284">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5d3c-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> представляет собой явную реализацию интерфейса.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="a5d3c-286">Он может использоваться, только если экземпляр <xref:System.Resources.ResourceReader> приведен к типу интерфейса <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-286">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="a5d3c-287">Рекомендуемый подход для перечисление ресурсов в RESOURCES-файл является вызов <xref:System.Collections.IEnumerator.MoveNext%2A> метод <xref:System.Collections.IDictionaryEnumerator> объект, возвращаемый <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-287">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a5d3c-288">Средство чтения уже закрыто, поэтому доступ невозможен.</span><span class="sxs-lookup"><span data-stu-id="a5d3c-288">The reader has already been closed and cannot be accessed.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>