<Type Name="HostFileChangeMonitor" FullName="System.Runtime.Caching.HostFileChangeMonitor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="907b58b31dd4f5c88629723d6159b7728ee4cc5a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30479088" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostFileChangeMonitor extends System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.HostFileChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostFileChangeMonitor&#xA;Inherits FileChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostFileChangeMonitor sealed : System::Runtime::Caching::FileChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.FileChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Контролирует каталоги и пути к файлам и уведомляет кэш об изменениях контролируемых элементов. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.HostFileChangeMonitor> Класс — это конкретная реализация <xref:System.Runtime.Caching.FileChangeMonitor> типа. Этот класс является запечатанным, поэтому он не может быть расширен. Этот класс является полезным, если требуется использовать существующую реализацию кэша и отслеживания файлов и каталогов для изменения.  
  
 Для каждого указанного файла или путь к каталогу <xref:System.Runtime.Caching.HostFileChangeMonitor> класс инициирует уведомления об изменении при возникновении любого из следующих изменений:  
  
-   Имя отслеживаемого файла или изменения каталога.  
  
-   Указанный файл или каталог не существовал на момент монитор был создан, но был создан в более поздней версии. Другими словами файл или каталог был создан в области наблюдаемых элементов.  
  
-   Изменить размер отслеживаемого файла.  
  
-   Изменить содержимое наблюдаемого файла или изменить содержимое каталога.  
  
-   Изменен список управления доступом (ACL) к файлу или каталогу.  
  
-   Наблюдаемый файл или каталог был удален.  
  
 В случае слишком большого количества изменений для отслеживаемых файл или каталог, в то же время <xref:System.Runtime.Caching.HostFileChangeMonitor> экземпляра можно будет отслеживать определенные изменения. В этом сценарии <xref:System.Runtime.Caching.HostFileChangeMonitor> класс инициирует уведомления об изменении. Этот сценарий представлен наиболее вероятно при <xref:System.Runtime.Caching.HostFileChangeMonitor> экземпляр осуществляет мониторинг папки и многие изменения происходят в области структуры каталогов за короткий период времени.  
  
 Так как назначение <xref:System.Runtime.Caching.HostFileChangeMonitor> класс предназначен только для сигнализации, что нечто изменилось среди набора отслеживаемых файлов и каталогов, не считается важные сведения о конкретном изменении не фиксируются. Назначение <xref:System.Runtime.Caching.HostFileChangeMonitor> класса является предоставление уведомление о состоянии изменено таким образом, можно удалить запись (или записи). Поскольку <xref:System.Runtime.Caching.HostFileChangeMonitor> класс не указывает на только что было изменено, переполнение отслеживания внутренних изменений, не имеет значения.  
  
 При указании пути к <xref:System.Runtime.Caching.HostFileChangeMonitor> пути экземпляра каталога и файла должны быть полные пути к каталогу или файлу. Относительные пути и подстановочные знаки в пути не допускаются.  
  
 Когда <xref:System.Runtime.Caching.HostFileChangeMonitor> класс используется в приложениях ASP.NET, удостоверение Windows, используемый для доступа к отслеживаемых объектов представляет собой идентификатор приложения для приложения ASP.NET. Другими словами удостоверение приложения будет иметь одно из следующих:  
  
-   Идентификатор процесса.  
  
-   Удостоверение настроенного приложения.  
  
-   Учетные данные UNC, если приложение выполняется из общего ресурса UNC.  
  
 Когда <xref:System.Runtime.Caching.HostFileChangeMonitor> класс используется в приложении не ASP.NET <xref:System.IO.FileSystemWatcher> класс используется внутри для наблюдения за файлами. В результате применяется независимо от управления доступом (ACL) для наблюдаемого файла или каталога применяется к удостоверение Windows текущего потока.  
  
> [!NOTE]
>  Вызывающие объекты должны иметь соответствующий уровень разрешений разграничения доступа кода и разрешения NTFS для всех наблюдаемых каталогов и путей.  
  
   
  
## Examples  
 В следующем примере создается элемент кэша, который использует <xref:System.Runtime.Caching.HostFileChangeMonitor> объекта, чтобы отслеживать состояние источника данных (который представляет собой файл) в файловой системе. Запись кэша определяется с помощью <xref:System.Runtime.Caching.CacheItemPolicy> объекта подробные вытеснения и срока действия записи кэша.  
  
 [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]
 [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostFileChangeMonitor (System.Collections.Generic.IList&lt;string&gt; filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filePaths As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostFileChangeMonitor(System::Collections::Generic::IList&lt;System::String ^&gt; ^ filePaths);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filePaths">Список, содержащий один или более путей к каталогам или файлам, которые необходимо отслеживать.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовы <xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A> конструктора необходимо указать непустое значение для `filePaths` параметра. Как минимум конструктор проверяет коллекцию путей, который передается в него, а затем инициализирует наблюдение за этими путями.  
  
> [!NOTE]
>  Конструктор выполняет только проверку строки имени пути. Она не канонизировать пути или проверить существование пути.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="filePaths" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filePaths" /> содержит нуль элементов.  
  
 - или -  
  
 Путь в списке <paramref name="filePaths" /> равен <see langword="null" /> или пустой строке.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FilePaths" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FilePaths As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FilePaths { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию каталогов и путей к файлам, переданную конструктору <see cref="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />.</summary>
        <value>Коллекция каталогов и путей к файлам.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public override DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение только для чтения, обозначающее время последней операции записи отслеживаемого файла или пути.</summary>
        <value>Время последней операции записи отслеживаемого файла или пути.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если монитор изменений файла мониторинг нескольких файлов или путей, это свойство Возвращает время последней записи в наборе всех файлов и путей.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public override string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает идентификатор экземпляра <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" />, основанный на наборе контролируемых каталогов и путей к файлам.</summary>
        <value>Идентификатор для монитора изменений.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка, составляющая <xref:System.Runtime.Caching.HostFileChangeMonitor.UniqueId%2A> значение свойства состоит из следующих частей:  
  
-   Путь к файлу или каталогу.  
  
-   Время последней записи в формате UTC, измеряется как число импульсов, но представляется в виде шестнадцатеричной строки.  
  
-   Размер файла в виде шестнадцатеричной строки.  
  
 Если монитор изменений файлов осуществляет мониторинг несколько путей, сведения, возвращаемые этим свойством, объединяется в одну строку для всех наблюдаемых каталогов и путей к файлам.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>