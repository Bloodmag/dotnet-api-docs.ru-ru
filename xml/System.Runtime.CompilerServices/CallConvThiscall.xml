<Type Name="CallConvThiscall" FullName="System.Runtime.CompilerServices.CallConvThiscall">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79d6aee24b5de1530b5618fccf6707ae83576ace" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36637617" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallConvThiscall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvThiscall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvThiscall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvThiscall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvThiscall" />
  <TypeSignature Language="F#" Value="type CallConvThiscall = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a2cf7-101">Указывает, что метод должен использовать соглашение о вызовах <see langword="ThisCall" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2cf7-101">Indicates that a method should use the <see langword="ThisCall" /> calling convention.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2cf7-102">При использовании `ThisCall` соглашение о вызовах, первый параметр вызова метода является `this` указатель, который хранится в регистре ECX.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-102">When using the `ThisCall` calling convention, the first parameter of a method call is the `this` pointer, which is stored in register ECX.</span></span> <span data-ttu-id="a2cf7-103">Другие параметры вызова метода помещаются в стек.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-103">Other parameters of a method call are pushed on the stack.</span></span> <span data-ttu-id="a2cf7-104">Это соглашение о вызове используется для вызова методов в классах, экспортируемых из неуправляемой динамической библиотеки DLL.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-104">This calling convention is used to call methods on classes exported from an unmanaged DLL.</span></span>  
  
 <span data-ttu-id="a2cf7-105">Классы в <xref:System.Runtime.CompilerServices> предназначены только для создателей компиляторов.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-105">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="a2cf7-106">Компиляторы выдают в метаданные, чтобы изменить способ, которым компилятор just-in-time (JIT) обрабатывает значения, когда поведение по умолчанию не подходит пользовательские модификаторы.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="a2cf7-107">Когда JIT-компилятор встречает пользовательский модификатор, он обрабатывает значение так, как указывает этот модификатор.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="a2cf7-108">Компиляторы могут применять пользовательские модификаторы к методам, параметрам и возвращаемые значения.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="a2cf7-109">JIT-компилятор должен учитывать обязательные модификаторы, но может игнорировать необязательные.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="a2cf7-110">Компилятор C++ может вставить пользовательский модификатор для описания того, каким образом следует байта в случаях, когда JIT-компилятор интерпретирует байты способом, который не совместим с C++ по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-110">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="a2cf7-111">Существует возможность создавать пользовательские модификаторы в метаданные, используя один из следующих способов:</span><span class="sxs-lookup"><span data-stu-id="a2cf7-111">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="a2cf7-112">С помощью методов в <xref:System.Reflection.Emit.TypeBuilder> класса, такие как <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, и <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-112">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="a2cf7-113">Создания файла инструкций промежуточного языка MSIL Microsoft, которое содержит вызовы к `modopt` и `modreq`и сборка файла с [Ilasm.exe (ассемблер IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="a2cf7-113">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="a2cf7-114">Использование неуправляемого API-интерфейса отражения.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-114">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvThiscall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvThiscall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvThiscall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2cf7-115">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.CallConvThiscall" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2cf7-115">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallConvThiscall" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2cf7-116">Классы в <xref:System.Runtime.CompilerServices> предназначены только для создателей компиляторов.</span><span class="sxs-lookup"><span data-stu-id="a2cf7-116">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>