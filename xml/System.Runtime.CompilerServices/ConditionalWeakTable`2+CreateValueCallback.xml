<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key"><span data-ttu-id="fd58f-101">Ключ, которой принадлежит создаваемому значению.</span><span class="sxs-lookup"><span data-stu-id="fd58f-101">The key that belongs to the value to create.</span></span></param>
    <summary><span data-ttu-id="fd58f-102">Представляет метод, который создает значение не по умолчанию для добавления в качестве пары "ключ-значение" в объект <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</span><span class="sxs-lookup"><span data-stu-id="fd58f-102">Represents a method that creates a non-default value to add as part of a key/value pair to a <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span></span></summary>
    <returns><span data-ttu-id="fd58f-103">Экземпляр ссылочного типа, который представляет значение для добавления к заданному ключу.</span><span class="sxs-lookup"><span data-stu-id="fd58f-103">An instance of a reference type that represents the value to attach to the specified key.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd58f-104"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> Делегат инкапсулирует метод обратного вызова, вызываемая <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> метод, если ключ передается в метод не найден в <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> объекта.</span><span class="sxs-lookup"><span data-stu-id="fd58f-104">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate encapsulates a callback method that is invoked by the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType> method when the key passed to the method is not found in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object.</span></span> <span data-ttu-id="fd58f-105"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> Метод передает в метод обратного вызова ключ, который представляет управляемый объект, к которому должен быть динамически связан значение свойства.</span><span class="sxs-lookup"><span data-stu-id="fd58f-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached.</span></span> <span data-ttu-id="fd58f-106">Метод должен вернуть значение свойства для его вызывающий код, который в свою очередь, в таблицу добавляется пара ключ значение.</span><span class="sxs-lookup"><span data-stu-id="fd58f-106">The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table.</span></span>  
  
 <span data-ttu-id="fd58f-107"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> Метод используется для возврата экземпляра ссылочного типа, который можно подключить к указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="fd58f-107">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> method is used to return an instance of a reference type that can be attached to the specified key.</span></span> <span data-ttu-id="fd58f-108">Он позволяет инициализировать значения по умолчанию с использованием этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="fd58f-108">It enables that instance to be initialized using non-default values.</span></span> <span data-ttu-id="fd58f-109">Если ключ не найден в таблице, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> метод добавляет пару ключ значение, в котором значение инициализируется с использованием значений по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="fd58f-109">If the key is not found in the table, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType> method adds a key/value pair in which the value is initialized using default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd58f-110">В следующем примере определяется `MainClass` класса и `MainInfo` класса.</span><span class="sxs-lookup"><span data-stu-id="fd58f-110">The following example defines a `MainClass` class and a `MainInfo` class.</span></span> <span data-ttu-id="fd58f-111">`MainInfo` Предоставляет сведения о `MainClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="fd58f-111">`MainInfo` provides information about the `MainClass` instance.</span></span> <span data-ttu-id="fd58f-112">Он также определяет статическую (`Shared` в Visual Basic) `CreateAttachedValue` метод, который может быть назначен <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> делегата и передается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="fd58f-112">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="fd58f-113">В примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> метод, чтобы добавить `MainClass` объекта и его соответствующим `MainInfo` объект <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы.</span><span class="sxs-lookup"><span data-stu-id="fd58f-113">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its corresponding `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="fd58f-114">В примере также показано вызовы <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> и <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> методы для добавления пары "ключ значение" в таблице и вызов <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод для извлечения значения, к которой принадлежит существующий ключ.</span><span class="sxs-lookup"><span data-stu-id="fd58f-114">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and a call to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value that belongs to an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>