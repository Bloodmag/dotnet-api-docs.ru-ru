<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConditionalWeakTable`2.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac575a1ca0bc007b584e93073f8cc318bd920092d8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75a1ca0bc007b584e93073f8cc318bd920092d8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The reference type to which the field is attached.</source>
          <target state="translated">Ссылочный тип, к которому прикрепляется поле.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The field's type.</source>
          <target state="translated">Тип поля.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>This must be a reference type.</source>
          <target state="translated">Это должен быть ссылочный тип.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Enables compilers to dynamically attach object fields to managed objects.</source>
          <target state="translated">Позволяет компиляторам динамически прикреплять поля к управляемым объектам.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class enables language compilers to attach arbitrary properties to managed objects at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Класс включает языковые компиляторы для присоединения произвольных свойства к управляемым объектам во время выполнения.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> object is a dictionary that binds a managed object, which is represented by a key, to its attached property, which is represented by a value.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> объект является словарем, который привязывает управляемого объекта, представленного ключом, его вложенное свойство, которое представляется значением.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The object's keys are the individual instances of the <ph id="ph1">`TKey`</ph> class to which the property is attached, and its values are the property values that are assigned to the corresponding objects.</source>
          <target state="translated">Отдельные экземпляры, ключи объекта <ph id="ph1">`TKey`</ph> класса, к которому присоединяется свойство и его значения и значения свойств, которые назначены соответствующие объекты.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Keys must be unique; in other words, the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class supports one attached value per managed object.</source>
          <target state="translated">Ключи должны быть уникальными; Другими словами <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> класс поддерживает одно вложенное значение на управляемый объект.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Two keys are equal if passing them to the <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Два ключа равны, если их передача <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> возвращает <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>You cannot control equality comparisons by overriding <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> to explicitly set the hash code for a key.</source>
          <target state="translated">Сравнения на равенство не может управлять путем переопределения <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> явно задать хэш-код для ключа.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class does not use the <ph id="ph2">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> method to compute hash codes, and therefore does not invoke <ph id="ph3">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> overrides.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Класс не использует <ph id="ph2">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> метод для вычисления хэш-кодов и поэтому не вызывает <ph id="ph3">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> переопределяет.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Although the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class holds a collection of key/value pairs, it is best thought of as a table rather than a dictionary object.</source>
          <target state="translated">Несмотря на то что <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> класс содержит коллекцию пар «ключ значение», он лучше всего рассматривать как таблицу, а не объект словаря.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class differs from a dictionary in several ways:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Класса отличается от словарь несколькими способами:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>It does not persist keys.</source>
          <target state="translated">Он не сохраняет ключи.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>That is, a key is not kept alive only because it is a member of the collection.</source>
          <target state="translated">То есть ключ не сохраняется только потому, что он является элементом коллекции.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>It does not include all the methods (such as <ph id="ph1">`GetEnumerator`</ph> or <ph id="ph2">`Contains`</ph>) that a dictionary typically has.</source>
          <target state="translated">Не включает все методы (такие как <ph id="ph1">`GetEnumerator`</ph> или <ph id="ph2">`Contains`</ph>), обычно имеет словарь.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>It does not implement the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface.</source>
          <target state="translated">Он не реализует <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class differs from other collection objects in its management of the object lifetime of keys stored in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> Класса отличается от других объектов коллекции в управления временем жизни объекта ключей, хранящихся в коллекции.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Ordinarily, when an object is stored in a collection, its lifetime lasts until it is removed (and there are no additional references to the object) or until the collection object itself is destroyed.</source>
          <target state="translated">Как правило если объект хранится в коллекции, время его существования продолжается, пока он удаляется (и нет дополнительных ссылок на объект) или пока не будет удален объект коллекции.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>However, in the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> class, adding a key/value pair to the table does not ensure that the key will persist, even if it can be reached directly from a value stored in the table (for example, if the table contains one key, A, with a value V1, and a second key, B, with a value P2 that contains a reference to A).</source>
          <target state="translated">Однако в <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> класса, добавляя пару "ключ значение" в таблицу не гарантирует, что ключ будет сохраняться, даже если он доступен непосредственно из значения, хранящиеся в таблице (например, если таблица содержит один ключ, со значением V1 а второй ключ, B, со значением P2, который содержит ссылку на объект).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Instead, <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> automatically removes the key/value entry as soon as no other references to a key exist outside the table.</source>
          <target state="translated">Вместо этого <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> автоматически удаляет запись ключ значение, а не существует других ссылок на ключ вне таблицы.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The example provides an illustration.</source>
          <target state="translated">Иллюстрация приведена в примере.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The following example illustrates that a key stored in the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table does not persist after references to it outside the table are destroyed.</source>
          <target state="translated">В следующем примере показано, что ключа, хранимого в <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> таблицы не сохраняется после удаления ссылки на него вне таблицы.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The example defines two classes: <ph id="ph1">`ManagedClass`</ph>, which represents the key in the table, and <ph id="ph2">`ClassData`</ph>, which represents the key's value.</source>
          <target state="translated">В примере определяется два класса: <ph id="ph1">`ManagedClass`</ph>, который представляет ключ в таблице, и <ph id="ph2">`ClassData`</ph>, который представляет значение ключа.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The example instantiates three objects of each type.</source>
          <target state="translated">В примере создаются три объекта каждого типа.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>It also instantiates a <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> object that represents the second <ph id="ph2">`ManagedClass`</ph>, and then destroys the second <ph id="ph3">`ManagedClass`</ph> instance.</source>
          <target state="translated">Он также создает <ph id="ph1">&lt;xref:System.WeakReference&gt;</ph> , представляющий второй <ph id="ph2">`ManagedClass`</ph>, а затем удаляет второй <ph id="ph3">`ManagedClass`</ph> экземпляра.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>The attempt to retrieve the second <ph id="ph1">`ManagedClass`</ph> object from the <ph id="ph2">&lt;xref:System.WeakReference.Target%2A&gt;</ph> property indicates that no references to the object remain.</source>
          <target state="translated">Попытка получить второй <ph id="ph1">`ManagedClass`</ph> объекта из <ph id="ph2">&lt;xref:System.WeakReference.Target%2A&gt;</ph> свойство указывает, что останутся без ссылки на объект.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>Instances of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph> class are thread safe.</source>
          <target state="translated">Экземпляры <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph> класса являются потокобезопасными.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.CompilerServices.ConditionalWeakTable`2">
          <source>They do not require callers to do any additional locking.</source>
          <target state="translated">Они не требуют, чтобы вызывающие объекты для выполнения дополнительной блокировке.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A&gt;</ph> constructor instantiates an empty <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table; that is, the table contains no key/value pairs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A&gt;</ph> Конструктор создает пустой <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> таблица; таким образом, таблица содержит не пары "ключ значение".</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
          <source>You can add key/value pairs by calling the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> method.</source>
          <target state="translated">Можно добавить пары "ключ значение" путем вызова <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph>, или <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> object must be unique.</source>
          <target state="translated">Каждый ключ в <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> объекта должно быть уникальным.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor">
          <source>Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> method returns <ph id="ph2">`true`</ph>).</source>
          <target state="translated">Ключи не являются уникальными, если они ссылаются на один объект (то есть, в том случае, если их передача в качестве аргументов для <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> возвращает метод <ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>The key to add.</source>
          <target state="translated">Добавляемый ключ.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> represents the object to which the property is attached.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> представляет объект, к которому присоединяется свойство.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>The key's property value.</source>
          <target state="translated">Значение свойства ключа.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>Adds a key to the table.</source>
          <target state="translated">Добавляет ключ в таблицу.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> object must be unique.</source>
          <target state="translated">Каждый ключ в <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> объекта должно быть уникальным.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> method returns <ph id="ph2">`true`</ph>).</source>
          <target state="translated">Ключи не являются уникальными, если они ссылаются на один объект (то есть, в том случае, если их передача в качестве аргументов для <ph id="ph1">&lt;xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType&gt;</ph> возвращает метод <ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>If the key is garbage-collected during the addition operation, the existing key/value pair is removed and the new key/value pair is added without an exception being thrown.</source>
          <target state="translated">Если ключ является мусора во время операции сложения, существующей пары «ключ значение» удаляется и новую пару «ключ значение» добавляется без создания исключения.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>The following example defines a <ph id="ph1">`MainClass`</ph> class and a <ph id="ph2">`MainInfo`</ph> class, which provides information about the <ph id="ph3">`MainClass`</ph> instance.</source>
          <target state="translated">В следующем примере определяется <ph id="ph1">`MainClass`</ph> класса и <ph id="ph2">`MainInfo`</ph> класс, предоставляющий сведения о <ph id="ph3">`MainClass`</ph> экземпляра.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> method to add a <ph id="ph2">`MainClass`</ph> object and its attached <ph id="ph3">`MainInfo`</ph> object to a <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table.</source>
          <target state="translated">Затем в примере вызывается <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> метод, чтобы добавить <ph id="ph2">`MainClass`</ph> объекта и его вложенных <ph id="ph3">`MainInfo`</ph> объект <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> таблицы.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>The example also illustrates calls to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> methods to add key/value pairs to the table, and to the <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method to retrieve the value of an existing key.</source>
          <target state="translated">В примере также показано вызовы <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> методы для добавления пары "ключ значение" к таблице, а также для <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> метод для извлечения значения из существующего ключа.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> already exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> уже существует.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize">
          <source>Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph> object.</source>
          <target state="translated">Обеспечивает освобождение ресурсов и выполнение других завершающих операций, когда сборщик мусора восстанавливает объект <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize">
          <source>The garbage collector calls <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A&gt;</ph> when the current object is ready to be finalized.</source>
          <target state="translated">Сборщик мусора вызывает <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A&gt;</ph> когда текущий объект готов к завершению.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The key to search for.</source>
          <target state="translated">Ключ, который нужно найти.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> represents the object to which the property is attached.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> представляет объект, к которому присоединяется свойство.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>Atomically searches for a specified key in the table and returns the corresponding value.</source>
          <target state="translated">Единым блоком выполняет поиск указанного ключа в таблице и возвращает соответствующее значение.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>If the key does not exist in the table, the method invokes the default constructor of the class that represents the table's value to create a value that is bound to the specified key.</source>
          <target state="translated">Если ключ в таблице не существует, метод вызывает конструктор класса по умолчанию, представляющего значение таблицы для создания значения, связанного с заданным ключом.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The value that corresponds to <ph id="ph1">&lt;paramref name="key" /&gt;</ph>, if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> already exists in the table; otherwise, a new value created by the default constructor of the class defined by the <ph id="ph3">&lt;paramref name="TValue" /&gt;</ph> generic type parameter.</source>
          <target state="translated">Значение, соответствующее ключу <ph id="ph1">&lt;paramref name="key" /&gt;</ph>, если ключ <ph id="ph2">&lt;paramref name="key" /&gt;</ph> существует в таблице; в противном случае — новое значение, созданное конструктором класса по умолчанию, определенного параметром универсального типа <ph id="ph3">&lt;paramref name="TValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>If <ph id="ph1">`key`</ph> does not exist in the table, the method adds it, along with the object that is instantiated by calling the default constructor of the class defined by the <ph id="ph2">`TValue`</ph> generic type parameter.</source>
          <target state="translated">Если <ph id="ph1">`key`</ph> не существует в таблице, этот метод добавляет, вместе с объекта, экземпляр которого создается путем вызова конструктора по умолчанию определяется класса <ph id="ph2">`TValue`</ph> параметр универсального типа.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>If the <ph id="ph1">`TValue`</ph> class has no default constructor, a <ph id="ph2">&lt;xref:System.MissingMethodException&gt;</ph> is thrown.</source>
          <target state="translated">Если <ph id="ph1">`TValue`</ph> класс имеет конструктор по умолчанию, <ph id="ph2">&lt;xref:System.MissingMethodException&gt;</ph> возникает исключение.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>This is the recommended method of retrieving an existing value or adding a new value to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table if the class of the table's value defines a default constructor.</source>
          <target state="translated">Это рекомендуемый способ получения существующее значение или Добавление нового значения для <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> таблица, если класс значение в таблице определяет конструктор по умолчанию.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>If it does not define a default constructor, you can instead call the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> method, which relies on a callback-provided method to instantiate the object representing the table's value</source>
          <target state="translated">Если он не определяет конструктор по умолчанию, вместо этого можно вызвать <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> метод, который зависит от метода обратного вызова для создания экземпляра объекта, представляющего значение таблицы</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method.</source>
          <target state="translated">Требуется извлечь значение существующего ключа без добавления пара ключ значение, если ключ не найден в таблице, вызовите <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The following example defines a <ph id="ph1">`MainClass`</ph> class and a <ph id="ph2">`MainInfo`</ph> class, which provides information about the <ph id="ph3">`MainClass`</ph> instance.</source>
          <target state="translated">В следующем примере определяется <ph id="ph1">`MainClass`</ph> класса и <ph id="ph2">`MainInfo`</ph> класс, предоставляющий сведения о <ph id="ph3">`MainClass`</ph> экземпляра.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> method to add a <ph id="ph2">`MainClass`</ph> object and its attached <ph id="ph3">`MainInfo`</ph> object to a <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table.</source>
          <target state="translated">В примере вызывается <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> метод, чтобы добавить <ph id="ph2">`MainClass`</ph> объекта и его вложенных <ph id="ph3">`MainInfo`</ph> объект <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> таблицы.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The example also illustrates calls to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> methods to add key/value pairs to the table, and to the <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method to retrieve the value of an existing key.</source>
          <target state="translated">В примере также показано вызовы <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> методы для добавления пары "ключ значение" к таблице, а также для <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> метод для извлечения значения из существующего ключа.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph>, instead.</source>
          <target state="translated">Вместо этого в <bpt id="p1">[</bpt>.NET для приложений Магазина Windows<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> или в <bpt id="p2">[</bpt>переносимой библиотеке классов<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept> перехватите исключение базового класса <ph id="ph1">&lt;see cref="T:System.MissingMemberException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
          <source>The class that represents the table's value does not define a default constructor.</source>
          <target state="translated">Класс, представляющий значение в таблице, не определяет конструктор по умолчанию.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>The key to search for.</source>
          <target state="translated">Ключ, который нужно найти.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> represents the object to which the property is attached.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> представляет объект, к которому присоединяется свойство.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>A delegate to a method that can create a value for the given <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Делегат метода, который может создать значение для заданного ключа <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>It has a single parameter of type <bpt id="p1">&lt;c&gt;</bpt>TKey<ept id="p1">&lt;/c&gt;</ept>, and returns a value of type <bpt id="p2">&lt;c&gt;</bpt>TValue<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Имеет один параметр типа <bpt id="p1">&lt;c&gt;</bpt>TKey<ept id="p1">&lt;/c&gt;</ept> и возвращает значение типа <bpt id="p2">&lt;c&gt;</bpt>TValue<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>Atomically searches for a specified key in the table and returns the corresponding value.</source>
          <target state="translated">Единым блоком выполняет поиск указанного ключа в таблице и возвращает соответствующее значение.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>If the key does not exist in the table, the method invokes a callback method to create a value that is bound to the specified key.</source>
          <target state="translated">Если ключ в таблице не существует, метод вызывает метод обратного вызова для создания значения, связанного с заданным ключом.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>The value attached to <ph id="ph1">&lt;paramref name="key" /&gt;</ph>, if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> already exists in the table; otherwise, the new value returned by the <ph id="ph3">&lt;paramref name="createValueCallback" /&gt;</ph> delegate.</source>
          <target state="translated">Значение, прикрепляемое к ключу <ph id="ph1">&lt;paramref name="key" /&gt;</ph>, если ключ <ph id="ph2">&lt;paramref name="key" /&gt;</ph> существует в таблице; в противном случае — новое значение, возвращаемое делегатом <ph id="ph3">&lt;paramref name="createValueCallback" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>If <ph id="ph1">`key`</ph> does not exist in the table, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> invokes the method that is defined by the <ph id="ph3">`createValueCallback`</ph> parameter and passes it the key.</source>
          <target state="translated">Если <ph id="ph1">`key`</ph> не существует в таблице, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> вызывает метод, который определяется <ph id="ph3">`createValueCallback`</ph> параметра и передает его ключ.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>A new value is bound to the key in the table and returned as a result.</source>
          <target state="translated">Связанного с ключом в таблице и в результате возвращается новое значение.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>Use this method only when the class that represents the table's value does not define a default constructor.</source>
          <target state="translated">Этот метод следует используйте только в том случае, когда класс, представляющий значение в таблице не определяет конструктор по умолчанию.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>If it does define a default constructor, use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> method instead.</source>
          <target state="translated">Если он определен конструктор по умолчанию, используйте <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> метод вместо него.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method.</source>
          <target state="translated">Требуется извлечь значение существующего ключа без добавления пара ключ значение, если ключ не найден в таблице, вызовите <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>If multiple threads try to create the same key, <ph id="ph1">`createValueCallback`</ph> may be invoked multiple times with the same key.</source>
          <target state="translated">Если несколько потоков пытаются создать один и тот же ключ <ph id="ph1">`createValueCallback`</ph> может вызываться несколько раз с тем же ключом.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>Only one of these calls will succeed, and its returned value will be added to the table.</source>
          <target state="translated">Будет выполнен только один из этих вызовов, и возвращаемое значение будет добавлено в таблицу.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>Which thread succeeds in creating the value is indeterminate.</source>
          <target state="translated">Какой поток успешно создает значение не определено.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>This rule permits the table to invoke <ph id="ph1">`createValueCallback`</ph> outside the internal table lock to prevent deadlocks.</source>
          <target state="translated">Это правило позволяет таблице вызывать <ph id="ph1">`createValueCallback`</ph> за пределами внутренней блокировки таблицы для предотвращения взаимоблокировок.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>The following example defines a <ph id="ph1">`MainClass`</ph> class and a <ph id="ph2">`MainInfo`</ph> class, which provides information about the <ph id="ph3">`MainClass`</ph> instance.</source>
          <target state="translated">В следующем примере определяется <ph id="ph1">`MainClass`</ph> класса и <ph id="ph2">`MainInfo`</ph> класс, предоставляющий сведения о <ph id="ph3">`MainClass`</ph> экземпляра.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>It also defines a static (<ph id="ph1">`Shared`</ph> in Visual Basic) <ph id="ph2">`CreateAttachedValue`</ph> method that can be assigned to the <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback&gt;</ph> delegate and passed to the <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> method.</source>
          <target state="translated">Он также определяет статическую (<ph id="ph1">`Shared`</ph> в Visual Basic) <ph id="ph2">`CreateAttachedValue`</ph> метод, который может быть назначен <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback&gt;</ph> делегата и передается <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> method to add a <ph id="ph2">`MainClass`</ph> object and its attached <ph id="ph3">`MainInfo`</ph> object to a <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table.</source>
          <target state="translated">В примере вызывается <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> метод, чтобы добавить <ph id="ph2">`MainClass`</ph> объекта и его вложенных <ph id="ph3">`MainInfo`</ph> объект <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> таблицы.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>The example also illustrates calls to the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> methods to add key/value pairs to the table, and to the <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method to retrieve the value of an existing key.</source>
          <target state="translated">В примере также показано вызовы <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph> методы для добавления пары "ключ значение" к таблице, а также для <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> метод для извлечения значения из существующего ключа.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> or <ph id="ph2">&lt;paramref name="createValueCallback" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="key" /&gt;</ph> или <ph id="ph2">&lt;paramref name="createValueCallback" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source>The key to remove.</source>
          <target state="translated">Удаляемый ключ.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source>Removes a key and its value from the table.</source>
          <target state="translated">Удаляет ключ и его значение из таблицы.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is found and removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если ключ найден и удален; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source>If the key is garbage-collected during this operation, the method does not raise an exception and the return value is undefined.</source>
          <target state="translated">Если ключ мусора во время этой операции, метод вызывает исключение, и возвращаемое значение не определено.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>The key that represents an object with an attached property.</source>
          <target state="translated">Ключ, представляющий объект с вложенным свойством зависимостей.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>When this method returns, contains the attached property value.</source>
          <target state="translated">При возвращении этот метод содержит значение вложенного свойства.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> is not found, <bpt id="p2">&lt;c&gt;</bpt>value<ept id="p2">&lt;/c&gt;</ept> contains the default value.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> не найден, <bpt id="p2">&lt;c&gt;</bpt>value<ept id="p2">&lt;/c&gt;</ept> содержит значение по умолчанию.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>Gets the value of the specified key.</source>
          <target state="translated">Получает значение заданного ключа.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is found; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если ключ <ph id="ph2">&lt;paramref name="key" /&gt;</ph> найден; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>If the key is garbage-collected during this operation, the method may return <ph id="ph1">`false`</ph> and set <ph id="ph2">`value`</ph> to the default value (as if the key were not present).</source>
          <target state="translated">Если ключ является мусора во время этой операции, метод может возвратить <ph id="ph1">`false`</ph> и задайте <ph id="ph2">`value`</ph> по умолчанию значение (как если бы ключ не существовал).</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>The following example defines a <ph id="ph1">`MainClass`</ph> class and a <ph id="ph2">`MainInfo`</ph> class, which provides information about the <ph id="ph3">`MainClass`</ph> instance.</source>
          <target state="translated">В следующем примере определяется <ph id="ph1">`MainClass`</ph> класса и <ph id="ph2">`MainInfo`</ph> класс, предоставляющий сведения о <ph id="ph3">`MainClass`</ph> экземпляра.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> methods to add key/value pairs to a <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> table.</source>
          <target state="translated">В примере вызывается <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A&gt;</ph>, и <ph id="ph3">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A&gt;</ph> методы для добавления пары ключ значение для <ph id="ph4">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602&gt;</ph> таблицы.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>In each case, the example calls the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> method to confirm that the key/value pair has been added to the table.</source>
          <target state="translated">В каждом случае в примере вызывается <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A&gt;</ph> метод, чтобы убедиться, что пара ключ значение добавлен в таблицу.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="key" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">требуется полное доверие для непосредственно вызывающего метода.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Этот член не может использоваться частично доверенным или прозрачным кодом.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>