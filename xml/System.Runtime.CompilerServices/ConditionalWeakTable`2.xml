<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75a1ca0bc007b584e93073f8cc318bd920092d8d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480168" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalWeakTable&lt;TKey,TValue&gt; where TKey : class where TValue : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConditionalWeakTable`2&lt;class TKey, class TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalWeakTable(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA; where TKey : class where TValue : classpublic ref class ConditionalWeakTable sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="69e6e-101">Ссылочный тип, к которому прикрепляется поле.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69e6e-101">The reference type to which the field is attached.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="69e6e-102">Тип поля.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69e6e-102">The field's type.</span>
      </span>
      <span data-ttu-id="69e6e-103">Это должен быть ссылочный тип.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69e6e-103">This must be a reference type.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="69e6e-104">Позволяет компиляторам динамически прикреплять поля к управляемым объектам.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69e6e-104">Enables compilers to dynamically attach object fields to managed objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6e-105"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Класс включает языковые компиляторы для присоединения произвольных свойства к управляемым объектам во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="69e6e-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class enables language compilers to attach arbitrary properties to managed objects at run time.</span></span> <span data-ttu-id="69e6e-106">Объект <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> объект является словарем, который привязывает управляемого объекта, представленного ключом, его вложенное свойство, которое представляется значением.</span><span class="sxs-lookup"><span data-stu-id="69e6e-106">A <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object is a dictionary that binds a managed object, which is represented by a key, to its attached property, which is represented by a value.</span></span> <span data-ttu-id="69e6e-107">Отдельные экземпляры, ключи объекта `TKey` класса, к которому присоединяется свойство и его значения и значения свойств, которые назначены соответствующие объекты.</span><span class="sxs-lookup"><span data-stu-id="69e6e-107">The object's keys are the individual instances of the `TKey` class to which the property is attached, and its values are the property values that are assigned to the corresponding objects.</span></span>  
  
 <span data-ttu-id="69e6e-108">Ключи должны быть уникальными; Другими словами <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> класс поддерживает одно вложенное значение на управляемый объект.</span><span class="sxs-lookup"><span data-stu-id="69e6e-108">Keys must be unique; in other words, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class supports one attached value per managed object.</span></span> <span data-ttu-id="69e6e-109">Два ключа равны, если их передача <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="69e6e-109">Two keys are equal if passing them to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69e6e-110">Сравнения на равенство не может управлять путем переопределения <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> явно задать хэш-код для ключа.</span><span class="sxs-lookup"><span data-stu-id="69e6e-110">You cannot control equality comparisons by overriding <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> to explicitly set the hash code for a key.</span></span> <span data-ttu-id="69e6e-111"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Класс не использует <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> метод для вычисления хэш-кодов и поэтому не вызывает <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> переопределяет.</span><span class="sxs-lookup"><span data-stu-id="69e6e-111">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class does not use the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method to compute hash codes, and therefore does not invoke <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> overrides.</span></span>  
  
 <span data-ttu-id="69e6e-112">Несмотря на то что <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> класс содержит коллекцию пар «ключ значение», он лучше всего рассматривать как таблицу, а не объект словаря.</span><span class="sxs-lookup"><span data-stu-id="69e6e-112">Although the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class holds a collection of key/value pairs, it is best thought of as a table rather than a dictionary object.</span></span> <span data-ttu-id="69e6e-113"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Класса отличается от словарь несколькими способами:</span><span class="sxs-lookup"><span data-stu-id="69e6e-113">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from a dictionary in several ways:</span></span>  
  
-   <span data-ttu-id="69e6e-114">Он не сохраняет ключи.</span><span class="sxs-lookup"><span data-stu-id="69e6e-114">It does not persist keys.</span></span> <span data-ttu-id="69e6e-115">То есть ключ не сохраняется только потому, что он является элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="69e6e-115">That is, a key is not kept alive only because it is a member of the collection.</span></span>  
  
-   <span data-ttu-id="69e6e-116">Не включает все методы (такие как `GetEnumerator` или `Contains`), обычно имеет словарь.</span><span class="sxs-lookup"><span data-stu-id="69e6e-116">It does not include all the methods (such as `GetEnumerator` or `Contains`) that a dictionary typically has.</span></span>  
  
-   <span data-ttu-id="69e6e-117">Он не реализует <xref:System.Collections.Generic.IDictionary%602> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="69e6e-117">It does not implement the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span>  
  
 <span data-ttu-id="69e6e-118"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> Класса отличается от других объектов коллекции в управления временем жизни объекта ключей, хранящихся в коллекции.</span><span class="sxs-lookup"><span data-stu-id="69e6e-118">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from other collection objects in its management of the object lifetime of keys stored in the collection.</span></span> <span data-ttu-id="69e6e-119">Как правило если объект хранится в коллекции, время его существования продолжается, пока он удаляется (и нет дополнительных ссылок на объект) или пока не будет удален объект коллекции.</span><span class="sxs-lookup"><span data-stu-id="69e6e-119">Ordinarily, when an object is stored in a collection, its lifetime lasts until it is removed (and there are no additional references to the object) or until the collection object itself is destroyed.</span></span> <span data-ttu-id="69e6e-120">Однако в <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> класса, добавляя пару "ключ значение" в таблицу не гарантирует, что ключ будет сохраняться, даже если он доступен непосредственно из значения, хранящиеся в таблице (например, если таблица содержит один ключ, со значением V1 а второй ключ, B, со значением P2, который содержит ссылку на объект).</span><span class="sxs-lookup"><span data-stu-id="69e6e-120">However, in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class, adding a key/value pair to the table does not ensure that the key will persist, even if it can be reached directly from a value stored in the table (for example, if the table contains one key, A, with a value V1, and a second key, B, with a value P2 that contains a reference to A).</span></span> <span data-ttu-id="69e6e-121">Вместо этого <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> автоматически удаляет запись ключ значение, а не существует других ссылок на ключ вне таблицы.</span><span class="sxs-lookup"><span data-stu-id="69e6e-121">Instead, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> automatically removes the key/value entry as soon as no other references to a key exist outside the table.</span></span> <span data-ttu-id="69e6e-122">Иллюстрация приведена в примере.</span><span class="sxs-lookup"><span data-stu-id="69e6e-122">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e6e-123">В следующем примере показано, что ключа, хранимого в <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы не сохраняется после удаления ссылки на него вне таблицы.</span><span class="sxs-lookup"><span data-stu-id="69e6e-123">The following example illustrates that a key stored in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table does not persist after references to it outside the table are destroyed.</span></span> <span data-ttu-id="69e6e-124">В примере определяется два класса: `ManagedClass`, который представляет ключ в таблице, и `ClassData`, который представляет значение ключа.</span><span class="sxs-lookup"><span data-stu-id="69e6e-124">The example defines two classes: `ManagedClass`, which represents the key in the table, and `ClassData`, which represents the key's value.</span></span> <span data-ttu-id="69e6e-125">В примере создаются три объекта каждого типа.</span><span class="sxs-lookup"><span data-stu-id="69e6e-125">The example instantiates three objects of each type.</span></span> <span data-ttu-id="69e6e-126">Он также создает <xref:System.WeakReference> , представляющий второй `ManagedClass`, а затем удаляет второй `ManagedClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="69e6e-126">It also instantiates a <xref:System.WeakReference> object that represents the second `ManagedClass`, and then destroys the second `ManagedClass` instance.</span></span> <span data-ttu-id="69e6e-127">Попытка получить второй `ManagedClass` объекта из <xref:System.WeakReference.Target%2A> свойство указывает, что останутся без ссылки на объект.</span><span class="sxs-lookup"><span data-stu-id="69e6e-127">The attempt to retrieve the second `ManagedClass` object from the <xref:System.WeakReference.Target%2A> property indicates that no references to the object remain.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/cs/example1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="69e6e-128">Экземпляры <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> класса являются потокобезопасными.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69e6e-128">Instances of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class are thread safe.</span>
      </span>
      <span data-ttu-id="69e6e-129">Они не требуют, чтобы вызывающие объекты для выполнения дополнительной блокировке.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69e6e-129">They do not require callers to do any additional locking.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalWeakTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69e6e-130">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-130">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6e-131"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> Конструктор создает пустой <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблица; таким образом, таблица содержит не пары "ключ значение".</span><span class="sxs-lookup"><span data-stu-id="69e6e-131">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> constructor instantiates an empty <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table; that is, the table contains no key/value pairs.</span></span> <span data-ttu-id="69e6e-132">Можно добавить пары "ключ значение" путем вызова <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, или <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="69e6e-132">You can add key/value pairs by calling the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, or <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method.</span></span>  
  
 <span data-ttu-id="69e6e-133">Каждый ключ в <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> объекта должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="69e6e-133">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="69e6e-134">Ключи не являются уникальными, если они ссылаются на один объект (то есть, в том случае, если их передача в качестве аргументов для <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> возвращает метод `true`).</span><span class="sxs-lookup"><span data-stu-id="69e6e-134">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="69e6e-135">Добавляемый ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-135">The key to add.</span>
          </span>
          <span data-ttu-id="69e6e-136">
            <c>key</c> представляет объект, к которому присоединяется свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-136">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="69e6e-137">Значение свойства ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-137">The key's property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6e-138">Добавляет ключ в таблицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-138">Adds a key to the table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6e-139">Каждый ключ в <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> объекта должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="69e6e-139">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="69e6e-140">Ключи не являются уникальными, если они ссылаются на один объект (то есть, в том случае, если их передача в качестве аргументов для <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> возвращает метод `true`).</span><span class="sxs-lookup"><span data-stu-id="69e6e-140">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 <span data-ttu-id="69e6e-141">Если ключ является мусора во время операции сложения, существующей пары «ключ значение» удаляется и новую пару «ключ значение» добавляется без создания исключения.</span><span class="sxs-lookup"><span data-stu-id="69e6e-141">If the key is garbage-collected during the addition operation, the existing key/value pair is removed and the new key/value pair is added without an exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e6e-142">В следующем примере определяется `MainClass` класса и `MainInfo` класс, предоставляющий сведения о `MainClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="69e6e-142">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="69e6e-143">Затем в примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> метод, чтобы добавить `MainClass` объекта и его вложенных `MainInfo` объект <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы.</span><span class="sxs-lookup"><span data-stu-id="69e6e-143">The example then calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="69e6e-144">В примере также показано вызовы <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> и <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> методы для добавления пары "ключ значение" к таблице, а также для <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод для извлечения значения из существующего ключа.</span><span class="sxs-lookup"><span data-stu-id="69e6e-144">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69e6e-145">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-145">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="69e6e-146">
            <paramref name="key" /> уже существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-146">
              <paramref name="key" /> already exists.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="69e6e-147">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-147">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69e6e-148">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-148">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public void AddOrUpdate (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrUpdate(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.AddOrUpdate(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrUpdate (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrUpdate(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ConditionalWeakTable`2 ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ConditionalWeakTable`2 ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69e6e-149">Обеспечивает освобождение ресурсов и выполнение других завершающих операций, когда сборщик мусора восстанавливает объект <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-149">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6e-150">Сборщик мусора вызывает <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> когда текущий объект готов к завершению.</span><span class="sxs-lookup"><span data-stu-id="69e6e-150">The garbage collector calls <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateValue">
      <MemberSignature Language="C#" Value="public TValue GetOrCreateValue (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrCreateValue(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateValue (key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrCreateValue(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="69e6e-151">Ключ, который нужно найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-151">The key to search for.</span>
          </span>
          <span data-ttu-id="69e6e-152">
            <c>key</c> представляет объект, к которому присоединяется свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-152">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6e-153">Единым блоком выполняет поиск указанного ключа в таблице и возвращает соответствующее значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-153">Atomically searches for a specified key in the table and returns the corresponding value.</span>
          </span>
          <span data-ttu-id="69e6e-154">Если ключ в таблице не существует, метод вызывает конструктор класса по умолчанию, представляющего значение таблицы для создания значения, связанного с заданным ключом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-154">If the key does not exist in the table, the method invokes the default constructor of the class that represents the table's value to create a value that is bound to the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6e-155">Значение, соответствующее ключу <paramref name="key" />, если ключ <paramref name="key" /> существует в таблице; в противном случае — новое значение, созданное конструктором класса по умолчанию, определенного параметром универсального типа <paramref name="TValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-155">The value that corresponds to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, a new value created by the default constructor of the class defined by the <paramref name="TValue" /> generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6e-156">Если `key` не существует в таблице, этот метод добавляет, вместе с объекта, экземпляр которого создается путем вызова конструктора по умолчанию определяется класса `TValue` параметр универсального типа.</span><span class="sxs-lookup"><span data-stu-id="69e6e-156">If `key` does not exist in the table, the method adds it, along with the object that is instantiated by calling the default constructor of the class defined by the `TValue` generic type parameter.</span></span> <span data-ttu-id="69e6e-157">Если `TValue` класс имеет конструктор по умолчанию, <xref:System.MissingMethodException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="69e6e-157">If the `TValue` class has no default constructor, a <xref:System.MissingMethodException> is thrown.</span></span>  
  
 <span data-ttu-id="69e6e-158">Это рекомендуемый способ получения существующее значение или Добавление нового значения для <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблица, если класс значение в таблице определяет конструктор по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="69e6e-158">This is the recommended method of retrieving an existing value or adding a new value to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table if the class of the table's value defines a default constructor.</span></span> <span data-ttu-id="69e6e-159">Если он не определяет конструктор по умолчанию, вместо этого можно вызвать <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> метод, который зависит от метода обратного вызова для создания экземпляра объекта, представляющего значение таблицы</span><span class="sxs-lookup"><span data-stu-id="69e6e-159">If it does not define a default constructor, you can instead call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method, which relies on a callback-provided method to instantiate the object representing the table's value</span></span>  
  
 <span data-ttu-id="69e6e-160">Требуется извлечь значение существующего ключа без добавления пара ключ значение, если ключ не найден в таблице, вызовите <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="69e6e-160">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e6e-161">В следующем примере определяется `MainClass` класса и `MainInfo` класс, предоставляющий сведения о `MainClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="69e6e-161">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="69e6e-162">В примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> метод, чтобы добавить `MainClass` объекта и его вложенных `MainInfo` объект <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы.</span><span class="sxs-lookup"><span data-stu-id="69e6e-162">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="69e6e-163">В примере также показано вызовы <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> и <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> методы для добавления пары "ключ значение" к таблице, а также для <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод для извлечения значения из существующего ключа.</span><span class="sxs-lookup"><span data-stu-id="69e6e-163">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69e6e-164">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-164">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="69e6e-165">Вместо этого в [.NET для приложений Магазина Windows](http://go.microsoft.com/fwlink/?LinkID=247912) или в [переносимой библиотеке классов](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) перехватите исключение базового класса <see cref="T:System.MissingMemberException" />.</span>
              <span class="sxs-lookup">
                <span data-stu-id="69e6e-165">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="69e6e-166">Класс, представляющий значение в таблице, не определяет конструктор по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-166">The class that represents the table's value does not define a default constructor.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public TValue GetValue (TKey key, System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback createValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetValue(!TKey key, class System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback&lt;!TKey, !TValue&gt; createValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetValue(TKey key, System::Runtime::CompilerServices::ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback ^ createValueCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="createValueCallback" Type="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="69e6e-167">Ключ, который нужно найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-167">The key to search for.</span>
          </span>
          <span data-ttu-id="69e6e-168">
            <c>key</c> представляет объект, к которому присоединяется свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-168">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <param name="createValueCallback">
          <span data-ttu-id="69e6e-169">Делегат метода, который может создать значение для заданного ключа <c>key</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-169">A delegate to a method that can create a value for the given <c>key</c>.</span>
          </span>
          <span data-ttu-id="69e6e-170">Имеет один параметр типа <c>TKey</c> и возвращает значение типа <c>TValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-170">It has a single parameter of type <c>TKey</c>, and returns a value of type <c>TValue</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6e-171">Единым блоком выполняет поиск указанного ключа в таблице и возвращает соответствующее значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-171">Atomically searches for a specified key in the table and returns the corresponding value.</span>
          </span>
          <span data-ttu-id="69e6e-172">Если ключ в таблице не существует, метод вызывает метод обратного вызова для создания значения, связанного с заданным ключом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-172">If the key does not exist in the table, the method invokes a callback method to create a value that is bound to the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6e-173">Значение, прикрепляемое к ключу <paramref name="key" />, если ключ <paramref name="key" /> существует в таблице; в противном случае — новое значение, возвращаемое делегатом <paramref name="createValueCallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-173">The value attached to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, the new value returned by the <paramref name="createValueCallback" /> delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6e-174">Если `key` не существует в таблице, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> вызывает метод, который определяется `createValueCallback` параметра и передает его ключ.</span><span class="sxs-lookup"><span data-stu-id="69e6e-174">If `key` does not exist in the table, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> invokes the method that is defined by the `createValueCallback` parameter and passes it the key.</span></span> <span data-ttu-id="69e6e-175">Связанного с ключом в таблице и в результате возвращается новое значение.</span><span class="sxs-lookup"><span data-stu-id="69e6e-175">A new value is bound to the key in the table and returned as a result.</span></span>  
  
 <span data-ttu-id="69e6e-176">Этот метод следует используйте только в том случае, когда класс, представляющий значение в таблице не определяет конструктор по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="69e6e-176">Use this method only when the class that represents the table's value does not define a default constructor.</span></span> <span data-ttu-id="69e6e-177">Если он определен конструктор по умолчанию, используйте <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> метод вместо него.</span><span class="sxs-lookup"><span data-stu-id="69e6e-177">If it does define a default constructor, use the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method instead.</span></span> <span data-ttu-id="69e6e-178">Требуется извлечь значение существующего ключа без добавления пара ключ значение, если ключ не найден в таблице, вызовите <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="69e6e-178">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
 <span data-ttu-id="69e6e-179">Если несколько потоков пытаются создать один и тот же ключ `createValueCallback` может вызываться несколько раз с тем же ключом.</span><span class="sxs-lookup"><span data-stu-id="69e6e-179">If multiple threads try to create the same key, `createValueCallback` may be invoked multiple times with the same key.</span></span> <span data-ttu-id="69e6e-180">Будет выполнен только один из этих вызовов, и возвращаемое значение будет добавлено в таблицу.</span><span class="sxs-lookup"><span data-stu-id="69e6e-180">Only one of these calls will succeed, and its returned value will be added to the table.</span></span> <span data-ttu-id="69e6e-181">Какой поток успешно создает значение не определено.</span><span class="sxs-lookup"><span data-stu-id="69e6e-181">Which thread succeeds in creating the value is indeterminate.</span></span> <span data-ttu-id="69e6e-182">Это правило позволяет таблице вызывать `createValueCallback` за пределами внутренней блокировки таблицы для предотвращения взаимоблокировок.</span><span class="sxs-lookup"><span data-stu-id="69e6e-182">This rule permits the table to invoke `createValueCallback` outside the internal table lock to prevent deadlocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e6e-183">В следующем примере определяется `MainClass` класса и `MainInfo` класс, предоставляющий сведения о `MainClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="69e6e-183">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="69e6e-184">Он также определяет статическую (`Shared` в Visual Basic) `CreateAttachedValue` метод, который может быть назначен <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> делегата и передается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="69e6e-184">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="69e6e-185">В примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> метод, чтобы добавить `MainClass` объекта и его вложенных `MainInfo` объект <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы.</span><span class="sxs-lookup"><span data-stu-id="69e6e-185">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="69e6e-186">В примере также показано вызовы <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> и <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> методы для добавления пары "ключ значение" к таблице, а также для <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод для извлечения значения из существующего ключа.</span><span class="sxs-lookup"><span data-stu-id="69e6e-186">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69e6e-187">Параметр <paramref name="key" /> или <paramref name="createValueCallback" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-187">
              <paramref name="key" /> or <paramref name="createValueCallback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="69e6e-188">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-188">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69e6e-189">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-189">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
        <altmember cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="69e6e-190">Удаляемый ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-190">The key to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6e-191">Удаляет ключ и его значение из таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-191">Removes a key and its value from the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6e-192">Значение <see langword="true" />, если ключ найден и удален; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-192">
              <see langword="true" /> if the key is found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6e-193">Если ключ мусора во время этой операции, метод вызывает исключение, и возвращаемое значение не определено.</span><span class="sxs-lookup"><span data-stu-id="69e6e-193">If the key is garbage-collected during this operation, the method does not raise an exception and the return value is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69e6e-194">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-194">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="69e6e-195">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-195">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69e6e-196">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-196">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="69e6e-197">Ключ, представляющий объект с вложенным свойством зависимостей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-197">The key that represents an object with an attached property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="69e6e-198">При возвращении этот метод содержит значение вложенного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-198">When this method returns, contains the attached property value.</span>
          </span>
          <span data-ttu-id="69e6e-199">Если <c>key</c> не найден, <c>value</c> содержит значение по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-199">If <c>key</c> is not found, <c>value</c> contains the default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6e-200">Получает значение заданного ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-200">Gets the value of the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6e-201">Значение <see langword="true" />, если ключ <paramref name="key" /> найден; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-201">
              <see langword="true" /> if <paramref name="key" /> is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6e-202">Если ключ является мусора во время этой операции, метод может возвратить `false` и задайте `value` по умолчанию значение (как если бы ключ не существовал).</span><span class="sxs-lookup"><span data-stu-id="69e6e-202">If the key is garbage-collected during this operation, the method may return `false` and set `value` to the default value (as if the key were not present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e6e-203">В следующем примере определяется `MainClass` класса и `MainInfo` класс, предоставляющий сведения о `MainClass` экземпляра.</span><span class="sxs-lookup"><span data-stu-id="69e6e-203">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="69e6e-204">В примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, и <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> методы для добавления пары ключ значение для <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> таблицы.</span><span class="sxs-lookup"><span data-stu-id="69e6e-204">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="69e6e-205">В каждом случае в примере вызывается <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> метод, чтобы убедиться, что пара ключ значение добавлен в таблицу.</span><span class="sxs-lookup"><span data-stu-id="69e6e-205">In each case, the example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to confirm that the key/value pair has been added to the table.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69e6e-206">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-206">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="69e6e-207">требуется полное доверие для непосредственно вызывающего метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-207">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="69e6e-208">Этот член не может использоваться частично доверенным или прозрачным кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6e-208">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
      </Docs>
    </Member>
  </Members>
</Type>