<Type Name="FixedAddressValueTypeAttribute" FullName="System.Runtime.CompilerServices.FixedAddressValueTypeAttribute">
  <TypeSignature Language="C#" Value="public sealed class FixedAddressValueTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FixedAddressValueTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FixedAddressValueTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FixedAddressValueTypeAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="69b5d-101">Фиксирует адрес поля со статическим типом значения в течение времени его существования.</span><span class="sxs-lookup"><span data-stu-id="69b5d-101">Fixes the address of a static value type field throughout its lifetime.</span></span> <span data-ttu-id="69b5d-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="69b5d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b5d-103">Используйте <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> атрибут для пометки статическое значение типы как закрепленный после их создания.</span><span class="sxs-lookup"><span data-stu-id="69b5d-103">Use the <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> attribute to mark static value types as pinned upon creation.</span></span>  
  
 <span data-ttu-id="69b5d-104">Этот атрибут используется компилятором Microsoft Visual C++.</span><span class="sxs-lookup"><span data-stu-id="69b5d-104">This attribute is used by the Microsoft Visual C++ compiler.</span></span>  
  
 <span data-ttu-id="69b5d-105">Статическое значение поля типа создаются как упакованные объекты.</span><span class="sxs-lookup"><span data-stu-id="69b5d-105">Static value type fields are created as boxed objects.</span></span> <span data-ttu-id="69b5d-106">Это означает, что свой адрес можно изменить, как будет выполнена сборка мусора.</span><span class="sxs-lookup"><span data-stu-id="69b5d-106">This means that their address can change as garbage collection is performed.</span></span> <span data-ttu-id="69b5d-107">При применении этого атрибута к статическому типу значения, его адрес остается постоянным в период его существования.</span><span class="sxs-lookup"><span data-stu-id="69b5d-107">When you apply this attribute to a static value type, its address remains constant during its lifetime.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b5d-108">Следующий пример иллюстрирует использование <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> атрибут, чтобы закрепить статического поля в памяти.</span><span class="sxs-lookup"><span data-stu-id="69b5d-108">The following example illustrates the use of the <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> attribute to pin a static field in memory.</span></span> <span data-ttu-id="69b5d-109">Он определяет `Age` структуры и инициализирует два класса, имеющих статические поля типа `Age`.</span><span class="sxs-lookup"><span data-stu-id="69b5d-109">It defines an `Age` structure and initializes two classes that have static fields of type `Age`.</span></span> <span data-ttu-id="69b5d-110">Второй класс применяется <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> закрепление адрес поля.</span><span class="sxs-lookup"><span data-stu-id="69b5d-110">The second class applies <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> to pin the field's address.</span></span> <span data-ttu-id="69b5d-111">Количество операций выделения памяти выполняются до и после этих двух объектов создаются и вызывается сборщик мусора.</span><span class="sxs-lookup"><span data-stu-id="69b5d-111">A number of memory allocations are made before and after these two objects are instantiated and the garbage collector is invoked.</span></span> <span data-ttu-id="69b5d-112">Выходные данные примера показано, что хотя адрес первого `Age` поле изменилось после сборки мусора адрес поля, к которому <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> применяется не выполнен.</span><span class="sxs-lookup"><span data-stu-id="69b5d-112">The output from the example shows that although the address of the first `Age` field has changed after garbage collection, the address of the field to which <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> is applied has not.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.FixedAddressValueTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.fixedaddressvaluetypeattribute/cs/example1.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FixedAddressValueTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FixedAddressValueTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b5d-113">Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="69b5d-113">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69b5d-114">Следующий пример иллюстрирует использование <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> атрибут, чтобы закрепить статического поля в памяти.</span><span class="sxs-lookup"><span data-stu-id="69b5d-114">The following example illustrates the use of the <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> attribute to pin a static field in memory.</span></span> <span data-ttu-id="69b5d-115">Он определяет `Age` структуры и инициализирует два класса, имеющих статические поля типа `Age`.</span><span class="sxs-lookup"><span data-stu-id="69b5d-115">It defines an `Age` structure and initializes two classes that have static fields of type `Age`.</span></span> <span data-ttu-id="69b5d-116">Второй класс применяется <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> закрепление адрес поля.</span><span class="sxs-lookup"><span data-stu-id="69b5d-116">The second class applies <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> to pin the field's address.</span></span> <span data-ttu-id="69b5d-117">Количество операций выделения памяти выполняются до и после этих двух объектов создаются и вызывается сборщик мусора.</span><span class="sxs-lookup"><span data-stu-id="69b5d-117">A number of memory allocations are made before and after these two objects are instantiated and the garbage collector is invoked.</span></span> <span data-ttu-id="69b5d-118">Выходные данные примера показано, что хотя адрес первого `Age` поле изменилось после сборки мусора адрес поля, к которому <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> применяется не выполнен.</span><span class="sxs-lookup"><span data-stu-id="69b5d-118">The output from the example shows that although the address of the first `Age` field has changed after garbage collection, the address of the field to which <xref:System.Runtime.CompilerServices.FixedAddressValueTypeAttribute> is applied has not.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.FixedAddressValueTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.fixedaddressvaluetypeattribute/cs/example1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>